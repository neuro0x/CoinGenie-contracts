{"id":"932d0da7912d1971ab67f27822fa1e46","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../security/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract unpausable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol":{"content":"pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"},"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol":{"content":"pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"},"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol":{"content":"pragma solidity >=0.5.0;\n\ninterface IUniswapV2Migrator {\n    function migrate(address token, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external;\n}\n"},"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"content":"pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"},"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"content":"pragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"},"src/AirdropERC20.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.20;\n\nimport { ReentrancyGuard } from \"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\";\nimport { IERC20 } from \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\n\nimport { SafeTransfer } from \"./lib/SafeTransfer.sol\";\n\n/**\n * @title AirdropERC20\n * @author @neuro_0x\n * @dev A contract for distributing ERC20 tokens to a list of recipients.\n */\ncontract AirdropERC20 is ReentrancyGuard {\n    error NoRecipients();\n    error TokenAddressZero();\n    error NotERC20();\n    error InsufficientBalance();\n    error InsufficientAllowance();\n\n    /// @dev The address of the native token (ETH).\n    address public constant NATIVE_TOKEN = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n\n    /// @dev Emitted when an failed airdrop occurs.\n    event AirdropFailed(\n        address indexed tokenAddress, address indexed tokenOwner, address indexed recipient, uint256 amount\n    );\n\n    /**\n     * @dev Details of amount and recipient for airdropped token.\n     * @param recipient The recipient of the tokens.\n     * @param amount The quantity of tokens to airdrop.\n     */\n    struct AirdropContent {\n        address recipient;\n        uint256 amount;\n    }\n\n    /**\n     * @notice Allows the user to distribute ERC20 tokens to a list of addresses.\n     * @param tokenAddress The address of the token to be airdropped.\n     * @param tokenOwner The address of the token owner initiating the airdrop.\n     * @param contents A list of recipients and amounts for the airdrop.\n     *\n     * @dev needs Approval\n     *\n     */\n    function airdrop(\n        address tokenAddress,\n        address tokenOwner,\n        AirdropContent[] calldata contents\n    )\n        external\n        payable\n        nonReentrant\n    {\n        if (contents.length == 0) {\n            revert NoRecipients();\n        }\n\n        if (tokenAddress == address(0)) {\n            revert TokenAddressZero();\n        }\n\n        if (tokenAddress == NATIVE_TOKEN) {\n            revert NotERC20();\n        }\n\n        uint256 len = contents.length;\n        for (uint256 i = 0; i < len;) {\n            // Attempt to transfer the specified amount of tokens to the recipient\n            bool success =\n                _transferCurrencyWithReturnVal(tokenAddress, tokenOwner, contents[i].recipient, contents[i].amount);\n\n            if (!success) {\n                // Log the failed transfer\n                emit AirdropFailed(tokenAddress, tokenOwner, contents[i].recipient, contents[i].amount);\n            }\n\n            // Increment the counter\n            unchecked {\n                i += 1;\n            }\n        }\n    }\n\n    /**\n     * @dev Attempts to transfer the specified currency (either ERC20 or native) from the sender to the recipient.\n     * @param _currency The address of the currency to be transferred.\n     * @param _from The sender's address.\n     * @param _to The recipient's address.\n     * @param _amount The amount to be transferred.\n     * @return success A boolean indicating if the transfer was successful.\n     */\n    function _transferCurrencyWithReturnVal(\n        address _currency,\n        address _from,\n        address _to,\n        uint256 _amount\n    )\n        private\n        returns (bool success)\n    {\n        // If _amount is zero, return true\n        if (_amount == 0) {\n            success = true;\n            return success;\n        }\n\n        // Attempt to transfer if the currency is the native token (ETH)\n        if (_currency == NATIVE_TOKEN) {\n            (success,) = _to.call{ value: _amount }(\"\");\n        } else {\n            // Attempt to transfer if the currency is an ERC20 token\n            (bool success_, bytes memory data_) = // solhint-disable-next-line avoid-low-level-calls\n             _currency.call(abi.encodeWithSelector(IERC20.transferFrom.selector, _from, _to, _amount));\n\n            success = success_;\n\n            // If the transfer failed, check the allowance and balance\n            if (!success || (data_.length > 0 && !abi.decode(data_, (bool)))) {\n                success = false;\n\n                if (IERC20(_currency).balanceOf(_from) < _amount) {\n                    revert InsufficientBalance();\n                }\n\n                if (IERC20(_currency).allowance(_from, address(this)) < _amount) {\n                    revert InsufficientAllowance();\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Safely transfers ERC20 tokens from the sender to the recipient.\n     * @param _currency The address of the ERC20 token to be transferred.\n     * @param _from The sender's address.\n     * @param _to The recipient's address.\n     * @param _amount The amount to be transferred.\n     */\n    function _safeTransferERC20(address _currency, address _from, address _to, uint256 _amount) private {\n        // if _from is _to, return\n        if (_from == _to) {\n            return;\n        }\n\n        // If _from is the contract, transfer the ERC20 token\n        if (_from == address(this)) {\n            SafeTransfer.safeTransfer(_currency, _to, _amount);\n        } else {\n            // Otherwise, transfer the ERC20 token via the allowance mechanism\n            SafeTransfer.safeTransferFrom(_currency, _from, _to, _amount);\n        }\n    }\n}\n"},"src/AirdropERC20Claimable.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.20;\n\nimport { IERC20 } from \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\nimport { MerkleProof } from \"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\";\n\n/**\n * @title AirdropERC20Claimable\n * @author @neuro_0x\n * @dev A contract for airdropping ERC20 tokens to specific recipients based on Merkle proofs.\n */\n\ncontract AirdropERC20Claimable {\n    error InvalidTransferAmount();\n    error AirdropExpired();\n    error AlreadyClaimedMax();\n    error TransferFailed();\n    error InvalidAirdropParameters(address tokenOwner, address airdropTokenAddress, uint256 airdropAmount);\n\n    /// @dev The address of the token to be airdropped.\n    address public airdropTokenAddress;\n\n    /// @dev The owner of the token to be airdropped.\n    address public tokenOwner;\n\n    /// @dev The quantity of tokens available for airdrop.\n    uint256 public availableAmount;\n\n    /// @dev Expiration timestamp of the airdrop.\n    uint256 public expirationTimestamp;\n\n    /// @dev Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\n    uint256 public maxWalletClaimCount;\n\n    /// @dev Merkle root of the whitelist.\n    bytes32 public merkleRoot;\n\n    /// @dev Mapping from address => total number of tokens a wallet has claimed.\n    mapping(address claimer => uint256 amount) public totalClaimedByWallet;\n\n    /// @dev Emitted when tokens are claimed\n    event TokensClaimed(address indexed claimer, uint256 quantityClaimed);\n\n    /**\n     * @dev Initializes the contract.\n     * @param _tokenOwner The owner of the token to be airdropped.\n     * @param _airdropTokenAddress The address of the token to be airdropped.\n     * @param _airdropAmount The quantity of tokens available for airdrop.\n     * @param _expirationTimestamp Expiration timestamp of the airdrop.\n     * @param _maxWalletClaimCount Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\n     * @param _merkleRoot Merkle root of the whitelist.\n     */\n    constructor(\n        address _tokenOwner,\n        address _airdropTokenAddress,\n        uint256 _airdropAmount,\n        uint256 _expirationTimestamp,\n        uint256 _maxWalletClaimCount,\n        bytes32 _merkleRoot\n    ) {\n        if (_tokenOwner == address(0) || _airdropTokenAddress == address(0) || _airdropAmount == 0) {\n            revert InvalidAirdropParameters(_tokenOwner, _airdropTokenAddress, _airdropAmount);\n        }\n\n        tokenOwner = _tokenOwner;\n        airdropTokenAddress = _airdropTokenAddress;\n        availableAmount = _airdropAmount;\n        expirationTimestamp = _expirationTimestamp;\n        maxWalletClaimCount = _maxWalletClaimCount;\n        merkleRoot = _merkleRoot;\n    }\n\n    /**\n     * @dev Claims tokens from the airdrop.\n     * @param amount The quantity of tokens to claim.\n     * @param proofs Claims proofs.\n     * @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet.\n     */\n    function claim(uint256 amount, bytes32[] calldata proofs, uint256 proofMaxQuantityForWallet) external {\n        // Verify the claim\n        verifyClaim(msg.sender, amount, proofs, proofMaxQuantityForWallet);\n        // Transfer the claimed tokens\n        _transferClaimedTokens(msg.sender, amount);\n        // Emit the TokensClaimed event\n        emit TokensClaimed(msg.sender, amount);\n    }\n\n    /**\n     * @dev Verifies the claim and reverts if the claim is invalid.\n     * @param claimant The address of the claimer.\n     * @param amount The quantity of tokens to claim.\n     * @param proofs Claims proofs.\n     * @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet.\n     */\n    function verifyClaim(\n        address claimant,\n        uint256 amount,\n        bytes32[] calldata proofs,\n        uint256 proofMaxQuantityForWallet\n    )\n        public\n        view\n    {\n        bool verified;\n        // Get the proof of the claimer\n        if (merkleRoot != bytes32(0)) {\n            verified =\n                MerkleProof.verify(proofs, merkleRoot, keccak256(abi.encodePacked(claimant, proofMaxQuantityForWallet)));\n        }\n\n        // Check if the wallet has already claimed tokens\n        uint256 supplyClaimedAlready = totalClaimedByWallet[claimant];\n\n        // Check if the claim is valid\n        if (amount == 0 || amount > availableAmount) {\n            revert InvalidTransferAmount();\n        }\n\n        // Check if the airdrop has expired\n        uint256 expTimestamp = expirationTimestamp;\n        if (expTimestamp != 0 && block.timestamp >= expTimestamp) {\n            revert AirdropExpired();\n        }\n\n        // Check if the wallet has exceeded the maximum number of tokens that can be claimed\n        uint256 claimLimitForWallet = verified ? proofMaxQuantityForWallet : maxWalletClaimCount;\n        if (amount + supplyClaimedAlready > claimLimitForWallet) {\n            revert AlreadyClaimedMax();\n        }\n    }\n\n    /**\n     * @dev Transfers the claimed tokens to the recipient.\n     * @param recipient The recipient of the tokens.\n     * @param amount The quantity of tokens to claim.\n     */\n    function _transferClaimedTokens(address recipient, uint256 amount) private {\n        // if transfer claimed tokens is called when `to != msg.sender`, it'd use msg.sender's limits.\n        // behavior would be similar to `msg.sender` mint for itself, then transfer to `_recipient`.\n        totalClaimedByWallet[msg.sender] += amount;\n        availableAmount -= amount;\n\n        IERC20 airdropToken = IERC20(airdropTokenAddress);\n        if (!airdropToken.transfer(recipient, amount)) {\n            revert TransferFailed();\n        }\n        require(airdropToken.transferFrom(tokenOwner, recipient, amount), \"Transfer failed\");\n    }\n}\n"},"src/AirdropERC20ClaimableFactory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.20;\n\nimport { AirdropERC20Claimable } from \"./AirdropERC20Claimable.sol\";\n\n/**\n * @title AirdropERC20ClaimableFactory\n * @author @neuro_0x\n * @notice A factory library to deploy instances of the AirdropERC20Claimable contract.\n */\ncontract AirdropERC20ClaimableFactory {\n    /**\n     * @dev Launch a new instance of the CoinGenieAirdropClaimable Contract.\n     * @param tokenOwner The address of the token owner\n     * @param airdropTokenAddress The address of the airdrop token\n     * @param airdropAmount The amount of tokens available for airdrop\n     * @param expirationTimestamp The expiration timestamp of the airdrop\n     * @param maxWalletClaimCount The maximum number of tokens that can be claimed by a wallet if not in the whitelist\n     * @param merkleRoot The merkle root of the whitelist\n     *\n     * @return newAirdrop The address of the newly deployed airdrop contract\n     */\n    function createClaimableAirdrop(\n        address tokenOwner,\n        address airdropTokenAddress,\n        uint256 airdropAmount,\n        uint256 expirationTimestamp,\n        uint256 maxWalletClaimCount,\n        bytes32 merkleRoot\n    )\n        external\n        returns (AirdropERC20Claimable newAirdrop)\n    {\n        AirdropERC20Claimable claimableAirdrop = new AirdropERC20Claimable(\n            tokenOwner,\n            airdropTokenAddress,\n            airdropAmount,\n            expirationTimestamp,\n            maxWalletClaimCount,\n            merkleRoot\n        );\n\n        return claimableAirdrop;\n    }\n}\n"},"src/CoinGenie.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.20;\n\nimport { Ownable } from \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\";\nimport { ReentrancyGuard } from \"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\";\nimport { IERC20 } from \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\nimport { SafeMath } from \"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\";\n\nimport { IUniswapV2Pair } from \"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\nimport { IUniswapV2Router02 } from \"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\n\nimport { ERC20Factory } from \"./ERC20Factory.sol\";\nimport { AirdropERC20Claimable } from \"./AirdropERC20Claimable.sol\";\nimport { AirdropERC20ClaimableFactory } from \"./AirdropERC20ClaimableFactory.sol\";\nimport { Common } from \"./lib/Common.sol\";\nimport { SafeTransfer } from \"./lib/SafeTransfer.sol\";\n\n/**\n * @title CoinGenie\n * @author @neuro_0x\n * @dev The orchestrator contract for the CoinGenie ecosystem.\n */\ncontract CoinGenie is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    error ShareToHigh(uint256 share, uint256 maxShare);\n\n    error InvalidPayoutCategory(PayoutCategory category);\n\n    uint256 private constant MAX_BPS = 10_000;\n\n    /// @dev The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps\n    IUniswapV2Router02 public constant UNISWAP_V2_ROUTER =\n        IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n\n    struct LaunchedToken {\n        address tokenAddress;\n        string name;\n        string symbol;\n        uint256 initialSupply;\n        bool isBurnable;\n        bool isDeflationary;\n        uint256 maxPerWallet;\n        uint256 autoWithdrawThreshold;\n        uint256 maxTaxSwap;\n        address affiliateFeeRecipient;\n        address feeRecipient;\n        uint256 feePercentage;\n        uint256 burnPercentage;\n    }\n\n    struct ClaimableAirdrop {\n        address airdropAddress;\n        address tokenOwner;\n        address airdropTokenAddress;\n        uint256 airdropAmount;\n        uint256 expirationTimestamp;\n        uint256 maxWalletClaimCount;\n        bytes32 merkleRoot;\n    }\n\n    enum PayoutCategory {\n        Treasury,\n        Dev,\n        Legal,\n        Marketing\n    }\n\n    struct Payout {\n        address payable receiver;\n        uint256 share;\n    }\n\n    event ERC20Launched(address indexed newTokenAddress);\n\n    event ClaimableAirdropCreated(\n        address indexed airdropAddress,\n        address tokenOwner,\n        address indexed airdropTokenAddress,\n        uint256 indexed airdropAmount,\n        uint256 expirationTimestamp,\n        uint256 maxWalletClaimCount,\n        bytes32 merkleRoot\n    );\n\n    /// @dev The threshold for the amount of tokens to swap for ETH\n    uint256 public quoteThreshold = 0.1 ether;\n\n    /// @dev A mapping of payout categories to payouts.\n    mapping(PayoutCategory category => Payout payout) private _payouts;\n\n    /// @dev Stores the address of the ERC20Factory contract.\n    ERC20Factory private _erc20Factory;\n\n    /// @dev Stores the address of the AirdropERC20Claimable contract.\n    AirdropERC20ClaimableFactory private _airdropClaimableERC20Factory;\n\n    /// @dev Stores the addresses of all airdrops launched by the contract.\n    address[] public createdClaimableAirdrops;\n\n    /// @dev A mapping of airdrops launched by a specific owner.\n    mapping(address user => ClaimableAirdrop[] airdrops) public claimableAirdropCreatedBy;\n\n    /// @dev Stores the addresses of all tokens launched by the contract.\n    address[] public launchedTokens;\n\n    /// @dev A mapping of tokens launched by a specific owner.\n    mapping(address user => LaunchedToken[] tokens) public tokensLaunchedBy;\n\n    /**\n     * @notice Construct the CoinGenie contract.\n     * @param erc20FactoryAddress The address of the ERC20Factory contract\n     * @param airdropClaimableERC20FactoryAddress The address of the AirdropERC20ClaimableFactory contract\n     */\n    constructor(address erc20FactoryAddress, address airdropClaimableERC20FactoryAddress) {\n        _erc20Factory = ERC20Factory(erc20FactoryAddress);\n        _airdropClaimableERC20Factory = AirdropERC20ClaimableFactory(airdropClaimableERC20FactoryAddress);\n\n        _payouts[PayoutCategory.Treasury] =\n            Payout({ receiver: payable(0xBe79b43B1505290DFE04294a433963dbeea736BB), share: 2000 });\n        _payouts[PayoutCategory.Dev] =\n            Payout({ receiver: payable(0x633Bf832Dc39C0025a7aEaa165ec91ACF02063D5), share: 5000 });\n        _payouts[PayoutCategory.Legal] =\n            Payout({ receiver: payable(0xbb6712A513C2d7F3E17A40d095a773c5d98574B2), share: 1500 });\n        _payouts[PayoutCategory.Marketing] =\n            Payout({ receiver: payable(0xF14A30C09897d2C7481c5907D01Ec58Ec09555af), share: 1500 });\n    }\n\n    // solhint-disable-next-line no-empty-blocks\n    receive() external payable { }\n\n    /**\n     * @notice Launch a new instance of the ERC20.\n     * @dev This function deploys a new token contract and initializes it with provided parameters.\n     * @param name The name of the token\n     * @param symbol The symbol of the token\n     * @param initialSupply The initial supply of the token\n     * @param tokenOwner The address that will be the owner of the token\n     * @param customConfigProps A struct of configuration booleans for the token\n     * @param maxPerWallet The maximum amount of tokens allowed to be held by one wallet\n     * @param autoWithdrawThreshold The threshold for the amount of tokens to swap for ETH\n     * @param maxTaxSwap The maximum amount of tokens allowed to be swapped at once by manual or autoswap\n     * @param affiliateFeeRecipient The address to receive the affiliate fee\n     * @param feeRecipient The address to receive the tax fees\n     * @param feePercentage The percent in basis points to use as a tax\n     * @param burnPercentage The percent in basis points to burn on every tx if this token is deflationary\n     *\n     * @return _tokenAddress The address of the newly deployed token contract\n     */\n    function launchToken(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply,\n        address tokenOwner,\n        Common.TokenConfigProperties memory customConfigProps,\n        uint256 maxPerWallet,\n        uint256 autoWithdrawThreshold,\n        uint256 maxTaxSwap,\n        address affiliateFeeRecipient,\n        address feeRecipient,\n        uint256 feePercentage,\n        uint256 burnPercentage\n    )\n        external\n        returns (address)\n    {\n        // Deploy the token contract\n        IERC20 newToken = _erc20Factory.launchToken(\n            name,\n            symbol,\n            initialSupply,\n            tokenOwner,\n            customConfigProps,\n            maxPerWallet,\n            autoWithdrawThreshold,\n            maxTaxSwap,\n            affiliateFeeRecipient,\n            feeRecipient,\n            feePercentage,\n            burnPercentage,\n            address(this)\n        );\n\n        address newTokenAddress = address(newToken);\n\n        // Add the token address to the array of launched tokens\n        launchedTokens.push(newTokenAddress);\n        // Add the token address to the mapping of tokens launched by a specific owner\n        tokensLaunchedBy[tokenOwner].push(\n            LaunchedToken({\n                tokenAddress: newTokenAddress,\n                name: name,\n                symbol: symbol,\n                initialSupply: initialSupply,\n                isBurnable: customConfigProps.isBurnable,\n                isDeflationary: customConfigProps.isDeflationary,\n                maxPerWallet: maxPerWallet,\n                autoWithdrawThreshold: autoWithdrawThreshold,\n                maxTaxSwap: maxTaxSwap,\n                affiliateFeeRecipient: affiliateFeeRecipient,\n                feeRecipient: feeRecipient,\n                feePercentage: feePercentage,\n                burnPercentage: burnPercentage\n            })\n        );\n\n        // Emit the event\n        emit ERC20Launched(newTokenAddress);\n\n        return newTokenAddress;\n    }\n\n    /**\n     * @notice Launch a new instance of the CoinGenieAirdropClaimable Contract.\n     * @param tokenOwner The address of the token owner\n     * @param airdropTokenAddress The address of the airdrop token\n     * @param airdropAmount The amount of tokens available for airdrop\n     * @param expirationTimestamp The expiration timestamp of the airdrop\n     * @param maxWalletClaimCount The maximum number of tokens that can be claimed by a wallet if not in the whitelist\n     * @param merkleRoot The merkle root of the whitelist\n     *\n     * @return dropAddress The address of the newly deployed airdrop contract\n     */\n    function createClaimableAirdrop(\n        address tokenOwner,\n        address airdropTokenAddress,\n        uint256 airdropAmount,\n        uint256 expirationTimestamp,\n        uint256 maxWalletClaimCount,\n        bytes32 merkleRoot\n    )\n        external\n        returns (address dropAddress)\n    {\n        // Deploy the airdrop contract\n        AirdropERC20Claimable airdrop = _airdropClaimableERC20Factory.createClaimableAirdrop(\n            tokenOwner, airdropTokenAddress, airdropAmount, expirationTimestamp, maxWalletClaimCount, merkleRoot\n        );\n\n        // Add the airdrop address to the array of created airdrops\n        createdClaimableAirdrops.push(address(airdrop));\n\n        // Add the airdrop details to the mapping of airdrops created by a specific owner\n        ClaimableAirdrop memory claimableAirdrop = ClaimableAirdrop({\n            airdropAddress: address(airdrop),\n            tokenOwner: tokenOwner,\n            airdropTokenAddress: airdropTokenAddress,\n            airdropAmount: airdropAmount,\n            expirationTimestamp: expirationTimestamp,\n            maxWalletClaimCount: maxWalletClaimCount,\n            merkleRoot: merkleRoot\n        });\n        claimableAirdropCreatedBy[msg.sender].push(claimableAirdrop);\n\n        // Emit the event\n        emit ClaimableAirdropCreated(\n            address(airdrop),\n            tokenOwner,\n            airdropTokenAddress,\n            airdropAmount,\n            expirationTimestamp,\n            maxWalletClaimCount,\n            merkleRoot\n        );\n\n        return address(airdrop);\n    }\n\n    /**\n     * @notice Get the payout address for a specific category.\n     * @param category The category to get the payout address for\n     * @return receiver The address to receive the payout\n     */\n    function getPayoutAddress(PayoutCategory category) external view returns (address payable) {\n        return _payouts[category].receiver;\n    }\n\n    /**\n     * @notice Get the payout share for a specific category.\n     * @param category The category to get the payout share for\n     * @return share The share of the payout\n     */\n    function getPayoutShare(PayoutCategory category) external view returns (uint256) {\n        return _payouts[category].share;\n    }\n\n    /**\n     * @notice Set the payout address for a specific category.\n     * @param category The category to set the payout address for\n     * @param receiver The address to receive the payout\n     * @param share The share of the payout\n     */\n    function updatePayout(PayoutCategory category, address payable receiver, uint256 share) external onlyOwner {\n        if (share > _payouts[category].share) {\n            revert ShareToHigh(share, _payouts[category].share);\n        }\n\n        if (category > PayoutCategory.Marketing) {\n            revert InvalidPayoutCategory(category);\n        }\n\n        _payouts[category] = Payout({ receiver: receiver, share: share });\n    }\n\n    /**\n     * @notice Withdraw the contract balance to the payout addresses.\n     */\n    function withdraw() external {\n        uint256 contractBalance = address(this).balance;\n\n        uint256 treasuryShare = _payouts[PayoutCategory.Treasury].share;\n        uint256 devShare = _payouts[PayoutCategory.Dev].share;\n        uint256 legalShare = _payouts[PayoutCategory.Legal].share;\n        uint256 marketingShare = _payouts[PayoutCategory.Marketing].share;\n\n        uint256 treasuryAmount = contractBalance.mul(treasuryShare).div(MAX_BPS);\n        uint256 devAmount = contractBalance.mul(devShare).div(MAX_BPS);\n        uint256 legalAmount = contractBalance.mul(legalShare).div(MAX_BPS);\n        uint256 marketingAmount = contractBalance.mul(marketingShare).div(MAX_BPS);\n\n        SafeTransfer.safeTransferETH(_payouts[PayoutCategory.Treasury].receiver, treasuryAmount);\n        SafeTransfer.safeTransferETH(_payouts[PayoutCategory.Dev].receiver, devAmount);\n        SafeTransfer.safeTransferETH(_payouts[PayoutCategory.Legal].receiver, legalAmount);\n        SafeTransfer.safeTransferETH(_payouts[PayoutCategory.Marketing].receiver, marketingAmount);\n    }\n\n    /**\n     * @notice Swap ERC20 tokens for ETH.\n     * @param tokenAddress The address of the token to swap\n     * @param amount The amount of tokens to swap\n     */\n    function swapERC20s(address tokenAddress, address lpTokenAddress, uint256 amount) external {\n        (uint256 reserve0, uint256 reserve1,) = IUniswapV2Pair(lpTokenAddress).getReserves();\n        uint256 quotedAmount = UNISWAP_V2_ROUTER.quote(amount, reserve0, reserve1);\n\n        if (quotedAmount >= quoteThreshold) {\n            require(IERC20(tokenAddress).approve(address(UNISWAP_V2_ROUTER), amount), \"Approval failed\");\n\n            address[] memory path = new address[](2);\n            path[0] = tokenAddress;\n            path[1] = UNISWAP_V2_ROUTER.WETH();\n\n            UNISWAP_V2_ROUTER.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n                amount,\n                0, // accept any amount of ETH\n                path,\n                address(this),\n                block.timestamp\n            );\n        }\n    }\n\n    /**\n     * @notice Set the threshold for the amount of tokens to swap for ETH.\n     * @param _quoteThreshold The threshold for the amount of tokens to swap for ETH\n     */\n    function setQuoteThreshold(uint256 _quoteThreshold) external onlyOwner {\n        quoteThreshold = _quoteThreshold;\n    }\n\n    /**\n     * @notice Get the launched tokens.\n     * @param _address The address to get the tokens for\n     * @return tokens The array of launched tokens\n     */\n    function getLaunchedTokensForAddress(address _address) external view returns (LaunchedToken[] memory tokens) {\n        return tokensLaunchedBy[_address];\n    }\n\n    /**\n     * @notice Get the airdrops created by a specific address.\n     * @param _address The address to get the airdrops for\n     */\n    function getClaimableAirdropsForAddress(address _address)\n        external\n        view\n        returns (ClaimableAirdrop[] memory airdrops)\n    {\n        return claimableAirdropCreatedBy[_address];\n    }\n}\n"},"src/CoinGenieERC20.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.20;\n\nimport { ERC20 } from \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\nimport { IERC20 } from \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\nimport { Ownable } from \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\";\nimport { ERC20Burnable } from \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport { ERC20Pausable } from \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport { ReentrancyGuard } from \"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\";\nimport { SafeMath } from \"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\";\n\nimport { IUniswapV2Pair } from \"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\nimport { IUniswapV2Router02 } from \"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\nimport { IUniswapV2Factory } from \"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\n\nimport { Common } from \"./lib/Common.sol\";\nimport { SafeTransfer } from \"./lib/SafeTransfer.sol\";\n\n/**\n * @title CoinGenieERC20\n * @author @neuro_0x\n * @notice A robust and secure ERC20 token for the Coin Genie ecosystem\n *\n * @notice THIS ERC20 SHOULD ONLY BE DEPLOYED FROM THE COINGENIE ERC20 FACTORY\n */\ncontract CoinGenieERC20 is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    /// @dev The max basis points representing 100%\n    uint256 private constant _MAX_BPS = 10_000;\n\n    /// @dev The max tax that can be applied to a transaction. The value is in ether but is handled as 5%.\n    uint256 private constant _MAX_TAX = 2000; // 20%\n\n    /// @dev The minimum amount of eth that must be added to Uniswap when trading is opened.\n    uint256 private constant _MIN_LIQUIDITY_ETH = 0.5 ether;\n\n    /// @dev The minimum amount of erc20 token that must be added to Uniswap when trading is opened.\n    uint256 private constant _MIN_LIQUIDITY_TOKEN = 1 ether;\n\n    /// @dev The amount of $GENIE a person has to hold to get the discount\n    uint256 public discountFeeRequiredAmount = 1_000_000 ether;\n\n    /// @dev The address of the genie token\n    address public genieToken;\n\n    /// @dev number of decimals of the token\n    uint8 private immutable _tokenDecimals;\n\n    /// @dev initial number of tokens which will be minted during initialization\n    uint256 public immutable initialSupply;\n\n    /// @dev max amount of tokens allowed per wallet\n    uint256 public maxTokenAmountPerAddress;\n\n    /// @dev max amount of tokens the contract can accrue before swapping them for ETH\n    uint256 public maxTaxSwap;\n\n    /// @dev max amount of ETH the contract can accrue before withdrawing them to the fee recipient\n    uint256 public autoWithdrawThreshold;\n\n    /// @dev features of the token\n    Common.TokenConfigProperties public tokenConfig;\n\n    /// @dev the address of the fee recipient\n    address public feeRecipient;\n\n    /// @dev address of the affiliate fee recipient\n    address public immutable affiliateFeeRecipient;\n\n    /// @dev address of the royalty fee recipient (Coin Genie)\n    address public coinGenieTreasury;\n\n    /// @dev the fee percentage in basis points\n    uint256 public feePercentage;\n\n    /// @dev the affiliate fee percentage taken on transfers\n    uint256 public affiliateFeePercentage = 25; // 0.5%;\n\n    /// @dev the affiliate fee percentage in basis points\n    uint256 public burnPercentage;\n\n    /// @dev the royalty fee percentage taken on transfers\n    uint256 public treasuryFeePercentage = 50; // 0.5%;\n\n    /// @dev the percent of eth taken when liquidity is open\n    uint256 public lpEthFeePercentage = 50; // 0.5%;\n\n    /// @dev The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps\n    IUniswapV2Router02 public constant UNISWAP_V2_ROUTER =\n        IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\n\n    /// @dev The address of the LP token. The contract uses the LP token to determine if a transfer is a buy or sell\n    address public uniswapV2Pair;\n\n    /// @dev The flag for whether swapping is enabled and trading open\n    bool public isSwapEnabled;\n\n    /// @dev Are we currently swapping tokens for ETH?\n    bool private _inSwap;\n\n    mapping(address feePayer => bool isWhitelisted) private _feeWhitelist;\n\n    /// @dev Modifier to prevent swapping tokens for ETH recursively\n    modifier lockTheSwap() {\n        _inSwap = true;\n        _;\n        _inSwap = false;\n    }\n\n    /// @notice Error thrown when the genie is already set.\n    error GenieAlreadySet();\n\n    /// @notice Error thrown when the provided maximum token amount is invalid.\n    error InvalidMaxTokenAmount(uint256 maxPerWallet);\n\n    /// @notice Error thrown when the new maximum token amount per address is less than or equal to the previous value.\n    error MaxTokenAmountPerAddrLtPrevious();\n\n    /// @notice Error thrown when the destination balance exceeds the maximum allowed amount.\n    /// @param addr The address whose balance would exceed the limit.\n    error DestBalanceExceedsMaxAllowed(address addr);\n\n    /// @notice Error thrown when burning is not enabled.\n    error BurningNotEnabled();\n\n    /// @notice Error thrown when pausing is not enabled.\n    error PausingNotEnabled();\n\n    /// @notice Error thrown when the token is not deflationary.\n    error TokenIsNotDeflationary();\n\n    /// @notice Error thrown when an invalid tax basis point is provided.\n    /// @param bps The invalid basis points for tax.\n    error InvalidTaxBPS(uint256 bps);\n\n    /// @notice Error thrown when an invalid deflation basis point is provided.\n    /// @param bps The invalid basis points for deflation.\n    error InvalidDeflationBPS(uint256 bps);\n\n    /// @notice Error thrown when trading is already open.\n    error TradingAlreadyOpen();\n\n    /// @notice Error thrown when the provided ETH amount is insufficient.\n    /// @param amount The provided ETH amount.\n    /// @param minAmount The minimum required ETH amount.\n    error InsufficientETH(uint256 amount, uint256 minAmount);\n\n    /// @notice Error thrown when the provided token amount is insufficient.\n    /// @param amount The provided token amount.\n    /// @param minAmount The minimum required token amount.\n    error InsufficientTokens(uint256 amount, uint256 minAmount);\n\n    /// @notice This event is emitted when the trading is opened.\n    /// @param pair The address of the LP token.\n    event TradingOpened(address indexed pair);\n\n    /// @notice This event is emitted when the maximum number of tokens allowed per wallet has been updated.\n    /// @param newMaxTokenAmount The new maximum token amount per wallet.\n    event MaxTokensPerWalletSet(uint256 indexed newMaxTokenAmount);\n\n    /// @notice This event is emitted when the fee configuration of the token has been updated.\n    /// @param _feeRecipient The updated fee recipient address.\n    /// @param _feePercentage The updated fee percentage.\n    event FeeConfigUpdated(address indexed _feeRecipient, uint256 indexed _feePercentage);\n\n    /// @notice This event is emitted when the burn configuration of the token has been updated.\n    /// @param _burnPercentage The updated burn percentage.\n    event BurnConfigUpdated(uint256 indexed _burnPercentage);\n\n    /**\n     * @dev Initializes the contract with the provided parameters\n     * @param name_ The name of the token\n     * @param symbol_ The symbol of the token\n     * @param initialSupplyToSet The initial supply of the token\n     * @param tokenOwner The owner of the token\n     * @param customConfigProps Represents the features of the token\n     * @param maxPerWallet The max amount of tokens per wallet\n     * @param maxToSwapForTax The max amount of tokens to swap for tax\n     * @param _affilateFeeRecipient The address of the affiliate fee recipient\n     * @param _feeRecipient The address of the fee recipient\n     * @param _feePercentage The fee percentage in basis points\n     * @param _burnPercentage The burn percentage in basis points\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 initialSupplyToSet,\n        address tokenOwner,\n        Common.TokenConfigProperties memory customConfigProps,\n        uint256 maxPerWallet,\n        uint256 maxToSwapForTax,\n        uint256 _autoWithdrawThreshold,\n        address _affilateFeeRecipient,\n        address _feeRecipient,\n        uint256 _feePercentage,\n        uint256 _burnPercentage\n    )\n        ERC20(name_, symbol_)\n    {\n        SafeTransfer.validateAddress(tokenOwner);\n        initialSupply = initialSupplyToSet;\n        _tokenDecimals = 18;\n        affiliateFeeRecipient = _affilateFeeRecipient;\n\n        if (_feePercentage > _MAX_TAX) {\n            revert InvalidTaxBPS(_feePercentage);\n        }\n\n        if (customConfigProps.isDeflationary) {\n            if (_burnPercentage > _MAX_TAX) {\n                revert InvalidDeflationBPS(_burnPercentage);\n            }\n\n            burnPercentage = _burnPercentage;\n        }\n\n        tokenConfig = customConfigProps;\n        maxTokenAmountPerAddress = maxPerWallet;\n        maxTaxSwap = maxToSwapForTax;\n        autoWithdrawThreshold = _autoWithdrawThreshold;\n\n        SafeTransfer.validateAddress(_feeRecipient);\n        feeRecipient = _feeRecipient;\n        feePercentage = _feePercentage;\n\n        if (initialSupplyToSet != 0) {\n            _mint(tokenOwner, initialSupplyToSet);\n        }\n\n        _feeWhitelist[address(this)] = true;\n        _feeWhitelist[tokenOwner] = true;\n        _feeWhitelist[feeRecipient] = true;\n    }\n\n    /**\n     * @dev hook called before any transfer of tokens. This includes minting and burning\n     * imposed by the ERC20 standard\n     * @param from - address of the sender\n     * @param to - address of the recipient\n     * @param amount - amount of tokens to transfer\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    )\n        internal\n        virtual\n        override(ERC20, ERC20Pausable)\n    {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    /**\n     * @return true if the token is pausable\n     */\n    function isPausable() public view returns (bool) {\n        return tokenConfig.isPausable;\n    }\n\n    /**\n     * @return true if the token is burnable\n     */\n    function isBurnable() public view returns (bool) {\n        return tokenConfig.isBurnable;\n    }\n\n    /**\n     * @return true if the feePayer is whitelisted\n     */\n    function isWhitelisted(address feePayer) public view returns (bool) {\n        return _feeWhitelist[feePayer];\n    }\n\n    /**\n     * @return number of decimals for the token\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return _tokenDecimals;\n    }\n\n    /**\n     * @return true if the token supports deflation\n     */\n    function isDeflationary() public view returns (bool) {\n        return tokenConfig.isDeflationary;\n    }\n\n    /**\n     * @dev Allows the owner to set the address of the coingenie\n     * @param coinGenieAddress - the address of the coinGenie\n     */\n    function setCoinGenieTreasury(address coinGenieAddress) external {\n        if (coinGenieTreasury != address(0)) {\n            revert GenieAlreadySet();\n        }\n\n        coinGenieTreasury = coinGenieAddress;\n    }\n\n    /**\n     * @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\n     * @param maxTax - the new max amount of tokens to swap for tax\n     */\n    function setMaxTaxSwap(uint256 maxTax) external onlyOwner {\n        maxTaxSwap = maxTax;\n    }\n\n    /**\n     * @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\n     * @param threshold - the new max amount of tokens to swap for tax\n     */\n    function setAutoWithdrawThreshold(uint256 threshold) external onlyOwner {\n        autoWithdrawThreshold = threshold;\n    }\n\n    /**\n     * @dev Allows the owner to set a max amount of tokens per wallet\n     * @param newMaxTokenAmount - the new max amount of tokens per wallet\n     *\n     * @notice only callable by the owner\n     * @notice only callable if the token is not paused\n     * @notice only callable if the token supports max amount of tokens per wallet\n     */\n    function setMaxTokenAmountPerAddress(uint256 newMaxTokenAmount) external onlyOwner whenNotPaused {\n        if (newMaxTokenAmount <= maxTokenAmountPerAddress) {\n            revert MaxTokenAmountPerAddrLtPrevious();\n        }\n\n        maxTokenAmountPerAddress = newMaxTokenAmount;\n        emit MaxTokensPerWalletSet(newMaxTokenAmount);\n    }\n\n    /**\n     * @dev Allows the owner to set the tax config\n     * @param _feeRecipient - the new feeRecipient\n     * @param _feePercentage - the new feePercentage\n     *\n     * @notice only callable by the owner\n     * @notice only callable if the token is not paused\n     * @notice only callable if the feePercentage is not greater than the max tax\n     */\n    function setTaxConfig(address _feeRecipient, uint256 _feePercentage) external onlyOwner whenNotPaused {\n        if (_feePercentage > _MAX_TAX) {\n            revert InvalidTaxBPS(_feePercentage);\n        }\n\n        SafeTransfer.validateAddress(_feeRecipient);\n        feeRecipient = _feeRecipient;\n        feePercentage = _feePercentage;\n        emit FeeConfigUpdated(_feeRecipient, _feePercentage);\n    }\n\n    /**\n     * @dev Allows the owner to set the deflation config\n     * @param _burnPercentage - the new burnPercentage\n     *\n     * @notice only callable by the owner\n     * @notice only callable if the token is not paused\n     * @notice only callable if the token supports deflation\n     * @notice only callable if the burnPercentage is not greater than the max allowed bps\n     */\n    function setDeflationConfig(uint256 _burnPercentage) external onlyOwner whenNotPaused {\n        if (!isDeflationary()) {\n            revert TokenIsNotDeflationary();\n        }\n\n        if (_burnPercentage > _MAX_TAX) {\n            revert InvalidDeflationBPS(_burnPercentage);\n        }\n\n        burnPercentage = _burnPercentage;\n        emit BurnConfigUpdated(_burnPercentage);\n    }\n\n    /**\n     * @dev Allows to transfer a predefined amount of tokens to a predefined address\n     * @param to - the address to transfer the tokens to\n     * @param amount - the amount of tokens to transfer\n     * @return true if the transfer was successful\n     *\n     * @notice only callable if the token is not paused\n     * @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\n     * @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\n     * @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\n     * @notice captures the tax during the transfer if tax is enabvled\n     * @notice burns the deflationary amount during the transfer if deflation is enabled\n     */\n    function transfer(address to, uint256 amount) public virtual override whenNotPaused returns (bool) {\n        address from = msg.sender;\n\n        if (isSwapEnabled && !_feeWhitelist[from] && !_feeWhitelist[to]) {\n            uint256 amountToTransfer = _takeFees(from, to, amount);\n\n            return super.transfer(to, amountToTransfer);\n        }\n\n        return super.transfer(to, amount);\n    }\n\n    /**\n     * @dev Allows to transfer a predefined amount of tokens from a predefined address to a predefined address\n     * @param from - the address to transfer the tokens from\n     * @param to - the address to transfer the tokens to\n     * @param amount - the amount of tokens to transfer\n     * @return true if the transfer was successful\n     *\n     * @notice only callable if the token is not paused\n     * @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\n     * @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\n     * @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\n     * @notice captures the tax during the transfer if tax is enabvled\n     * @notice burns the deflationary amount during the transfer if deflation is enabled\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    )\n        public\n        virtual\n        override\n        whenNotPaused\n        returns (bool)\n    {\n        if (isSwapEnabled && !_feeWhitelist[from] && !_feeWhitelist[to]) {\n            uint256 amountToTransfer = _takeFees(from, to, amount);\n\n            return super.transferFrom(from, to, amountToTransfer);\n        }\n\n        return super.transferFrom(from, to, amount);\n    }\n\n    /**\n     * @dev Allows to burn a predefined amount of tokens\n     * @param amount - the amount of tokens to burn\n     *\n     * @notice only callable by the owner\n     * @notice only callable if the token is not paused\n     * @notice only callable if the token supports burning\n     */\n    function burn(uint256 amount) public override onlyOwner whenNotPaused {\n        if (!isBurnable()) {\n            revert BurningNotEnabled();\n        }\n\n        super.burn(amount);\n    }\n\n    /**\n     * @dev Allows to burn a predefined amount of tokens from a predefined address\n     * @param from - the address to burn the tokens from\n     * @param amount - the amount of tokens to burn\n     *\n     * @notice only callable by the owner\n     * @notice only callable if the token is not paused\n     * @notice only callable if the token supports burning\n     * @notice needs Approval\n     */\n    function burnFrom(address from, uint256 amount) public override onlyOwner whenNotPaused {\n        if (!isBurnable()) {\n            revert BurningNotEnabled();\n        }\n\n        super.burnFrom(from, amount);\n    }\n\n    /**\n     * @dev Allows to pause the token\n     *\n     * @notice only callable by the owner\n     */\n    function pause() external onlyOwner {\n        if (!isPausable()) {\n            revert PausingNotEnabled();\n        }\n        _pause();\n    }\n\n    /**\n     * @dev Allows to unpause the token\n     *\n     * @notice only callable by the owner\n     */\n    function unpause() external onlyOwner {\n        if (!isPausable()) {\n            revert PausingNotEnabled();\n        }\n        _unpause();\n    }\n\n    /**\n     * @dev Opens trading for the token by adding liquidity to Uniswap.\n     * @param amountToLP The amount of tokens to add to Uniswap\n     *\n     * Emits a {TradingOpened} event.\n     *\n     * Preconditions:\n     *\n     * Requirements:\n     *\n     * `isSwapEnabled` must be false.\n     * `amountToLP >= _MIN_LIQUIDITY_TOKEN`\n     * `msg.value >= _MIN_LIQUIDITY_ETH`\n     */\n    function openTrading(uint256 amountToLP) external payable onlyOwner nonReentrant returns (IUniswapV2Pair) {\n        uint256 value = msg.value;\n        if (isSwapEnabled) {\n            revert TradingAlreadyOpen();\n        }\n\n        if (amountToLP < _MIN_LIQUIDITY_TOKEN || balanceOf(owner()) < amountToLP) {\n            revert InsufficientTokens(amountToLP, _MIN_LIQUIDITY_TOKEN);\n        }\n\n        if (value < _MIN_LIQUIDITY_ETH) {\n            revert InsufficientETH(value, _MIN_LIQUIDITY_ETH);\n        }\n\n        // Transfer the tokens to the contract\n        transfer(address(this), amountToLP);\n\n        // Get the ETH amount to LP and the ETH amount to treasury\n        uint256 genieBalance = IERC20(genieToken).balanceOf(address(this));\n        uint256 ethAmountToTreasury = value.mul(lpEthFeePercentage).div(_MAX_BPS);\n\n        // If the genie balance is greater than the required amount, the fee is free\n        if (genieBalance > discountFeeRequiredAmount) {\n            ethAmountToTreasury = 0;\n        }\n\n        uint256 ethAmountToLP = value.sub(ethAmountToTreasury);\n\n        // Approve the router to spend the tokens\n        _approve(address(this), address(UNISWAP_V2_ROUTER), totalSupply());\n\n        // Create the LP token\n        uniswapV2Pair =\n            IUniswapV2Factory(UNISWAP_V2_ROUTER.factory()).createPair(address(this), UNISWAP_V2_ROUTER.WETH());\n\n        // Approve the router to spend the LP token\n        IERC20(uniswapV2Pair).approve(address(UNISWAP_V2_ROUTER), type(uint256).max);\n\n        // Add liquidity to Uniswap\n        UNISWAP_V2_ROUTER.addLiquidityETH{ value: ethAmountToLP }(\n            address(this), balanceOf(address(this)), 0, 0, owner(), block.timestamp\n        );\n\n        // Enable swapping\n        isSwapEnabled = true;\n\n        // Send fee to the treasury\n        if (ethAmountToTreasury > 0) {\n            payable(coinGenieTreasury).transfer(ethAmountToTreasury);\n        }\n\n        emit TradingOpened(uniswapV2Pair);\n\n        return IUniswapV2Pair(uniswapV2Pair);\n    }\n\n    /**\n     * @dev Sets the address of the genie token\n     * @param genie - the address of the genie token\n     */\n    function setGenie(address genie) external onlyOwner {\n        if (genieToken != address(0)) {\n            revert GenieAlreadySet();\n        }\n\n        genieToken = genie;\n    }\n\n    /**\n     * @dev Swaps tokens for ETH if the contract balance is greater than the max amount to swap for tax. Then sends\n     * the ETH to the tax wallet.\n     */\n    function manualSwap() external nonReentrant {\n        uint256 tokenBalance = balanceOf(address(this));\n        if (tokenBalance > 0) {\n            _swapTokensForEth(_min(tokenBalance, maxTaxSwap));\n        }\n\n        // Send ETH to the tax wallet\n        uint256 ethBalance = address(this).balance;\n        if (ethBalance > autoWithdrawThreshold) {\n            payable(owner()).transfer(ethBalance);\n        }\n    }\n\n    function _takeFees(address from, address to, uint256 amount) private returns (uint256 amountToTransfer) {\n        (uint256 treasuryAmount, uint256 taxAmount, uint256 affiliateAmount, uint256 deflationAmount) =\n            _getTransferAmounts(amount);\n\n        amountToTransfer = amount - treasuryAmount - taxAmount - affiliateAmount - deflationAmount;\n\n        if (\n            from == uniswapV2Pair && to != address(UNISWAP_V2_ROUTER)\n                && balanceOf(to) + amountToTransfer > maxTokenAmountPerAddress\n        ) {\n            revert DestBalanceExceedsMaxAllowed(to);\n        }\n\n        if (treasuryAmount != 0) {\n            _transfer(from, coinGenieTreasury, treasuryAmount);\n        }\n\n        if (affiliateAmount != 0) {\n            _transfer(from, affiliateFeeRecipient, affiliateAmount);\n        }\n\n        if (taxAmount != 0) {\n            _transfer(from, feeRecipient, taxAmount);\n        }\n\n        if (deflationAmount != 0) {\n            _burn(from, deflationAmount);\n        }\n\n        uint256 contractTokenBalance = balanceOf(address(this));\n        // if not in a swap, the receiver is the LP token and the contract token balance is greater than the max tax\n        // swap, swap tokens for ETH\n        if (!_inSwap && to == uniswapV2Pair && contractTokenBalance > maxTaxSwap) {\n            _swapTokensForEth(_min(amountToTransfer, _min(maxTaxSwap, contractTokenBalance)));\n\n            // if the contract ETH balance is greater than the auto withdraw threshold, withdraw the ETH to the\n            // feeRecipient\n            uint256 contractEthBalance = address(this).balance;\n            if (contractEthBalance > autoWithdrawThreshold) {\n                payable(feeRecipient).transfer(contractEthBalance);\n            }\n\n            return amountToTransfer;\n        }\n    }\n\n    /**\n     * @dev Gets the amount of tokens to transfer and the amount of tax to capture\n     * @param amount The amount of tokens to transfer\n     */\n    function _getTransferAmounts(uint256 amount)\n        private\n        view\n        returns (uint256 treasuryAmount, uint256 taxAmount, uint256 affiliateAmount, uint256 deflationAmount)\n    {\n        treasuryAmount = (amount * treasuryFeePercentage) / _MAX_BPS;\n        taxAmount = (amount * feePercentage) / _MAX_BPS;\n        affiliateAmount = (amount * affiliateFeePercentage) / _MAX_BPS;\n\n        if (isDeflationary()) {\n            deflationAmount = (amount * burnPercentage) / _MAX_BPS;\n        }\n    }\n\n    /**\n     * @dev Swaps tokens for ETH\n     * @param tokenAmount The amount of tokens to swap for ETH\n     */\n    function _swapTokensForEth(uint256 tokenAmount) private nonReentrant lockTheSwap {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = UNISWAP_V2_ROUTER.WETH();\n        _approve(address(this), address(UNISWAP_V2_ROUTER), tokenAmount);\n        UNISWAP_V2_ROUTER.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            tokenAmount, 0, path, address(this), block.timestamp\n        );\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     * @param a The first number.\n     * @param b The second number.\n     */\n    function _min(uint256 a, uint256 b) private pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n"},"src/ERC20Factory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.20;\n\nimport { Ownable } from \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\";\n\nimport { CoinGenieERC20 } from \"./CoinGenieERC20.sol\";\nimport { Common } from \"./lib/Common.sol\";\n\n/**\n * @title ERC20Factory\n * @author @neuro_0x\n * @dev A factory library to deploy instances of the CoinGenieERC20 contract.\n */\ncontract ERC20Factory is Ownable {\n    /// @dev The address of the genie token\n    address private _genie;\n\n    /// @notice Error thrown when the genie is already set.\n    error GenieAlreadySet();\n\n    /**\n     * @dev Creates a new instance of the CoinGenieERC20 contract\n     * @param name - the name of the token\n     * @param symbol - the ticker symbol of the token\n     * @param initialSupply - the initial supply of the token\n     * @param tokenOwner - the address that will be the owner of the token\n     * @param customConfigProps - a struct of configuration booleans for the token\n     * @param maxPerWallet - the maximum amount of tokens allowed to be held by one wallet\n     * @param maxTaxSwap - the maximum amount of tokens allowed to be swapped at once by manual or autoswap\n     * @param autoWithdrawThreshold - the threshold at which the contract will automatically withdraw the tax fees\n     * @param affilateFeeRecipient - the address to receive the affiliate fee\n     * @param feeRecipient - the address to receive the tax fees\n     * @param feePercentage - the percent in basis points to use as a tax\n     * @param burnPercentage - the percent in basis points to burn on every tx if this token is deflationary\n     * @param coinGenieTreasury - the address to receive the royalty fee\n     *\n     * @return newToken - the CoinGenieERC20 token that was created\n     */\n    function launchToken(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply,\n        address tokenOwner,\n        Common.TokenConfigProperties memory customConfigProps,\n        uint256 maxPerWallet,\n        uint256 autoWithdrawThreshold,\n        uint256 maxTaxSwap,\n        address affilateFeeRecipient,\n        address feeRecipient,\n        uint256 feePercentage,\n        uint256 burnPercentage,\n        address coinGenieTreasury\n    )\n        external\n        returns (CoinGenieERC20 newToken)\n    {\n        CoinGenieERC20 coinGenieERC20 = new CoinGenieERC20(\n            name,\n            symbol,\n            initialSupply,\n            tokenOwner,\n            customConfigProps,\n            maxPerWallet,\n            maxTaxSwap,\n            autoWithdrawThreshold,\n            affilateFeeRecipient,\n            feeRecipient,\n            feePercentage,\n            burnPercentage\n        );\n\n        coinGenieERC20.setCoinGenieTreasury(coinGenieTreasury);\n        coinGenieERC20.setGenie(_genie);\n\n        if (tokenOwner != address(0) && tokenOwner != coinGenieERC20.owner()) {\n            coinGenieERC20.transferOwnership(tokenOwner);\n        }\n\n        return coinGenieERC20;\n    }\n\n    /**\n     * @dev Sets the address of the genie token\n     * @param genie - the address of the genie token\n     */\n    function setGenie(address genie) external onlyOwner {\n        if (_genie != address(0)) {\n            revert GenieAlreadySet();\n        }\n\n        _genie = genie;\n    }\n}\n"},"src/lib/Common.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.20;\n\n/**\n * @title Common\n * @dev Common items used across the CoinGenie contracts.\n */\nlibrary Common {\n    /// @dev set of features supported by the token\n    struct TokenConfigProperties {\n        bool isBurnable;\n        bool isPausable;\n        bool isDeflationary;\n    }\n}\n"},"src/lib/SafeTransfer.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.20;\n\nlibrary SafeTransfer {\n    error TransferFailed();\n\n    /**\n     * @dev Sends `amount` (in wei) ETH to `to`.\n     * @param to The address to send the ETH to.\n     * @param amount The amount of ETH to send.\n     */\n    function safeTransferETH(address to, uint256 amount) internal {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // Transfer the ETH and check if it succeeded or not.\n            if iszero(call(gas(), to, amount, 0, 0, 0, 0)) {\n                // Store the function selector of `ETHTransferFailed()`.\n                // bytes4(keccak256(bytes(\"ETHTransferFailed()\"))) = 0xb12d13eb\n                mstore(0x00, 0xb12d13eb)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /**\n     * @notice Validates that the address is not the zero address using assembly.\n     * @dev Reverts if the address is the zero address.\n     * @param addr The address to validate.\n     */\n    function validateAddress(address addr) internal pure {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            if iszero(shl(96, addr)) {\n                // Store the function selector of `ZeroAddress()`.\n                // bytes4(keccak256(bytes(\"ZeroAddress()\"))) = 0xd92e233d\n                mstore(0x00, 0xd92e233d)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /**\n     * @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\n     * @dev Reverts if the ERC20 transfer fails.\n     * @param tokenAddress The address of the ERC20 token.\n     * @param from The address to transfer the tokens from.\n     * @param to The address to transfer the tokens to.\n     * @param amount The amount of tokens to transfer.\n     */\n    function safeTransferFrom(address tokenAddress, address from, address to, uint256 amount) internal returns (bool) {\n        (bool success, bytes memory data) =\n        // solhint-disable-next-line avoid-low-level-calls\n         tokenAddress.call(abi.encodeWithSignature(\"transferFrom(address,address,uint256)\", from, to, amount));\n        if (!success) {\n            if (data.length != 0) {\n                // bubble up error\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(data)\n                    revert(add(32, data), returndata_size)\n                }\n            } else {\n                revert TransferFailed();\n            }\n        }\n\n        return true;\n    }\n\n    /// @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\n    /// @dev Reverts if the ERC20 transfer fails.\n    /// @param tokenAddress The address of the ERC20 token.\n    /// @param to The address to transfer the tokens to.\n    /// @param amount The amount of tokens to transfer.\n    function safeTransfer(address tokenAddress, address to, uint256 amount) internal returns (bool) {\n        (bool success, bytes memory data) =\n        // solhint-disable-next-line avoid-low-level-calls\n         tokenAddress.call(abi.encodeWithSignature(\"transfer(address,uint256)\", to, amount));\n        if (!success) {\n            if (data.length != 0) {\n                // bubble up error\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(data)\n                    revert(add(32, data), returndata_size)\n                }\n            } else {\n                revert TransferFailed();\n            }\n        }\n\n        return true;\n    }\n}\n"},"src/LiquidityLocker.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.20;\n\nimport { EnumerableSet } from \"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\";\nimport { IERC20 } from \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\nimport { SafeMath } from \"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\";\nimport { Ownable } from \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\";\nimport { ReentrancyGuard } from \"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\";\n\nimport { IUniswapV2Factory } from \"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\nimport { IUniswapV2Pair } from \"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\nimport { IUniswapV2Migrator } from \"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol\";\n\nimport { SafeTransfer } from \"./lib/SafeTransfer.sol\";\n\n/**\n * @title LiquidityLocker\n * @author @neuro_0x\n * @dev A contract for locking Uniswap V2 liquidity pool tokens for specified periods.\n */\ncontract LiquidityLocker is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    error InvalidAmount();\n    error InvalidLockDate();\n    error LockMismatch();\n    error BeforeUnlockDate();\n    error OwnerAlreadySet();\n    error MigratorNotSet();\n    error NotUniPair(address lpToken);\n\n    IUniswapV2Factory private constant UNISWAP_V2_FACTORY =\n        IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\n\n    struct User {\n        EnumerableSet.AddressSet lockedTokens; // records all tokens the user has locked\n        mapping(address => uint256[]) locksForToken; // map erc20 address to lock id for that token\n    }\n\n    struct TokenLock {\n        uint256 lockDate; // the date the token was locked\n        uint256 amount; // the amount of tokens still locked (initialAmount minus withdrawls)\n        uint256 initialAmount; // the initial lock amount\n        uint256 unlockDate; // the date the token can be withdrawn\n        uint256 lockID; // lockID nonce per uni pair\n        address owner;\n    }\n\n    mapping(address userAddress => User user) private _users;\n\n    EnumerableSet.AddressSet private _lockedTokens;\n    mapping(address pair => TokenLock[] locks) public tokenLocks; // map univ2 pair to all its locks\n\n    IUniswapV2Migrator public migrator;\n\n    event OnWithdraw(address lpToken, uint256 amount);\n    event OnDeposit(address lpToken, address user, uint256 amount, uint256 lockDate, uint256 unlockDate);\n\n    /**\n     * @dev Set the migrator contract which allows locked lp tokens to be migrated to uniswap v3\n     * @param _migrator The address of the migrator contract\n     */\n    function setMigrator(IUniswapV2Migrator _migrator) public onlyOwner {\n        migrator = _migrator;\n    }\n\n    /**\n     * @dev Creates a new lock\n     * @param lpToken the univ2 token address\n     * @param amountOfLPToLock amount of LP tokens to lock\n     * @param unlockDate the unix timestamp (in seconds) until unlock\n     * @param withdrawer the user who can withdraw liquidity once the lock expires\n     */\n    function lockLPToken(\n        IERC20 lpToken,\n        uint256 amountOfLPToLock,\n        uint256 unlockDate,\n        address payable withdrawer\n    )\n        external\n        payable\n        nonReentrant\n        returns (TokenLock memory tokenLock)\n    {\n        if (amountOfLPToLock == 0) {\n            revert InvalidAmount();\n        }\n\n        if (unlockDate > 10_000_000_000) {\n            revert InvalidLockDate();\n        }\n\n        // ensure this pair is a univ2 pair by querying the factory\n        IUniswapV2Pair lpair = IUniswapV2Pair(address(lpToken));\n        address factoryPairAddress = UNISWAP_V2_FACTORY.getPair(lpair.token0(), lpair.token1());\n\n        if (factoryPairAddress != address(lpToken)) {\n            revert NotUniPair(address(lpToken));\n        }\n\n        SafeTransfer.safeTransferFrom(address(lpToken), _msgSender(), address(this), amountOfLPToLock);\n\n        tokenLock.lockDate = block.timestamp;\n        tokenLock.amount = amountOfLPToLock;\n        tokenLock.initialAmount = amountOfLPToLock;\n        tokenLock.unlockDate = unlockDate;\n        tokenLock.lockID = tokenLocks[address(lpToken)].length;\n        tokenLock.owner = withdrawer;\n\n        // record the lock for the univ2pair\n        tokenLocks[address(lpToken)].push(tokenLock);\n        _lockedTokens.add(address(lpToken));\n\n        // record the lock for the user\n        User storage user = _users[withdrawer];\n        user.lockedTokens.add(address(lpToken));\n        uint256[] storage userLocks = user.locksForToken[address(lpToken)];\n        userLocks.push(tokenLock.lockID);\n\n        emit OnDeposit(address(lpToken), _msgSender(), tokenLock.amount, tokenLock.lockDate, tokenLock.unlockDate);\n    }\n\n    /**\n     * @dev extend a lock with a new unlock date, _index and _lockID ensure the correct lock is changed\n     * this prevents errors when a user performs multiple tx per block possibly with varying gas prices\n     * @param _lpToken the univ2 token address\n     * @param _index the index of the lock for the token\n     * @param _lockID the lockID of the lock for the token\n     * @param _unlockDate the new unix timestamp (in seconds) until unlock\n     */\n    function relock(IERC20 _lpToken, uint256 _index, uint256 _lockID, uint256 _unlockDate) external nonReentrant {\n        if (_unlockDate > 10_000_000_000) {\n            revert InvalidLockDate();\n        }\n\n        // timestamp entered in seconds\n        uint256 lockID = _users[_msgSender()].locksForToken[address(_lpToken)][_index];\n        TokenLock storage userLock = tokenLocks[address(_lpToken)][lockID];\n\n        if (lockID != _lockID || userLock.owner != _msgSender()) {\n            revert LockMismatch();\n        }\n\n        if (userLock.unlockDate > _unlockDate) {\n            revert BeforeUnlockDate();\n        }\n\n        userLock.unlockDate = _unlockDate;\n    }\n\n    /**\n     * @dev withdraw a specified amount from a lock. _index and _lockID ensure the correct lock is changed\n     * this prevents errors when a user performs multiple tx per block possibly with varying gas prices\n     */\n    function withdraw(IERC20 _lpToken, uint256 _index, uint256 _lockID, uint256 _amount) external nonReentrant {\n        if (_amount == 0) {\n            revert InvalidAmount();\n        }\n\n        uint256 lockID = _users[_msgSender()].locksForToken[address(_lpToken)][_index];\n        TokenLock storage userLock = tokenLocks[address(_lpToken)][lockID];\n\n        if (lockID != _lockID || userLock.owner != _msgSender()) {\n            revert LockMismatch();\n        }\n\n        if (userLock.unlockDate > block.timestamp) {\n            revert BeforeUnlockDate();\n        }\n\n        userLock.amount = userLock.amount - _amount;\n\n        // clean user storage\n        if (userLock.amount == 0) {\n            uint256[] storage userLocks = _users[_msgSender()].locksForToken[address(_lpToken)];\n            userLocks[_index] = userLocks[userLocks.length - 1];\n            userLocks.pop();\n            if (userLocks.length == 0) {\n                _users[_msgSender()].lockedTokens.remove(address(_lpToken));\n            }\n        }\n\n        SafeTransfer.safeTransfer(address(_lpToken), _msgSender(), _amount);\n        emit OnWithdraw(address(_lpToken), _amount);\n    }\n\n    /**\n     * @dev increase the amount of tokens per a specific lock, this is preferable to creating a new lock, less fees,\n     * and faster loading on our live block explorer\n     */\n    function incrementLock(\n        IERC20 _lpToken,\n        uint256 _index,\n        uint256 _lockID,\n        uint256 _amount\n    )\n        external\n        nonReentrant\n        returns (TokenLock memory _userLock)\n    {\n        if (_amount == 0) {\n            revert InvalidAmount();\n        }\n\n        uint256 lockID = _users[_msgSender()].locksForToken[address(_lpToken)][_index];\n        TokenLock storage userLock = tokenLocks[address(_lpToken)][lockID];\n\n        if (lockID != _lockID || userLock.owner != _msgSender()) {\n            revert LockMismatch();\n        }\n\n        SafeTransfer.safeTransferFrom(address(_lpToken), address(_msgSender()), address(this), _amount);\n\n        userLock.amount = userLock.amount + _amount;\n\n        emit OnDeposit(address(_lpToken), _msgSender(), userLock.amount, userLock.lockDate, userLock.unlockDate);\n\n        return userLock;\n    }\n\n    /**\n     * @dev transfer a lock to a new owner, e.g. presale project -> project owner\n     */\n    function transferLockOwnership(\n        address _lpToken,\n        uint256 _index,\n        uint256 _lockID,\n        address payable _newOwner\n    )\n        external\n    {\n        if (_newOwner == owner()) {\n            revert OwnerAlreadySet();\n        }\n\n        uint256 lockID = _users[_msgSender()].locksForToken[_lpToken][_index];\n        TokenLock storage transferredLock = tokenLocks[_lpToken][lockID];\n\n        if (lockID != _lockID || transferredLock.owner != _msgSender()) {\n            revert LockMismatch();\n        }\n\n        // record the lock for the new Owner\n        User storage user = _users[_newOwner];\n        user.lockedTokens.add(_lpToken);\n\n        uint256[] storage userLocks = user.locksForToken[_lpToken];\n        userLocks.push(transferredLock.lockID);\n\n        // remove the lock from the old owner\n        uint256[] storage userLocks2 = _users[_msgSender()].locksForToken[_lpToken];\n        userLocks2[_index] = userLocks2[userLocks2.length - 1];\n        userLocks2.pop();\n\n        if (userLocks2.length == 0) {\n            _users[_msgSender()].lockedTokens.remove(_lpToken);\n        }\n\n        transferredLock.owner = _newOwner;\n    }\n\n    /**\n     * @dev migrates liquidity to uniswap v3\n     */\n    function migrate(IERC20 _lpToken, uint256 _index, uint256 _lockID, uint256 _amount) external nonReentrant {\n        if (address(migrator) == address(0)) {\n            revert MigratorNotSet();\n        }\n\n        if (_amount == 0) {\n            revert InvalidAmount();\n        }\n\n        uint256 lockID = _users[_msgSender()].locksForToken[address(_lpToken)][_index];\n        TokenLock storage userLock = tokenLocks[address(_lpToken)][lockID];\n\n        if (lockID != _lockID || userLock.owner != _msgSender()) {\n            revert LockMismatch();\n        }\n\n        userLock.amount = userLock.amount - _amount;\n\n        // clean user storage\n        if (userLock.amount == 0) {\n            uint256[] storage userLocks = _users[_msgSender()].locksForToken[address(_lpToken)];\n            userLocks[_index] = userLocks[userLocks.length - 1];\n            userLocks.pop();\n            if (userLocks.length == 0) {\n                _users[_msgSender()].lockedTokens.remove(address(_lpToken));\n            }\n        }\n\n        IERC20(_lpToken).approve(address(migrator), _amount);\n        migrator.migrate(address(_lpToken), _amount, userLock.unlockDate, _msgSender(), block.timestamp + 1 days);\n    }\n\n    /**\n     * @dev Get the number of locks for a specific token.\n     * @param _lpToken The address of the LP token.\n     */\n    function getNumLocksForToken(address _lpToken) external view returns (uint256) {\n        return tokenLocks[_lpToken].length;\n    }\n\n    /**\n     * @dev Get the total number of locked tokens\n     */\n    function getNumLockedTokens() external view returns (uint256) {\n        return _lockedTokens.length();\n    }\n\n    /**\n     * @dev Get the address of a locked token at an index.\n     * @param _index The index of the token.\n     */\n    function getLockedTokenAtIndex(uint256 _index) external view returns (address) {\n        return _lockedTokens.at(_index);\n    }\n\n    /**\n     * @dev Get the number of tokens a user has locked.\n     * @param _user The address of the user.\n     */\n    function getUserNumLockedTokens(address _user) external view returns (uint256) {\n        User storage user = _users[_user];\n        return user.lockedTokens.length();\n    }\n\n    /**\n     * @dev Get the token address a user has locked at an index.\n     * @param _user The address of the user.\n     * @param _index The index of the token.\n     */\n    function getUserLockedTokenAtIndex(address _user, uint256 _index) external view returns (address) {\n        User storage user = _users[_user];\n        return user.lockedTokens.at(_index);\n    }\n\n    /**\n     * @dev Get the number of locks for a specific user and token.\n     * @param _user The address of the user.\n     * @param _lpToken The address of the LP token.\n     */\n    function getUserNumLocksForToken(address _user, address _lpToken) external view returns (uint256) {\n        User storage user = _users[_user];\n        return user.locksForToken[_lpToken].length;\n    }\n\n    /**\n     * @dev Get the lock for a specific user and token at an index.\n     * @param _user The address of the user.\n     * @param _lpToken The address of the LP token.\n     * @param _index The index of the lock.\n     * @return The lock date.\n     * @return Amount of tokens locked.\n     * @return Initial amount of tokens locked.\n     * @return Unlock date of the lock.\n     * @return Lock ID of the lock.\n     * @return Owner of the lock.\n     */\n    function getUserLockForTokenAtIndex(\n        address _user,\n        address _lpToken,\n        uint256 _index\n    )\n        external\n        view\n        returns (uint256, uint256, uint256, uint256, uint256, address)\n    {\n        uint256 lockID = _users[_user].locksForToken[_lpToken][_index];\n        TokenLock storage tokenLock = tokenLocks[_lpToken][lockID];\n        return (\n            tokenLock.lockDate,\n            tokenLock.amount,\n            tokenLock.initialAmount,\n            tokenLock.unlockDate,\n            tokenLock.lockID,\n            tokenLock.owner\n        );\n    }\n}\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200,"details":{"yul":true,"yulDetails":{"stackAllocation":true,"optimizerSteps":"dhfoDgvulfnTUtnIf"}}},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true},"libraries":{"":{"__CACHE_BREAKER__":"0x0000000000000031363935333237333636383937"}}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","start":-1},"type":"Warning"}],"sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1078],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1079,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1078,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1078],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"},"id":0},"lib/openzeppelin-contracts/contracts/security/Pausable.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/security/Pausable.sol","exportedSymbols":{"Context":[1078],"Pausable":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","file":"../utils/Context.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":1079,"src":"130:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":117,"name":"Context","nameLocations":["632:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1078,"src":"632:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"632:7:1"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"162:439:1","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":220,"linearizedBaseContracts":[220,1078],"name":"Pausable","nameLocation":"620:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"646:73:1","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":123,"name":"Paused","nameLocation":"730:6:1","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:1","nodeType":"VariableDeclaration","scope":123,"src":"737:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:1"},"src":"724:30:1"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"760:70:1","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":128,"name":"Unpaused","nameLocation":"841:8:1","nodeType":"EventDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:1","nodeType":"VariableDeclaration","scope":128,"src":"850:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:1"},"src":"835:32:1"},{"constant":false,"id":130,"mutability":"mutable","name":"_paused","nameLocation":"886:7:1","nodeType":"VariableDeclaration","scope":220,"src":"873:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":138,"nodeType":"Block","src":"986:32:1","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"996:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"ExpressionStatement","src":"996:15:1"}]},"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"900:67:1","text":" @dev Initializes the contract in unpaused state."},"id":139,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"983:2:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"986:0:1"},"scope":220,"src":"972:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":146,"nodeType":"Block","src":"1229:47:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":142,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1239:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1239:19:1"},{"id":145,"nodeType":"PlaceholderStatement","src":"1268:1:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"1024:175:1","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":147,"name":"whenNotPaused","nameLocation":"1213:13:1","nodeType":"ModifierDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"1226:2:1"},"src":"1204:72:1","virtual":false,"visibility":"internal"},{"body":{"id":154,"nodeType":"Block","src":"1476:44:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":150,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1486:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"1486:16:1"},{"id":153,"nodeType":"PlaceholderStatement","src":"1512:1:1"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"1282:167:1","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":155,"name":"whenPaused","nameLocation":"1463:10:1","nodeType":"ModifierDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"1473:2:1"},"src":"1454:66:1","virtual":false,"visibility":"internal"},{"body":{"id":163,"nodeType":"Block","src":"1668:31:1","statements":[{"expression":{"id":161,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":160,"id":162,"nodeType":"Return","src":"1678:14:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1526:84:1","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":164,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1630:2:1"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":164,"src":"1662:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":158,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:1"},"scope":220,"src":"1615:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1818:55:1","statements":[{"expression":{"arguments":[{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1837:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1828:38:1"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1705:57:1","text":" @dev Throws if the contract is paused."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:1","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"1793:2:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"1818:0:1"},"scope":220,"src":"1767:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"1993:58:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2011:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2003:41:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1879:61:1","text":" @dev Throws if the contract is not paused."},"id":187,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1968:2:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1993:0:1"},"scope":220,"src":"1945:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":202,"nodeType":"Block","src":"2235:66:1","statements":[{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":193,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2245:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":196,"nodeType":"ExpressionStatement","src":"2245:14:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":198,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2281:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":197,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2274:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"EmitStatement","src":"2269:25:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2057:124:1","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":203,"implemented":true,"kind":"function","modifiers":[{"id":191,"kind":"modifierInvocation","modifierName":{"id":190,"name":"whenNotPaused","nameLocations":["2221:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2221:13:1"},"nodeType":"ModifierInvocation","src":"2221:13:1"}],"name":"_pause","nameLocation":"2195:6:1","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"2201:2:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2235:0:1"},"scope":220,"src":"2186:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"2481:69:1","statements":[{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":209,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2491:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"ExpressionStatement","src":"2491:15:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2530:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":213,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"2521:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"2516:27:1"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2307:121:1","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":219,"implemented":true,"kind":"function","modifiers":[{"id":207,"kind":"modifierInvocation","modifierName":{"id":206,"name":"whenPaused","nameLocations":["2470:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":155,"src":"2470:10:1"},"nodeType":"ModifierInvocation","src":"2470:10:1"}],"name":"_unpause","nameLocation":"2442:8:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2450:2:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2481:0:1"},"scope":220,"src":"2433:117:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":221,"src":"602:1950:1","usedErrors":[],"usedEvents":[123,128]}],"src":"105:2448:1"},"id":1},"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[285]},"id":286,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"137:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":285,"linearizedBaseContracts":[285],"name":"ReentrancyGuard","nameLocation":"906:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":226,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:2","nodeType":"VariableDeclaration","scope":285,"src":"1676:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":229,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:2","nodeType":"VariableDeclaration","scope":285,"src":"1723:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":231,"mutability":"mutable","name":"_status","nameLocation":"1783:7:2","nodeType":"VariableDeclaration","scope":285,"src":"1767:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":238,"nodeType":"Block","src":"1811:39:2","statements":[{"expression":{"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":234,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"1821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":235,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1831:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":237,"nodeType":"ExpressionStatement","src":"1821:22:2"}]},"id":239,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"1808:2:2"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"1811:0:2"},"scope":285,"src":"1797:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"2251:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":242,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2261:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"2261:21:2"},{"id":245,"nodeType":"PlaceholderStatement","src":"2292:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":246,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2303:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"ExpressionStatement","src":"2303:20:2"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1856:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":250,"name":"nonReentrant","nameLocation":"2236:12:2","nodeType":"ModifierDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"2248:2:2"},"src":"2227:103:2","virtual":false,"visibility":"internal"},{"body":{"id":264,"nodeType":"Block","src":"2375:248:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":255,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2479:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"2460:63:2"},{"expression":{"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":260,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":261,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2608:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":263,"nodeType":"ExpressionStatement","src":"2598:18:2"}]},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:2","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"2364:2:2"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"2375:0:2"},"scope":285,"src":"2336:287:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":272,"nodeType":"Block","src":"2667:171:2","statements":[{"expression":{"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":268,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":269,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2819:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":271,"nodeType":"ExpressionStatement","src":"2809:22:2"}]},"id":273,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:2","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"2656:2:2"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"2667:0:2"},"scope":285,"src":"2629:209:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":283,"nodeType":"Block","src":"3081:43:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":279,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":280,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"3109:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":278,"id":282,"nodeType":"Return","src":"3091:26:2"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"2844:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:2","nodeType":"FunctionDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"3049:2:2"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"3075:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":276,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:2"},"scope":285,"src":"3017:107:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":286,"src":"888:2238:2","usedErrors":[],"usedEvents":[]}],"src":"112:3015:2"},"id":2},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1078],"ERC20":[872],"IERC20":[950],"IERC20Metadata":[1056]},"id":873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":287,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":873,"sourceUnit":951,"src":"130:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":873,"sourceUnit":1057,"src":"153:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":873,"sourceUnit":1079,"src":"195:33:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":292,"name":"Context","nameLocations":["1550:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1078,"src":"1550:7:3"},"id":293,"nodeType":"InheritanceSpecifier","src":"1550:7:3"},{"baseName":{"id":294,"name":"IERC20","nameLocations":["1559:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"1559:6:3"},"id":295,"nodeType":"InheritanceSpecifier","src":"1559:6:3"},{"baseName":{"id":296,"name":"IERC20Metadata","nameLocations":["1567:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1056,"src":"1567:14:3"},"id":297,"nodeType":"InheritanceSpecifier","src":"1567:14:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"230:1301:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":872,"linearizedBaseContracts":[872,1056,950,1078],"name":"ERC20","nameLocation":"1541:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":301,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:3","nodeType":"VariableDeclaration","scope":872,"src":"1588:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":300,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":307,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:3","nodeType":"VariableDeclaration","scope":872,"src":"1640:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":306,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":309,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:3","nodeType":"VariableDeclaration","scope":872,"src":"1714:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":311,"mutability":"mutable","name":"_name","nameLocation":"1764:5:3","nodeType":"VariableDeclaration","scope":872,"src":"1749:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":310,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:3","nodeType":"VariableDeclaration","scope":872,"src":"1775:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":312,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":329,"nodeType":"Block","src":"2036:57:3","statements":[{"expression":{"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":321,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"2046:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":322,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2054:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":324,"nodeType":"ExpressionStatement","src":"2046:13:3"},{"expression":{"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":325,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"2069:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":326,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2079:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":328,"nodeType":"ExpressionStatement","src":"2069:17:3"}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"1804:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":330,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"name_","nameLocation":"2006:5:3","nodeType":"VariableDeclaration","scope":330,"src":"1992:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":315,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:3","nodeType":"VariableDeclaration","scope":330,"src":"2013:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":317,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:3"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"2036:0:3"},"scope":872,"src":"1980:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1043],"body":{"id":339,"nodeType":"Block","src":"2227:29:3","statements":[{"expression":{"id":337,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"2244:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":336,"id":338,"nodeType":"Return","src":"2237:12:3"}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"2099:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":340,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:3","nodeType":"FunctionDefinition","overrides":{"id":333,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:3"},"parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"2171:2:3"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"2212:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":334,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:3"},"scope":872,"src":"2158:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1049],"body":{"id":349,"nodeType":"Block","src":"2440:31:3","statements":[{"expression":{"id":347,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"2457:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":346,"id":348,"nodeType":"Return","src":"2450:14:3"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"2262:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":350,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:3","nodeType":"FunctionDefinition","overrides":{"id":343,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:3"},"parameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"2384:2:3"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":350,"src":"2425:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":344,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:3"},"scope":872,"src":"2369:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1055],"body":{"id":359,"nodeType":"Block","src":"3169:26:3","statements":[{"expression":{"hexValue":"3138","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":356,"id":358,"nodeType":"Return","src":"3179:9:3"}]},"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"2477:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":360,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:3","nodeType":"FunctionDefinition","overrides":{"id":353,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:3"},"parameters":{"id":352,"nodeType":"ParameterList","parameters":[],"src":"3121:2:3"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"3162:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":354,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:3"},"scope":872,"src":"3104:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[899],"body":{"id":369,"nodeType":"Block","src":"3325:36:3","statements":[{"expression":{"id":367,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3342:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":366,"id":368,"nodeType":"Return","src":"3335:19:3"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"3201:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:3","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:3"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"3275:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"3316:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:3"},"scope":872,"src":"3255:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[907],"body":{"id":383,"nodeType":"Block","src":"3502:42:3","statements":[{"expression":{"baseExpression":{"id":379,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"3519:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":381,"indexExpression":{"id":380,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3529:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":378,"id":382,"nodeType":"Return","src":"3512:25:3"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"3367:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":384,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:3","nodeType":"FunctionDefinition","overrides":{"id":375,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:3"},"parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"account","nameLocation":"3446:7:3","nodeType":"VariableDeclaration","scope":384,"src":"3438:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:3"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":384,"src":"3493:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:3"},"scope":872,"src":"3419:125:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[917],"body":{"id":408,"nodeType":"Block","src":"3825:104:3","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3843:5:3","nodeType":"VariableDeclaration","scope":408,"src":"3835:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3851:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:3"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3883:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3890:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"3894:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3873:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3873:28:3"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3911:11:3"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"3550:185:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:3","nodeType":"FunctionDefinition","overrides":{"id":391,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:3"},"parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"to","nameLocation":"3766:2:3","nodeType":"VariableDeclaration","scope":409,"src":"3758:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"amount","nameLocation":"3778:6:3","nodeType":"VariableDeclaration","scope":409,"src":"3770:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:3"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3819:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:3"},"scope":872,"src":"3740:189:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[927],"body":{"id":426,"nodeType":"Block","src":"4085:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":420,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4102:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":422,"indexExpression":{"id":421,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"4114:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":424,"indexExpression":{"id":423,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"4121:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":419,"id":425,"nodeType":"Return","src":"4095:34:3"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3935:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":427,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:3","nodeType":"FunctionDefinition","overrides":{"id":416,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:3"},"parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"4014:5:3","nodeType":"VariableDeclaration","scope":427,"src":"4006:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"4029:7:3","nodeType":"VariableDeclaration","scope":427,"src":"4021:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"4076:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:3"},"scope":872,"src":"3987:149:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[937],"body":{"id":451,"nodeType":"Block","src":"4533:108:3","statements":[{"assignments":[439],"declarations":[{"constant":false,"id":439,"mutability":"mutable","name":"owner","nameLocation":"4551:5:3","nodeType":"VariableDeclaration","scope":451,"src":"4543:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":440,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"4559:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:3"},{"expression":{"arguments":[{"id":444,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"4590:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"4597:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":446,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"4606:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":443,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4581:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"ExpressionStatement","src":"4581:32:3"},{"expression":{"hexValue":"74727565","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":437,"id":450,"nodeType":"Return","src":"4623:11:3"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"4142:297:3","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":452,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:3","nodeType":"FunctionDefinition","overrides":{"id":434,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:3"},"parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"spender","nameLocation":"4469:7:3","nodeType":"VariableDeclaration","scope":452,"src":"4461:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"amount","nameLocation":"4486:6:3","nodeType":"VariableDeclaration","scope":452,"src":"4478:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:3"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":452,"src":"4527:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":435,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:3"},"scope":872,"src":"4444:197:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[949],"body":{"id":484,"nodeType":"Block","src":"5306:153:3","statements":[{"assignments":[466],"declarations":[{"constant":false,"id":466,"mutability":"mutable","name":"spender","nameLocation":"5324:7:3","nodeType":"VariableDeclaration","scope":484,"src":"5316:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":469,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":467,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5334:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:3"},{"expression":{"arguments":[{"id":471,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5372:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"5378:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":473,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5387:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":470,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"5356:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"5356:38:3"},{"expression":{"arguments":[{"id":477,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5414:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5420:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":479,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5424:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":476,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"5404:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":481,"nodeType":"ExpressionStatement","src":"5404:27:3"},{"expression":{"hexValue":"74727565","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":464,"id":483,"nodeType":"Return","src":"5441:11:3"}]},"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"4647:551:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":485,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:3","nodeType":"FunctionDefinition","overrides":{"id":461,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:3"},"parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"from","nameLocation":"5233:4:3","nodeType":"VariableDeclaration","scope":485,"src":"5225:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"to","nameLocation":"5247:2:3","nodeType":"VariableDeclaration","scope":485,"src":"5239:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"amount","nameLocation":"5259:6:3","nodeType":"VariableDeclaration","scope":485,"src":"5251:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:3"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":485,"src":"5300:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":462,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:3"},"scope":872,"src":"5203:256:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"5948:140:3","statements":[{"assignments":[496],"declarations":[{"constant":false,"id":496,"mutability":"mutable","name":"owner","nameLocation":"5966:5:3","nodeType":"VariableDeclaration","scope":513,"src":"5958:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":499,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":497,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5974:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:3"},{"expression":{"arguments":[{"id":501,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"6005:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"6012:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"6031:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":505,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"6038:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":503,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6021:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":507,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"6049:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":500,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"5996:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"5996:64:3"},{"expression":{"hexValue":"74727565","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":494,"id":512,"nodeType":"Return","src":"6070:11:3"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"5465:384:3","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":514,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:3","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"spender","nameLocation":"5889:7:3","nodeType":"VariableDeclaration","scope":514,"src":"5881:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:3","nodeType":"VariableDeclaration","scope":514,"src":"5898:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:3"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"5942:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":492,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:3"},"scope":872,"src":"5854:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":554,"nodeType":"Block","src":"6674:328:3","statements":[{"assignments":[525],"declarations":[{"constant":false,"id":525,"mutability":"mutable","name":"owner","nameLocation":"6692:5:3","nodeType":"VariableDeclaration","scope":554,"src":"6684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":528,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":526,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6700:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:3"},{"assignments":[530],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:3","nodeType":"VariableDeclaration","scope":554,"src":"6722:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":535,"initialValue":{"arguments":[{"id":532,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6759:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"6766:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":531,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"6749:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":537,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6792:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":538,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6812:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"6784:85:3"},{"id":551,"nodeType":"UncheckedBlock","src":"6879:95:3","statements":[{"expression":{"arguments":[{"id":544,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"6912:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"6919:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":546,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6928:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":547,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"6947:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":543,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"6903:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"6903:60:3"}]},{"expression":{"hexValue":"74727565","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":523,"id":553,"nodeType":"Return","src":"6984:11:3"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"6094:476:3","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:3","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"spender","nameLocation":"6610:7:3","nodeType":"VariableDeclaration","scope":555,"src":"6602:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:3","nodeType":"VariableDeclaration","scope":555,"src":"6619:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:3"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"6668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":521,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:3"},"scope":872,"src":"6575:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":631,"nodeType":"Block","src":"7534:710:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":566,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7552:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:3","typeDescriptions":{}}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":565,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"ExpressionStatement","src":"7544:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":576,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7630:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:3","typeDescriptions":{}}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"7622:64:3"},{"expression":{"arguments":[{"id":586,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7718:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7724:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"7728:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"7697:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"7697:38:3"},{"assignments":[592],"declarations":[{"constant":false,"id":592,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:3","nodeType":"VariableDeclaration","scope":631,"src":"7746:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":596,"initialValue":{"baseExpression":{"id":593,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"7768:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":595,"indexExpression":{"id":594,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7778:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":598,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7801:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":599,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"7816:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"7793:72:3"},{"id":618,"nodeType":"UncheckedBlock","src":"7875:273:3","statements":[{"expression":{"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":604,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"7899:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":606,"indexExpression":{"id":605,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7909:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7917:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":608,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"7931:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":611,"nodeType":"ExpressionStatement","src":"7899:38:3"},{"expression":{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":612,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8114:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":614,"indexExpression":{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8124:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":615,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8131:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":617,"nodeType":"ExpressionStatement","src":"8114:23:3"}]},{"eventCall":{"arguments":[{"id":620,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8172:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8178:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8182:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":619,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"8163:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"EmitStatement","src":"8158:31:3"},{"expression":{"arguments":[{"id":626,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"8220:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8226:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8230:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":625,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"8200:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"8200:37:3"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"7008:443:3","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":632,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:3","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"7483:4:3","nodeType":"VariableDeclaration","scope":632,"src":"7475:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"7497:2:3","nodeType":"VariableDeclaration","scope":632,"src":"7489:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"amount","nameLocation":"7509:6:3","nodeType":"VariableDeclaration","scope":632,"src":"7501:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:3"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"7534:0:3"},"scope":872,"src":"7456:788:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":688,"nodeType":"Block","src":"8585:470:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":641,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"8603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:3","typeDescriptions":{}}},"id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"8595:65:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:3","typeDescriptions":{}}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"8704:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8713:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":650,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8671:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"ExpressionStatement","src":"8671:49:3"},{"expression":{"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":659,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"8731:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":660,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8747:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":662,"nodeType":"ExpressionStatement","src":"8731:22:3"},{"id":669,"nodeType":"UncheckedBlock","src":"8763:175:3","statements":[{"expression":{"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"8899:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":665,"indexExpression":{"id":664,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"8909:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":666,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8921:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":668,"nodeType":"ExpressionStatement","src":"8899:28:3"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:3","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"8973:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8982:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":670,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"8952:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"EmitStatement","src":"8947:42:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:3","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"9032:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9041:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":679,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"9000:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":687,"nodeType":"ExpressionStatement","src":"9000:48:3"}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"8250:265:3","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":689,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"account","nameLocation":"8543:7:3","nodeType":"VariableDeclaration","scope":689,"src":"8535:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"amount","nameLocation":"8560:6:3","nodeType":"VariableDeclaration","scope":689,"src":"8552:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:3"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[],"src":"8585:0:3"},"scope":872,"src":"8520:535:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":760,"nodeType":"Block","src":"9440:594:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":698,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9458:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:3","typeDescriptions":{}}},"id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":697,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"9450:67:3"},{"expression":{"arguments":[{"id":708,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9549:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:3","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9570:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":707,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"9528:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"9528:49:3"},{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:3","nodeType":"VariableDeclaration","scope":760,"src":"9588:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":721,"initialValue":{"baseExpression":{"id":718,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"9613:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":720,"indexExpression":{"id":719,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9623:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"9649:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":724,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9667:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"9641:71:3"},{"id":741,"nodeType":"UncheckedBlock","src":"9722:194:3","statements":[{"expression":{"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":729,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"9746:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":731,"indexExpression":{"id":730,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9756:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":732,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"9767:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":733,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9784:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":736,"nodeType":"ExpressionStatement","src":"9746:44:3"},{"expression":{"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":737,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"9883:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":738,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9899:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":740,"nodeType":"ExpressionStatement","src":"9883:22:3"}]},{"eventCall":{"arguments":[{"id":743,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9940:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:3","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9961:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":742,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9931:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"EmitStatement","src":"9926:42:3"},{"expression":{"arguments":[{"id":752,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:3","typeDescriptions":{}}},"id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":757,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"10020:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":751,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"9979:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"ExpressionStatement","src":"9979:48:3"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"9061:309:3","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":761,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:3","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"account","nameLocation":"9398:7:3","nodeType":"VariableDeclaration","scope":761,"src":"9390:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"amount","nameLocation":"9415:6:3","nodeType":"VariableDeclaration","scope":761,"src":"9407:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:3"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"9440:0:3"},"scope":872,"src":"9375:659:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"10540:257:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":772,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"10558:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:3","typeDescriptions":{}}},"id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"10550:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"10636:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:3","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"10628:68:3"},{"expression":{"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":791,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"10707:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":794,"indexExpression":{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"10719:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":795,"indexExpression":{"id":793,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"10726:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":796,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"10737:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":798,"nodeType":"ExpressionStatement","src":"10707:36:3"},{"eventCall":{"arguments":[{"id":800,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"10767:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":801,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"10774:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":802,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"10783:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":799,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10758:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"EmitStatement","src":"10753:37:3"}]},"documentation":{"id":762,"nodeType":"StructuredDocumentation","src":"10040:412:3","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:3","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"owner","nameLocation":"10483:5:3","nodeType":"VariableDeclaration","scope":806,"src":"10475:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"spender","nameLocation":"10498:7:3","nodeType":"VariableDeclaration","scope":806,"src":"10490:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"amount","nameLocation":"10515:6:3","nodeType":"VariableDeclaration","scope":806,"src":"10507:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:3"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[],"src":"10540:0:3"},"scope":872,"src":"10457:340:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":848,"nodeType":"Block","src":"11168:321:3","statements":[{"assignments":[817],"declarations":[{"constant":false,"id":817,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:3","nodeType":"VariableDeclaration","scope":848,"src":"11178:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":822,"initialValue":{"arguments":[{"id":819,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"11215:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11222:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":818,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"11205:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"11244:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":824,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:3","memberName":"max","nodeType":"MemberAccess","src":"11264:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"11240:243:3","trueBody":{"id":846,"nodeType":"Block","src":"11283:200:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"11305:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":832,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"11325:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"ExpressionStatement","src":"11297:68:3"},{"id":845,"nodeType":"UncheckedBlock","src":"11379:94:3","statements":[{"expression":{"arguments":[{"id":838,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"11416:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11423:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"11432:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"11451:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":837,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"11407:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"11407:51:3"}]}]}}]},"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"10803:270:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:3","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"owner","nameLocation":"11111:5:3","nodeType":"VariableDeclaration","scope":849,"src":"11103:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"spender","nameLocation":"11126:7:3","nodeType":"VariableDeclaration","scope":849,"src":"11118:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"amount","nameLocation":"11143:6:3","nodeType":"VariableDeclaration","scope":849,"src":"11135:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:3"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"11168:0:3"},"scope":872,"src":"11078:411:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":859,"nodeType":"Block","src":"12162:2:3","statements":[]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"11495:573:3","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":860,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:3","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"from","nameLocation":"12111:4:3","nodeType":"VariableDeclaration","scope":860,"src":"12103:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"to","nameLocation":"12125:2:3","nodeType":"VariableDeclaration","scope":860,"src":"12117:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"amount","nameLocation":"12137:6:3","nodeType":"VariableDeclaration","scope":860,"src":"12129:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:3"},"returnParameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"12162:0:3"},"scope":872,"src":"12073:91:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":870,"nodeType":"Block","src":"12840:2:3","statements":[]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"12170:577:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":871,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:3","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"from","nameLocation":"12789:4:3","nodeType":"VariableDeclaration","scope":871,"src":"12781:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"to","nameLocation":"12803:2:3","nodeType":"VariableDeclaration","scope":871,"src":"12795:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"amount","nameLocation":"12815:6:3","nodeType":"VariableDeclaration","scope":871,"src":"12807:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:3"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"12840:0:3"},"scope":872,"src":"12752:90:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":873,"src":"1532:11312:3","usedErrors":[],"usedEvents":[884,893]}],"src":"105:12740:3"},"id":3},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[950]},"id":951,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":874,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":875,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":950,"linearizedBaseContracts":[950],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":884,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":884,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":884,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":884,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":893,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":893,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":893,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":893,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":899,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":950,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":907,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":907,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":950,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":917,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":917,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":917,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":914,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":950,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":927,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":927,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":927,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":927,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":950,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":937,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":937,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":937,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":937,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":934,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":950,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":949,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"from","nameLocation":"2676:4:4","nodeType":"VariableDeclaration","scope":949,"src":"2668:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"to","nameLocation":"2690:2:4","nodeType":"VariableDeclaration","scope":949,"src":"2682:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":941,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"amount","nameLocation":"2702:6:4","nodeType":"VariableDeclaration","scope":949,"src":"2694:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:4"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"2728:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":946,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:4"},"scope":950,"src":"2646:88:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":951,"src":"202:2534:4","usedErrors":[],"usedEvents":[884,893]}],"src":"106:2631:4"},"id":4},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1078],"ERC20":[872],"ERC20Burnable":[994],"IERC20":[950],"IERC20Metadata":[1056]},"id":995,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":952,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:5"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":953,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":995,"sourceUnit":873,"src":"149:22:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":995,"sourceUnit":1079,"src":"172:36:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":956,"name":"Context","nameLocations":["454:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1078,"src":"454:7:5"},"id":957,"nodeType":"InheritanceSpecifier","src":"454:7:5"},{"baseName":{"id":958,"name":"ERC20","nameLocations":["463:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":872,"src":"463:5:5"},"id":959,"nodeType":"InheritanceSpecifier","src":"463:5:5"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"210:208:5","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":994,"linearizedBaseContracts":[994,872,1056,950,1078],"name":"ERC20Burnable","nameLocation":"437:13:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":971,"nodeType":"Block","src":"623:44:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":966,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"639:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"653:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":965,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"633:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"633:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"633:27:5"}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"475:98:5","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":972,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:5","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"amount","nameLocation":"600:6:5","nodeType":"VariableDeclaration","scope":972,"src":"592:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:5"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"623:0:5"},"scope":994,"src":"578:89:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":992,"nodeType":"Block","src":"1039:95:5","statements":[{"expression":{"arguments":[{"id":981,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1065:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":982,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1074:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":984,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1088:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":980,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"1049:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"ExpressionStatement","src":"1049:46:5"},{"expression":{"arguments":[{"id":988,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"1111:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":989,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"1120:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":987,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"1105:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":991,"nodeType":"ExpressionStatement","src":"1105:22:5"}]},"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"673:295:5","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":993,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:5","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"account","nameLocation":"999:7:5","nodeType":"VariableDeclaration","scope":993,"src":"991:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"amount","nameLocation":"1016:6:5","nodeType":"VariableDeclaration","scope":993,"src":"1008:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:5"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"1039:0:5"},"scope":994,"src":"973:161:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":995,"src":"419:717:5","usedErrors":[],"usedEvents":[884,893]}],"src":"124:1013:5"},"id":5},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"Context":[1078],"ERC20":[872],"ERC20Pausable":[1031],"IERC20":[950],"IERC20Metadata":[1056],"Pausable":[220]},"id":1032,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":996,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:6"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1032,"sourceUnit":873,"src":"149:22:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/security/Pausable.sol","file":"../../../security/Pausable.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1032,"sourceUnit":221,"src":"172:40:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1000,"name":"ERC20","nameLocations":["885:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":872,"src":"885:5:6"},"id":1001,"nodeType":"InheritanceSpecifier","src":"885:5:6"},{"baseName":{"id":1002,"name":"Pausable","nameLocations":["892:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":220,"src":"892:8:6"},"id":1003,"nodeType":"InheritanceSpecifier","src":"892:8:6"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"214:635:6","text":" @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract unpausable."},"fullyImplemented":true,"id":1031,"linearizedBaseContracts":[1031,220,872,1056,950,1078],"name":"ERC20Pausable","nameLocation":"868:13:6","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[860],"body":{"id":1029,"nodeType":"Block","src":"1144:136:6","statements":[{"expression":{"arguments":[{"id":1017,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"1181:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1187:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1019,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"1191:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1014,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1154:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1031_$","typeString":"type(contract super ERC20Pausable)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1160:20:6","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":860,"src":"1154:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1154:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"1154:44:6"},{"expression":{"arguments":[{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1217:9:6","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1023,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1218:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1218:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1228:44:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""},"value":"ERC20Pausable: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4","typeString":"literal_string \"ERC20Pausable: token transfer while paused\""}],"id":1022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1209:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"1209:64:6"}]},"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"907:134:6","text":" @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."},"id":1030,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1055:20:6","nodeType":"FunctionDefinition","overrides":{"id":1012,"nodeType":"OverrideSpecifier","overrides":[],"src":"1135:8:6"},"parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"from","nameLocation":"1084:4:6","nodeType":"VariableDeclaration","scope":1030,"src":"1076:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"to","nameLocation":"1098:2:6","nodeType":"VariableDeclaration","scope":1030,"src":"1090:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"amount","nameLocation":"1110:6:6","nodeType":"VariableDeclaration","scope":1030,"src":"1102:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1075:42:6"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[],"src":"1144:0:6"},"scope":1031,"src":"1046:234:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1032,"src":"850:432:6","usedErrors":[],"usedEvents":[123,128,884,893]}],"src":"124:1159:6"},"id":6},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[950],"IERC20Metadata":[1056]},"id":1057,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1033,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:7"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1057,"sourceUnit":951,"src":"135:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1036,"name":"IERC20","nameLocations":["305:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"305:6:7"},"id":1037,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"160:116:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1056,"linearizedBaseContracts":[1056,950],"name":"IERC20Metadata","nameLocation":"287:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1043,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:7","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1043,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1040,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1056,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1049,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:7","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1049,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1046,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1056,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1055,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1055,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1052,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1056,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1057,"src":"277:405:7","usedErrors":[],"usedEvents":[884,893]}],"src":"110:573:7"},"id":7},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Context.sol","exportedSymbols":{"Context":[1078]},"id":1079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1058,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"111:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1078,"linearizedBaseContracts":[1078],"name":"Context","nameLocation":"626:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1067,"nodeType":"Block","src":"702:34:8","statements":[{"expression":{"expression":{"id":1064,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:8","memberName":"sender","nodeType":"MemberAccess","src":"719:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1063,"id":1066,"nodeType":"Return","src":"712:17:8"}]},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:8","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"659:2:8"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1068,"src":"693:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:8"},"scope":1078,"src":"640:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1076,"nodeType":"Block","src":"809:32:8","statements":[{"expression":{"expression":{"id":1073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:8","memberName":"data","nodeType":"MemberAccess","src":"826:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1072,"id":1075,"nodeType":"Return","src":"819:15:8"}]},"id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:8","nodeType":"FunctionDefinition","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[],"src":"759:2:8"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"793:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1070,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:8"},"scope":1078,"src":"742:99:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1079,"src":"608:235:8","usedErrors":[],"usedEvents":[]}],"src":"86:758:8"},"id":8},"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1606]},"id":1607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1080,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"143:658:9","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1606,"linearizedBaseContracts":[1606],"name":"MerkleProof","nameLocation":"810:11:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1101,"nodeType":"Block","src":"1253:57:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1095,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"1283:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1096,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"1290:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1094,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1270:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1098,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"1299:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1270:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1093,"id":1100,"nodeType":"Return","src":"1263:40:9"}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"828:323:9","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:9","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"proof","nameLocation":"1189:5:9","nodeType":"VariableDeclaration","scope":1102,"src":"1172:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1172:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1084,"nodeType":"ArrayTypeName","src":"1172:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"root","nameLocation":"1204:4:9","nodeType":"VariableDeclaration","scope":1102,"src":"1196:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1196:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"leaf","nameLocation":"1218:4:9","nodeType":"VariableDeclaration","scope":1102,"src":"1210:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:52:9"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"1247:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1091,"name":"bool","nodeType":"ElementaryTypeName","src":"1247:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1246:6:9"},"scope":1606,"src":"1156:154:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1122,"nodeType":"Block","src":"1518:65:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1116,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"1556:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1117,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"1563:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1115,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"1535:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1119,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"1572:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1535:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1114,"id":1121,"nodeType":"Return","src":"1528:48:9"}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"1316:90:9","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1420:14:9","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"proof","nameLocation":"1454:5:9","nodeType":"VariableDeclaration","scope":1123,"src":"1435:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1435:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1105,"nodeType":"ArrayTypeName","src":"1435:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"root","nameLocation":"1469:4:9","nodeType":"VariableDeclaration","scope":1123,"src":"1461:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1461:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"leaf","nameLocation":"1483:4:9","nodeType":"VariableDeclaration","scope":1123,"src":"1475:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1434:54:9"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"1512:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1112,"name":"bool","nodeType":"ElementaryTypeName","src":"1512:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1511:6:9"},"scope":1606,"src":"1411:172:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"2026:198:9","statements":[{"assignments":[1135],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"computedHash","nameLocation":"2044:12:9","nodeType":"VariableDeclaration","scope":1162,"src":"2036:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1137,"initialValue":{"id":1136,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2059:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2036:27:9"},{"body":{"id":1158,"nodeType":"Block","src":"2116:73:9","statements":[{"expression":{"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1149,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2130:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1151,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2155:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1152,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"2169:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1154,"indexExpression":{"id":1153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2175:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1150,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2145:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2130:48:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1157,"nodeType":"ExpressionStatement","src":"2130:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1142,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2093:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1143,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"2097:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2103:6:9","memberName":"length","nodeType":"MemberAccess","src":"2097:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1159,"initializationExpression":{"assignments":[1139],"declarations":[{"constant":false,"id":1139,"mutability":"mutable","name":"i","nameLocation":"2086:1:9","nodeType":"VariableDeclaration","scope":1159,"src":"2078:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1141,"initialValue":{"hexValue":"30","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2078:13:9"},"loopExpression":{"expression":{"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2111:3:9","subExpression":{"id":1146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2111:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1148,"nodeType":"ExpressionStatement","src":"2111:3:9"},"nodeType":"ForStatement","src":"2073:116:9"},{"expression":{"id":1160,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2205:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1133,"id":1161,"nodeType":"Return","src":"2198:19:9"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"1589:340:9","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1943:12:9","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"proof","nameLocation":"1973:5:9","nodeType":"VariableDeclaration","scope":1163,"src":"1956:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1126,"nodeType":"ArrayTypeName","src":"1956:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"leaf","nameLocation":"1988:4:9","nodeType":"VariableDeclaration","scope":1163,"src":"1980:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1980:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1955:38:9"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"2017:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2016:9:9"},"scope":1606,"src":"1934:290:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1202,"nodeType":"Block","src":"2433:198:9","statements":[{"assignments":[1175],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"computedHash","nameLocation":"2451:12:9","nodeType":"VariableDeclaration","scope":1202,"src":"2443:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1177,"initialValue":{"id":1176,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2466:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2443:27:9"},{"body":{"id":1198,"nodeType":"Block","src":"2523:73:9","statements":[{"expression":{"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1189,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2537:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1191,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2562:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1192,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2576:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1194,"indexExpression":{"id":1193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2582:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2576:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1190,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2552:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2537:48:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1197,"nodeType":"ExpressionStatement","src":"2537:48:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2500:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1183,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2504:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2510:6:9","memberName":"length","nodeType":"MemberAccess","src":"2504:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2500:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1199,"initializationExpression":{"assignments":[1179],"declarations":[{"constant":false,"id":1179,"mutability":"mutable","name":"i","nameLocation":"2493:1:9","nodeType":"VariableDeclaration","scope":1199,"src":"2485:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1181,"initialValue":{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2485:13:9"},"loopExpression":{"expression":{"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2518:3:9","subExpression":{"id":1186,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"2518:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1188,"nodeType":"ExpressionStatement","src":"2518:3:9"},"nodeType":"ForStatement","src":"2480:116:9"},{"expression":{"id":1200,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2612:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1173,"id":1201,"nodeType":"Return","src":"2605:19:9"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"2230:96:9","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":1203,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2340:20:9","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"proof","nameLocation":"2380:5:9","nodeType":"VariableDeclaration","scope":1203,"src":"2361:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2361:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1166,"nodeType":"ArrayTypeName","src":"2361:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"leaf","nameLocation":"2395:4:9","nodeType":"VariableDeclaration","scope":1203,"src":"2387:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2387:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2360:40:9"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1203,"src":"2424:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2424:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2423:9:9"},"scope":1606,"src":"2331:300:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1228,"nodeType":"Block","src":"3174:76:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1221,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"3209:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1222,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3216:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1223,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"3228:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1220,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"3191:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1225,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"3239:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1219,"id":1227,"nodeType":"Return","src":"3184:59:9"}]},"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"2637:350:9","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3001:16:9","nodeType":"FunctionDefinition","parameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"proof","nameLocation":"3044:5:9","nodeType":"VariableDeclaration","scope":1229,"src":"3027:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3027:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1206,"nodeType":"ArrayTypeName","src":"3027:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"proofFlags","nameLocation":"3073:10:9","nodeType":"VariableDeclaration","scope":1229,"src":"3059:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1208,"name":"bool","nodeType":"ElementaryTypeName","src":"3059:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1209,"nodeType":"ArrayTypeName","src":"3059:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"root","nameLocation":"3101:4:9","nodeType":"VariableDeclaration","scope":1229,"src":"3093:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"leaves","nameLocation":"3132:6:9","nodeType":"VariableDeclaration","scope":1229,"src":"3115:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3115:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1214,"nodeType":"ArrayTypeName","src":"3115:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3017:127:9"},"returnParameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"3168:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1217,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3167:6:9"},"scope":1606,"src":"2992:258:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1254,"nodeType":"Block","src":"3655:84:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1247,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3698:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1248,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"3705:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1249,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3717:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1246,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3672:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1251,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"3728:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3672:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1245,"id":1253,"nodeType":"Return","src":"3665:67:9"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"3256:200:9","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1255,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3470:24:9","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"proof","nameLocation":"3523:5:9","nodeType":"VariableDeclaration","scope":1255,"src":"3504:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3504:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1232,"nodeType":"ArrayTypeName","src":"3504:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"proofFlags","nameLocation":"3554:10:9","nodeType":"VariableDeclaration","scope":1255,"src":"3538:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1234,"name":"bool","nodeType":"ElementaryTypeName","src":"3538:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1235,"nodeType":"ArrayTypeName","src":"3538:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1238,"mutability":"mutable","name":"root","nameLocation":"3582:4:9","nodeType":"VariableDeclaration","scope":1255,"src":"3574:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"leaves","nameLocation":"3613:6:9","nodeType":"VariableDeclaration","scope":1255,"src":"3596:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1240,"nodeType":"ArrayTypeName","src":"3596:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3494:131:9"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1255,"src":"3649:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1243,"name":"bool","nodeType":"ElementaryTypeName","src":"3649:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3648:6:9"},"scope":1606,"src":"3461:278:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1412,"nodeType":"Block","src":"4693:2053:9","statements":[{"assignments":[1271],"declarations":[{"constant":false,"id":1271,"mutability":"mutable","name":"leavesLen","nameLocation":"5085:9:9","nodeType":"VariableDeclaration","scope":1412,"src":"5077:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5077:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1274,"initialValue":{"expression":{"id":1272,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5097:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:9","memberName":"length","nodeType":"MemberAccess","src":"5097:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5077:33:9"},{"assignments":[1276],"declarations":[{"constant":false,"id":1276,"mutability":"mutable","name":"proofLen","nameLocation":"5128:8:9","nodeType":"VariableDeclaration","scope":1412,"src":"5120:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1279,"initialValue":{"expression":{"id":1277,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"5139:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5145:6:9","memberName":"length","nodeType":"MemberAccess","src":"5139:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5120:31:9"},{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"totalHashes","nameLocation":"5169:11:9","nodeType":"VariableDeclaration","scope":1412,"src":"5161:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1284,"initialValue":{"expression":{"id":1282,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"5183:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5194:6:9","memberName":"length","nodeType":"MemberAccess","src":"5183:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5161:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1286,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5252:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1287,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5264:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5275:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5252:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1291,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5280:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5293:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5244:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5244:83:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"5244:83:9"},{"assignments":[1300],"declarations":[{"constant":false,"id":1300,"mutability":"mutable","name":"hashes","nameLocation":"5589:6:9","nodeType":"VariableDeclaration","scope":1412,"src":"5572:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5572:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1299,"nodeType":"ArrayTypeName","src":"5572:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1306,"initialValue":{"arguments":[{"id":1304,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5612:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5598:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5602:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1302,"nodeType":"ArrayTypeName","src":"5602:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5598:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5572:52:9"},{"assignments":[1308],"declarations":[{"constant":false,"id":1308,"mutability":"mutable","name":"leafPos","nameLocation":"5642:7:9","nodeType":"VariableDeclaration","scope":1412,"src":"5634:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5634:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1310,"initialValue":{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5634:19:9"},{"assignments":[1312],"declarations":[{"constant":false,"id":1312,"mutability":"mutable","name":"hashPos","nameLocation":"5671:7:9","nodeType":"VariableDeclaration","scope":1412,"src":"5663:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"5663:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1314,"initialValue":{"hexValue":"30","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5663:19:9"},{"assignments":[1316],"declarations":[{"constant":false,"id":1316,"mutability":"mutable","name":"proofPos","nameLocation":"5700:8:9","nodeType":"VariableDeclaration","scope":1412,"src":"5692:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1318,"initialValue":{"hexValue":"30","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5711:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5692:20:9"},{"body":{"id":1377,"nodeType":"Block","src":"6130:292:9","statements":[{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"a","nameLocation":"6152:1:9","nodeType":"VariableDeclaration","scope":1377,"src":"6144:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6144:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1343,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1331,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"6156:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1332,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6166:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6156:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1338,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6198:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1341,"indexExpression":{"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:9:9","subExpression":{"id":1339,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"6205:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6198:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6156:59:9","trueExpression":{"baseExpression":{"id":1334,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"6178:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1337,"indexExpression":{"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6185:9:9","subExpression":{"id":1335,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"6185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6178:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6144:71:9"},{"assignments":[1345],"declarations":[{"constant":false,"id":1345,"mutability":"mutable","name":"b","nameLocation":"6237:1:9","nodeType":"VariableDeclaration","scope":1377,"src":"6229:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6229:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1367,"initialValue":{"condition":{"baseExpression":{"id":1346,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"6241:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1348,"indexExpression":{"id":1347,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"6252:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6241:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1362,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6353:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1365,"indexExpression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6359:10:9","subExpression":{"id":1363,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"6359:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6353:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6241:129:9","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"6274:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1350,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6284:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6274:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1356,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6316:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1359,"indexExpression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6323:9:9","subExpression":{"id":1357,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"6323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6316:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6274:59:9","trueExpression":{"baseExpression":{"id":1352,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"6296:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1355,"indexExpression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6303:9:9","subExpression":{"id":1353,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"6303:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6296:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6273:61:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6229:141:9"},{"expression":{"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1368,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6384:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1370,"indexExpression":{"id":1369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"6391:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6384:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6406:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1373,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"6409:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1371,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"6396:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6396:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6384:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1376,"nodeType":"ExpressionStatement","src":"6384:27:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"6108:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1324,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"6112:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1378,"initializationExpression":{"assignments":[1320],"declarations":[{"constant":false,"id":1320,"mutability":"mutable","name":"i","nameLocation":"6101:1:9","nodeType":"VariableDeclaration","scope":1378,"src":"6093:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6093:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1322,"initialValue":{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6105:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6093:13:9"},"loopExpression":{"expression":{"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6125:3:9","subExpression":{"id":1326,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"6125:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1328,"nodeType":"ExpressionStatement","src":"6125:3:9"},"nodeType":"ForStatement","src":"6088:334:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"6436:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6436:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6638:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6650:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6638:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1409,"nodeType":"Block","src":"6700:40:9","statements":[{"expression":{"baseExpression":{"id":1405,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"6721:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1407,"indexExpression":{"hexValue":"30","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1269,"id":1408,"nodeType":"Return","src":"6714:15:9"}]},"id":1410,"nodeType":"IfStatement","src":"6634:106:9","trueBody":{"id":1404,"nodeType":"Block","src":"6653:41:9","statements":[{"expression":{"baseExpression":{"id":1400,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"6674:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1402,"indexExpression":{"hexValue":"30","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6674:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1269,"id":1403,"nodeType":"Return","src":"6667:16:9"}]}},"id":1411,"nodeType":"IfStatement","src":"6432:308:9","trueBody":{"id":1396,"nodeType":"Block","src":"6453:175:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"6475:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1384,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"6487:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6497:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6467:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1388,"nodeType":"ExpressionStatement","src":"6467:64:9"},{"id":1395,"nodeType":"UncheckedBlock","src":"6545:73:9","statements":[{"expression":{"baseExpression":{"id":1389,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6580:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1393,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"6587:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6587:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6580:23:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1269,"id":1394,"nodeType":"Return","src":"6573:30:9"}]}]}}]},"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"3745:768:9","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4527:17:9","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"proof","nameLocation":"4571:5:9","nodeType":"VariableDeclaration","scope":1413,"src":"4554:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1258,"nodeType":"ArrayTypeName","src":"4554:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"proofFlags","nameLocation":"4600:10:9","nodeType":"VariableDeclaration","scope":1413,"src":"4586:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1260,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1261,"nodeType":"ArrayTypeName","src":"4586:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"leaves","nameLocation":"4637:6:9","nodeType":"VariableDeclaration","scope":1413,"src":"4620:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4620:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1264,"nodeType":"ArrayTypeName","src":"4620:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4544:105:9"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"merkleRoot","nameLocation":"4681:10:9","nodeType":"VariableDeclaration","scope":1413,"src":"4673:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4673:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4672:20:9"},"scope":1606,"src":"4518:2228:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1570,"nodeType":"Block","src":"7146:2053:9","statements":[{"assignments":[1429],"declarations":[{"constant":false,"id":1429,"mutability":"mutable","name":"leavesLen","nameLocation":"7538:9:9","nodeType":"VariableDeclaration","scope":1570,"src":"7530:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"7530:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1432,"initialValue":{"expression":{"id":1430,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"7550:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7557:6:9","memberName":"length","nodeType":"MemberAccess","src":"7550:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7530:33:9"},{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"proofLen","nameLocation":"7581:8:9","nodeType":"VariableDeclaration","scope":1570,"src":"7573:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"7573:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1437,"initialValue":{"expression":{"id":1435,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"7592:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7598:6:9","memberName":"length","nodeType":"MemberAccess","src":"7592:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7573:31:9"},{"assignments":[1439],"declarations":[{"constant":false,"id":1439,"mutability":"mutable","name":"totalHashes","nameLocation":"7622:11:9","nodeType":"VariableDeclaration","scope":1570,"src":"7614:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1442,"initialValue":{"expression":{"id":1440,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"7636:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7647:6:9","memberName":"length","nodeType":"MemberAccess","src":"7636:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7614:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"7705:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1445,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"7717:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7728:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7705:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1449,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"7733:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7697:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:83:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"ExpressionStatement","src":"7697:83:9"},{"assignments":[1458],"declarations":[{"constant":false,"id":1458,"mutability":"mutable","name":"hashes","nameLocation":"8042:6:9","nodeType":"VariableDeclaration","scope":1570,"src":"8025:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8025:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1457,"nodeType":"ArrayTypeName","src":"8025:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1464,"initialValue":{"arguments":[{"id":1462,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"8065:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8051:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8055:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1460,"nodeType":"ArrayTypeName","src":"8055:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8051:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8025:52:9"},{"assignments":[1466],"declarations":[{"constant":false,"id":1466,"mutability":"mutable","name":"leafPos","nameLocation":"8095:7:9","nodeType":"VariableDeclaration","scope":1570,"src":"8087:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1468,"initialValue":{"hexValue":"30","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8105:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:19:9"},{"assignments":[1470],"declarations":[{"constant":false,"id":1470,"mutability":"mutable","name":"hashPos","nameLocation":"8124:7:9","nodeType":"VariableDeclaration","scope":1570,"src":"8116:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"8116:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1472,"initialValue":{"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8134:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8116:19:9"},{"assignments":[1474],"declarations":[{"constant":false,"id":1474,"mutability":"mutable","name":"proofPos","nameLocation":"8153:8:9","nodeType":"VariableDeclaration","scope":1570,"src":"8145:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1476,"initialValue":{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8164:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8145:20:9"},{"body":{"id":1535,"nodeType":"Block","src":"8583:292:9","statements":[{"assignments":[1488],"declarations":[{"constant":false,"id":1488,"mutability":"mutable","name":"a","nameLocation":"8605:1:9","nodeType":"VariableDeclaration","scope":1535,"src":"8597:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8597:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1501,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8609:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1490,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"8619:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1496,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8651:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1499,"indexExpression":{"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8658:9:9","subExpression":{"id":1497,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8658:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8651:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8609:59:9","trueExpression":{"baseExpression":{"id":1492,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"8631:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1495,"indexExpression":{"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8638:9:9","subExpression":{"id":1493,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8638:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8631:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8597:71:9"},{"assignments":[1503],"declarations":[{"constant":false,"id":1503,"mutability":"mutable","name":"b","nameLocation":"8690:1:9","nodeType":"VariableDeclaration","scope":1535,"src":"8682:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8682:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1525,"initialValue":{"condition":{"baseExpression":{"id":1504,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"8694:10:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1506,"indexExpression":{"id":1505,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8705:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8694:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1520,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"8806:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1523,"indexExpression":{"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8812:10:9","subExpression":{"id":1521,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"8812:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8806:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8694:129:9","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8727:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1508,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"8737:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8727:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1514,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8769:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1517,"indexExpression":{"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8776:9:9","subExpression":{"id":1515,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8776:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8769:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8727:59:9","trueExpression":{"baseExpression":{"id":1510,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"8749:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1513,"indexExpression":{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8756:9:9","subExpression":{"id":1511,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8749:17:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8726:61:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8682:141:9"},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1526,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8837:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1528,"indexExpression":{"id":1527,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8844:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8837:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1530,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"8859:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"8862:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1529,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"8849:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8837:27:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1534,"nodeType":"ExpressionStatement","src":"8837:27:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8561:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1482,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"8565:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8561:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1536,"initializationExpression":{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"i","nameLocation":"8554:1:9","nodeType":"VariableDeclaration","scope":1536,"src":"8546:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"8546:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1480,"initialValue":{"hexValue":"30","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8546:13:9"},"loopExpression":{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:3:9","subExpression":{"id":1484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8578:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"8578:3:9"},"nodeType":"ForStatement","src":"8541:334:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1537,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"8889:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"9091:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9103:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9091:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1567,"nodeType":"Block","src":"9153:40:9","statements":[{"expression":{"baseExpression":{"id":1563,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"9174:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1565,"indexExpression":{"hexValue":"30","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9180:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9174:8:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1427,"id":1566,"nodeType":"Return","src":"9167:15:9"}]},"id":1568,"nodeType":"IfStatement","src":"9087:106:9","trueBody":{"id":1562,"nodeType":"Block","src":"9106:41:9","statements":[{"expression":{"baseExpression":{"id":1558,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"9127:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1560,"indexExpression":{"hexValue":"30","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9134:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9127:9:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1427,"id":1561,"nodeType":"Return","src":"9120:16:9"}]}},"id":1569,"nodeType":"IfStatement","src":"8885:308:9","trueBody":{"id":1554,"nodeType":"Block","src":"8906:175:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"8928:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1542,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"8940:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8928:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8950:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":1540,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8920:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8920:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1546,"nodeType":"ExpressionStatement","src":"8920:64:9"},{"id":1553,"nodeType":"UncheckedBlock","src":"8998:73:9","statements":[{"expression":{"baseExpression":{"id":1547,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"9033:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1551,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1548,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"9040:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9040:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9033:23:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1427,"id":1552,"nodeType":"Return","src":"9026:30:9"}]}]}}]},"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"6752:202:9","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":1571,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6968:25:9","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"proof","nameLocation":"7022:5:9","nodeType":"VariableDeclaration","scope":1571,"src":"7003:24:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7003:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1416,"nodeType":"ArrayTypeName","src":"7003:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"proofFlags","nameLocation":"7053:10:9","nodeType":"VariableDeclaration","scope":1571,"src":"7037:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1418,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1419,"nodeType":"ArrayTypeName","src":"7037:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"leaves","nameLocation":"7090:6:9","nodeType":"VariableDeclaration","scope":1571,"src":"7073:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7073:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1422,"nodeType":"ArrayTypeName","src":"7073:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6993:109:9"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"merkleRoot","nameLocation":"7134:10:9","nodeType":"VariableDeclaration","scope":1571,"src":"7126:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7126:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7125:20:9"},"scope":1606,"src":"6959:2240:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"9277:75:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"9294:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1581,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"9298:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9294:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1588,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"9340:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1589,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"9343:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1587,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"9325:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9325:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9294:51:9","trueExpression":{"arguments":[{"id":1584,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"9317:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"9320:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1583,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"9302:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9302:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1579,"id":1592,"nodeType":"Return","src":"9287:58:9"}]},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9214:9:9","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"a","nameLocation":"9232:1:9","nodeType":"VariableDeclaration","scope":1594,"src":"9224:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9224:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"b","nameLocation":"9243:1:9","nodeType":"VariableDeclaration","scope":1594,"src":"9235:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9235:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9223:22:9"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"9268:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9268:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9267:9:9"},"scope":1606,"src":"9205:147:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1604,"nodeType":"Block","src":"9441:178:9","statements":[{"AST":{"nodeType":"YulBlock","src":"9503:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9524:4:9","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9530:1:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9517:6:9"},"nodeType":"YulFunctionCall","src":"9517:15:9"},"nodeType":"YulExpressionStatement","src":"9517:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9552:4:9","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9558:1:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9545:6:9"},"nodeType":"YulFunctionCall","src":"9545:15:9"},"nodeType":"YulExpressionStatement","src":"9545:15:9"},{"nodeType":"YulAssignment","src":"9573:30:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9592:4:9","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9598:4:9","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9582:9:9"},"nodeType":"YulFunctionCall","src":"9582:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9573:5:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1596,"isOffset":false,"isSlot":false,"src":"9530:1:9","valueSize":1},{"declaration":1598,"isOffset":false,"isSlot":false,"src":"9558:1:9","valueSize":1},{"declaration":1601,"isOffset":false,"isSlot":false,"src":"9573:5:9","valueSize":1}],"id":1603,"nodeType":"InlineAssembly","src":"9494:119:9"}]},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9367:14:9","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"a","nameLocation":"9390:1:9","nodeType":"VariableDeclaration","scope":1605,"src":"9382:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9382:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"b","nameLocation":"9401:1:9","nodeType":"VariableDeclaration","scope":1605,"src":"9393:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9393:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9381:22:9"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"value","nameLocation":"9434:5:9","nodeType":"VariableDeclaration","scope":1605,"src":"9426:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9426:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9425:15:9"},"scope":1606,"src":"9358:261:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1607,"src":"802:8819:9","usedErrors":[],"usedEvents":[]}],"src":"118:9504:9"},"id":9},"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[1918]},"id":1919,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1608,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"285:196:10","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1918,"linearizedBaseContracts":[1918],"name":"SafeMath","nameLocation":"490:8:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1640,"nodeType":"Block","src":"717:140:10","statements":[{"id":1639,"nodeType":"UncheckedBlock","src":"727:124:10","statements":[{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"c","nameLocation":"759:1:10","nodeType":"VariableDeclaration","scope":1639,"src":"751:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1626,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"763:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1624,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"767:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"786:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1628,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"790:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1634,"nodeType":"IfStatement","src":"782:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1620,"id":1633,"nodeType":"Return","src":"793:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1636,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"838:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1620,"id":1638,"nodeType":"Return","src":"824:16:10"}]}]},"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"505:131:10","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:10","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"a","nameLocation":"665:1:10","nodeType":"VariableDeclaration","scope":1641,"src":"657:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"b","nameLocation":"676:1:10","nodeType":"VariableDeclaration","scope":1641,"src":"668:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:10"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1641,"src":"702:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1616,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1641,"src":"708:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:10"},"scope":1918,"src":"641:216:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"1078:113:10","statements":[{"id":1667,"nodeType":"UncheckedBlock","src":"1088:97:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1116:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1120:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1660,"nodeType":"IfStatement","src":"1112:28:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1652,"id":1659,"nodeType":"Return","src":"1123:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1168:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1172:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1652,"id":1666,"nodeType":"Return","src":"1154:20:10"}]}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"863:134:10","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:10","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"a","nameLocation":"1026:1:10","nodeType":"VariableDeclaration","scope":1669,"src":"1018:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"b","nameLocation":"1037:1:10","nodeType":"VariableDeclaration","scope":1669,"src":"1029:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:10"},"returnParameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"1063:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1648,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"1069:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:10"},"scope":1918,"src":"1002:189:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"1415:417:10","statements":[{"id":1709,"nodeType":"UncheckedBlock","src":"1425:401:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1683:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1688,"nodeType":"IfStatement","src":"1679:28:10","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1680,"id":1687,"nodeType":"Return","src":"1691:16:10"}},{"assignments":[1690],"declarations":[{"constant":false,"id":1690,"mutability":"mutable","name":"c","nameLocation":"1729:1:10","nodeType":"VariableDeclaration","scope":1709,"src":"1721:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1694,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1733:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1692,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1737:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1695,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1756:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1760:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1765:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1704,"nodeType":"IfStatement","src":"1752:33:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1680,"id":1703,"nodeType":"Return","src":"1768:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1706,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1813:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1680,"id":1708,"nodeType":"Return","src":"1799:16:10"}]}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"1197:137:10","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:10","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"a","nameLocation":"1363:1:10","nodeType":"VariableDeclaration","scope":1711,"src":"1355:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"b","nameLocation":"1374:1:10","nodeType":"VariableDeclaration","scope":1711,"src":"1366:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:10"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"1400:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1676,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"1406:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:10"},"scope":1918,"src":"1339:493:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1738,"nodeType":"Block","src":"2057:114:10","statements":[{"id":1737,"nodeType":"UncheckedBlock","src":"2067:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2095:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1730,"nodeType":"IfStatement","src":"2091:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1722,"id":1729,"nodeType":"Return","src":"2103:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2148:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1733,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2152:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1722,"id":1736,"nodeType":"Return","src":"2134:20:10"}]}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"1838:138:10","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1739,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:10","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"a","nameLocation":"2005:1:10","nodeType":"VariableDeclaration","scope":1739,"src":"1997:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"b","nameLocation":"2016:1:10","nodeType":"VariableDeclaration","scope":1739,"src":"2008:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:10"},"returnParameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1739,"src":"2042:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1739,"src":"2048:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:10"},"scope":1918,"src":"1981:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1766,"nodeType":"Block","src":"2406:114:10","statements":[{"id":1765,"nodeType":"UncheckedBlock","src":"2416:98:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1751,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2444:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"2440:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1750,"id":1757,"nodeType":"Return","src":"2452:17:10"}},{"expression":{"components":[{"hexValue":"74727565","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2497:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2501:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1750,"id":1764,"nodeType":"Return","src":"2483:20:10"}]}]},"documentation":{"id":1740,"nodeType":"StructuredDocumentation","src":"2177:148:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:10","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"a","nameLocation":"2354:1:10","nodeType":"VariableDeclaration","scope":1767,"src":"2346:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"b","nameLocation":"2365:1:10","nodeType":"VariableDeclaration","scope":1767,"src":"2357:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:10"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"2391:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1746,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"2397:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:10"},"scope":1918,"src":"2330:190:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1781,"nodeType":"Block","src":"2822:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1777,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2839:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1778,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"2843:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1776,"id":1780,"nodeType":"Return","src":"2832:12:10"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"2526:224:10","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1782,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:10","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"a","nameLocation":"2776:1:10","nodeType":"VariableDeclaration","scope":1782,"src":"2768:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"b","nameLocation":"2787:1:10","nodeType":"VariableDeclaration","scope":1782,"src":"2779:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:10"},"returnParameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1782,"src":"2813:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:10"},"scope":1918,"src":"2755:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1796,"nodeType":"Block","src":"3189:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"3206:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"3210:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1791,"id":1795,"nodeType":"Return","src":"3199:12:10"}]},"documentation":{"id":1783,"nodeType":"StructuredDocumentation","src":"2857:260:10","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:10","nodeType":"FunctionDefinition","parameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"a","nameLocation":"3143:1:10","nodeType":"VariableDeclaration","scope":1797,"src":"3135:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"b","nameLocation":"3154:1:10","nodeType":"VariableDeclaration","scope":1797,"src":"3146:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:10"},"returnParameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"3180:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:10"},"scope":1918,"src":"3122:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1811,"nodeType":"Block","src":"3532:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"3549:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"3553:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1806,"id":1810,"nodeType":"Return","src":"3542:12:10"}]},"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"3224:236:10","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:10","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"a","nameLocation":"3486:1:10","nodeType":"VariableDeclaration","scope":1812,"src":"3478:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"b","nameLocation":"3497:1:10","nodeType":"VariableDeclaration","scope":1812,"src":"3489:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:10"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1812,"src":"3523:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:10"},"scope":1918,"src":"3465:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1826,"nodeType":"Block","src":"3917:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"3934:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1823,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"3938:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1821,"id":1825,"nodeType":"Return","src":"3927:12:10"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"3567:278:10","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:10","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"a","nameLocation":"3871:1:10","nodeType":"VariableDeclaration","scope":1827,"src":"3863:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"b","nameLocation":"3882:1:10","nodeType":"VariableDeclaration","scope":1827,"src":"3874:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:10"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1827,"src":"3908:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:10"},"scope":1918,"src":"3850:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1841,"nodeType":"Block","src":"4466:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"4483:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"4487:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1836,"id":1840,"nodeType":"Return","src":"4476:12:10"}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"3952:442:10","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1842,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:10","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"a","nameLocation":"4420:1:10","nodeType":"VariableDeclaration","scope":1842,"src":"4412:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"b","nameLocation":"4431:1:10","nodeType":"VariableDeclaration","scope":1842,"src":"4423:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:10"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1842,"src":"4457:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:10"},"scope":1918,"src":"4399:96:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1866,"nodeType":"Block","src":"5054:106:10","statements":[{"id":1865,"nodeType":"UncheckedBlock","src":"5064:90:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"5096:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5101:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1858,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"5104:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1854,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"5088:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"5138:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1862,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"5142:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1853,"id":1864,"nodeType":"Return","src":"5131:12:10"}]}]},"documentation":{"id":1843,"nodeType":"StructuredDocumentation","src":"4501:453:10","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1867,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:10","nodeType":"FunctionDefinition","parameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"a","nameLocation":"4980:1:10","nodeType":"VariableDeclaration","scope":1867,"src":"4972:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"b","nameLocation":"4991:1:10","nodeType":"VariableDeclaration","scope":1867,"src":"4983:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:10","nodeType":"VariableDeclaration","scope":1867,"src":"4994:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1848,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:10"},"returnParameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1867,"src":"5045:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:10"},"scope":1918,"src":"4959:201:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1891,"nodeType":"Block","src":"5739:105:10","statements":[{"id":1890,"nodeType":"UncheckedBlock","src":"5749:89:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"5781:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1883,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5788:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5773:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"ExpressionStatement","src":"5773:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"5822:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"5826:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1878,"id":1889,"nodeType":"Return","src":"5815:12:10"}]}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"5166:473:10","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1892,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:10","nodeType":"FunctionDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"a","nameLocation":"5665:1:10","nodeType":"VariableDeclaration","scope":1892,"src":"5657:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"b","nameLocation":"5676:1:10","nodeType":"VariableDeclaration","scope":1892,"src":"5668:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:10","nodeType":"VariableDeclaration","scope":1892,"src":"5679:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1873,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:10"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1892,"src":"5730:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:10"},"scope":1918,"src":"5644:200:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1916,"nodeType":"Block","src":"6585:105:10","statements":[{"id":1915,"nodeType":"UncheckedBlock","src":"6595:89:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"6627:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1908,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"6634:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"ExpressionStatement","src":"6619:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6668:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1912,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"6672:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1903,"id":1914,"nodeType":"Return","src":"6661:12:10"}]}]},"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"5850:635:10","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1917,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:10","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"a","nameLocation":"6511:1:10","nodeType":"VariableDeclaration","scope":1917,"src":"6503:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"b","nameLocation":"6522:1:10","nodeType":"VariableDeclaration","scope":1917,"src":"6514:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1896,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:10","nodeType":"VariableDeclaration","scope":1917,"src":"6525:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1898,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:10"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1917,"src":"6576:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:10"},"scope":1918,"src":"6490:200:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1919,"src":"482:6210:10","usedErrors":[],"usedEvents":[]}],"src":"107:6586:10"},"id":10},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2531]},"id":2532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1920,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"230:1098:11","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2531,"linearizedBaseContracts":[2531],"name":"EnumerableSet","nameLocation":"1337:13:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":1929,"members":[{"constant":false,"id":1924,"mutability":"mutable","name":"_values","nameLocation":"1861:7:11","nodeType":"VariableDeclaration","scope":1929,"src":"1851:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1923,"nodeType":"ArrayTypeName","src":"1851:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:11","nodeType":"VariableDeclaration","scope":1929,"src":"2001:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1927,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:11","nodeType":"StructDefinition","scope":2531,"src":"1797:247:11","visibility":"public"},{"body":{"id":1970,"nodeType":"Block","src":"2283:335:11","statements":[{"condition":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:11","subExpression":{"arguments":[{"id":1941,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2308:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":1942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2313:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1940,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"2298:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1968,"nodeType":"Block","src":"2575:37:11","statements":[{"expression":{"hexValue":"66616c7365","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1939,"id":1967,"nodeType":"Return","src":"2589:12:11"}]},"id":1969,"nodeType":"IfStatement","src":"2293:319:11","trueBody":{"id":1965,"nodeType":"Block","src":"2321:248:11","statements":[{"expression":{"arguments":[{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2352:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1945,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2335:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"2335:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:11","memberName":"push","nodeType":"MemberAccess","src":"2335:16:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"2335:23:11"},{"expression":{"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1953,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2493:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1928,"src":"2493:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1957,"indexExpression":{"id":1955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2506:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1958,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"2515:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"2515:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:11","memberName":"length","nodeType":"MemberAccess","src":"2515:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1962,"nodeType":"ExpressionStatement","src":"2493:40:11"},{"expression":{"hexValue":"74727565","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1939,"id":1964,"nodeType":"Return","src":"2547:11:11"}]}}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"2050:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1971,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:11","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"set","nameLocation":"2240:3:11","nodeType":"VariableDeclaration","scope":1971,"src":"2228:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1932,"nodeType":"UserDefinedTypeName","pathNode":{"id":1931,"name":"Set","nameLocations":["2228:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"2228:3:11"},"referencedDeclaration":1929,"src":"2228:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"value","nameLocation":"2253:5:11","nodeType":"VariableDeclaration","scope":1971,"src":"2245:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:11"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1971,"src":"2277:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1937,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:11"},"scope":2531,"src":"2214:404:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2054,"nodeType":"Block","src":"2858:1316:11","statements":[{"assignments":[1983],"declarations":[{"constant":false,"id":1983,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:11","nodeType":"VariableDeclaration","scope":2054,"src":"2968:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1988,"initialValue":{"baseExpression":{"expression":{"id":1984,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"2989:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":1985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1928,"src":"2989:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1987,"indexExpression":{"id":1986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3002:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"3023:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2052,"nodeType":"Block","src":"4131:37:11","statements":[{"expression":{"hexValue":"66616c7365","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1981,"id":2051,"nodeType":"Return","src":"4145:12:11"}]},"id":2053,"nodeType":"IfStatement","src":"3019:1149:11","trueBody":{"id":2049,"nodeType":"Block","src":"3040:1085:11","statements":[{"assignments":[1993],"declarations":[{"constant":false,"id":1993,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:11","nodeType":"VariableDeclaration","scope":2049,"src":"3392:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1997,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"3416:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:11"},{"assignments":[1999],"declarations":[{"constant":false,"id":1999,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:11","nodeType":"VariableDeclaration","scope":2049,"src":"3444:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1998,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2005,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2000,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3464:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"3464:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:11","memberName":"length","nodeType":"MemberAccess","src":"3464:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3505:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2007,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3518:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2033,"nodeType":"IfStatement","src":"3501:398:11","trueBody":{"id":2032,"nodeType":"Block","src":"3533:366:11","statements":[{"assignments":[2010],"declarations":[{"constant":false,"id":2010,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:11","nodeType":"VariableDeclaration","scope":2032,"src":"3551:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2015,"initialValue":{"baseExpression":{"expression":{"id":2011,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3571:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"3571:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2014,"indexExpression":{"id":2013,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3583:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:11"},{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2016,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3693:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"3693:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2020,"indexExpression":{"id":2018,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3705:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2021,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3722:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2023,"nodeType":"ExpressionStatement","src":"3693:38:11"},{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2024,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3805:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1928,"src":"3805:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2028,"indexExpression":{"id":2026,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3818:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2029,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"3831:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2031,"nodeType":"ExpressionStatement","src":"3805:36:11"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2034,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3977:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"3977:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:11","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:11","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2040,"nodeType":"ExpressionStatement","src":"3977:17:11"},{"expression":{"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:11","subExpression":{"baseExpression":{"expression":{"id":2041,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"4069:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1928,"src":"4069:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2044,"indexExpression":{"id":2043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"4082:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"ExpressionStatement","src":"4062:26:11"},{"expression":{"hexValue":"74727565","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1981,"id":2048,"nodeType":"Return","src":"4103:11:11"}]}}]},"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"2624:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:11","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"set","nameLocation":"2815:3:11","nodeType":"VariableDeclaration","scope":2055,"src":"2803:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":1974,"nodeType":"UserDefinedTypeName","pathNode":{"id":1973,"name":"Set","nameLocations":["2803:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"2803:3:11"},"referencedDeclaration":1929,"src":"2803:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"value","nameLocation":"2828:5:11","nodeType":"VariableDeclaration","scope":2055,"src":"2820:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:11"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"2852:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1979,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:11"},"scope":2531,"src":"2786:1388:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2073,"nodeType":"Block","src":"4334:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2066,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"4351:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:11","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1928,"src":"4351:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2069,"indexExpression":{"id":2068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"4364:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2065,"id":2072,"nodeType":"Return","src":"4344:31:11"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"4180:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2074,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:11","nodeType":"FunctionDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"set","nameLocation":"4286:3:11","nodeType":"VariableDeclaration","scope":2074,"src":"4274:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2058,"nodeType":"UserDefinedTypeName","pathNode":{"id":2057,"name":"Set","nameLocations":["4274:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"4274:3:11"},"referencedDeclaration":1929,"src":"4274:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2061,"mutability":"mutable","name":"value","nameLocation":"4299:5:11","nodeType":"VariableDeclaration","scope":2074,"src":"4291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:11"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2074,"src":"4328:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2063,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:11"},"scope":2531,"src":"4255:127:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2087,"nodeType":"Block","src":"4528:42:11","statements":[{"expression":{"expression":{"expression":{"id":2083,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4545:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"4545:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:11","memberName":"length","nodeType":"MemberAccess","src":"4545:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2082,"id":2086,"nodeType":"Return","src":"4538:25:11"}]},"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"4388:70:11","text":" @dev Returns the number of values on the set. O(1)."},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:11","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"set","nameLocation":"4492:3:11","nodeType":"VariableDeclaration","scope":2088,"src":"4480:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2077,"nodeType":"UserDefinedTypeName","pathNode":{"id":2076,"name":"Set","nameLocations":["4480:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"4480:3:11"},"referencedDeclaration":1929,"src":"4480:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:11"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"4519:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:11"},"scope":2531,"src":"4463:107:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2104,"nodeType":"Block","src":"4988:42:11","statements":[{"expression":{"baseExpression":{"expression":{"id":2099,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"5005:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"5005:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2102,"indexExpression":{"id":2101,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"5017:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2098,"id":2103,"nodeType":"Return","src":"4998:25:11"}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"4576:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:11","nodeType":"FunctionDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"set","nameLocation":"4937:3:11","nodeType":"VariableDeclaration","scope":2105,"src":"4925:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2091,"nodeType":"UserDefinedTypeName","pathNode":{"id":2090,"name":"Set","nameLocations":["4925:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"4925:3:11"},"referencedDeclaration":1929,"src":"4925:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"index","nameLocation":"4950:5:11","nodeType":"VariableDeclaration","scope":2105,"src":"4942:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:11"},"returnParameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"4979:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:11"},"scope":2531,"src":"4912:118:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2118,"nodeType":"Block","src":"5644:35:11","statements":[{"expression":{"expression":{"id":2115,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5661:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:11","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1924,"src":"5661:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2114,"id":2117,"nodeType":"Return","src":"5654:18:11"}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"5036:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2119,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:11","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"set","nameLocation":"5599:3:11","nodeType":"VariableDeclaration","scope":2119,"src":"5587:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2108,"nodeType":"UserDefinedTypeName","pathNode":{"id":2107,"name":"Set","nameLocations":["5587:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"5587:3:11"},"referencedDeclaration":1929,"src":"5587:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:11"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2119,"src":"5626:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2112,"nodeType":"ArrayTypeName","src":"5626:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:11"},"scope":2531,"src":"5570:109:11","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":2123,"members":[{"constant":false,"id":2122,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:11","nodeType":"VariableDeclaration","scope":2123,"src":"5732:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2121,"nodeType":"UserDefinedTypeName","pathNode":{"id":2120,"name":"Set","nameLocations":["5732:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"5732:3:11"},"referencedDeclaration":1929,"src":"5732:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:11","nodeType":"StructDefinition","scope":2531,"src":"5704:45:11","visibility":"public"},{"body":{"id":2140,"nodeType":"Block","src":"5995:47:11","statements":[{"expression":{"arguments":[{"expression":{"id":2135,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"6017:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"6017:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"6029:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2134,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"6012:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2133,"id":2139,"nodeType":"Return","src":"6005:30:11"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"5755:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2141,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:11","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"set","nameLocation":"5951:3:11","nodeType":"VariableDeclaration","scope":2141,"src":"5932:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2126,"nodeType":"UserDefinedTypeName","pathNode":{"id":2125,"name":"Bytes32Set","nameLocations":["5932:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2123,"src":"5932:10:11"},"referencedDeclaration":2123,"src":"5932:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"value","nameLocation":"5964:5:11","nodeType":"VariableDeclaration","scope":2141,"src":"5956:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:11"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2141,"src":"5989:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2131,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:11"},"scope":2531,"src":"5919:123:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2158,"nodeType":"Block","src":"6289:50:11","statements":[{"expression":{"arguments":[{"expression":{"id":2153,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"6314:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"6314:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"6326:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2152,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"6306:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2151,"id":2157,"nodeType":"Return","src":"6299:33:11"}]},"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"6048:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:11","nodeType":"FunctionDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"set","nameLocation":"6245:3:11","nodeType":"VariableDeclaration","scope":2159,"src":"6226:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2144,"nodeType":"UserDefinedTypeName","pathNode":{"id":2143,"name":"Bytes32Set","nameLocations":["6226:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2123,"src":"6226:10:11"},"referencedDeclaration":2123,"src":"6226:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2147,"mutability":"mutable","name":"value","nameLocation":"6258:5:11","nodeType":"VariableDeclaration","scope":2159,"src":"6250:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:11"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2159,"src":"6283:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2149,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:11"},"scope":2531,"src":"6210:129:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"6506:52:11","statements":[{"expression":{"arguments":[{"expression":{"id":2171,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"6533:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"6533:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6545:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2170,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"6523:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2169,"id":2175,"nodeType":"Return","src":"6516:35:11"}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"6345:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:11","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"set","nameLocation":"6457:3:11","nodeType":"VariableDeclaration","scope":2177,"src":"6438:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2162,"nodeType":"UserDefinedTypeName","pathNode":{"id":2161,"name":"Bytes32Set","nameLocations":["6438:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2123,"src":"6438:10:11"},"referencedDeclaration":2123,"src":"6438:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"value","nameLocation":"6470:5:11","nodeType":"VariableDeclaration","scope":2177,"src":"6462:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:11"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2177,"src":"6500:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2167,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:11"},"scope":2531,"src":"6420:138:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"6711:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2187,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"6736:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"6736:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2186,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"6728:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2185,"id":2190,"nodeType":"Return","src":"6721:26:11"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"6564:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:11","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"set","nameLocation":"6674:3:11","nodeType":"VariableDeclaration","scope":2192,"src":"6655:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2180,"nodeType":"UserDefinedTypeName","pathNode":{"id":2179,"name":"Bytes32Set","nameLocations":["6655:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2123,"src":"6655:10:11"},"referencedDeclaration":2123,"src":"6655:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:11"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"6702:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:11"},"scope":2531,"src":"6639:115:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2209,"nodeType":"Block","src":"7179:46:11","statements":[{"expression":{"arguments":[{"expression":{"id":2204,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"7200:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"7200:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2206,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"7212:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2203,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"7196:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2202,"id":2208,"nodeType":"Return","src":"7189:29:11"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"6760:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:11","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"set","nameLocation":"7127:3:11","nodeType":"VariableDeclaration","scope":2210,"src":"7108:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2195,"nodeType":"UserDefinedTypeName","pathNode":{"id":2194,"name":"Bytes32Set","nameLocations":["7108:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2123,"src":"7108:10:11"},"referencedDeclaration":2123,"src":"7108:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"index","nameLocation":"7140:5:11","nodeType":"VariableDeclaration","scope":2210,"src":"7132:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:11"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"7170:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:11"},"scope":2531,"src":"7096:129:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"7846:219:11","statements":[{"assignments":[2224],"declarations":[{"constant":false,"id":2224,"mutability":"mutable","name":"store","nameLocation":"7873:5:11","nodeType":"VariableDeclaration","scope":2239,"src":"7856:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2223,"nodeType":"ArrayTypeName","src":"7856:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2229,"initialValue":{"arguments":[{"expression":{"id":2226,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"7889:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2122,"src":"7889:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2225,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7881:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:11"},{"assignments":[2234],"declarations":[{"constant":false,"id":2234,"mutability":"mutable","name":"result","nameLocation":"7927:6:11","nodeType":"VariableDeclaration","scope":2239,"src":"7910:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2233,"nodeType":"ArrayTypeName","src":"7910:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2235,"nodeType":"VariableDeclarationStatement","src":"7910:23:11"},{"AST":{"nodeType":"YulBlock","src":"7996:39:11","statements":[{"nodeType":"YulAssignment","src":"8010:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2234,"isOffset":false,"isSlot":false,"src":"8010:6:11","valueSize":1},{"declaration":2224,"isOffset":false,"isSlot":false,"src":"8020:5:11","valueSize":1}],"id":2236,"nodeType":"InlineAssembly","src":"7987:48:11"},{"expression":{"id":2237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"8052:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2219,"id":2238,"nodeType":"Return","src":"8045:13:11"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"7231:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:11","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"set","nameLocation":"7800:3:11","nodeType":"VariableDeclaration","scope":2240,"src":"7781:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2213,"nodeType":"UserDefinedTypeName","pathNode":{"id":2212,"name":"Bytes32Set","nameLocations":["7781:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2123,"src":"7781:10:11"},"referencedDeclaration":2123,"src":"7781:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2123_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:11"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"7828:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2217,"nodeType":"ArrayTypeName","src":"7828:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:11"},"scope":2531,"src":"7765:300:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":2244,"members":[{"constant":false,"id":2243,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:11","nodeType":"VariableDeclaration","scope":2244,"src":"8118:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2242,"nodeType":"UserDefinedTypeName","pathNode":{"id":2241,"name":"Set","nameLocations":["8118:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"8118:3:11"},"referencedDeclaration":1929,"src":"8118:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:11","nodeType":"StructDefinition","scope":2531,"src":"8090:45:11","visibility":"public"},{"body":{"id":2270,"nodeType":"Block","src":"8381:74:11","statements":[{"expression":{"arguments":[{"expression":{"id":2256,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"8403:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2243,"src":"8403:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"8439:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2262,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:11","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:11","typeDescriptions":{}}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:11","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2255,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"8398:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2254,"id":2269,"nodeType":"Return","src":"8391:57:11"}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"8141:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2271,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:11","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"set","nameLocation":"8337:3:11","nodeType":"VariableDeclaration","scope":2271,"src":"8318:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2247,"nodeType":"UserDefinedTypeName","pathNode":{"id":2246,"name":"AddressSet","nameLocations":["8318:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"8318:10:11"},"referencedDeclaration":2244,"src":"8318:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"value","nameLocation":"8350:5:11","nodeType":"VariableDeclaration","scope":2271,"src":"8342:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:11"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2271,"src":"8375:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2252,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:11"},"scope":2531,"src":"8305:150:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2297,"nodeType":"Block","src":"8702:77:11","statements":[{"expression":{"arguments":[{"expression":{"id":2283,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"8727:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2243,"src":"8727:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"8763:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2289,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:11","typeDescriptions":{}}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:11","typeDescriptions":{}}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:11","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2282,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"8719:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2281,"id":2296,"nodeType":"Return","src":"8712:60:11"}]},"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"8461:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2298,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:11","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"set","nameLocation":"8658:3:11","nodeType":"VariableDeclaration","scope":2298,"src":"8639:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2274,"nodeType":"UserDefinedTypeName","pathNode":{"id":2273,"name":"AddressSet","nameLocations":["8639:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"8639:10:11"},"referencedDeclaration":2244,"src":"8639:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"value","nameLocation":"8671:5:11","nodeType":"VariableDeclaration","scope":2298,"src":"8663:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:11"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2298,"src":"8696:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2279,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:11"},"scope":2531,"src":"8623:156:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2324,"nodeType":"Block","src":"8946:79:11","statements":[{"expression":{"arguments":[{"expression":{"id":2310,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"8973:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2243,"src":"8973:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"9009:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2316,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:11","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:11","typeDescriptions":{}}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:11","typeDescriptions":{}}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2309,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"8963:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2308,"id":2323,"nodeType":"Return","src":"8956:62:11"}]},"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"8785:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2325,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:11","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"set","nameLocation":"8897:3:11","nodeType":"VariableDeclaration","scope":2325,"src":"8878:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2301,"nodeType":"UserDefinedTypeName","pathNode":{"id":2300,"name":"AddressSet","nameLocations":["8878:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"8878:10:11"},"referencedDeclaration":2244,"src":"8878:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"value","nameLocation":"8910:5:11","nodeType":"VariableDeclaration","scope":2325,"src":"8902:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:11"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2325,"src":"8940:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2306,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:11"},"scope":2531,"src":"8860:165:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"9178:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2335,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"9203:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2243,"src":"9203:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2334,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"9195:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2333,"id":2338,"nodeType":"Return","src":"9188:26:11"}]},"documentation":{"id":2326,"nodeType":"StructuredDocumentation","src":"9031:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2340,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:11","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"set","nameLocation":"9141:3:11","nodeType":"VariableDeclaration","scope":2340,"src":"9122:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2328,"nodeType":"UserDefinedTypeName","pathNode":{"id":2327,"name":"AddressSet","nameLocations":["9122:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"9122:10:11"},"referencedDeclaration":2244,"src":"9122:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:11"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2340,"src":"9169:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:11"},"scope":2531,"src":"9106:115:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"9646:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2358,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"9691:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2243,"src":"9691:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2360,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"9703:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2357,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"9687:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:11","typeDescriptions":{}}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2353,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:11","typeDescriptions":{}}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:11","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2350,"id":2365,"nodeType":"Return","src":"9656:56:11"}]},"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"9227:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:11","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"set","nameLocation":"9594:3:11","nodeType":"VariableDeclaration","scope":2367,"src":"9575:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2343,"nodeType":"UserDefinedTypeName","pathNode":{"id":2342,"name":"AddressSet","nameLocations":["9575:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"9575:10:11"},"referencedDeclaration":2244,"src":"9575:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"index","nameLocation":"9607:5:11","nodeType":"VariableDeclaration","scope":2367,"src":"9599:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:11"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"9637:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:11"},"scope":2531,"src":"9563:156:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"10340:219:11","statements":[{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"store","nameLocation":"10367:5:11","nodeType":"VariableDeclaration","scope":2396,"src":"10350:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2380,"nodeType":"ArrayTypeName","src":"10350:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2386,"initialValue":{"arguments":[{"expression":{"id":2383,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"10383:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2243,"src":"10383:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2382,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"10375:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:11"},{"assignments":[2391],"declarations":[{"constant":false,"id":2391,"mutability":"mutable","name":"result","nameLocation":"10421:6:11","nodeType":"VariableDeclaration","scope":2396,"src":"10404:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2390,"nodeType":"ArrayTypeName","src":"10404:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2392,"nodeType":"VariableDeclarationStatement","src":"10404:23:11"},{"AST":{"nodeType":"YulBlock","src":"10490:39:11","statements":[{"nodeType":"YulAssignment","src":"10504:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2391,"isOffset":false,"isSlot":false,"src":"10504:6:11","valueSize":1},{"declaration":2381,"isOffset":false,"isSlot":false,"src":"10514:5:11","valueSize":1}],"id":2393,"nodeType":"InlineAssembly","src":"10481:48:11"},{"expression":{"id":2394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"10546:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2376,"id":2395,"nodeType":"Return","src":"10539:13:11"}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"9725:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:11","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"set","nameLocation":"10294:3:11","nodeType":"VariableDeclaration","scope":2397,"src":"10275:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2370,"nodeType":"UserDefinedTypeName","pathNode":{"id":2369,"name":"AddressSet","nameLocations":["10275:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"10275:10:11"},"referencedDeclaration":2244,"src":"10275:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:11"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2397,"src":"10322:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2374,"nodeType":"ArrayTypeName","src":"10322:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:11"},"scope":2531,"src":"10259:300:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2401,"members":[{"constant":false,"id":2400,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:11","nodeType":"VariableDeclaration","scope":2401,"src":"10606:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2399,"nodeType":"UserDefinedTypeName","pathNode":{"id":2398,"name":"Set","nameLocations":["10606:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":1929,"src":"10606:3:11"},"referencedDeclaration":1929,"src":"10606:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:11","nodeType":"StructDefinition","scope":2531,"src":"10581:42:11","visibility":"public"},{"body":{"id":2421,"nodeType":"Block","src":"10866:56:11","statements":[{"expression":{"arguments":[{"expression":{"id":2413,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"10888:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"10888:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"10908:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2415,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:11","typeDescriptions":{}}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2412,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"10883:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2411,"id":2420,"nodeType":"Return","src":"10876:39:11"}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"10629:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:11","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"set","nameLocation":"10822:3:11","nodeType":"VariableDeclaration","scope":2422,"src":"10806:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2404,"nodeType":"UserDefinedTypeName","pathNode":{"id":2403,"name":"UintSet","nameLocations":["10806:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"10806:7:11"},"referencedDeclaration":2401,"src":"10806:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"value","nameLocation":"10835:5:11","nodeType":"VariableDeclaration","scope":2422,"src":"10827:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:11"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"10860:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2409,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:11"},"scope":2531,"src":"10793:129:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2442,"nodeType":"Block","src":"11166:59:11","statements":[{"expression":{"arguments":[{"expression":{"id":2434,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"11191:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"11191:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"11211:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:11","typeDescriptions":{}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2433,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"11183:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2432,"id":2441,"nodeType":"Return","src":"11176:42:11"}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"10928:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:11","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2426,"mutability":"mutable","name":"set","nameLocation":"11122:3:11","nodeType":"VariableDeclaration","scope":2443,"src":"11106:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2425,"nodeType":"UserDefinedTypeName","pathNode":{"id":2424,"name":"UintSet","nameLocations":["11106:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"11106:7:11"},"referencedDeclaration":2401,"src":"11106:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"value","nameLocation":"11135:5:11","nodeType":"VariableDeclaration","scope":2443,"src":"11127:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:11"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2443,"src":"11160:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:11"},"scope":2531,"src":"11090:135:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"11389:61:11","statements":[{"expression":{"arguments":[{"expression":{"id":2455,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"11416:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"11416:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"11436:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:11","typeDescriptions":{}}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2454,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"11406:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2453,"id":2462,"nodeType":"Return","src":"11399:44:11"}]},"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"11231:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:11","nodeType":"FunctionDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"set","nameLocation":"11340:3:11","nodeType":"VariableDeclaration","scope":2464,"src":"11324:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2446,"nodeType":"UserDefinedTypeName","pathNode":{"id":2445,"name":"UintSet","nameLocations":["11324:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"11324:7:11"},"referencedDeclaration":2401,"src":"11324:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2449,"mutability":"mutable","name":"value","nameLocation":"11353:5:11","nodeType":"VariableDeclaration","scope":2464,"src":"11345:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:11"},"returnParameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"11383:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2451,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:11"},"scope":2531,"src":"11306:144:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2478,"nodeType":"Block","src":"11600:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2474,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"11625:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"11625:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2473,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"11617:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2472,"id":2477,"nodeType":"Return","src":"11610:26:11"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"11456:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2479,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:11","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"set","nameLocation":"11563:3:11","nodeType":"VariableDeclaration","scope":2479,"src":"11547:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2467,"nodeType":"UserDefinedTypeName","pathNode":{"id":2466,"name":"UintSet","nameLocations":["11547:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"11547:7:11"},"referencedDeclaration":2401,"src":"11547:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:11"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2479,"src":"11591:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:11"},"scope":2531,"src":"11531:112:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"12065:55:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2493,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"12094:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2494,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"12094:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2495,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"12106:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2492,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"12090:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:11","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2489,"id":2498,"nodeType":"Return","src":"12075:38:11"}]},"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"11649:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:11","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"set","nameLocation":"12013:3:11","nodeType":"VariableDeclaration","scope":2500,"src":"11997:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"UintSet","nameLocations":["11997:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"11997:7:11"},"referencedDeclaration":2401,"src":"11997:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"index","nameLocation":"12026:5:11","nodeType":"VariableDeclaration","scope":2500,"src":"12018:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:11"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"12056:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:11"},"scope":2531,"src":"11985:135:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2529,"nodeType":"Block","src":"12738:219:11","statements":[{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"store","nameLocation":"12765:5:11","nodeType":"VariableDeclaration","scope":2529,"src":"12748:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2513,"nodeType":"ArrayTypeName","src":"12748:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2519,"initialValue":{"arguments":[{"expression":{"id":2516,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"12781:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:11","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"12781:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1929_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2515,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"12773:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1929_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:11"},{"assignments":[2524],"declarations":[{"constant":false,"id":2524,"mutability":"mutable","name":"result","nameLocation":"12819:6:11","nodeType":"VariableDeclaration","scope":2529,"src":"12802:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2523,"nodeType":"ArrayTypeName","src":"12802:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2525,"nodeType":"VariableDeclarationStatement","src":"12802:23:11"},{"AST":{"nodeType":"YulBlock","src":"12888:39:11","statements":[{"nodeType":"YulAssignment","src":"12902:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2524,"isOffset":false,"isSlot":false,"src":"12902:6:11","valueSize":1},{"declaration":2514,"isOffset":false,"isSlot":false,"src":"12912:5:11","valueSize":1}],"id":2526,"nodeType":"InlineAssembly","src":"12879:48:11"},{"expression":{"id":2527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"12944:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2509,"id":2528,"nodeType":"Return","src":"12937:13:11"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"12126:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2530,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:11","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"set","nameLocation":"12692:3:11","nodeType":"VariableDeclaration","scope":2530,"src":"12676:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2503,"nodeType":"UserDefinedTypeName","pathNode":{"id":2502,"name":"UintSet","nameLocations":["12676:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2401,"src":"12676:7:11"},"referencedDeclaration":2401,"src":"12676:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2401_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:11"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"12720:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2507,"nodeType":"ArrayTypeName","src":"12720:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:11"},"scope":2531,"src":"12660:297:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2532,"src":"1329:11630:11","usedErrors":[],"usedEvents":[]}],"src":"205:12755:11"},"id":11},"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol":{"ast":{"absolutePath":"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol","exportedSymbols":{"IUniswapV2Factory":[2594]},"id":2595,"nodeType":"SourceUnit","nodes":[{"id":2533,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"0:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV2Factory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2594,"linearizedBaseContracts":[2594],"name":"IUniswapV2Factory","nameLocation":"36:17:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9","id":2543,"name":"PairCreated","nameLocation":"66:11:12","nodeType":"EventDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"94:6:12","nodeType":"VariableDeclaration","scope":2543,"src":"78:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2534,"name":"address","nodeType":"ElementaryTypeName","src":"78:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2537,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"118:6:12","nodeType":"VariableDeclaration","scope":2543,"src":"102:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"102:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2539,"indexed":false,"mutability":"mutable","name":"pair","nameLocation":"134:4:12","nodeType":"VariableDeclaration","scope":2543,"src":"126:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2538,"name":"address","nodeType":"ElementaryTypeName","src":"126:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2541,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2543,"src":"140:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint","nodeType":"ElementaryTypeName","src":"140:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77:68:12"},"src":"60:86:12"},{"functionSelector":"017e7e58","id":2548,"implemented":false,"kind":"function","modifiers":[],"name":"feeTo","nameLocation":"161:5:12","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[],"src":"166:2:12"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"192:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"192:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"191:9:12"},"scope":2594,"src":"152:49:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"094b7415","id":2553,"implemented":false,"kind":"function","modifiers":[],"name":"feeToSetter","nameLocation":"215:11:12","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[],"src":"226:2:12"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2553,"src":"252:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"251:9:12"},"scope":2594,"src":"206:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e6a43905","id":2562,"implemented":false,"kind":"function","modifiers":[],"name":"getPair","nameLocation":"276:7:12","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"tokenA","nameLocation":"292:6:12","nodeType":"VariableDeclaration","scope":2562,"src":"284:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"284:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"tokenB","nameLocation":"308:6:12","nodeType":"VariableDeclaration","scope":2562,"src":"300:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"283:32:12"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"pair","nameLocation":"347:4:12","nodeType":"VariableDeclaration","scope":2562,"src":"339:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"339:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"338:14:12"},"scope":2594,"src":"267:86:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1e3dd18b","id":2569,"implemented":false,"kind":"function","modifiers":[],"name":"allPairs","nameLocation":"367:8:12","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"376:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint","nodeType":"ElementaryTypeName","src":"376:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"375:6:12"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"pair","nameLocation":"413:4:12","nodeType":"VariableDeclaration","scope":2569,"src":"405:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"404:14:12"},"scope":2594,"src":"358:61:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"574f2ba3","id":2574,"implemented":false,"kind":"function","modifiers":[],"name":"allPairsLength","nameLocation":"433:14:12","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[],"src":"447:2:12"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2574,"src":"473:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint","nodeType":"ElementaryTypeName","src":"473:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"472:6:12"},"scope":2594,"src":"424:55:12","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9c65396","id":2583,"implemented":false,"kind":"function","modifiers":[],"name":"createPair","nameLocation":"494:10:12","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"tokenA","nameLocation":"513:6:12","nodeType":"VariableDeclaration","scope":2583,"src":"505:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"505:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"tokenB","nameLocation":"529:6:12","nodeType":"VariableDeclaration","scope":2583,"src":"521:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"521:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"504:32:12"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"pair","nameLocation":"563:4:12","nodeType":"VariableDeclaration","scope":2583,"src":"555:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"554:14:12"},"scope":2594,"src":"485:84:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f46901ed","id":2588,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeTo","nameLocation":"584:8:12","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2588,"src":"593:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"592:9:12"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[],"src":"610:0:12"},"scope":2594,"src":"575:36:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a2e74af6","id":2593,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeToSetter","nameLocation":"625:14:12","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2593,"src":"640:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:9:12"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[],"src":"657:0:12"},"scope":2594,"src":"616:42:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2595,"src":"26:634:12","usedErrors":[],"usedEvents":[2543]}],"src":"0:661:12"},"id":12},"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol":{"ast":{"absolutePath":"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol","exportedSymbols":{"IUniswapV2Pair":[2836]},"id":2837,"nodeType":"SourceUnit","nodes":[{"id":2596,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"0:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV2Pair","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2836,"linearizedBaseContracts":[2836],"name":"IUniswapV2Pair","nameLocation":"36:14:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2604,"name":"Approval","nameLocation":"63:8:13","nodeType":"EventDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"88:5:13","nodeType":"VariableDeclaration","scope":2604,"src":"72:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"72:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2600,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"111:7:13","nodeType":"VariableDeclaration","scope":2604,"src":"95:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"95:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2602,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"125:5:13","nodeType":"VariableDeclaration","scope":2604,"src":"120:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint","nodeType":"ElementaryTypeName","src":"120:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71:60:13"},"src":"57:75:13"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2612,"name":"Transfer","nameLocation":"143:8:13","nodeType":"EventDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"168:4:13","nodeType":"VariableDeclaration","scope":2612,"src":"152:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"152:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2608,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"190:2:13","nodeType":"VariableDeclaration","scope":2612,"src":"174:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"174:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2610,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"199:5:13","nodeType":"VariableDeclaration","scope":2612,"src":"194:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint","nodeType":"ElementaryTypeName","src":"194:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"151:54:13"},"src":"137:69:13"},{"functionSelector":"06fdde03","id":2617,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"221:4:13","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[],"src":"225:2:13"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2617,"src":"251:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2614,"name":"string","nodeType":"ElementaryTypeName","src":"251:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"250:15:13"},"scope":2836,"src":"212:54:13","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":2622,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"280:6:13","nodeType":"FunctionDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[],"src":"286:2:13"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"312:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2619,"name":"string","nodeType":"ElementaryTypeName","src":"312:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"311:15:13"},"scope":2836,"src":"271:56:13","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":2627,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"341:8:13","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[],"src":"349:2:13"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2627,"src":"375:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2624,"name":"uint8","nodeType":"ElementaryTypeName","src":"375:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"374:7:13"},"scope":2836,"src":"332:50:13","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":2632,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"396:11:13","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[],"src":"407:2:13"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"433:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint","nodeType":"ElementaryTypeName","src":"433:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:6:13"},"scope":2836,"src":"387:52:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":2639,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"453:9:13","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"owner","nameLocation":"471:5:13","nodeType":"VariableDeclaration","scope":2639,"src":"463:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"462:15:13"},"returnParameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2639,"src":"501:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint","nodeType":"ElementaryTypeName","src":"501:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"500:6:13"},"scope":2836,"src":"444:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":2648,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"521:9:13","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"owner","nameLocation":"539:5:13","nodeType":"VariableDeclaration","scope":2648,"src":"531:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"spender","nameLocation":"554:7:13","nodeType":"VariableDeclaration","scope":2648,"src":"546:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"530:32:13"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2648,"src":"586:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2645,"name":"uint","nodeType":"ElementaryTypeName","src":"586:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"585:6:13"},"scope":2836,"src":"512:80:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":2657,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"607:7:13","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"spender","nameLocation":"623:7:13","nodeType":"VariableDeclaration","scope":2657,"src":"615:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"value","nameLocation":"637:5:13","nodeType":"VariableDeclaration","scope":2657,"src":"632:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint","nodeType":"ElementaryTypeName","src":"632:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"614:29:13"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2657,"src":"662:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2654,"name":"bool","nodeType":"ElementaryTypeName","src":"662:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"661:6:13"},"scope":2836,"src":"598:70:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":2666,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"682:8:13","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"to","nameLocation":"699:2:13","nodeType":"VariableDeclaration","scope":2666,"src":"691:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"value","nameLocation":"708:5:13","nodeType":"VariableDeclaration","scope":2666,"src":"703:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint","nodeType":"ElementaryTypeName","src":"703:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"690:24:13"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"733:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2663,"name":"bool","nodeType":"ElementaryTypeName","src":"733:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"732:6:13"},"scope":2836,"src":"673:66:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":2677,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"753:12:13","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"from","nameLocation":"774:4:13","nodeType":"VariableDeclaration","scope":2677,"src":"766:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"to","nameLocation":"788:2:13","nodeType":"VariableDeclaration","scope":2677,"src":"780:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"780:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"value","nameLocation":"797:5:13","nodeType":"VariableDeclaration","scope":2677,"src":"792:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint","nodeType":"ElementaryTypeName","src":"792:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"765:38:13"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2677,"src":"822:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2674,"name":"bool","nodeType":"ElementaryTypeName","src":"822:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"821:6:13"},"scope":2836,"src":"744:84:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3644e515","id":2682,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"843:16:13","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[],"src":"859:2:13"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"885:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"885:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"884:9:13"},"scope":2836,"src":"834:60:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"30adf81f","id":2687,"implemented":false,"kind":"function","modifiers":[],"name":"PERMIT_TYPEHASH","nameLocation":"908:15:13","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[],"src":"923:2:13"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2687,"src":"949:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"949:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"948:9:13"},"scope":2836,"src":"899:59:13","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"7ecebe00","id":2694,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"972:6:13","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"owner","nameLocation":"987:5:13","nodeType":"VariableDeclaration","scope":2694,"src":"979:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:15:13"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2694,"src":"1017:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint","nodeType":"ElementaryTypeName","src":"1017:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1016:6:13"},"scope":2836,"src":"963:60:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d505accf","id":2711,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1038:6:13","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"owner","nameLocation":"1053:5:13","nodeType":"VariableDeclaration","scope":2711,"src":"1045:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"1045:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"spender","nameLocation":"1068:7:13","nodeType":"VariableDeclaration","scope":2711,"src":"1060:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2697,"name":"address","nodeType":"ElementaryTypeName","src":"1060:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"value","nameLocation":"1082:5:13","nodeType":"VariableDeclaration","scope":2711,"src":"1077:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint","nodeType":"ElementaryTypeName","src":"1077:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"deadline","nameLocation":"1094:8:13","nodeType":"VariableDeclaration","scope":2711,"src":"1089:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint","nodeType":"ElementaryTypeName","src":"1089:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"v","nameLocation":"1110:1:13","nodeType":"VariableDeclaration","scope":2711,"src":"1104:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2703,"name":"uint8","nodeType":"ElementaryTypeName","src":"1104:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"r","nameLocation":"1121:1:13","nodeType":"VariableDeclaration","scope":2711,"src":"1113:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1113:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"s","nameLocation":"1132:1:13","nodeType":"VariableDeclaration","scope":2711,"src":"1124:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1124:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1044:90:13"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[],"src":"1143:0:13"},"scope":2836,"src":"1029:115:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f","id":2719,"name":"Mint","nameLocation":"1156:4:13","nodeType":"EventDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1177:6:13","nodeType":"VariableDeclaration","scope":2719,"src":"1161:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"1161:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2715,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1190:7:13","nodeType":"VariableDeclaration","scope":2719,"src":"1185:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint","nodeType":"ElementaryTypeName","src":"1185:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2717,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1204:7:13","nodeType":"VariableDeclaration","scope":2719,"src":"1199:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint","nodeType":"ElementaryTypeName","src":"1199:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1160:52:13"},"src":"1150:63:13"},{"anonymous":false,"eventSelector":"dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496","id":2729,"name":"Burn","nameLocation":"1224:4:13","nodeType":"EventDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1245:6:13","nodeType":"VariableDeclaration","scope":2729,"src":"1229:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2720,"name":"address","nodeType":"ElementaryTypeName","src":"1229:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2723,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1258:7:13","nodeType":"VariableDeclaration","scope":2729,"src":"1253:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint","nodeType":"ElementaryTypeName","src":"1253:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2725,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1272:7:13","nodeType":"VariableDeclaration","scope":2729,"src":"1267:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint","nodeType":"ElementaryTypeName","src":"1267:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2727,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1297:2:13","nodeType":"VariableDeclaration","scope":2729,"src":"1281:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2726,"name":"address","nodeType":"ElementaryTypeName","src":"1281:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1228:72:13"},"src":"1218:83:13"},{"anonymous":false,"eventSelector":"d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822","id":2743,"name":"Swap","nameLocation":"1312:4:13","nodeType":"EventDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1342:6:13","nodeType":"VariableDeclaration","scope":2743,"src":"1326:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"1326:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2733,"indexed":false,"mutability":"mutable","name":"amount0In","nameLocation":"1363:9:13","nodeType":"VariableDeclaration","scope":2743,"src":"1358:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint","nodeType":"ElementaryTypeName","src":"1358:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2735,"indexed":false,"mutability":"mutable","name":"amount1In","nameLocation":"1387:9:13","nodeType":"VariableDeclaration","scope":2743,"src":"1382:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint","nodeType":"ElementaryTypeName","src":"1382:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2737,"indexed":false,"mutability":"mutable","name":"amount0Out","nameLocation":"1411:10:13","nodeType":"VariableDeclaration","scope":2743,"src":"1406:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint","nodeType":"ElementaryTypeName","src":"1406:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2739,"indexed":false,"mutability":"mutable","name":"amount1Out","nameLocation":"1436:10:13","nodeType":"VariableDeclaration","scope":2743,"src":"1431:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint","nodeType":"ElementaryTypeName","src":"1431:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2741,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1472:2:13","nodeType":"VariableDeclaration","scope":2743,"src":"1456:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2740,"name":"address","nodeType":"ElementaryTypeName","src":"1456:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1316:164:13"},"src":"1306:175:13"},{"anonymous":false,"eventSelector":"1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1","id":2749,"name":"Sync","nameLocation":"1492:4:13","nodeType":"EventDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"indexed":false,"mutability":"mutable","name":"reserve0","nameLocation":"1505:8:13","nodeType":"VariableDeclaration","scope":2749,"src":"1497:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2744,"name":"uint112","nodeType":"ElementaryTypeName","src":"1497:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":2747,"indexed":false,"mutability":"mutable","name":"reserve1","nameLocation":"1523:8:13","nodeType":"VariableDeclaration","scope":2749,"src":"1515:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2746,"name":"uint112","nodeType":"ElementaryTypeName","src":"1515:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"1496:36:13"},"src":"1486:47:13"},{"functionSelector":"ba9a7a56","id":2754,"implemented":false,"kind":"function","modifiers":[],"name":"MINIMUM_LIQUIDITY","nameLocation":"1548:17:13","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[],"src":"1565:2:13"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2754,"src":"1591:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint","nodeType":"ElementaryTypeName","src":"1591:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1590:6:13"},"scope":2836,"src":"1539:58:13","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"c45a0155","id":2759,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"1611:7:13","nodeType":"FunctionDefinition","parameters":{"id":2755,"nodeType":"ParameterList","parameters":[],"src":"1618:2:13"},"returnParameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"1644:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1643:9:13"},"scope":2836,"src":"1602:51:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0dfe1681","id":2764,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"1667:6:13","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"1673:2:13"},"returnParameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2764,"src":"1699:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:9:13"},"scope":2836,"src":"1658:50:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d21220a7","id":2769,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"1722:6:13","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[],"src":"1728:2:13"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2769,"src":"1754:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2766,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1753:9:13"},"scope":2836,"src":"1713:50:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":2778,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"1777:11:13","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[],"src":"1788:2:13"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"reserve0","nameLocation":"1822:8:13","nodeType":"VariableDeclaration","scope":2778,"src":"1814:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2771,"name":"uint112","nodeType":"ElementaryTypeName","src":"1814:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"reserve1","nameLocation":"1840:8:13","nodeType":"VariableDeclaration","scope":2778,"src":"1832:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":2773,"name":"uint112","nodeType":"ElementaryTypeName","src":"1832:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"blockTimestampLast","nameLocation":"1857:18:13","nodeType":"VariableDeclaration","scope":2778,"src":"1850:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2775,"name":"uint32","nodeType":"ElementaryTypeName","src":"1850:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1813:63:13"},"scope":2836,"src":"1768:109:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5909c0d5","id":2783,"implemented":false,"kind":"function","modifiers":[],"name":"price0CumulativeLast","nameLocation":"1891:20:13","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[],"src":"1911:2:13"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"1937:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint","nodeType":"ElementaryTypeName","src":"1937:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1936:6:13"},"scope":2836,"src":"1882:61:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5a3d5493","id":2788,"implemented":false,"kind":"function","modifiers":[],"name":"price1CumulativeLast","nameLocation":"1957:20:13","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[],"src":"1977:2:13"},"returnParameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2788,"src":"2003:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint","nodeType":"ElementaryTypeName","src":"2003:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2002:6:13"},"scope":2836,"src":"1948:61:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7464fc3d","id":2793,"implemented":false,"kind":"function","modifiers":[],"name":"kLast","nameLocation":"2023:5:13","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[],"src":"2028:2:13"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"2054:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint","nodeType":"ElementaryTypeName","src":"2054:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2053:6:13"},"scope":2836,"src":"2014:46:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6a627842","id":2800,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2075:4:13","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"to","nameLocation":"2088:2:13","nodeType":"VariableDeclaration","scope":2800,"src":"2080:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"2080:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2079:12:13"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"liquidity","nameLocation":"2115:9:13","nodeType":"VariableDeclaration","scope":2800,"src":"2110:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint","nodeType":"ElementaryTypeName","src":"2110:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:16:13"},"scope":2836,"src":"2066:60:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":2809,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"2140:4:13","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"to","nameLocation":"2153:2:13","nodeType":"VariableDeclaration","scope":2809,"src":"2145:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2801,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2144:12:13"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"amount0","nameLocation":"2180:7:13","nodeType":"VariableDeclaration","scope":2809,"src":"2175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint","nodeType":"ElementaryTypeName","src":"2175:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"amount1","nameLocation":"2194:7:13","nodeType":"VariableDeclaration","scope":2809,"src":"2189:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint","nodeType":"ElementaryTypeName","src":"2189:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2174:28:13"},"scope":2836,"src":"2131:72:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"022c0d9f","id":2820,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"2217:4:13","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"amount0Out","nameLocation":"2227:10:13","nodeType":"VariableDeclaration","scope":2820,"src":"2222:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint","nodeType":"ElementaryTypeName","src":"2222:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"amount1Out","nameLocation":"2244:10:13","nodeType":"VariableDeclaration","scope":2820,"src":"2239:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint","nodeType":"ElementaryTypeName","src":"2239:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"to","nameLocation":"2264:2:13","nodeType":"VariableDeclaration","scope":2820,"src":"2256:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2814,"name":"address","nodeType":"ElementaryTypeName","src":"2256:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"data","nameLocation":"2283:4:13","nodeType":"VariableDeclaration","scope":2820,"src":"2268:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2268:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2221:67:13"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"2297:0:13"},"scope":2836,"src":"2208:90:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bc25cf77","id":2825,"implemented":false,"kind":"function","modifiers":[],"name":"skim","nameLocation":"2312:4:13","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"to","nameLocation":"2325:2:13","nodeType":"VariableDeclaration","scope":2825,"src":"2317:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"2317:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2316:12:13"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[],"src":"2337:0:13"},"scope":2836,"src":"2303:35:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fff6cae9","id":2828,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"2352:4:13","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[],"src":"2356:2:13"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[],"src":"2367:0:13"},"scope":2836,"src":"2343:25:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"485cc955","id":2835,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"2383:10:13","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2835,"src":"2394:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2835,"src":"2403:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"2403:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2393:18:13"},"returnParameters":{"id":2834,"nodeType":"ParameterList","parameters":[],"src":"2420:0:13"},"scope":2836,"src":"2374:47:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2837,"src":"26:2397:13","usedErrors":[],"usedEvents":[2604,2612,2719,2729,2743,2749]}],"src":"0:2424:13"},"id":13},"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol":{"ast":{"absolutePath":"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol","exportedSymbols":{"IUniswapV2Migrator":[2852]},"id":2853,"nodeType":"SourceUnit","nodes":[{"id":2838,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"0:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV2Migrator","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2852,"linearizedBaseContracts":[2852],"name":"IUniswapV2Migrator","nameLocation":"36:18:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b7df1d25","id":2851,"implemented":false,"kind":"function","modifiers":[],"name":"migrate","nameLocation":"70:7:14","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"token","nameLocation":"86:5:14","nodeType":"VariableDeclaration","scope":2851,"src":"78:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"78:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2842,"mutability":"mutable","name":"amountTokenMin","nameLocation":"98:14:14","nodeType":"VariableDeclaration","scope":2851,"src":"93:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint","nodeType":"ElementaryTypeName","src":"93:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"amountETHMin","nameLocation":"119:12:14","nodeType":"VariableDeclaration","scope":2851,"src":"114:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint","nodeType":"ElementaryTypeName","src":"114:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"to","nameLocation":"141:2:14","nodeType":"VariableDeclaration","scope":2851,"src":"133:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"133:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"deadline","nameLocation":"150:8:14","nodeType":"VariableDeclaration","scope":2851,"src":"145:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint","nodeType":"ElementaryTypeName","src":"145:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77:82:14"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[],"src":"168:0:14"},"scope":2852,"src":"61:108:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2853,"src":"26:145:14","usedErrors":[],"usedEvents":[]}],"src":"0:172:14"},"id":14},"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"ast":{"absolutePath":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","exportedSymbols":{"IUniswapV2Router01":[3160]},"id":3161,"nodeType":"SourceUnit","nodes":[{"id":2854,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"0:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV2Router01","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3160,"linearizedBaseContracts":[3160],"name":"IUniswapV2Router01","nameLocation":"36:18:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c45a0155","id":2859,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"70:7:15","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[],"src":"77:2:15"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2859,"src":"103:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:9:15"},"scope":3160,"src":"61:51:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"ad5c4648","id":2864,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nameLocation":"126:4:15","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[],"src":"130:2:15"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2864,"src":"156:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"155:9:15"},"scope":3160,"src":"117:48:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"e8e33700","id":2889,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"180:12:15","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"tokenA","nameLocation":"210:6:15","nodeType":"VariableDeclaration","scope":2889,"src":"202:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2868,"mutability":"mutable","name":"tokenB","nameLocation":"234:6:15","nodeType":"VariableDeclaration","scope":2889,"src":"226:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"226:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"amountADesired","nameLocation":"255:14:15","nodeType":"VariableDeclaration","scope":2889,"src":"250:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint","nodeType":"ElementaryTypeName","src":"250:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"amountBDesired","nameLocation":"284:14:15","nodeType":"VariableDeclaration","scope":2889,"src":"279:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint","nodeType":"ElementaryTypeName","src":"279:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2874,"mutability":"mutable","name":"amountAMin","nameLocation":"313:10:15","nodeType":"VariableDeclaration","scope":2889,"src":"308:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint","nodeType":"ElementaryTypeName","src":"308:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2876,"mutability":"mutable","name":"amountBMin","nameLocation":"338:10:15","nodeType":"VariableDeclaration","scope":2889,"src":"333:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint","nodeType":"ElementaryTypeName","src":"333:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"to","nameLocation":"366:2:15","nodeType":"VariableDeclaration","scope":2889,"src":"358:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"deadline","nameLocation":"383:8:15","nodeType":"VariableDeclaration","scope":2889,"src":"378:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint","nodeType":"ElementaryTypeName","src":"378:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"192:205:15"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"amountA","nameLocation":"421:7:15","nodeType":"VariableDeclaration","scope":2889,"src":"416:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint","nodeType":"ElementaryTypeName","src":"416:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"amountB","nameLocation":"435:7:15","nodeType":"VariableDeclaration","scope":2889,"src":"430:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint","nodeType":"ElementaryTypeName","src":"430:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"liquidity","nameLocation":"449:9:15","nodeType":"VariableDeclaration","scope":2889,"src":"444:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint","nodeType":"ElementaryTypeName","src":"444:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:44:15"},"scope":3160,"src":"171:289:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f305d719","id":2910,"implemented":false,"kind":"function","modifiers":[],"name":"addLiquidityETH","nameLocation":"474:15:15","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"token","nameLocation":"507:5:15","nodeType":"VariableDeclaration","scope":2910,"src":"499:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"499:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"amountTokenDesired","nameLocation":"527:18:15","nodeType":"VariableDeclaration","scope":2910,"src":"522:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint","nodeType":"ElementaryTypeName","src":"522:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"amountTokenMin","nameLocation":"560:14:15","nodeType":"VariableDeclaration","scope":2910,"src":"555:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint","nodeType":"ElementaryTypeName","src":"555:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"amountETHMin","nameLocation":"589:12:15","nodeType":"VariableDeclaration","scope":2910,"src":"584:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint","nodeType":"ElementaryTypeName","src":"584:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"to","nameLocation":"619:2:15","nodeType":"VariableDeclaration","scope":2910,"src":"611:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"deadline","nameLocation":"636:8:15","nodeType":"VariableDeclaration","scope":2910,"src":"631:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint","nodeType":"ElementaryTypeName","src":"631:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"489:161:15"},"returnParameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"amountToken","nameLocation":"682:11:15","nodeType":"VariableDeclaration","scope":2910,"src":"677:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint","nodeType":"ElementaryTypeName","src":"677:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"amountETH","nameLocation":"700:9:15","nodeType":"VariableDeclaration","scope":2910,"src":"695:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint","nodeType":"ElementaryTypeName","src":"695:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2908,"mutability":"mutable","name":"liquidity","nameLocation":"716:9:15","nodeType":"VariableDeclaration","scope":2910,"src":"711:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint","nodeType":"ElementaryTypeName","src":"711:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"676:50:15"},"scope":3160,"src":"465:262:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"baa2abde","id":2931,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"741:15:15","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"tokenA","nameLocation":"774:6:15","nodeType":"VariableDeclaration","scope":2931,"src":"766:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"766:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"tokenB","nameLocation":"798:6:15","nodeType":"VariableDeclaration","scope":2931,"src":"790:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2913,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2916,"mutability":"mutable","name":"liquidity","nameLocation":"819:9:15","nodeType":"VariableDeclaration","scope":2931,"src":"814:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint","nodeType":"ElementaryTypeName","src":"814:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2918,"mutability":"mutable","name":"amountAMin","nameLocation":"843:10:15","nodeType":"VariableDeclaration","scope":2931,"src":"838:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint","nodeType":"ElementaryTypeName","src":"838:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2920,"mutability":"mutable","name":"amountBMin","nameLocation":"868:10:15","nodeType":"VariableDeclaration","scope":2931,"src":"863:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint","nodeType":"ElementaryTypeName","src":"863:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"to","nameLocation":"896:2:15","nodeType":"VariableDeclaration","scope":2931,"src":"888:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2921,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2924,"mutability":"mutable","name":"deadline","nameLocation":"913:8:15","nodeType":"VariableDeclaration","scope":2931,"src":"908:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint","nodeType":"ElementaryTypeName","src":"908:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"756:171:15"},"returnParameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"amountA","nameLocation":"951:7:15","nodeType":"VariableDeclaration","scope":2931,"src":"946:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint","nodeType":"ElementaryTypeName","src":"946:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2929,"mutability":"mutable","name":"amountB","nameLocation":"965:7:15","nodeType":"VariableDeclaration","scope":2931,"src":"960:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint","nodeType":"ElementaryTypeName","src":"960:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"945:28:15"},"scope":3160,"src":"732:242:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"02751cec","id":2950,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETH","nameLocation":"988:18:15","nodeType":"FunctionDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"token","nameLocation":"1024:5:15","nodeType":"VariableDeclaration","scope":2950,"src":"1016:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2932,"name":"address","nodeType":"ElementaryTypeName","src":"1016:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"liquidity","nameLocation":"1044:9:15","nodeType":"VariableDeclaration","scope":2950,"src":"1039:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint","nodeType":"ElementaryTypeName","src":"1039:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"amountTokenMin","nameLocation":"1068:14:15","nodeType":"VariableDeclaration","scope":2950,"src":"1063:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint","nodeType":"ElementaryTypeName","src":"1063:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"amountETHMin","nameLocation":"1097:12:15","nodeType":"VariableDeclaration","scope":2950,"src":"1092:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2938,"name":"uint","nodeType":"ElementaryTypeName","src":"1092:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"to","nameLocation":"1127:2:15","nodeType":"VariableDeclaration","scope":2950,"src":"1119:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"deadline","nameLocation":"1144:8:15","nodeType":"VariableDeclaration","scope":2950,"src":"1139:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint","nodeType":"ElementaryTypeName","src":"1139:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1006:152:15"},"returnParameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"amountToken","nameLocation":"1182:11:15","nodeType":"VariableDeclaration","scope":2950,"src":"1177:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint","nodeType":"ElementaryTypeName","src":"1177:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"amountETH","nameLocation":"1200:9:15","nodeType":"VariableDeclaration","scope":2950,"src":"1195:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint","nodeType":"ElementaryTypeName","src":"1195:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1176:34:15"},"scope":3160,"src":"979:232:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2195995c","id":2979,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityWithPermit","nameLocation":"1225:25:15","nodeType":"FunctionDefinition","parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"tokenA","nameLocation":"1268:6:15","nodeType":"VariableDeclaration","scope":2979,"src":"1260:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2951,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2954,"mutability":"mutable","name":"tokenB","nameLocation":"1292:6:15","nodeType":"VariableDeclaration","scope":2979,"src":"1284:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"1284:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"liquidity","nameLocation":"1313:9:15","nodeType":"VariableDeclaration","scope":2979,"src":"1308:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint","nodeType":"ElementaryTypeName","src":"1308:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"amountAMin","nameLocation":"1337:10:15","nodeType":"VariableDeclaration","scope":2979,"src":"1332:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint","nodeType":"ElementaryTypeName","src":"1332:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"amountBMin","nameLocation":"1362:10:15","nodeType":"VariableDeclaration","scope":2979,"src":"1357:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint","nodeType":"ElementaryTypeName","src":"1357:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"to","nameLocation":"1390:2:15","nodeType":"VariableDeclaration","scope":2979,"src":"1382:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2961,"name":"address","nodeType":"ElementaryTypeName","src":"1382:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"deadline","nameLocation":"1407:8:15","nodeType":"VariableDeclaration","scope":2979,"src":"1402:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint","nodeType":"ElementaryTypeName","src":"1402:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"approveMax","nameLocation":"1430:10:15","nodeType":"VariableDeclaration","scope":2979,"src":"1425:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2965,"name":"bool","nodeType":"ElementaryTypeName","src":"1425:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"v","nameLocation":"1448:1:15","nodeType":"VariableDeclaration","scope":2979,"src":"1442:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2967,"name":"uint8","nodeType":"ElementaryTypeName","src":"1442:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"r","nameLocation":"1459:1:15","nodeType":"VariableDeclaration","scope":2979,"src":"1451:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1451:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"s","nameLocation":"1470:1:15","nodeType":"VariableDeclaration","scope":2979,"src":"1462:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1462:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1250:227:15"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"amountA","nameLocation":"1501:7:15","nodeType":"VariableDeclaration","scope":2979,"src":"1496:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2974,"name":"uint","nodeType":"ElementaryTypeName","src":"1496:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2977,"mutability":"mutable","name":"amountB","nameLocation":"1515:7:15","nodeType":"VariableDeclaration","scope":2979,"src":"1510:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint","nodeType":"ElementaryTypeName","src":"1510:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:28:15"},"scope":3160,"src":"1216:308:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ded9382a","id":3006,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermit","nameLocation":"1538:28:15","nodeType":"FunctionDefinition","parameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"token","nameLocation":"1584:5:15","nodeType":"VariableDeclaration","scope":3006,"src":"1576:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2980,"name":"address","nodeType":"ElementaryTypeName","src":"1576:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"liquidity","nameLocation":"1604:9:15","nodeType":"VariableDeclaration","scope":3006,"src":"1599:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint","nodeType":"ElementaryTypeName","src":"1599:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"amountTokenMin","nameLocation":"1628:14:15","nodeType":"VariableDeclaration","scope":3006,"src":"1623:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint","nodeType":"ElementaryTypeName","src":"1623:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"amountETHMin","nameLocation":"1657:12:15","nodeType":"VariableDeclaration","scope":3006,"src":"1652:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint","nodeType":"ElementaryTypeName","src":"1652:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"to","nameLocation":"1687:2:15","nodeType":"VariableDeclaration","scope":3006,"src":"1679:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2988,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"deadline","nameLocation":"1704:8:15","nodeType":"VariableDeclaration","scope":3006,"src":"1699:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint","nodeType":"ElementaryTypeName","src":"1699:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"approveMax","nameLocation":"1727:10:15","nodeType":"VariableDeclaration","scope":3006,"src":"1722:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2992,"name":"bool","nodeType":"ElementaryTypeName","src":"1722:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"v","nameLocation":"1745:1:15","nodeType":"VariableDeclaration","scope":3006,"src":"1739:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2994,"name":"uint8","nodeType":"ElementaryTypeName","src":"1739:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"r","nameLocation":"1756:1:15","nodeType":"VariableDeclaration","scope":3006,"src":"1748:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2996,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1748:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"s","nameLocation":"1767:1:15","nodeType":"VariableDeclaration","scope":3006,"src":"1759:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1759:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1566:208:15"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"amountToken","nameLocation":"1798:11:15","nodeType":"VariableDeclaration","scope":3006,"src":"1793:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint","nodeType":"ElementaryTypeName","src":"1793:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"amountETH","nameLocation":"1816:9:15","nodeType":"VariableDeclaration","scope":3006,"src":"1811:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint","nodeType":"ElementaryTypeName","src":"1811:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1792:34:15"},"scope":3160,"src":"1529:298:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38ed1739","id":3023,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokens","nameLocation":"1841:24:15","nodeType":"FunctionDefinition","parameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"amountIn","nameLocation":"1880:8:15","nodeType":"VariableDeclaration","scope":3023,"src":"1875:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint","nodeType":"ElementaryTypeName","src":"1875:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"amountOutMin","nameLocation":"1903:12:15","nodeType":"VariableDeclaration","scope":3023,"src":"1898:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint","nodeType":"ElementaryTypeName","src":"1898:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"path","nameLocation":"1944:4:15","nodeType":"VariableDeclaration","scope":3023,"src":"1925:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3011,"name":"address","nodeType":"ElementaryTypeName","src":"1925:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3012,"nodeType":"ArrayTypeName","src":"1925:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"to","nameLocation":"1966:2:15","nodeType":"VariableDeclaration","scope":3023,"src":"1958:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3014,"name":"address","nodeType":"ElementaryTypeName","src":"1958:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"deadline","nameLocation":"1983:8:15","nodeType":"VariableDeclaration","scope":3023,"src":"1978:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint","nodeType":"ElementaryTypeName","src":"1978:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1865:132:15"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"amounts","nameLocation":"2030:7:15","nodeType":"VariableDeclaration","scope":3023,"src":"2016:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3019,"name":"uint","nodeType":"ElementaryTypeName","src":"2016:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3020,"nodeType":"ArrayTypeName","src":"2016:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2015:23:15"},"scope":3160,"src":"1832:207:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8803dbee","id":3040,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactTokens","nameLocation":"2053:24:15","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"amountOut","nameLocation":"2092:9:15","nodeType":"VariableDeclaration","scope":3040,"src":"2087:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint","nodeType":"ElementaryTypeName","src":"2087:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"amountInMax","nameLocation":"2116:11:15","nodeType":"VariableDeclaration","scope":3040,"src":"2111:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint","nodeType":"ElementaryTypeName","src":"2111:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"path","nameLocation":"2156:4:15","nodeType":"VariableDeclaration","scope":3040,"src":"2137:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3029,"nodeType":"ArrayTypeName","src":"2137:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"to","nameLocation":"2178:2:15","nodeType":"VariableDeclaration","scope":3040,"src":"2170:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"2170:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"deadline","nameLocation":"2195:8:15","nodeType":"VariableDeclaration","scope":3040,"src":"2190:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint","nodeType":"ElementaryTypeName","src":"2190:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2077:132:15"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"amounts","nameLocation":"2242:7:15","nodeType":"VariableDeclaration","scope":3040,"src":"2228:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3036,"name":"uint","nodeType":"ElementaryTypeName","src":"2228:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3037,"nodeType":"ArrayTypeName","src":"2228:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2227:23:15"},"scope":3160,"src":"2044:207:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7ff36ab5","id":3055,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokens","nameLocation":"2265:21:15","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"amountOutMin","nameLocation":"2292:12:15","nodeType":"VariableDeclaration","scope":3055,"src":"2287:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint","nodeType":"ElementaryTypeName","src":"2287:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"path","nameLocation":"2325:4:15","nodeType":"VariableDeclaration","scope":3055,"src":"2306:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"2306:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3044,"nodeType":"ArrayTypeName","src":"2306:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"to","nameLocation":"2339:2:15","nodeType":"VariableDeclaration","scope":3055,"src":"2331:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3046,"name":"address","nodeType":"ElementaryTypeName","src":"2331:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"deadline","nameLocation":"2348:8:15","nodeType":"VariableDeclaration","scope":3055,"src":"2343:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint","nodeType":"ElementaryTypeName","src":"2343:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2286:71:15"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"amounts","nameLocation":"2422:7:15","nodeType":"VariableDeclaration","scope":3055,"src":"2408:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3051,"name":"uint","nodeType":"ElementaryTypeName","src":"2408:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3052,"nodeType":"ArrayTypeName","src":"2408:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2407:23:15"},"scope":3160,"src":"2256:175:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"4a25d94a","id":3072,"implemented":false,"kind":"function","modifiers":[],"name":"swapTokensForExactETH","nameLocation":"2445:21:15","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"amountOut","nameLocation":"2472:9:15","nodeType":"VariableDeclaration","scope":3072,"src":"2467:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3056,"name":"uint","nodeType":"ElementaryTypeName","src":"2467:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"amountInMax","nameLocation":"2488:11:15","nodeType":"VariableDeclaration","scope":3072,"src":"2483:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint","nodeType":"ElementaryTypeName","src":"2483:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"path","nameLocation":"2520:4:15","nodeType":"VariableDeclaration","scope":3072,"src":"2501:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3060,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3061,"nodeType":"ArrayTypeName","src":"2501:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"to","nameLocation":"2534:2:15","nodeType":"VariableDeclaration","scope":3072,"src":"2526:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3063,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"deadline","nameLocation":"2543:8:15","nodeType":"VariableDeclaration","scope":3072,"src":"2538:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint","nodeType":"ElementaryTypeName","src":"2538:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2466:86:15"},"returnParameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"amounts","nameLocation":"2601:7:15","nodeType":"VariableDeclaration","scope":3072,"src":"2587:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3068,"name":"uint","nodeType":"ElementaryTypeName","src":"2587:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ArrayTypeName","src":"2587:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2586:23:15"},"scope":3160,"src":"2436:174:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"18cbafe5","id":3089,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETH","nameLocation":"2624:21:15","nodeType":"FunctionDefinition","parameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"amountIn","nameLocation":"2651:8:15","nodeType":"VariableDeclaration","scope":3089,"src":"2646:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3073,"name":"uint","nodeType":"ElementaryTypeName","src":"2646:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"amountOutMin","nameLocation":"2666:12:15","nodeType":"VariableDeclaration","scope":3089,"src":"2661:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint","nodeType":"ElementaryTypeName","src":"2661:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"path","nameLocation":"2699:4:15","nodeType":"VariableDeclaration","scope":3089,"src":"2680:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3078,"nodeType":"ArrayTypeName","src":"2680:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"to","nameLocation":"2713:2:15","nodeType":"VariableDeclaration","scope":3089,"src":"2705:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"2705:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"deadline","nameLocation":"2722:8:15","nodeType":"VariableDeclaration","scope":3089,"src":"2717:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint","nodeType":"ElementaryTypeName","src":"2717:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2645:86:15"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"amounts","nameLocation":"2780:7:15","nodeType":"VariableDeclaration","scope":3089,"src":"2766:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3085,"name":"uint","nodeType":"ElementaryTypeName","src":"2766:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3086,"nodeType":"ArrayTypeName","src":"2766:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2765:23:15"},"scope":3160,"src":"2615:174:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fb3bdb41","id":3104,"implemented":false,"kind":"function","modifiers":[],"name":"swapETHForExactTokens","nameLocation":"2803:21:15","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"amountOut","nameLocation":"2830:9:15","nodeType":"VariableDeclaration","scope":3104,"src":"2825:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint","nodeType":"ElementaryTypeName","src":"2825:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"path","nameLocation":"2860:4:15","nodeType":"VariableDeclaration","scope":3104,"src":"2841:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3092,"name":"address","nodeType":"ElementaryTypeName","src":"2841:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3093,"nodeType":"ArrayTypeName","src":"2841:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"to","nameLocation":"2874:2:15","nodeType":"VariableDeclaration","scope":3104,"src":"2866:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3095,"name":"address","nodeType":"ElementaryTypeName","src":"2866:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"deadline","nameLocation":"2883:8:15","nodeType":"VariableDeclaration","scope":3104,"src":"2878:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint","nodeType":"ElementaryTypeName","src":"2878:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2824:68:15"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"amounts","nameLocation":"2957:7:15","nodeType":"VariableDeclaration","scope":3104,"src":"2943:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3100,"name":"uint","nodeType":"ElementaryTypeName","src":"2943:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3101,"nodeType":"ArrayTypeName","src":"2943:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2942:23:15"},"scope":3160,"src":"2794:172:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"ad615dec","id":3115,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"2981:5:15","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"amountA","nameLocation":"2992:7:15","nodeType":"VariableDeclaration","scope":3115,"src":"2987:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint","nodeType":"ElementaryTypeName","src":"2987:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"reserveA","nameLocation":"3006:8:15","nodeType":"VariableDeclaration","scope":3115,"src":"3001:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint","nodeType":"ElementaryTypeName","src":"3001:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"reserveB","nameLocation":"3021:8:15","nodeType":"VariableDeclaration","scope":3115,"src":"3016:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint","nodeType":"ElementaryTypeName","src":"3016:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2986:44:15"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"amountB","nameLocation":"3059:7:15","nodeType":"VariableDeclaration","scope":3115,"src":"3054:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint","nodeType":"ElementaryTypeName","src":"3054:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3053:14:15"},"scope":3160,"src":"2972:96:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"054d50d4","id":3126,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"3082:12:15","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"amountIn","nameLocation":"3100:8:15","nodeType":"VariableDeclaration","scope":3126,"src":"3095:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3116,"name":"uint","nodeType":"ElementaryTypeName","src":"3095:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"reserveIn","nameLocation":"3115:9:15","nodeType":"VariableDeclaration","scope":3126,"src":"3110:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint","nodeType":"ElementaryTypeName","src":"3110:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"reserveOut","nameLocation":"3131:10:15","nodeType":"VariableDeclaration","scope":3126,"src":"3126:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint","nodeType":"ElementaryTypeName","src":"3126:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3094:48:15"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"amountOut","nameLocation":"3171:9:15","nodeType":"VariableDeclaration","scope":3126,"src":"3166:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint","nodeType":"ElementaryTypeName","src":"3166:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3165:16:15"},"scope":3160,"src":"3073:109:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"85f8c259","id":3137,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountIn","nameLocation":"3196:11:15","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"amountOut","nameLocation":"3213:9:15","nodeType":"VariableDeclaration","scope":3137,"src":"3208:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3127,"name":"uint","nodeType":"ElementaryTypeName","src":"3208:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"reserveIn","nameLocation":"3229:9:15","nodeType":"VariableDeclaration","scope":3137,"src":"3224:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint","nodeType":"ElementaryTypeName","src":"3224:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"reserveOut","nameLocation":"3245:10:15","nodeType":"VariableDeclaration","scope":3137,"src":"3240:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint","nodeType":"ElementaryTypeName","src":"3240:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3207:49:15"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"amountIn","nameLocation":"3285:8:15","nodeType":"VariableDeclaration","scope":3137,"src":"3280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint","nodeType":"ElementaryTypeName","src":"3280:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3279:15:15"},"scope":3160,"src":"3187:108:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"d06ca61f","id":3148,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsOut","nameLocation":"3309:13:15","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"amountIn","nameLocation":"3328:8:15","nodeType":"VariableDeclaration","scope":3148,"src":"3323:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint","nodeType":"ElementaryTypeName","src":"3323:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3142,"mutability":"mutable","name":"path","nameLocation":"3357:4:15","nodeType":"VariableDeclaration","scope":3148,"src":"3338:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"3338:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3141,"nodeType":"ArrayTypeName","src":"3338:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3322:40:15"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"amounts","nameLocation":"3400:7:15","nodeType":"VariableDeclaration","scope":3148,"src":"3386:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3144,"name":"uint","nodeType":"ElementaryTypeName","src":"3386:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3145,"nodeType":"ArrayTypeName","src":"3386:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3385:23:15"},"scope":3160,"src":"3300:109:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1f00ca74","id":3159,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountsIn","nameLocation":"3423:12:15","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"amountOut","nameLocation":"3441:9:15","nodeType":"VariableDeclaration","scope":3159,"src":"3436:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint","nodeType":"ElementaryTypeName","src":"3436:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"path","nameLocation":"3471:4:15","nodeType":"VariableDeclaration","scope":3159,"src":"3452:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3151,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3152,"nodeType":"ArrayTypeName","src":"3452:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3435:41:15"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"amounts","nameLocation":"3514:7:15","nodeType":"VariableDeclaration","scope":3159,"src":"3500:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3155,"name":"uint","nodeType":"ElementaryTypeName","src":"3500:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3156,"nodeType":"ArrayTypeName","src":"3500:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3499:23:15"},"scope":3160,"src":"3414:109:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3161,"src":"26:3499:15","usedErrors":[],"usedEvents":[]}],"src":"0:3526:15"},"id":15},"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"ast":{"absolutePath":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","exportedSymbols":{"IUniswapV2Router01":[3160],"IUniswapV2Router02":[3248]},"id":3249,"nodeType":"SourceUnit","nodes":[{"id":3162,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"0:24:16"},{"absolutePath":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol","file":"./IUniswapV2Router01.sol","id":3163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3249,"sourceUnit":3161,"src":"26:34:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3164,"name":"IUniswapV2Router01","nameLocations":["94:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":3160,"src":"94:18:16"},"id":3165,"nodeType":"InheritanceSpecifier","src":"94:18:16"}],"canonicalName":"IUniswapV2Router02","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3248,"linearizedBaseContracts":[3248,3160],"name":"IUniswapV2Router02","nameLocation":"72:18:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"af2979eb","id":3182,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","nameLocation":"128:47:16","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"token","nameLocation":"193:5:16","nodeType":"VariableDeclaration","scope":3182,"src":"185:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"liquidity","nameLocation":"213:9:16","nodeType":"VariableDeclaration","scope":3182,"src":"208:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint","nodeType":"ElementaryTypeName","src":"208:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"amountTokenMin","nameLocation":"237:14:16","nodeType":"VariableDeclaration","scope":3182,"src":"232:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint","nodeType":"ElementaryTypeName","src":"232:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"amountETHMin","nameLocation":"266:12:16","nodeType":"VariableDeclaration","scope":3182,"src":"261:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint","nodeType":"ElementaryTypeName","src":"261:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"to","nameLocation":"296:2:16","nodeType":"VariableDeclaration","scope":3182,"src":"288:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"deadline","nameLocation":"313:8:16","nodeType":"VariableDeclaration","scope":3182,"src":"308:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint","nodeType":"ElementaryTypeName","src":"308:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"175:152:16"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"amountETH","nameLocation":"351:9:16","nodeType":"VariableDeclaration","scope":3182,"src":"346:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint","nodeType":"ElementaryTypeName","src":"346:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:16:16"},"scope":3248,"src":"119:243:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5b0d5984","id":3207,"implemented":false,"kind":"function","modifiers":[],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","nameLocation":"376:57:16","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"token","nameLocation":"451:5:16","nodeType":"VariableDeclaration","scope":3207,"src":"443:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"liquidity","nameLocation":"471:9:16","nodeType":"VariableDeclaration","scope":3207,"src":"466:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint","nodeType":"ElementaryTypeName","src":"466:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"amountTokenMin","nameLocation":"495:14:16","nodeType":"VariableDeclaration","scope":3207,"src":"490:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint","nodeType":"ElementaryTypeName","src":"490:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"amountETHMin","nameLocation":"524:12:16","nodeType":"VariableDeclaration","scope":3207,"src":"519:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint","nodeType":"ElementaryTypeName","src":"519:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"to","nameLocation":"554:2:16","nodeType":"VariableDeclaration","scope":3207,"src":"546:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"546:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"deadline","nameLocation":"571:8:16","nodeType":"VariableDeclaration","scope":3207,"src":"566:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint","nodeType":"ElementaryTypeName","src":"566:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"approveMax","nameLocation":"594:10:16","nodeType":"VariableDeclaration","scope":3207,"src":"589:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3195,"name":"bool","nodeType":"ElementaryTypeName","src":"589:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"v","nameLocation":"612:1:16","nodeType":"VariableDeclaration","scope":3207,"src":"606:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3197,"name":"uint8","nodeType":"ElementaryTypeName","src":"606:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"r","nameLocation":"623:1:16","nodeType":"VariableDeclaration","scope":3207,"src":"615:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"615:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3202,"mutability":"mutable","name":"s","nameLocation":"634:1:16","nodeType":"VariableDeclaration","scope":3207,"src":"626:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"626:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"433:208:16"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"amountETH","nameLocation":"665:9:16","nodeType":"VariableDeclaration","scope":3207,"src":"660:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint","nodeType":"ElementaryTypeName","src":"660:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"659:16:16"},"scope":3248,"src":"367:309:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5c11d795","id":3221,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","nameLocation":"691:53:16","nodeType":"FunctionDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"amountIn","nameLocation":"759:8:16","nodeType":"VariableDeclaration","scope":3221,"src":"754:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint","nodeType":"ElementaryTypeName","src":"754:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"amountOutMin","nameLocation":"782:12:16","nodeType":"VariableDeclaration","scope":3221,"src":"777:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3210,"name":"uint","nodeType":"ElementaryTypeName","src":"777:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"path","nameLocation":"823:4:16","nodeType":"VariableDeclaration","scope":3221,"src":"804:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3212,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3213,"nodeType":"ArrayTypeName","src":"804:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"to","nameLocation":"845:2:16","nodeType":"VariableDeclaration","scope":3221,"src":"837:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"deadline","nameLocation":"862:8:16","nodeType":"VariableDeclaration","scope":3221,"src":"857:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint","nodeType":"ElementaryTypeName","src":"857:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"744:132:16"},"returnParameters":{"id":3220,"nodeType":"ParameterList","parameters":[],"src":"885:0:16"},"scope":3248,"src":"682:204:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6f9de95","id":3233,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","nameLocation":"900:50:16","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"amountOutMin","nameLocation":"965:12:16","nodeType":"VariableDeclaration","scope":3233,"src":"960:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint","nodeType":"ElementaryTypeName","src":"960:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"path","nameLocation":"1006:4:16","nodeType":"VariableDeclaration","scope":3233,"src":"987:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"987:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3225,"nodeType":"ArrayTypeName","src":"987:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"to","nameLocation":"1028:2:16","nodeType":"VariableDeclaration","scope":3233,"src":"1020:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3227,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"deadline","nameLocation":"1045:8:16","nodeType":"VariableDeclaration","scope":3233,"src":"1040:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint","nodeType":"ElementaryTypeName","src":"1040:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"950:109:16"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[],"src":"1076:0:16"},"scope":3248,"src":"891:186:16","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"791ac947","id":3247,"implemented":false,"kind":"function","modifiers":[],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","nameLocation":"1091:50:16","nodeType":"FunctionDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"amountIn","nameLocation":"1156:8:16","nodeType":"VariableDeclaration","scope":3247,"src":"1151:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint","nodeType":"ElementaryTypeName","src":"1151:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"amountOutMin","nameLocation":"1179:12:16","nodeType":"VariableDeclaration","scope":3247,"src":"1174:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint","nodeType":"ElementaryTypeName","src":"1174:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"path","nameLocation":"1220:4:16","nodeType":"VariableDeclaration","scope":3247,"src":"1201:23:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"1201:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3239,"nodeType":"ArrayTypeName","src":"1201:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"to","nameLocation":"1242:2:16","nodeType":"VariableDeclaration","scope":3247,"src":"1234:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"deadline","nameLocation":"1259:8:16","nodeType":"VariableDeclaration","scope":3247,"src":"1254:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint","nodeType":"ElementaryTypeName","src":"1254:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1141:132:16"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[],"src":"1282:0:16"},"scope":3248,"src":"1082:201:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3249,"src":"62:1223:16","usedErrors":[],"usedEvents":[]}],"src":"0:1286:16"},"id":16},"src/AirdropERC20.sol":{"ast":{"absolutePath":"src/AirdropERC20.sol","exportedSymbols":{"AirdropERC20":[3546],"IERC20":[950],"ReentrancyGuard":[285],"SafeTransfer":[7396]},"id":3547,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3250,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"36:24:17"},{"absolutePath":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","file":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","id":3252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3547,"sourceUnit":286,"src":"62:100:17","symbolAliases":[{"foreign":{"id":3251,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"71:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","id":3254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3547,"sourceUnit":951,"src":"163:85:17","symbolAliases":[{"foreign":{"id":3253,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"172:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/lib/SafeTransfer.sol","file":"./lib/SafeTransfer.sol","id":3256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3547,"sourceUnit":7397,"src":"250:54:17","symbolAliases":[{"foreign":{"id":3255,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"259:12:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3258,"name":"ReentrancyGuard","nameLocations":["457:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"457:15:17"},"id":3259,"nodeType":"InheritanceSpecifier","src":"457:15:17"}],"canonicalName":"AirdropERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":3257,"nodeType":"StructuredDocumentation","src":"306:125:17","text":" @title AirdropERC20\n @author @neuro_0x\n @dev A contract for distributing ERC20 tokens to a list of recipients."},"fullyImplemented":true,"id":3546,"linearizedBaseContracts":[3546,285],"name":"AirdropERC20","nameLocation":"441:12:17","nodeType":"ContractDefinition","nodes":[{"errorSelector":"91c0aaa2","id":3261,"name":"NoRecipients","nameLocation":"485:12:17","nodeType":"ErrorDefinition","parameters":{"id":3260,"nodeType":"ParameterList","parameters":[],"src":"497:2:17"},"src":"479:21:17"},{"errorSelector":"81c609f7","id":3263,"name":"TokenAddressZero","nameLocation":"511:16:17","nodeType":"ErrorDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[],"src":"527:2:17"},"src":"505:25:17"},{"errorSelector":"5e81097b","id":3265,"name":"NotERC20","nameLocation":"541:8:17","nodeType":"ErrorDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[],"src":"549:2:17"},"src":"535:17:17"},{"errorSelector":"f4d678b8","id":3267,"name":"InsufficientBalance","nameLocation":"563:19:17","nodeType":"ErrorDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[],"src":"582:2:17"},"src":"557:28:17"},{"errorSelector":"13be252b","id":3269,"name":"InsufficientAllowance","nameLocation":"596:21:17","nodeType":"ErrorDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"617:2:17"},"src":"590:30:17"},{"constant":true,"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"626:47:17","text":"@dev The address of the native token (ETH)."},"functionSelector":"31f7d964","id":3273,"mutability":"constant","name":"NATIVE_TOKEN","nameLocation":"702:12:17","nodeType":"VariableDeclaration","scope":3546,"src":"678:81:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3271,"name":"address","nodeType":"ElementaryTypeName","src":"678:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307845656565654565656545654565654565456545656545454565656565456565656565656545456545","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"717:42:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"visibility":"public"},{"anonymous":false,"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"766:47:17","text":"@dev Emitted when an failed airdrop occurs."},"eventSelector":"35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff","id":3284,"name":"AirdropFailed","nameLocation":"824:13:17","nodeType":"EventDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"863:12:17","nodeType":"VariableDeclaration","scope":3284,"src":"847:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3275,"name":"address","nodeType":"ElementaryTypeName","src":"847:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3278,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"893:10:17","nodeType":"VariableDeclaration","scope":3284,"src":"877:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3280,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"921:9:17","nodeType":"VariableDeclaration","scope":3284,"src":"905:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3282,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"940:6:17","nodeType":"VariableDeclaration","scope":3284,"src":"932:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"837:115:17"},"src":"818:135:17"},{"canonicalName":"AirdropERC20.AirdropContent","documentation":{"id":3285,"nodeType":"StructuredDocumentation","src":"959:186:17","text":" @dev Details of amount and recipient for airdropped token.\n @param recipient The recipient of the tokens.\n @param amount The quantity of tokens to airdrop."},"id":3290,"members":[{"constant":false,"id":3287,"mutability":"mutable","name":"recipient","nameLocation":"1190:9:17","nodeType":"VariableDeclaration","scope":3290,"src":"1182:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3286,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"amount","nameLocation":"1217:6:17","nodeType":"VariableDeclaration","scope":3290,"src":"1209:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1209:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AirdropContent","nameLocation":"1157:14:17","nodeType":"StructDefinition","scope":3546,"src":"1150:80:17","visibility":"public"},{"body":{"id":3383,"nodeType":"Block","src":"1781:874:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3304,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"1795:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AirdropContent_$3290_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata[] calldata"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1804:6:17","memberName":"length","nodeType":"MemberAccess","src":"1795:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1795:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3312,"nodeType":"IfStatement","src":"1791:72:17","trueBody":{"id":3311,"nodeType":"Block","src":"1817:46:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3308,"name":"NoRecipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"1838:12:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1838:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3310,"nodeType":"RevertStatement","src":"1831:21:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3313,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1877:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1901:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1893:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3314,"name":"address","nodeType":"ElementaryTypeName","src":"1893:7:17","typeDescriptions":{}}},"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1893:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1877:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3323,"nodeType":"IfStatement","src":"1873:82:17","trueBody":{"id":3322,"nodeType":"Block","src":"1905:50:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3319,"name":"TokenAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"1926:16:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1926:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3321,"nodeType":"RevertStatement","src":"1919:25:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1969:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3325,"name":"NATIVE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"1985:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1969:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3331,"nodeType":"IfStatement","src":"1965:76:17","trueBody":{"id":3330,"nodeType":"Block","src":"1999:42:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3327,"name":"NotERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"2020:8:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3329,"nodeType":"RevertStatement","src":"2013:17:17"}]}},{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"len","nameLocation":"2059:3:17","nodeType":"VariableDeclaration","scope":3383,"src":"2051:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2051:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3336,"initialValue":{"expression":{"id":3334,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"2065:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AirdropContent_$3290_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata[] calldata"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2074:6:17","memberName":"length","nodeType":"MemberAccess","src":"2065:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2051:29:17"},{"body":{"id":3381,"nodeType":"Block","src":"2120:529:17","statements":[{"assignments":[3345],"declarations":[{"constant":false,"id":3345,"mutability":"mutable","name":"success","nameLocation":"2222:7:17","nodeType":"VariableDeclaration","scope":3381,"src":"2217:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3344,"name":"bool","nodeType":"ElementaryTypeName","src":"2217:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3358,"initialValue":{"arguments":[{"id":3347,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"2279:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3348,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"2293:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3349,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"2305:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AirdropContent_$3290_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata[] calldata"}},"id":3351,"indexExpression":{"id":3350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2314:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2305:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropContent_$3290_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2317:9:17","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":3287,"src":"2305:21:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3353,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"2328:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AirdropContent_$3290_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata[] calldata"}},"id":3355,"indexExpression":{"id":3354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2337:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2328:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropContent_$3290_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2340:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3289,"src":"2328:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3346,"name":"_transferCurrencyWithReturnVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"2248:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:99:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2217:130:17"},{"condition":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2366:8:17","subExpression":{"id":3359,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"2367:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3375,"nodeType":"IfStatement","src":"2362:177:17","trueBody":{"id":3374,"nodeType":"Block","src":"2376:163:17","statements":[{"eventCall":{"arguments":[{"id":3362,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"2456:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3363,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"2470:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3364,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"2482:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AirdropContent_$3290_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata[] calldata"}},"id":3366,"indexExpression":{"id":3365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2491:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2482:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropContent_$3290_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2494:9:17","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":3287,"src":"2482:21:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3368,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"2505:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AirdropContent_$3290_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata[] calldata"}},"id":3370,"indexExpression":{"id":3369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2514:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2505:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropContent_$3290_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent calldata"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2517:6:17","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3289,"src":"2505:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"AirdropFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"2442:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2442:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3373,"nodeType":"EmitStatement","src":"2437:87:17"}]}},{"id":3380,"nodeType":"UncheckedBlock","src":"2590:49:17","statements":[{"expression":{"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3376,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2618:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2623:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2618:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3379,"nodeType":"ExpressionStatement","src":"2618:6:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2110:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3342,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"2114:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2110:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3382,"initializationExpression":{"assignments":[3338],"declarations":[{"constant":false,"id":3338,"mutability":"mutable","name":"i","nameLocation":"2103:1:17","nodeType":"VariableDeclaration","scope":3382,"src":"2095:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3340,"initialValue":{"hexValue":"30","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2095:13:17"},"nodeType":"ForStatement","src":"2090:559:17"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"1236:357:17","text":" @notice Allows the user to distribute ERC20 tokens to a list of addresses.\n @param tokenAddress The address of the token to be airdropped.\n @param tokenOwner The address of the token owner initiating the airdrop.\n @param contents A list of recipients and amounts for the airdrop.\n @dev needs Approval"},"functionSelector":"da26dbf1","id":3384,"implemented":true,"kind":"function","modifiers":[{"id":3302,"kind":"modifierInvocation","modifierName":{"id":3301,"name":"nonReentrant","nameLocations":["1764:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"1764:12:17"},"nodeType":"ModifierInvocation","src":"1764:12:17"}],"name":"airdrop","nameLocation":"1607:7:17","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"tokenAddress","nameLocation":"1632:12:17","nodeType":"VariableDeclaration","scope":3384,"src":"1624:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"1624:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"tokenOwner","nameLocation":"1662:10:17","nodeType":"VariableDeclaration","scope":3384,"src":"1654:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3294,"name":"address","nodeType":"ElementaryTypeName","src":"1654:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"contents","nameLocation":"1708:8:17","nodeType":"VariableDeclaration","scope":3384,"src":"1682:34:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AirdropContent_$3290_calldata_ptr_$dyn_calldata_ptr","typeString":"struct AirdropERC20.AirdropContent[]"},"typeName":{"baseType":{"id":3297,"nodeType":"UserDefinedTypeName","pathNode":{"id":3296,"name":"AirdropContent","nameLocations":["1682:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":3290,"src":"1682:14:17"},"referencedDeclaration":3290,"src":"1682:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropContent_$3290_storage_ptr","typeString":"struct AirdropERC20.AirdropContent"}},"id":3298,"nodeType":"ArrayTypeName","src":"1682:16:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AirdropContent_$3290_storage_$dyn_storage_ptr","typeString":"struct AirdropERC20.AirdropContent[]"}},"visibility":"internal"}],"src":"1614:108:17"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[],"src":"1781:0:17"},"scope":3546,"src":"1598:1057:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3499,"nodeType":"Block","src":"3269:1140:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3337:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3326:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3408,"nodeType":"IfStatement","src":"3322:85:17","trueBody":{"id":3407,"nodeType":"Block","src":"3340:67:17","statements":[{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3401,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3354:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3364:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3354:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3404,"nodeType":"ExpressionStatement","src":"3354:14:17"},{"expression":{"id":3405,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3389:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3397,"id":3406,"nodeType":"Return","src":"3382:14:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"3494:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3410,"name":"NATIVE_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"3507:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3494:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3497,"nodeType":"Block","src":"3595:808:17","statements":[{"assignments":[3424,3426],"declarations":[{"constant":false,"id":3424,"mutability":"mutable","name":"success_","nameLocation":"3684:8:17","nodeType":"VariableDeclaration","scope":3497,"src":"3679:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3423,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"data_","nameLocation":"3707:5:17","nodeType":"VariableDeclaration","scope":3497,"src":"3694:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3425,"name":"bytes","nodeType":"ElementaryTypeName","src":"3694:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3439,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":3431,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"3818:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$950_$","typeString":"type(contract IERC20)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3825:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":949,"src":"3818:19:17","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transferFrom(address,address,uint256) returns (bool)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3838:8:17","memberName":"selector","nodeType":"MemberAccess","src":"3818:28:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3434,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"3848:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3435,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"3855:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3436,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3860:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3429,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3795:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3799:18:17","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3795:22:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3795:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3427,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"3780:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3790:4:17","memberName":"call","nodeType":"MemberAccess","src":"3780:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3780:89:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3678:191:17"},{"expression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3440,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3884:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3441,"name":"success_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"3894:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3884:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3443,"nodeType":"ExpressionStatement","src":"3884:18:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3992:8:17","subExpression":{"id":3444,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3993:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3446,"name":"data_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"4005:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4011:6:17","memberName":"length","nodeType":"MemberAccess","src":"4005:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4020:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4005:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4025:26:17","subExpression":{"arguments":[{"id":3452,"name":"data_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"4037:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4045:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":3453,"name":"bool","nodeType":"ElementaryTypeName","src":"4045:4:17","typeDescriptions":{}}}],"id":3455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4044:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":3450,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4026:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4030:6:17","memberName":"decode","nodeType":"MemberAccess","src":"4026:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4026:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4005:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4004:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3992:60:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3496,"nodeType":"IfStatement","src":"3988:405:17","trueBody":{"id":3495,"nodeType":"Block","src":"4054:339:17","statements":[{"expression":{"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3461,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"4072:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4082:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4072:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3464,"nodeType":"ExpressionStatement","src":"4072:15:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3469,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"4138:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3466,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"4117:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3465,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4110:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$950_$","typeString":"type(contract IERC20)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4110:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4128:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":907,"src":"4110:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4110:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3471,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"4147:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4110:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3477,"nodeType":"IfStatement","src":"4106:119:17","trueBody":{"id":3476,"nodeType":"Block","src":"4156:69:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3473,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"4185:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4185:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3475,"nodeType":"RevertStatement","src":"4178:28:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3482,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"4275:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3485,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4290:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20_$3546","typeString":"contract AirdropERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropERC20_$3546","typeString":"contract AirdropERC20"}],"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4282:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3483,"name":"address","nodeType":"ElementaryTypeName","src":"4282:7:17","typeDescriptions":{}}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3479,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"4254:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3478,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4247:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$950_$","typeString":"type(contract IERC20)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4265:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":927,"src":"4247:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3488,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"4299:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4247:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3494,"nodeType":"IfStatement","src":"4243:136:17","trueBody":{"id":3493,"nodeType":"Block","src":"4308:71:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3490,"name":"InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"4337:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3492,"nodeType":"RevertStatement","src":"4330:30:17"}]}}]}}]},"id":3498,"nodeType":"IfStatement","src":"3490:913:17","trueBody":{"id":3422,"nodeType":"Block","src":"3521:68:17","statements":[{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3412,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3396,"src":"3536:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},null],"id":3413,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3535:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$__$","typeString":"tuple(bool,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3575:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3414,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"3548:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3552:4:17","memberName":"call","nodeType":"MemberAccess","src":"3548:8:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3416,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"3565:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3548:26:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"3535:43:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3421,"nodeType":"ExpressionStatement","src":"3535:43:17"}]}}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"2661:410:17","text":" @dev Attempts to transfer the specified currency (either ERC20 or native) from the sender to the recipient.\n @param _currency The address of the currency to be transferred.\n @param _from The sender's address.\n @param _to The recipient's address.\n @param _amount The amount to be transferred.\n @return success A boolean indicating if the transfer was successful."},"id":3500,"implemented":true,"kind":"function","modifiers":[],"name":"_transferCurrencyWithReturnVal","nameLocation":"3085:30:17","nodeType":"FunctionDefinition","parameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"_currency","nameLocation":"3133:9:17","nodeType":"VariableDeclaration","scope":3500,"src":"3125:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3386,"name":"address","nodeType":"ElementaryTypeName","src":"3125:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"_from","nameLocation":"3160:5:17","nodeType":"VariableDeclaration","scope":3500,"src":"3152:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3388,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"_to","nameLocation":"3183:3:17","nodeType":"VariableDeclaration","scope":3500,"src":"3175:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"3175:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3393,"mutability":"mutable","name":"_amount","nameLocation":"3204:7:17","nodeType":"VariableDeclaration","scope":3500,"src":"3196:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:102:17"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"success","nameLocation":"3256:7:17","nodeType":"VariableDeclaration","scope":3500,"src":"3251:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3395,"name":"bool","nodeType":"ElementaryTypeName","src":"3251:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3250:14:17"},"scope":3546,"src":"3076:1333:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3544,"nodeType":"Block","src":"4818:446:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"4867:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3513,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"4876:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4867:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3517,"nodeType":"IfStatement","src":"4863:49:17","trueBody":{"id":3516,"nodeType":"Block","src":"4881:31:17","statements":[{"functionReturnParameters":3511,"id":3515,"nodeType":"Return","src":"4895:7:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3518,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"4988:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3521,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5005:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20_$3546","typeString":"contract AirdropERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropERC20_$3546","typeString":"contract AirdropERC20"}],"id":3520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4997:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"4997:7:17","typeDescriptions":{}}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4988:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3542,"nodeType":"Block","src":"5093:165:17","statements":[{"expression":{"arguments":[{"id":3536,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"5216:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3537,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5227:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3538,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"5234:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3539,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5239:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3533,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"5186:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5199:16:17","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":7351,"src":"5186:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5186:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3541,"nodeType":"ExpressionStatement","src":"5186:61:17"}]},"id":3543,"nodeType":"IfStatement","src":"4984:274:17","trueBody":{"id":3532,"nodeType":"Block","src":"5012:75:17","statements":[{"expression":{"arguments":[{"id":3527,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"5052:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3528,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"5063:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3529,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5068:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3524,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"5026:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5039:12:17","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7395,"src":"5026:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5026:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3531,"nodeType":"ExpressionStatement","src":"5026:50:17"}]}}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"4415:298:17","text":" @dev Safely transfers ERC20 tokens from the sender to the recipient.\n @param _currency The address of the ERC20 token to be transferred.\n @param _from The sender's address.\n @param _to The recipient's address.\n @param _amount The amount to be transferred."},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferERC20","nameLocation":"4727:18:17","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"_currency","nameLocation":"4754:9:17","nodeType":"VariableDeclaration","scope":3545,"src":"4746:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3502,"name":"address","nodeType":"ElementaryTypeName","src":"4746:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"_from","nameLocation":"4773:5:17","nodeType":"VariableDeclaration","scope":3545,"src":"4765:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3504,"name":"address","nodeType":"ElementaryTypeName","src":"4765:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"_to","nameLocation":"4788:3:17","nodeType":"VariableDeclaration","scope":3545,"src":"4780:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"4780:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"_amount","nameLocation":"4801:7:17","nodeType":"VariableDeclaration","scope":3545,"src":"4793:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"4793:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4745:64:17"},"returnParameters":{"id":3511,"nodeType":"ParameterList","parameters":[],"src":"4818:0:17"},"scope":3546,"src":"4718:546:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3547,"src":"432:4834:17","usedErrors":[3261,3263,3265,3267,3269],"usedEvents":[3284]}],"src":"36:5231:17"},"id":17},"src/AirdropERC20Claimable.sol":{"ast":{"absolutePath":"src/AirdropERC20Claimable.sol","exportedSymbols":{"AirdropERC20Claimable":[3838],"IERC20":[950],"MerkleProof":[1606]},"id":3839,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3548,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"36:24:18"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","id":3550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3839,"sourceUnit":873,"src":"62:84:18","symbolAliases":[{"foreign":{"id":3549,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"71:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol","file":"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol","id":3552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3839,"sourceUnit":1607,"src":"147:102:18","symbolAliases":[{"foreign":{"id":3551,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"156:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AirdropERC20Claimable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"251:155:18","text":" @title AirdropERC20Claimable\n @author @neuro_0x\n @dev A contract for airdropping ERC20 tokens to specific recipients based on Merkle proofs."},"fullyImplemented":true,"id":3838,"linearizedBaseContracts":[3838],"name":"AirdropERC20Claimable","nameLocation":"417:21:18","nodeType":"ContractDefinition","nodes":[{"errorSelector":"3c5a8084","id":3555,"name":"InvalidTransferAmount","nameLocation":"451:21:18","nodeType":"ErrorDefinition","parameters":{"id":3554,"nodeType":"ParameterList","parameters":[],"src":"472:2:18"},"src":"445:30:18"},{"errorSelector":"5228cdbf","id":3557,"name":"AirdropExpired","nameLocation":"486:14:18","nodeType":"ErrorDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[],"src":"500:2:18"},"src":"480:23:18"},{"errorSelector":"19c5d56a","id":3559,"name":"AlreadyClaimedMax","nameLocation":"514:17:18","nodeType":"ErrorDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[],"src":"531:2:18"},"src":"508:26:18"},{"errorSelector":"90b8ec18","id":3561,"name":"TransferFailed","nameLocation":"545:14:18","nodeType":"ErrorDefinition","parameters":{"id":3560,"nodeType":"ParameterList","parameters":[],"src":"559:2:18"},"src":"539:23:18"},{"errorSelector":"3d7c241d","id":3569,"name":"InvalidAirdropParameters","nameLocation":"573:24:18","nodeType":"ErrorDefinition","parameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"tokenOwner","nameLocation":"606:10:18","nodeType":"VariableDeclaration","scope":3569,"src":"598:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3562,"name":"address","nodeType":"ElementaryTypeName","src":"598:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"airdropTokenAddress","nameLocation":"626:19:18","nodeType":"VariableDeclaration","scope":3569,"src":"618:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"618:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3567,"mutability":"mutable","name":"airdropAmount","nameLocation":"655:13:18","nodeType":"VariableDeclaration","scope":3569,"src":"647:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:72:18"},"src":"567:103:18"},{"constant":false,"documentation":{"id":3570,"nodeType":"StructuredDocumentation","src":"676:51:18","text":"@dev The address of the token to be airdropped."},"functionSelector":"b73e0e8b","id":3572,"mutability":"mutable","name":"airdropTokenAddress","nameLocation":"747:19:18","nodeType":"VariableDeclaration","scope":3838,"src":"732:34:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3571,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"773:49:18","text":"@dev The owner of the token to be airdropped."},"functionSelector":"a3e67610","id":3575,"mutability":"mutable","name":"tokenOwner","nameLocation":"842:10:18","nodeType":"VariableDeclaration","scope":3838,"src":"827:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"859:54:18","text":"@dev The quantity of tokens available for airdrop."},"functionSelector":"91f7cfb9","id":3578,"mutability":"mutable","name":"availableAmount","nameLocation":"933:15:18","nodeType":"VariableDeclaration","scope":3838,"src":"918:30:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"955:45:18","text":"@dev Expiration timestamp of the airdrop."},"functionSelector":"9f43ddd2","id":3581,"mutability":"mutable","name":"expirationTimestamp","nameLocation":"1020:19:18","nodeType":"VariableDeclaration","scope":3838,"src":"1005:34:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":3582,"nodeType":"StructuredDocumentation","src":"1046:90:18","text":"@dev Maximum number of tokens that can be claimed by a wallet if not in the whitelist."},"functionSelector":"05981769","id":3584,"mutability":"mutable","name":"maxWalletClaimCount","nameLocation":"1156:19:18","nodeType":"VariableDeclaration","scope":3838,"src":"1141:34:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1141:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"1182:38:18","text":"@dev Merkle root of the whitelist."},"functionSelector":"2eb4a7ab","id":3587,"mutability":"mutable","name":"merkleRoot","nameLocation":"1240:10:18","nodeType":"VariableDeclaration","scope":3838,"src":"1225:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1225:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"1257:77:18","text":"@dev Mapping from address => total number of tokens a wallet has claimed."},"functionSelector":"7dc68077","id":3592,"mutability":"mutable","name":"totalClaimedByWallet","nameLocation":"1389:20:18","nodeType":"VariableDeclaration","scope":3838,"src":"1339:70:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3591,"keyName":"claimer","keyNameLocation":"1355:7:18","keyType":{"id":3589,"name":"address","nodeType":"ElementaryTypeName","src":"1347:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1339:42:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"amount","valueNameLocation":"1374:6:18","valueType":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"1416:40:18","text":"@dev Emitted when tokens are claimed"},"eventSelector":"896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430","id":3599,"name":"TokensClaimed","nameLocation":"1467:13:18","nodeType":"EventDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"1497:7:18","nodeType":"VariableDeclaration","scope":3599,"src":"1481:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3594,"name":"address","nodeType":"ElementaryTypeName","src":"1481:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3597,"indexed":false,"mutability":"mutable","name":"quantityClaimed","nameLocation":"1514:15:18","nodeType":"VariableDeclaration","scope":3599,"src":"1506:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1480:50:18"},"src":"1461:70:18"},{"body":{"id":3664,"nodeType":"Block","src":"2278:482:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"_tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2292:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2315:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2307:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3616,"name":"address","nodeType":"ElementaryTypeName","src":"2307:7:18","typeDescriptions":{}}},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2307:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2292:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"_airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"2321:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2353:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2345:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3622,"name":"address","nodeType":"ElementaryTypeName","src":"2345:7:18","typeDescriptions":{}}},"id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2321:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2292:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3628,"name":"_airdropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2359:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2377:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2359:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2292:86:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3639,"nodeType":"IfStatement","src":"2288:199:18","trueBody":{"id":3638,"nodeType":"Block","src":"2380:107:18","statements":[{"errorCall":{"arguments":[{"id":3633,"name":"_tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2426:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3634,"name":"_airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"2439:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3635,"name":"_airdropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2461:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3632,"name":"InvalidAirdropParameters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"2401:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) pure"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2401:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3637,"nodeType":"RevertStatement","src":"2394:82:18"}]}},{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3640,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"2497:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3641,"name":"_tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2510:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2497:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3643,"nodeType":"ExpressionStatement","src":"2497:24:18"},{"expression":{"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3644,"name":"airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"2531:19:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3645,"name":"_airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"2553:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2531:42:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3647,"nodeType":"ExpressionStatement","src":"2531:42:18"},{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3648,"name":"availableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"2583:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3649,"name":"_airdropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2601:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2583:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ExpressionStatement","src":"2583:32:18"},{"expression":{"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"expirationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"2625:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3653,"name":"_expirationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2647:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2625:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3655,"nodeType":"ExpressionStatement","src":"2625:42:18"},{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3656,"name":"maxWalletClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"2677:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3657,"name":"_maxWalletClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"2699:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2677:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3659,"nodeType":"ExpressionStatement","src":"2677:42:18"},{"expression":{"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3660,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"2729:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3661,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2742:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2729:24:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3663,"nodeType":"ExpressionStatement","src":"2729:24:18"}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"1537:514:18","text":" @dev Initializes the contract.\n @param _tokenOwner The owner of the token to be airdropped.\n @param _airdropTokenAddress The address of the token to be airdropped.\n @param _airdropAmount The quantity of tokens available for airdrop.\n @param _expirationTimestamp Expiration timestamp of the airdrop.\n @param _maxWalletClaimCount Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\n @param _merkleRoot Merkle root of the whitelist."},"id":3665,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"_tokenOwner","nameLocation":"2085:11:18","nodeType":"VariableDeclaration","scope":3665,"src":"2077:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3601,"name":"address","nodeType":"ElementaryTypeName","src":"2077:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3604,"mutability":"mutable","name":"_airdropTokenAddress","nameLocation":"2114:20:18","nodeType":"VariableDeclaration","scope":3665,"src":"2106:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3603,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3606,"mutability":"mutable","name":"_airdropAmount","nameLocation":"2152:14:18","nodeType":"VariableDeclaration","scope":3665,"src":"2144:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2144:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"_expirationTimestamp","nameLocation":"2184:20:18","nodeType":"VariableDeclaration","scope":3665,"src":"2176:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2176:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3610,"mutability":"mutable","name":"_maxWalletClaimCount","nameLocation":"2222:20:18","nodeType":"VariableDeclaration","scope":3665,"src":"2214:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"_merkleRoot","nameLocation":"2260:11:18","nodeType":"VariableDeclaration","scope":3665,"src":"2252:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2252:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2067:210:18"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[],"src":"2278:0:18"},"scope":3838,"src":"2056:704:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3696,"nodeType":"Block","src":"3122:290:18","statements":[{"expression":{"arguments":[{"expression":{"id":3677,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3172:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3176:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3172:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3679,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3184:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3680,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"3192:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3681,"name":"proofMaxQuantityForWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"3200:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3676,"name":"verifyClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"3160:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bytes32[] calldata,uint256) view"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3160:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3683,"nodeType":"ExpressionStatement","src":"3160:66:18"},{"expression":{"arguments":[{"expression":{"id":3685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3298:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3302:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3298:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3687,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3310:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3684,"name":"_transferClaimedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"3275:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3275:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3689,"nodeType":"ExpressionStatement","src":"3275:42:18"},{"eventCall":{"arguments":[{"expression":{"id":3691,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3386:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3390:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3386:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"3398:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3690,"name":"TokensClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"3372:13:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3372:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3695,"nodeType":"EmitStatement","src":"3367:38:18"}]},"documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"2766:249:18","text":" @dev Claims tokens from the airdrop.\n @param amount The quantity of tokens to claim.\n @param proofs Claims proofs.\n @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet."},"functionSelector":"f339f526","id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"3029:5:18","nodeType":"FunctionDefinition","parameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"amount","nameLocation":"3043:6:18","nodeType":"VariableDeclaration","scope":3697,"src":"3035:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3035:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"proofs","nameLocation":"3070:6:18","nodeType":"VariableDeclaration","scope":3697,"src":"3051:25:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3669,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3051:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3670,"nodeType":"ArrayTypeName","src":"3051:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"proofMaxQuantityForWallet","nameLocation":"3086:25:18","nodeType":"VariableDeclaration","scope":3697,"src":"3078:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"3078:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3034:78:18"},"returnParameters":{"id":3675,"nodeType":"ParameterList","parameters":[],"src":"3122:0:18"},"scope":3838,"src":"3020:392:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3788,"nodeType":"Block","src":"3934:1065:18","statements":[{"assignments":[3711],"declarations":[{"constant":false,"id":3711,"mutability":"mutable","name":"verified","nameLocation":"3949:8:18","nodeType":"VariableDeclaration","scope":3788,"src":"3944:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3710,"name":"bool","nodeType":"ElementaryTypeName","src":"3944:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3712,"nodeType":"VariableDeclarationStatement","src":"3944:13:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"4011:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4033:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4025:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4025:7:18","typeDescriptions":{}}},"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4011:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3735,"nodeType":"IfStatement","src":"4007:186:18","trueBody":{"id":3734,"nodeType":"Block","src":"4037:156:18","statements":[{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"4051:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3722,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"4097:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":3723,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"4105:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":3727,"name":"claimant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"4144:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3728,"name":"proofMaxQuantityForWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"4154:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3725,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4127:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"4127:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3724,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4117:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3720,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"4078:11:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1606_$","typeString":"type(library MerkleProof)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4090:6:18","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":1102,"src":"4078:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4078:104:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4051:131:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3733,"nodeType":"ExpressionStatement","src":"4051:131:18"}]}},{"assignments":[3737],"declarations":[{"constant":false,"id":3737,"mutability":"mutable","name":"supplyClaimedAlready","nameLocation":"4269:20:18","nodeType":"VariableDeclaration","scope":3788,"src":"4261:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"4261:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3741,"initialValue":{"baseExpression":{"id":3738,"name":"totalClaimedByWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"4292:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3740,"indexExpression":{"id":3739,"name":"claimant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"4313:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4292:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4261:61:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3742,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4376:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4386:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4376:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4391:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3746,"name":"availableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"4400:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4391:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4376:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3753,"nodeType":"IfStatement","src":"4372:100:18","trueBody":{"id":3752,"nodeType":"Block","src":"4417:55:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3749,"name":"InvalidTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"4438:21:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3751,"nodeType":"RevertStatement","src":"4431:30:18"}]}},{"assignments":[3755],"declarations":[{"constant":false,"id":3755,"mutability":"mutable","name":"expTimestamp","nameLocation":"4534:12:18","nodeType":"VariableDeclaration","scope":3788,"src":"4526:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4526:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3757,"initialValue":{"id":3756,"name":"expirationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"4549:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4526:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"expTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"4582:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4598:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4582:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3761,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4603:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4609:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"4603:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3763,"name":"expTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"4622:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4603:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4582:52:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3770,"nodeType":"IfStatement","src":"4578:106:18","trueBody":{"id":3769,"nodeType":"Block","src":"4636:48:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3766,"name":"AirdropExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"4657:14:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3768,"nodeType":"RevertStatement","src":"4650:23:18"}]}},{"assignments":[3772],"declarations":[{"constant":false,"id":3772,"mutability":"mutable","name":"claimLimitForWallet","nameLocation":"4795:19:18","nodeType":"VariableDeclaration","scope":3788,"src":"4787:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"4787:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3777,"initialValue":{"condition":{"id":3773,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"4817:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3775,"name":"maxWalletClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"4856:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4817:58:18","trueExpression":{"id":3774,"name":"proofMaxQuantityForWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"4828:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4787:88:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4889:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3779,"name":"supplyClaimedAlready","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"4898:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4889:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3781,"name":"claimLimitForWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"4921:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4889:51:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3787,"nodeType":"IfStatement","src":"4885:108:18","trueBody":{"id":3786,"nodeType":"Block","src":"4942:51:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3783,"name":"AlreadyClaimedMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"4963:17:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4963:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3785,"nodeType":"RevertStatement","src":"4956:26:18"}]}}]},"documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"3418:324:18","text":" @dev Verifies the claim and reverts if the claim is invalid.\n @param claimant The address of the claimer.\n @param amount The quantity of tokens to claim.\n @param proofs Claims proofs.\n @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet."},"functionSelector":"097b3cdb","id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"verifyClaim","nameLocation":"3756:11:18","nodeType":"FunctionDefinition","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"claimant","nameLocation":"3785:8:18","nodeType":"VariableDeclaration","scope":3789,"src":"3777:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3699,"name":"address","nodeType":"ElementaryTypeName","src":"3777:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"amount","nameLocation":"3811:6:18","nodeType":"VariableDeclaration","scope":3789,"src":"3803:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3803:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3705,"mutability":"mutable","name":"proofs","nameLocation":"3846:6:18","nodeType":"VariableDeclaration","scope":3789,"src":"3827:25:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3827:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3704,"nodeType":"ArrayTypeName","src":"3827:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"proofMaxQuantityForWallet","nameLocation":"3870:25:18","nodeType":"VariableDeclaration","scope":3789,"src":"3862:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"3862:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3767:134:18"},"returnParameters":{"id":3709,"nodeType":"ParameterList","parameters":[],"src":"3934:0:18"},"scope":3838,"src":"3747:1252:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3836,"nodeType":"Block","src":"5262:556:18","statements":[{"expression":{"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3797,"name":"totalClaimedByWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"5476:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3800,"indexExpression":{"expression":{"id":3798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5497:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5501:6:18","memberName":"sender","nodeType":"MemberAccess","src":"5497:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5476:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3801,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5512:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5476:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3803,"nodeType":"ExpressionStatement","src":"5476:42:18"},{"expression":{"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3804,"name":"availableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"5528:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3805,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5547:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5528:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3807,"nodeType":"ExpressionStatement","src":"5528:25:18"},{"assignments":[3810],"declarations":[{"constant":false,"id":3810,"mutability":"mutable","name":"airdropToken","nameLocation":"5571:12:18","nodeType":"VariableDeclaration","scope":3836,"src":"5564:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"},"typeName":{"id":3809,"nodeType":"UserDefinedTypeName","pathNode":{"id":3808,"name":"IERC20","nameLocations":["5564:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"5564:6:18"},"referencedDeclaration":950,"src":"5564:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3814,"initialValue":{"arguments":[{"id":3812,"name":"airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"5593:19:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3811,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5586:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$950_$","typeString":"type(contract IERC20)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5586:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"5564:49:18"},{"condition":{"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5627:41:18","subExpression":{"arguments":[{"id":3817,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"5650:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3818,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5661:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3815,"name":"airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"5628:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5641:8:18","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":917,"src":"5628:21:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5628:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3825,"nodeType":"IfStatement","src":"5623:95:18","trueBody":{"id":3824,"nodeType":"Block","src":"5670:48:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3821,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"5691:14:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5691:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3823,"nodeType":"RevertStatement","src":"5684:23:18"}]}},{"expression":{"arguments":[{"arguments":[{"id":3829,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"5761:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3830,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"5773:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5784:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3827,"name":"airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"5735:12:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5748:12:18","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":949,"src":"5735:25:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5735:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5793:17:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3826,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5727:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5727:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3835,"nodeType":"ExpressionStatement","src":"5727:84:18"}]},"documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"5005:177:18","text":" @dev Transfers the claimed tokens to the recipient.\n @param recipient The recipient of the tokens.\n @param amount The quantity of tokens to claim."},"id":3837,"implemented":true,"kind":"function","modifiers":[],"name":"_transferClaimedTokens","nameLocation":"5196:22:18","nodeType":"FunctionDefinition","parameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"recipient","nameLocation":"5227:9:18","nodeType":"VariableDeclaration","scope":3837,"src":"5219:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3791,"name":"address","nodeType":"ElementaryTypeName","src":"5219:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"amount","nameLocation":"5246:6:18","nodeType":"VariableDeclaration","scope":3837,"src":"5238:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5238:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5218:35:18"},"returnParameters":{"id":3796,"nodeType":"ParameterList","parameters":[],"src":"5262:0:18"},"scope":3838,"src":"5187:631:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3839,"src":"408:5412:18","usedErrors":[3555,3557,3559,3561,3569],"usedEvents":[3599]}],"src":"36:5785:18"},"id":18},"src/AirdropERC20ClaimableFactory.sol":{"ast":{"absolutePath":"src/AirdropERC20ClaimableFactory.sol","exportedSymbols":{"AirdropERC20Claimable":[3838],"AirdropERC20ClaimableFactory":[3880]},"id":3881,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3840,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"36:24:19"},{"absolutePath":"src/AirdropERC20Claimable.sol","file":"./AirdropERC20Claimable.sol","id":3842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3881,"sourceUnit":3839,"src":"62:68:19","symbolAliases":[{"foreign":{"id":3841,"name":"AirdropERC20Claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"71:21:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AirdropERC20ClaimableFactory","contractDependencies":[3838],"contractKind":"contract","documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"132:155:19","text":" @title AirdropERC20ClaimableFactory\n @author @neuro_0x\n @notice A factory library to deploy instances of the AirdropERC20Claimable contract."},"fullyImplemented":true,"id":3880,"linearizedBaseContracts":[3880],"name":"AirdropERC20ClaimableFactory","nameLocation":"297:28:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3878,"nodeType":"Block","src":"1262:301:19","statements":[{"assignments":[3864],"declarations":[{"constant":false,"id":3864,"mutability":"mutable","name":"claimableAirdrop","nameLocation":"1294:16:19","nodeType":"VariableDeclaration","scope":3878,"src":"1272:38:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"},"typeName":{"id":3863,"nodeType":"UserDefinedTypeName","pathNode":{"id":3862,"name":"AirdropERC20Claimable","nameLocations":["1272:21:19"],"nodeType":"IdentifierPath","referencedDeclaration":3838,"src":"1272:21:19"},"referencedDeclaration":3838,"src":"1272:21:19","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}},"visibility":"internal"}],"id":3875,"initialValue":{"arguments":[{"id":3868,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"1352:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3869,"name":"airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"1376:19:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3870,"name":"airdropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"1409:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3871,"name":"expirationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"1436:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3872,"name":"maxWalletClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"1469:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3873,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"1502:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1313:25:19","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_contract$_AirdropERC20Claimable_$3838_$","typeString":"function (address,address,uint256,uint256,uint256,bytes32) returns (contract AirdropERC20Claimable)"},"typeName":{"id":3866,"nodeType":"UserDefinedTypeName","pathNode":{"id":3865,"name":"AirdropERC20Claimable","nameLocations":["1317:21:19"],"nodeType":"IdentifierPath","referencedDeclaration":3838,"src":"1317:21:19"},"referencedDeclaration":3838,"src":"1317:21:19","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1313:209:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}},"nodeType":"VariableDeclarationStatement","src":"1272:250:19"},{"expression":{"id":3876,"name":"claimableAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"1540:16:19","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}},"functionReturnParameters":3861,"id":3877,"nodeType":"Return","src":"1533:23:19"}]},"documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"332:617:19","text":" @dev Launch a new instance of the CoinGenieAirdropClaimable Contract.\n @param tokenOwner The address of the token owner\n @param airdropTokenAddress The address of the airdrop token\n @param airdropAmount The amount of tokens available for airdrop\n @param expirationTimestamp The expiration timestamp of the airdrop\n @param maxWalletClaimCount The maximum number of tokens that can be claimed by a wallet if not in the whitelist\n @param merkleRoot The merkle root of the whitelist\n @return newAirdrop The address of the newly deployed airdrop contract"},"functionSelector":"9b1de1ff","id":3879,"implemented":true,"kind":"function","modifiers":[],"name":"createClaimableAirdrop","nameLocation":"963:22:19","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"tokenOwner","nameLocation":"1003:10:19","nodeType":"VariableDeclaration","scope":3879,"src":"995:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3845,"name":"address","nodeType":"ElementaryTypeName","src":"995:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"airdropTokenAddress","nameLocation":"1031:19:19","nodeType":"VariableDeclaration","scope":3879,"src":"1023:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3847,"name":"address","nodeType":"ElementaryTypeName","src":"1023:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3850,"mutability":"mutable","name":"airdropAmount","nameLocation":"1068:13:19","nodeType":"VariableDeclaration","scope":3879,"src":"1060:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"expirationTimestamp","nameLocation":"1099:19:19","nodeType":"VariableDeclaration","scope":3879,"src":"1091:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1091:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"maxWalletClaimCount","nameLocation":"1136:19:19","nodeType":"VariableDeclaration","scope":3879,"src":"1128:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1128:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"merkleRoot","nameLocation":"1173:10:19","nodeType":"VariableDeclaration","scope":3879,"src":"1165:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1165:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"985:204:19"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"newAirdrop","nameLocation":"1246:10:19","nodeType":"VariableDeclaration","scope":3879,"src":"1224:32:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"},"typeName":{"id":3859,"nodeType":"UserDefinedTypeName","pathNode":{"id":3858,"name":"AirdropERC20Claimable","nameLocations":["1224:21:19"],"nodeType":"IdentifierPath","referencedDeclaration":3838,"src":"1224:21:19"},"referencedDeclaration":3838,"src":"1224:21:19","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}},"visibility":"internal"}],"src":"1223:34:19"},"scope":3880,"src":"954:609:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3881,"src":"288:1277:19","usedErrors":[],"usedEvents":[]}],"src":"36:1530:19"},"id":19},"src/CoinGenie.sol":{"ast":{"absolutePath":"src/CoinGenie.sol","exportedSymbols":{"AirdropERC20Claimable":[3838],"AirdropERC20ClaimableFactory":[3880],"CoinGenie":[4643],"Common":[7282],"ERC20Factory":[6111],"IERC20":[950],"IUniswapV2Pair":[2836],"IUniswapV2Router02":[3248],"Ownable":[112],"ReentrancyGuard":[285],"SafeMath":[1918],"SafeTransfer":[7396]},"id":4644,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3882,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"36:24:20"},{"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","file":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","id":3884,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":113,"src":"62:82:20","symbolAliases":[{"foreign":{"id":3883,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"71:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","file":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","id":3886,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":286,"src":"145:100:20","symbolAliases":[{"foreign":{"id":3885,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"154:15:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","id":3888,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":951,"src":"246:85:20","symbolAliases":[{"foreign":{"id":3887,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"255:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol","file":"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol","id":3890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":1919,"src":"332:88:20","symbolAliases":[{"foreign":{"id":3889,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"341:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol","file":"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol","id":3892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":2837,"src":"422:85:20","symbolAliases":[{"foreign":{"id":3891,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"431:14:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","file":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","id":3894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":3249,"src":"508:98:20","symbolAliases":[{"foreign":{"id":3893,"name":"IUniswapV2Router02","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"517:18:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/ERC20Factory.sol","file":"./ERC20Factory.sol","id":3896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":6112,"src":"608:50:20","symbolAliases":[{"foreign":{"id":3895,"name":"ERC20Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"617:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/AirdropERC20Claimable.sol","file":"./AirdropERC20Claimable.sol","id":3898,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":3839,"src":"659:68:20","symbolAliases":[{"foreign":{"id":3897,"name":"AirdropERC20Claimable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"668:21:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/AirdropERC20ClaimableFactory.sol","file":"./AirdropERC20ClaimableFactory.sol","id":3900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":3881,"src":"728:82:20","symbolAliases":[{"foreign":{"id":3899,"name":"AirdropERC20ClaimableFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"737:28:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/lib/Common.sol","file":"./lib/Common.sol","id":3902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":7283,"src":"811:42:20","symbolAliases":[{"foreign":{"id":3901,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"820:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/lib/SafeTransfer.sol","file":"./lib/SafeTransfer.sol","id":3904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4644,"sourceUnit":7397,"src":"854:54:20","symbolAliases":[{"foreign":{"id":3903,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"863:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3906,"name":"Ownable","nameLocations":["1044:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1044:7:20"},"id":3907,"nodeType":"InheritanceSpecifier","src":"1044:7:20"},{"baseName":{"id":3908,"name":"ReentrancyGuard","nameLocations":["1053:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"1053:15:20"},"id":3909,"nodeType":"InheritanceSpecifier","src":"1053:15:20"}],"canonicalName":"CoinGenie","contractDependencies":[],"contractKind":"contract","documentation":{"id":3905,"nodeType":"StructuredDocumentation","src":"910:111:20","text":" @title CoinGenie\n @author @neuro_0x\n @dev The orchestrator contract for the CoinGenie ecosystem."},"fullyImplemented":true,"id":4643,"linearizedBaseContracts":[4643,285,112,1078],"name":"CoinGenie","nameLocation":"1031:9:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3912,"libraryName":{"id":3910,"name":"SafeMath","nameLocations":["1081:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":1918,"src":"1081:8:20"},"nodeType":"UsingForDirective","src":"1075:27:20","typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"errorSelector":"dcaf71db","id":3918,"name":"ShareToHigh","nameLocation":"1114:11:20","nodeType":"ErrorDefinition","parameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"share","nameLocation":"1134:5:20","nodeType":"VariableDeclaration","scope":3918,"src":"1126:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1126:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"maxShare","nameLocation":"1149:8:20","nodeType":"VariableDeclaration","scope":3918,"src":"1141:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"1141:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1125:33:20"},"src":"1108:51:20"},{"errorSelector":"699273b3","id":3923,"name":"InvalidPayoutCategory","nameLocation":"1171:21:20","nodeType":"ErrorDefinition","parameters":{"id":3922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"category","nameLocation":"1208:8:20","nodeType":"VariableDeclaration","scope":3923,"src":"1193:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"},"typeName":{"id":3920,"nodeType":"UserDefinedTypeName","pathNode":{"id":3919,"name":"PayoutCategory","nameLocations":["1193:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":3980,"src":"1193:14:20"},"referencedDeclaration":3980,"src":"1193:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"visibility":"internal"}],"src":"1192:25:20"},"src":"1165:53:20"},{"constant":true,"id":3926,"mutability":"constant","name":"MAX_BPS","nameLocation":"1249:7:20","nodeType":"VariableDeclaration","scope":4643,"src":"1224:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f303030","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1259:6:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10_000"},"visibility":"private"},{"constant":true,"documentation":{"id":3927,"nodeType":"StructuredDocumentation","src":"1272:115:20","text":"@dev The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps"},"functionSelector":"a82ed9ec","id":3933,"mutability":"constant","name":"UNISWAP_V2_ROUTER","nameLocation":"1427:17:20","nodeType":"VariableDeclaration","scope":4643,"src":"1392:125:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"},"typeName":{"id":3929,"nodeType":"UserDefinedTypeName","pathNode":{"id":3928,"name":"IUniswapV2Router02","nameLocations":["1392:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":3248,"src":"1392:18:20"},"referencedDeclaration":3248,"src":"1392:18:20","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"value":{"arguments":[{"hexValue":"307837613235306435363330423463463533393733396446324335644163623463363539463234383844","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1474:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3930,"name":"IUniswapV2Router02","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"1455:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Router02_$3248_$","typeString":"type(contract IUniswapV2Router02)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"visibility":"public"},{"canonicalName":"CoinGenie.LaunchedToken","id":3960,"members":[{"constant":false,"id":3935,"mutability":"mutable","name":"tokenAddress","nameLocation":"1563:12:20","nodeType":"VariableDeclaration","scope":3960,"src":"1555:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3934,"name":"address","nodeType":"ElementaryTypeName","src":"1555:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3937,"mutability":"mutable","name":"name","nameLocation":"1592:4:20","nodeType":"VariableDeclaration","scope":3960,"src":"1585:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3936,"name":"string","nodeType":"ElementaryTypeName","src":"1585:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3939,"mutability":"mutable","name":"symbol","nameLocation":"1613:6:20","nodeType":"VariableDeclaration","scope":3960,"src":"1606:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3938,"name":"string","nodeType":"ElementaryTypeName","src":"1606:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"initialSupply","nameLocation":"1637:13:20","nodeType":"VariableDeclaration","scope":3960,"src":"1629:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1629:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"isBurnable","nameLocation":"1665:10:20","nodeType":"VariableDeclaration","scope":3960,"src":"1660:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3942,"name":"bool","nodeType":"ElementaryTypeName","src":"1660:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3945,"mutability":"mutable","name":"isDeflationary","nameLocation":"1690:14:20","nodeType":"VariableDeclaration","scope":3960,"src":"1685:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3944,"name":"bool","nodeType":"ElementaryTypeName","src":"1685:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3947,"mutability":"mutable","name":"maxPerWallet","nameLocation":"1722:12:20","nodeType":"VariableDeclaration","scope":3960,"src":"1714:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"autoWithdrawThreshold","nameLocation":"1752:21:20","nodeType":"VariableDeclaration","scope":3960,"src":"1744:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1744:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"maxTaxSwap","nameLocation":"1791:10:20","nodeType":"VariableDeclaration","scope":3960,"src":"1783:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1783:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3953,"mutability":"mutable","name":"affiliateFeeRecipient","nameLocation":"1819:21:20","nodeType":"VariableDeclaration","scope":3960,"src":"1811:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"1811:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3955,"mutability":"mutable","name":"feeRecipient","nameLocation":"1858:12:20","nodeType":"VariableDeclaration","scope":3960,"src":"1850:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3954,"name":"address","nodeType":"ElementaryTypeName","src":"1850:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"feePercentage","nameLocation":"1888:13:20","nodeType":"VariableDeclaration","scope":3960,"src":"1880:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"burnPercentage","nameLocation":"1919:14:20","nodeType":"VariableDeclaration","scope":3960,"src":"1911:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1911:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"LaunchedToken","nameLocation":"1531:13:20","nodeType":"StructDefinition","scope":4643,"src":"1524:416:20","visibility":"public"},{"canonicalName":"CoinGenie.ClaimableAirdrop","id":3975,"members":[{"constant":false,"id":3962,"mutability":"mutable","name":"airdropAddress","nameLocation":"1988:14:20","nodeType":"VariableDeclaration","scope":3975,"src":"1980:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3961,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"tokenOwner","nameLocation":"2020:10:20","nodeType":"VariableDeclaration","scope":3975,"src":"2012:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3963,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3966,"mutability":"mutable","name":"airdropTokenAddress","nameLocation":"2048:19:20","nodeType":"VariableDeclaration","scope":3975,"src":"2040:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3965,"name":"address","nodeType":"ElementaryTypeName","src":"2040:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"airdropAmount","nameLocation":"2085:13:20","nodeType":"VariableDeclaration","scope":3975,"src":"2077:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2077:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3970,"mutability":"mutable","name":"expirationTimestamp","nameLocation":"2116:19:20","nodeType":"VariableDeclaration","scope":3975,"src":"2108:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2108:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3972,"mutability":"mutable","name":"maxWalletClaimCount","nameLocation":"2153:19:20","nodeType":"VariableDeclaration","scope":3975,"src":"2145:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2145:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3974,"mutability":"mutable","name":"merkleRoot","nameLocation":"2190:10:20","nodeType":"VariableDeclaration","scope":3975,"src":"2182:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"ClaimableAirdrop","nameLocation":"1953:16:20","nodeType":"StructDefinition","scope":4643,"src":"1946:261:20","visibility":"public"},{"canonicalName":"CoinGenie.PayoutCategory","id":3980,"members":[{"id":3976,"name":"Treasury","nameLocation":"2243:8:20","nodeType":"EnumValue","src":"2243:8:20"},{"id":3977,"name":"Dev","nameLocation":"2261:3:20","nodeType":"EnumValue","src":"2261:3:20"},{"id":3978,"name":"Legal","nameLocation":"2274:5:20","nodeType":"EnumValue","src":"2274:5:20"},{"id":3979,"name":"Marketing","nameLocation":"2289:9:20","nodeType":"EnumValue","src":"2289:9:20"}],"name":"PayoutCategory","nameLocation":"2218:14:20","nodeType":"EnumDefinition","src":"2213:91:20"},{"canonicalName":"CoinGenie.Payout","id":3985,"members":[{"constant":false,"id":3982,"mutability":"mutable","name":"receiver","nameLocation":"2350:8:20","nodeType":"VariableDeclaration","scope":3985,"src":"2334:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3981,"name":"address","nodeType":"ElementaryTypeName","src":"2334:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"share","nameLocation":"2376:5:20","nodeType":"VariableDeclaration","scope":3985,"src":"2368:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Payout","nameLocation":"2317:6:20","nodeType":"StructDefinition","scope":4643,"src":"2310:78:20","visibility":"public"},{"anonymous":false,"eventSelector":"da509e6642e963726d34ff4d505f1232025d5a4c3937d868bcad7e3e5950d6e6","id":3989,"name":"ERC20Launched","nameLocation":"2400:13:20","nodeType":"EventDefinition","parameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"indexed":true,"mutability":"mutable","name":"newTokenAddress","nameLocation":"2430:15:20","nodeType":"VariableDeclaration","scope":3989,"src":"2414:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3986,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2413:33:20"},"src":"2394:53:20"},{"anonymous":false,"eventSelector":"e4a84f0f254e5960c762412e401bbc3ea5b577c07be930ce4ea38862ddc5f652","id":4005,"name":"ClaimableAirdropCreated","nameLocation":"2459:23:20","nodeType":"EventDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"indexed":true,"mutability":"mutable","name":"airdropAddress","nameLocation":"2508:14:20","nodeType":"VariableDeclaration","scope":4005,"src":"2492:30:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3990,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3993,"indexed":false,"mutability":"mutable","name":"tokenOwner","nameLocation":"2540:10:20","nodeType":"VariableDeclaration","scope":4005,"src":"2532:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3992,"name":"address","nodeType":"ElementaryTypeName","src":"2532:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3995,"indexed":true,"mutability":"mutable","name":"airdropTokenAddress","nameLocation":"2576:19:20","nodeType":"VariableDeclaration","scope":4005,"src":"2560:35:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3994,"name":"address","nodeType":"ElementaryTypeName","src":"2560:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3997,"indexed":true,"mutability":"mutable","name":"airdropAmount","nameLocation":"2621:13:20","nodeType":"VariableDeclaration","scope":4005,"src":"2605:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2605:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3999,"indexed":false,"mutability":"mutable","name":"expirationTimestamp","nameLocation":"2652:19:20","nodeType":"VariableDeclaration","scope":4005,"src":"2644:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4001,"indexed":false,"mutability":"mutable","name":"maxWalletClaimCount","nameLocation":"2689:19:20","nodeType":"VariableDeclaration","scope":4005,"src":"2681:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4003,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"2726:10:20","nodeType":"VariableDeclaration","scope":4005,"src":"2718:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2482:260:20"},"src":"2453:290:20"},{"constant":false,"documentation":{"id":4006,"nodeType":"StructuredDocumentation","src":"2749:63:20","text":"@dev The threshold for the amount of tokens to swap for ETH"},"functionSelector":"3d9cce42","id":4009,"mutability":"mutable","name":"quoteThreshold","nameLocation":"2832:14:20","nodeType":"VariableDeclaration","scope":4643,"src":"2817:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4007,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e31","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2849:9:20","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"visibility":"public"},{"constant":false,"documentation":{"id":4010,"nodeType":"StructuredDocumentation","src":"2865:51:20","text":"@dev A mapping of payout categories to payouts."},"id":4016,"mutability":"mutable","name":"_payouts","nameLocation":"2979:8:20","nodeType":"VariableDeclaration","scope":4643,"src":"2921:66:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout)"},"typeName":{"id":4015,"keyName":"category","keyNameLocation":"2944:8:20","keyType":{"id":4012,"nodeType":"UserDefinedTypeName","pathNode":{"id":4011,"name":"PayoutCategory","nameLocations":["2929:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":3980,"src":"2929:14:20"},"referencedDeclaration":3980,"src":"2929:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"nodeType":"Mapping","src":"2921:49:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout)"},"valueName":"payout","valueNameLocation":"2963:6:20","valueType":{"id":4014,"nodeType":"UserDefinedTypeName","pathNode":{"id":4013,"name":"Payout","nameLocations":["2956:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":3985,"src":"2956:6:20"},"referencedDeclaration":3985,"src":"2956:6:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage_ptr","typeString":"struct CoinGenie.Payout"}}},"visibility":"private"},{"constant":false,"documentation":{"id":4017,"nodeType":"StructuredDocumentation","src":"2994:57:20","text":"@dev Stores the address of the ERC20Factory contract."},"id":4020,"mutability":"mutable","name":"_erc20Factory","nameLocation":"3077:13:20","nodeType":"VariableDeclaration","scope":4643,"src":"3056:34:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Factory_$6111","typeString":"contract ERC20Factory"},"typeName":{"id":4019,"nodeType":"UserDefinedTypeName","pathNode":{"id":4018,"name":"ERC20Factory","nameLocations":["3056:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":6111,"src":"3056:12:20"},"referencedDeclaration":6111,"src":"3056:12:20","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Factory_$6111","typeString":"contract ERC20Factory"}},"visibility":"private"},{"constant":false,"documentation":{"id":4021,"nodeType":"StructuredDocumentation","src":"3097:66:20","text":"@dev Stores the address of the AirdropERC20Claimable contract."},"id":4024,"mutability":"mutable","name":"_airdropClaimableERC20Factory","nameLocation":"3205:29:20","nodeType":"VariableDeclaration","scope":4643,"src":"3168:66:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20ClaimableFactory_$3880","typeString":"contract AirdropERC20ClaimableFactory"},"typeName":{"id":4023,"nodeType":"UserDefinedTypeName","pathNode":{"id":4022,"name":"AirdropERC20ClaimableFactory","nameLocations":["3168:28:20"],"nodeType":"IdentifierPath","referencedDeclaration":3880,"src":"3168:28:20"},"referencedDeclaration":3880,"src":"3168:28:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20ClaimableFactory_$3880","typeString":"contract AirdropERC20ClaimableFactory"}},"visibility":"private"},{"constant":false,"documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"3241:71:20","text":"@dev Stores the addresses of all airdrops launched by the contract."},"functionSelector":"4d9429e7","id":4028,"mutability":"mutable","name":"createdClaimableAirdrops","nameLocation":"3334:24:20","nodeType":"VariableDeclaration","scope":4643,"src":"3317:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4026,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4027,"nodeType":"ArrayTypeName","src":"3317:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"3365:60:20","text":"@dev A mapping of airdrops launched by a specific owner."},"functionSelector":"44ea3a66","id":4035,"mutability":"mutable","name":"claimableAirdropCreatedBy","nameLocation":"3490:25:20","nodeType":"VariableDeclaration","scope":4643,"src":"3430:85:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage_$","typeString":"mapping(address => struct CoinGenie.ClaimableAirdrop[])"},"typeName":{"id":4034,"keyName":"user","keyNameLocation":"3446:4:20","keyType":{"id":4030,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3430:52:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage_$","typeString":"mapping(address => struct CoinGenie.ClaimableAirdrop[])"},"valueName":"airdrops","valueNameLocation":"3473:8:20","valueType":{"baseType":{"id":4032,"nodeType":"UserDefinedTypeName","pathNode":{"id":4031,"name":"ClaimableAirdrop","nameLocations":["3454:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":3975,"src":"3454:16:20"},"referencedDeclaration":3975,"src":"3454:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimableAirdrop_$3975_storage_ptr","typeString":"struct CoinGenie.ClaimableAirdrop"}},"id":4033,"nodeType":"ArrayTypeName","src":"3454:18:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage_ptr","typeString":"struct CoinGenie.ClaimableAirdrop[]"}}},"visibility":"public"},{"constant":false,"documentation":{"id":4036,"nodeType":"StructuredDocumentation","src":"3522:69:20","text":"@dev Stores the addresses of all tokens launched by the contract."},"functionSelector":"10f2b141","id":4039,"mutability":"mutable","name":"launchedTokens","nameLocation":"3613:14:20","nodeType":"VariableDeclaration","scope":4643,"src":"3596:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4037,"name":"address","nodeType":"ElementaryTypeName","src":"3596:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4038,"nodeType":"ArrayTypeName","src":"3596:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":4040,"nodeType":"StructuredDocumentation","src":"3634:58:20","text":"@dev A mapping of tokens launched by a specific owner."},"functionSelector":"b5611107","id":4046,"mutability":"mutable","name":"tokensLaunchedBy","nameLocation":"3752:16:20","nodeType":"VariableDeclaration","scope":4643,"src":"3697:71:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage_$","typeString":"mapping(address => struct CoinGenie.LaunchedToken[])"},"typeName":{"id":4045,"keyName":"user","keyNameLocation":"3713:4:20","keyType":{"id":4041,"name":"address","nodeType":"ElementaryTypeName","src":"3705:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3697:47:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage_$","typeString":"mapping(address => struct CoinGenie.LaunchedToken[])"},"valueName":"tokens","valueNameLocation":"3737:6:20","valueType":{"baseType":{"id":4043,"nodeType":"UserDefinedTypeName","pathNode":{"id":4042,"name":"LaunchedToken","nameLocations":["3721:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3960,"src":"3721:13:20"},"referencedDeclaration":3960,"src":"3721:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_LaunchedToken_$3960_storage_ptr","typeString":"struct CoinGenie.LaunchedToken"}},"id":4044,"nodeType":"ArrayTypeName","src":"3721:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage_ptr","typeString":"struct CoinGenie.LaunchedToken[]"}}},"visibility":"public"},{"body":{"id":4118,"nodeType":"Block","src":"4108:743:20","statements":[{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"_erc20Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4118:13:20","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Factory_$6111","typeString":"contract ERC20Factory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4056,"name":"erc20FactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"4147:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4055,"name":"ERC20Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"4134:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Factory_$6111_$","typeString":"type(contract ERC20Factory)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4134:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Factory_$6111","typeString":"contract ERC20Factory"}},"src":"4118:49:20","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Factory_$6111","typeString":"contract ERC20Factory"}},"id":4059,"nodeType":"ExpressionStatement","src":"4118:49:20"},{"expression":{"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"_airdropClaimableERC20Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"4177:29:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20ClaimableFactory_$3880","typeString":"contract AirdropERC20ClaimableFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4062,"name":"airdropClaimableERC20FactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"4238:35:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4061,"name":"AirdropERC20ClaimableFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4209:28:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AirdropERC20ClaimableFactory_$3880_$","typeString":"type(contract AirdropERC20ClaimableFactory)"}},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4209:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20ClaimableFactory_$3880","typeString":"contract AirdropERC20ClaimableFactory"}},"src":"4177:97:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20ClaimableFactory_$3880","typeString":"contract AirdropERC20ClaimableFactory"}},"id":4065,"nodeType":"ExpressionStatement","src":"4177:97:20"},{"expression":{"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4066,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"4285:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4069,"indexExpression":{"expression":{"id":4067,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"4294:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4309:8:20","memberName":"Treasury","nodeType":"MemberAccess","referencedDeclaration":3976,"src":"4294:23:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4285:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"307842653739623433423135303532393044464530343239346134333339363364626565613733364242","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4360:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xBe79b43B1505290DFE04294a433963dbeea736BB"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4352:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4071,"name":"address","nodeType":"ElementaryTypeName","src":"4352:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4352:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"32303030","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4412:4:20","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"}],"id":4070,"name":"Payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"4333:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Payout_$3985_storage_ptr_$","typeString":"type(struct CoinGenie.Payout storage pointer)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4342:8:20","4405:5:20"],"names":["receiver","share"],"nodeType":"FunctionCall","src":"4333:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_memory_ptr","typeString":"struct CoinGenie.Payout memory"}},"src":"4285:134:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4078,"nodeType":"ExpressionStatement","src":"4285:134:20"},{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4079,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"4429:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4082,"indexExpression":{"expression":{"id":4080,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"4438:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4453:3:20","memberName":"Dev","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"4438:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4429:28:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"307836333342663833324463333943303032356137614561613136356563393141434630323036334435","id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4499:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x633Bf832Dc39C0025a7aEaa165ec91ACF02063D5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4491:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4084,"name":"address","nodeType":"ElementaryTypeName","src":"4491:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4491:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"35303030","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4551:4:20","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"}],"id":4083,"name":"Payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"4472:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Payout_$3985_storage_ptr_$","typeString":"type(struct CoinGenie.Payout storage pointer)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4481:8:20","4544:5:20"],"names":["receiver","share"],"nodeType":"FunctionCall","src":"4472:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_memory_ptr","typeString":"struct CoinGenie.Payout memory"}},"src":"4429:129:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4091,"nodeType":"ExpressionStatement","src":"4429:129:20"},{"expression":{"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4092,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"4568:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4095,"indexExpression":{"expression":{"id":4093,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"4577:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4592:5:20","memberName":"Legal","nodeType":"MemberAccess","referencedDeclaration":3978,"src":"4577:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4568:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"307862623637313241353133433264374633453137413430643039356137373363356439383537344232","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4640:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xbb6712A513C2d7F3E17A40d095a773c5d98574B2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4632:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4097,"name":"address","nodeType":"ElementaryTypeName","src":"4632:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"31353030","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4692:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1500_by_1","typeString":"int_const 1500"},"value":"1500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_rational_1500_by_1","typeString":"int_const 1500"}],"id":4096,"name":"Payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"4613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Payout_$3985_storage_ptr_$","typeString":"type(struct CoinGenie.Payout storage pointer)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4622:8:20","4685:5:20"],"names":["receiver","share"],"nodeType":"FunctionCall","src":"4613:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_memory_ptr","typeString":"struct CoinGenie.Payout memory"}},"src":"4568:131:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4104,"nodeType":"ExpressionStatement","src":"4568:131:20"},{"expression":{"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4105,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"4709:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4108,"indexExpression":{"expression":{"id":4106,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"4718:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4733:9:20","memberName":"Marketing","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"4718:24:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4709:34:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"307846313441333043303938393764324337343831633539303744303145633538456330393535356166","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xF14A30C09897d2C7481c5907D01Ec58Ec09555af"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4777:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4110,"name":"address","nodeType":"ElementaryTypeName","src":"4777:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"31353030","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1500_by_1","typeString":"int_const 1500"},"value":"1500"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_rational_1500_by_1","typeString":"int_const 1500"}],"id":4109,"name":"Payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"4758:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Payout_$3985_storage_ptr_$","typeString":"type(struct CoinGenie.Payout storage pointer)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4767:8:20","4830:5:20"],"names":["receiver","share"],"nodeType":"FunctionCall","src":"4758:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_memory_ptr","typeString":"struct CoinGenie.Payout memory"}},"src":"4709:135:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4117,"nodeType":"ExpressionStatement","src":"4709:135:20"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"3775:242:20","text":" @notice Construct the CoinGenie contract.\n @param erc20FactoryAddress The address of the ERC20Factory contract\n @param airdropClaimableERC20FactoryAddress The address of the AirdropERC20ClaimableFactory contract"},"id":4119,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"erc20FactoryAddress","nameLocation":"4042:19:20","nodeType":"VariableDeclaration","scope":4119,"src":"4034:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4048,"name":"address","nodeType":"ElementaryTypeName","src":"4034:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"airdropClaimableERC20FactoryAddress","nameLocation":"4071:35:20","nodeType":"VariableDeclaration","scope":4119,"src":"4063:43:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4050,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4033:74:20"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[],"src":"4108:0:20"},"scope":4643,"src":"4022:829:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4122,"nodeType":"Block","src":"4933:3:20","statements":[]},"id":4123,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4120,"nodeType":"ParameterList","parameters":[],"src":"4913:2:20"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[],"src":"4933:0:20"},"scope":4643,"src":"4906:30:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4219,"nodeType":"Block","src":"6582:1532:20","statements":[{"assignments":[4156],"declarations":[{"constant":false,"id":4156,"mutability":"mutable","name":"newToken","nameLocation":"6636:8:20","nodeType":"VariableDeclaration","scope":4219,"src":"6629:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"},"typeName":{"id":4155,"nodeType":"UserDefinedTypeName","pathNode":{"id":4154,"name":"IERC20","nameLocations":["6629:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"6629:6:20"},"referencedDeclaration":950,"src":"6629:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"visibility":"internal"}],"id":4176,"initialValue":{"arguments":[{"id":4159,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"6686:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4160,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"6704:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4161,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"6724:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4162,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"6751:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4163,"name":"customConfigProps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"6775:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties memory"}},{"id":4164,"name":"maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"6806:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4165,"name":"autoWithdrawThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"6832:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4166,"name":"maxTaxSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"6867:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4167,"name":"affiliateFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"6891:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4168,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"6926:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4169,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"6952:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4170,"name":"burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"6979:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4173,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7015:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenie_$4643","typeString":"contract CoinGenie"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenie_$4643","typeString":"contract CoinGenie"}],"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7007:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4171,"name":"address","nodeType":"ElementaryTypeName","src":"7007:7:20","typeDescriptions":{}}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7007:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4157,"name":"_erc20Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"6647:13:20","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Factory_$6111","typeString":"contract ERC20Factory"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6661:11:20","memberName":"launchToken","nodeType":"MemberAccess","referencedDeclaration":6086,"src":"6647:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_struct$_TokenConfigProperties_$7281_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_contract$_CoinGenieERC20_$5980_$","typeString":"function (string memory,string memory,uint256,address,struct Common.TokenConfigProperties memory,uint256,uint256,uint256,address,address,uint256,uint256,address) external returns (contract CoinGenieERC20)"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6647:383:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"nodeType":"VariableDeclarationStatement","src":"6629:401:20"},{"assignments":[4178],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"newTokenAddress","nameLocation":"7049:15:20","nodeType":"VariableDeclaration","scope":4219,"src":"7041:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4177,"name":"address","nodeType":"ElementaryTypeName","src":"7041:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4183,"initialValue":{"arguments":[{"id":4181,"name":"newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"7075:8:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7067:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4179,"name":"address","nodeType":"ElementaryTypeName","src":"7067:7:20","typeDescriptions":{}}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7067:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7041:43:20"},{"expression":{"arguments":[{"id":4187,"name":"newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7180:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4184,"name":"launchedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"7160:14:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7175:4:20","memberName":"push","nodeType":"MemberAccess","src":"7160:19:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7160:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4189,"nodeType":"ExpressionStatement","src":"7160:36:20"},{"expression":{"arguments":[{"arguments":[{"id":4195,"name":"newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"7386:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4196,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"7425:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4197,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"7455:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4198,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"7494:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4199,"name":"customConfigProps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"7537:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties memory"}},"id":4200,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7555:10:20","memberName":"isBurnable","nodeType":"MemberAccess","referencedDeclaration":7276,"src":"7537:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4201,"name":"customConfigProps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"7599:17:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties memory"}},"id":4202,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7617:14:20","memberName":"isDeflationary","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"7599:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4203,"name":"maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"7663:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4204,"name":"autoWithdrawThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"7716:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4205,"name":"maxTaxSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"7767:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4206,"name":"affiliateFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"7818:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4207,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"7871:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4208,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4147,"src":"7916:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4209,"name":"burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"7963:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4194,"name":"LaunchedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"7340:13:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_LaunchedToken_$3960_storage_ptr_$","typeString":"type(struct CoinGenie.LaunchedToken storage pointer)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7372:12:20","7419:4:20","7447:6:20","7479:13:20","7525:10:20","7583:14:20","7649:12:20","7693:21:20","7755:10:20","7795:21:20","7857:12:20","7901:13:20","7947:14:20"],"names":["tokenAddress","name","symbol","initialSupply","isBurnable","isDeflationary","maxPerWallet","autoWithdrawThreshold","maxTaxSwap","affiliateFeeRecipient","feeRecipient","feePercentage","burnPercentage"],"nodeType":"FunctionCall","src":"7340:652:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LaunchedToken_$3960_memory_ptr","typeString":"struct CoinGenie.LaunchedToken memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_LaunchedToken_$3960_memory_ptr","typeString":"struct CoinGenie.LaunchedToken memory"}],"expression":{"baseExpression":{"id":4190,"name":"tokensLaunchedBy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"7293:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage_$","typeString":"mapping(address => struct CoinGenie.LaunchedToken storage ref[] storage ref)"}},"id":4192,"indexExpression":{"id":4191,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"7310:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7293:28:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage","typeString":"struct CoinGenie.LaunchedToken storage ref[] storage ref"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7322:4:20","memberName":"push","nodeType":"MemberAccess","src":"7293:33:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage_ptr_$_t_struct$_LaunchedToken_$3960_storage_$returns$__$attached_to$_t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage_ptr_$","typeString":"function (struct CoinGenie.LaunchedToken storage ref[] storage pointer,struct CoinGenie.LaunchedToken storage ref)"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7293:709:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4212,"nodeType":"ExpressionStatement","src":"7293:709:20"},{"eventCall":{"arguments":[{"id":4214,"name":"newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8058:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4213,"name":"ERC20Launched","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"8044:13:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4216,"nodeType":"EmitStatement","src":"8039:35:20"},{"expression":{"id":4217,"name":"newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8092:15:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4153,"id":4218,"nodeType":"Return","src":"8085:22:20"}]},"documentation":{"id":4124,"nodeType":"StructuredDocumentation","src":"4942:1152:20","text":" @notice Launch a new instance of the ERC20.\n @dev This function deploys a new token contract and initializes it with provided parameters.\n @param name The name of the token\n @param symbol The symbol of the token\n @param initialSupply The initial supply of the token\n @param tokenOwner The address that will be the owner of the token\n @param customConfigProps A struct of configuration booleans for the token\n @param maxPerWallet The maximum amount of tokens allowed to be held by one wallet\n @param autoWithdrawThreshold The threshold for the amount of tokens to swap for ETH\n @param maxTaxSwap The maximum amount of tokens allowed to be swapped at once by manual or autoswap\n @param affiliateFeeRecipient The address to receive the affiliate fee\n @param feeRecipient The address to receive the tax fees\n @param feePercentage The percent in basis points to use as a tax\n @param burnPercentage The percent in basis points to burn on every tx if this token is deflationary\n @return _tokenAddress The address of the newly deployed token contract"},"functionSelector":"646eedab","id":4220,"implemented":true,"kind":"function","modifiers":[],"name":"launchToken","nameLocation":"6108:11:20","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4126,"mutability":"mutable","name":"name","nameLocation":"6143:4:20","nodeType":"VariableDeclaration","scope":4220,"src":"6129:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4125,"name":"string","nodeType":"ElementaryTypeName","src":"6129:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4128,"mutability":"mutable","name":"symbol","nameLocation":"6171:6:20","nodeType":"VariableDeclaration","scope":4220,"src":"6157:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4127,"name":"string","nodeType":"ElementaryTypeName","src":"6157:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"initialSupply","nameLocation":"6195:13:20","nodeType":"VariableDeclaration","scope":4220,"src":"6187:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"6187:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"tokenOwner","nameLocation":"6226:10:20","nodeType":"VariableDeclaration","scope":4220,"src":"6218:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4131,"name":"address","nodeType":"ElementaryTypeName","src":"6218:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4135,"mutability":"mutable","name":"customConfigProps","nameLocation":"6282:17:20","nodeType":"VariableDeclaration","scope":4220,"src":"6246:53:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties"},"typeName":{"id":4134,"nodeType":"UserDefinedTypeName","pathNode":{"id":4133,"name":"Common.TokenConfigProperties","nameLocations":["6246:6:20","6253:21:20"],"nodeType":"IdentifierPath","referencedDeclaration":7281,"src":"6246:28:20"},"referencedDeclaration":7281,"src":"6246:28:20","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage_ptr","typeString":"struct Common.TokenConfigProperties"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"maxPerWallet","nameLocation":"6317:12:20","nodeType":"VariableDeclaration","scope":4220,"src":"6309:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"6309:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4139,"mutability":"mutable","name":"autoWithdrawThreshold","nameLocation":"6347:21:20","nodeType":"VariableDeclaration","scope":4220,"src":"6339:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"6339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4141,"mutability":"mutable","name":"maxTaxSwap","nameLocation":"6386:10:20","nodeType":"VariableDeclaration","scope":4220,"src":"6378:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"6378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"affiliateFeeRecipient","nameLocation":"6414:21:20","nodeType":"VariableDeclaration","scope":4220,"src":"6406:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4142,"name":"address","nodeType":"ElementaryTypeName","src":"6406:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4145,"mutability":"mutable","name":"feeRecipient","nameLocation":"6453:12:20","nodeType":"VariableDeclaration","scope":4220,"src":"6445:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4144,"name":"address","nodeType":"ElementaryTypeName","src":"6445:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"feePercentage","nameLocation":"6483:13:20","nodeType":"VariableDeclaration","scope":4220,"src":"6475:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"6475:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"burnPercentage","nameLocation":"6514:14:20","nodeType":"VariableDeclaration","scope":4220,"src":"6506:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6119:415:20"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4220,"src":"6569:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4151,"name":"address","nodeType":"ElementaryTypeName","src":"6569:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6568:9:20"},"scope":4643,"src":"6099:2015:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4302,"nodeType":"Block","src":"9041:1267:20","statements":[{"assignments":[4240],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"airdrop","nameLocation":"9112:7:20","nodeType":"VariableDeclaration","scope":4302,"src":"9090:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"},"typeName":{"id":4239,"nodeType":"UserDefinedTypeName","pathNode":{"id":4238,"name":"AirdropERC20Claimable","nameLocations":["9090:21:20"],"nodeType":"IdentifierPath","referencedDeclaration":3838,"src":"9090:21:20"},"referencedDeclaration":3838,"src":"9090:21:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}},"visibility":"internal"}],"id":4250,"initialValue":{"arguments":[{"id":4243,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"9188:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4244,"name":"airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"9200:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4245,"name":"airdropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"9221:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4246,"name":"expirationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9236:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4247,"name":"maxWalletClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"9257:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4248,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"9278:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4241,"name":"_airdropClaimableERC20Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"9122:29:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20ClaimableFactory_$3880","typeString":"contract AirdropERC20ClaimableFactory"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9152:22:20","memberName":"createClaimableAirdrop","nodeType":"MemberAccess","referencedDeclaration":3879,"src":"9122:52:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_contract$_AirdropERC20Claimable_$3838_$","typeString":"function (address,address,uint256,uint256,uint256,bytes32) external returns (contract AirdropERC20Claimable)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9122:176:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}},"nodeType":"VariableDeclarationStatement","src":"9090:208:20"},{"expression":{"arguments":[{"arguments":[{"id":4256,"name":"airdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"9415:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}],"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4254,"name":"address","nodeType":"ElementaryTypeName","src":"9407:7:20","typeDescriptions":{}}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9407:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4251,"name":"createdClaimableAirdrops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"9377:24:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9402:4:20","memberName":"push","nodeType":"MemberAccess","src":"9377:29:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9377:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4259,"nodeType":"ExpressionStatement","src":"9377:47:20"},{"assignments":[4262],"declarations":[{"constant":false,"id":4262,"mutability":"mutable","name":"claimableAirdrop","nameLocation":"9549:16:20","nodeType":"VariableDeclaration","scope":4302,"src":"9525:40:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimableAirdrop_$3975_memory_ptr","typeString":"struct CoinGenie.ClaimableAirdrop"},"typeName":{"id":4261,"nodeType":"UserDefinedTypeName","pathNode":{"id":4260,"name":"ClaimableAirdrop","nameLocations":["9525:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":3975,"src":"9525:16:20"},"referencedDeclaration":3975,"src":"9525:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimableAirdrop_$3975_storage_ptr","typeString":"struct CoinGenie.ClaimableAirdrop"}},"visibility":"internal"}],"id":4275,"initialValue":{"arguments":[{"arguments":[{"id":4266,"name":"airdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"9623:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}],"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9615:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4264,"name":"address","nodeType":"ElementaryTypeName","src":"9615:7:20","typeDescriptions":{}}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9615:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4268,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"9657:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4269,"name":"airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"9702:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4270,"name":"airdropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"9750:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4271,"name":"expirationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"9798:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4272,"name":"maxWalletClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"9852:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4273,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"9897:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4263,"name":"ClaimableAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"9568:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ClaimableAirdrop_$3975_storage_ptr_$","typeString":"type(struct CoinGenie.ClaimableAirdrop storage pointer)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9599:14:20","9645:10:20","9681:19:20","9735:13:20","9777:19:20","9831:19:20","9885:10:20"],"names":["airdropAddress","tokenOwner","airdropTokenAddress","airdropAmount","expirationTimestamp","maxWalletClaimCount","merkleRoot"],"nodeType":"FunctionCall","src":"9568:350:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ClaimableAirdrop_$3975_memory_ptr","typeString":"struct CoinGenie.ClaimableAirdrop memory"}},"nodeType":"VariableDeclarationStatement","src":"9525:393:20"},{"expression":{"arguments":[{"id":4281,"name":"claimableAirdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"9971:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimableAirdrop_$3975_memory_ptr","typeString":"struct CoinGenie.ClaimableAirdrop memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ClaimableAirdrop_$3975_memory_ptr","typeString":"struct CoinGenie.ClaimableAirdrop memory"}],"expression":{"baseExpression":{"id":4276,"name":"claimableAirdropCreatedBy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"9928:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage_$","typeString":"mapping(address => struct CoinGenie.ClaimableAirdrop storage ref[] storage ref)"}},"id":4279,"indexExpression":{"expression":{"id":4277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9954:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9958:6:20","memberName":"sender","nodeType":"MemberAccess","src":"9954:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9928:37:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage","typeString":"struct CoinGenie.ClaimableAirdrop storage ref[] storage ref"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9966:4:20","memberName":"push","nodeType":"MemberAccess","src":"9928:42:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage_ptr_$_t_struct$_ClaimableAirdrop_$3975_storage_$returns$__$attached_to$_t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage_ptr_$","typeString":"function (struct CoinGenie.ClaimableAirdrop storage ref[] storage pointer,struct CoinGenie.ClaimableAirdrop storage ref)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9928:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4283,"nodeType":"ExpressionStatement","src":"9928:60:20"},{"eventCall":{"arguments":[{"arguments":[{"id":4287,"name":"airdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"10075:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}],"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10067:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4285,"name":"address","nodeType":"ElementaryTypeName","src":"10067:7:20","typeDescriptions":{}}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10067:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4289,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"10097:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4290,"name":"airdropTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"10121:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4291,"name":"airdropAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"10154:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4292,"name":"expirationTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"10181:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4293,"name":"maxWalletClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"10214:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4294,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"10247:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4284,"name":"ClaimableAirdropCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"10030:23:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,address,address,uint256,uint256,uint256,bytes32)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10030:237:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4296,"nodeType":"EmitStatement","src":"10025:242:20"},{"expression":{"arguments":[{"id":4299,"name":"airdrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"10293:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AirdropERC20Claimable_$3838","typeString":"contract AirdropERC20Claimable"}],"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4297,"name":"address","nodeType":"ElementaryTypeName","src":"10285:7:20","typeDescriptions":{}}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10285:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4237,"id":4301,"nodeType":"Return","src":"10278:23:20"}]},"documentation":{"id":4221,"nodeType":"StructuredDocumentation","src":"8120:621:20","text":" @notice Launch a new instance of the CoinGenieAirdropClaimable Contract.\n @param tokenOwner The address of the token owner\n @param airdropTokenAddress The address of the airdrop token\n @param airdropAmount The amount of tokens available for airdrop\n @param expirationTimestamp The expiration timestamp of the airdrop\n @param maxWalletClaimCount The maximum number of tokens that can be claimed by a wallet if not in the whitelist\n @param merkleRoot The merkle root of the whitelist\n @return dropAddress The address of the newly deployed airdrop contract"},"functionSelector":"9b1de1ff","id":4303,"implemented":true,"kind":"function","modifiers":[],"name":"createClaimableAirdrop","nameLocation":"8755:22:20","nodeType":"FunctionDefinition","parameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"tokenOwner","nameLocation":"8795:10:20","nodeType":"VariableDeclaration","scope":4303,"src":"8787:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4222,"name":"address","nodeType":"ElementaryTypeName","src":"8787:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4225,"mutability":"mutable","name":"airdropTokenAddress","nameLocation":"8823:19:20","nodeType":"VariableDeclaration","scope":4303,"src":"8815:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4224,"name":"address","nodeType":"ElementaryTypeName","src":"8815:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4227,"mutability":"mutable","name":"airdropAmount","nameLocation":"8860:13:20","nodeType":"VariableDeclaration","scope":4303,"src":"8852:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"8852:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"expirationTimestamp","nameLocation":"8891:19:20","nodeType":"VariableDeclaration","scope":4303,"src":"8883:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"8883:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"maxWalletClaimCount","nameLocation":"8928:19:20","nodeType":"VariableDeclaration","scope":4303,"src":"8920:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"8920:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4233,"mutability":"mutable","name":"merkleRoot","nameLocation":"8965:10:20","nodeType":"VariableDeclaration","scope":4303,"src":"8957:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8957:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8777:204:20"},"returnParameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"dropAddress","nameLocation":"9024:11:20","nodeType":"VariableDeclaration","scope":4303,"src":"9016:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4235,"name":"address","nodeType":"ElementaryTypeName","src":"9016:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9015:21:20"},"scope":4643,"src":"8746:1562:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4317,"nodeType":"Block","src":"10608:51:20","statements":[{"expression":{"expression":{"baseExpression":{"id":4312,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10625:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4314,"indexExpression":{"id":4313,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"10634:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10625:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10644:8:20","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":3982,"src":"10625:27:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":4311,"id":4316,"nodeType":"Return","src":"10618:34:20"}]},"documentation":{"id":4304,"nodeType":"StructuredDocumentation","src":"10314:198:20","text":" @notice Get the payout address for a specific category.\n @param category The category to get the payout address for\n @return receiver The address to receive the payout"},"functionSelector":"dc8ed636","id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"getPayoutAddress","nameLocation":"10526:16:20","nodeType":"FunctionDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"category","nameLocation":"10558:8:20","nodeType":"VariableDeclaration","scope":4318,"src":"10543:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"},"typeName":{"id":4306,"nodeType":"UserDefinedTypeName","pathNode":{"id":4305,"name":"PayoutCategory","nameLocations":["10543:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":3980,"src":"10543:14:20"},"referencedDeclaration":3980,"src":"10543:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"visibility":"internal"}],"src":"10542:25:20"},"returnParameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4318,"src":"10591:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4309,"name":"address","nodeType":"ElementaryTypeName","src":"10591:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"10590:17:20"},"scope":4643,"src":"10517:142:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4332,"nodeType":"Block","src":"10932:48:20","statements":[{"expression":{"expression":{"baseExpression":{"id":4327,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10949:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4329,"indexExpression":{"id":4328,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"10958:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10949:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10968:5:20","memberName":"share","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"10949:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4326,"id":4331,"nodeType":"Return","src":"10942:31:20"}]},"documentation":{"id":4319,"nodeType":"StructuredDocumentation","src":"10665:181:20","text":" @notice Get the payout share for a specific category.\n @param category The category to get the payout share for\n @return share The share of the payout"},"functionSelector":"d0b516c7","id":4333,"implemented":true,"kind":"function","modifiers":[],"name":"getPayoutShare","nameLocation":"10860:14:20","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"category","nameLocation":"10890:8:20","nodeType":"VariableDeclaration","scope":4333,"src":"10875:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"},"typeName":{"id":4321,"nodeType":"UserDefinedTypeName","pathNode":{"id":4320,"name":"PayoutCategory","nameLocations":["10875:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":3980,"src":"10875:14:20"},"referencedDeclaration":3980,"src":"10875:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"visibility":"internal"}],"src":"10874:25:20"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4333,"src":"10923:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"10923:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10922:9:20"},"scope":4643,"src":"10851:129:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4381,"nodeType":"Block","src":"11339:320:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4346,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"11353:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":4347,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11361:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4349,"indexExpression":{"id":4348,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"11370:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11361:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11380:5:20","memberName":"share","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"11361:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11353:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4361,"nodeType":"IfStatement","src":"11349:114:20","trueBody":{"id":4360,"nodeType":"Block","src":"11387:76:20","statements":[{"errorCall":{"arguments":[{"id":4353,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"11420:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4354,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11427:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4356,"indexExpression":{"id":4355,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"11436:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11427:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11446:5:20","memberName":"share","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"11427:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4352,"name":"ShareToHigh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"11408:11:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11408:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4359,"nodeType":"RevertStatement","src":"11401:51:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"11477:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4363,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"11488:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11503:9:20","memberName":"Marketing","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"11488:24:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"src":"11477:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4371,"nodeType":"IfStatement","src":"11473:104:20","trueBody":{"id":4370,"nodeType":"Block","src":"11514:63:20","statements":[{"errorCall":{"arguments":[{"id":4367,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"11557:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}],"id":4366,"name":"InvalidPayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"11535:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_enum$_PayoutCategory_$3980_$returns$__$","typeString":"function (enum CoinGenie.PayoutCategory) pure"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11535:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4369,"nodeType":"RevertStatement","src":"11528:38:20"}]}},{"expression":{"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4372,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11587:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4374,"indexExpression":{"id":4373,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"11596:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11587:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4376,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"11627:8:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4377,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"11644:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4375,"name":"Payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"11608:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Payout_$3985_storage_ptr_$","typeString":"type(struct CoinGenie.Payout storage pointer)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["11617:8:20","11637:5:20"],"names":["receiver","share"],"nodeType":"FunctionCall","src":"11608:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_memory_ptr","typeString":"struct CoinGenie.Payout memory"}},"src":"11587:65:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4380,"nodeType":"ExpressionStatement","src":"11587:65:20"}]},"documentation":{"id":4334,"nodeType":"StructuredDocumentation","src":"10986:241:20","text":" @notice Set the payout address for a specific category.\n @param category The category to set the payout address for\n @param receiver The address to receive the payout\n @param share The share of the payout"},"functionSelector":"fca928b2","id":4382,"implemented":true,"kind":"function","modifiers":[{"id":4344,"kind":"modifierInvocation","modifierName":{"id":4343,"name":"onlyOwner","nameLocations":["11329:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"11329:9:20"},"nodeType":"ModifierInvocation","src":"11329:9:20"}],"name":"updatePayout","nameLocation":"11241:12:20","nodeType":"FunctionDefinition","parameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"category","nameLocation":"11269:8:20","nodeType":"VariableDeclaration","scope":4382,"src":"11254:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"},"typeName":{"id":4336,"nodeType":"UserDefinedTypeName","pathNode":{"id":4335,"name":"PayoutCategory","nameLocations":["11254:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":3980,"src":"11254:14:20"},"referencedDeclaration":3980,"src":"11254:14:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"receiver","nameLocation":"11295:8:20","nodeType":"VariableDeclaration","scope":4382,"src":"11279:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4338,"name":"address","nodeType":"ElementaryTypeName","src":"11279:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"share","nameLocation":"11313:5:20","nodeType":"VariableDeclaration","scope":4382,"src":"11305:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"11305:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11253:66:20"},"returnParameters":{"id":4345,"nodeType":"ParameterList","parameters":[],"src":"11339:0:20"},"scope":4643,"src":"11232:427:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4510,"nodeType":"Block","src":"11780:1037:20","statements":[{"assignments":[4387],"declarations":[{"constant":false,"id":4387,"mutability":"mutable","name":"contractBalance","nameLocation":"11798:15:20","nodeType":"VariableDeclaration","scope":4510,"src":"11790:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11790:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4393,"initialValue":{"expression":{"arguments":[{"id":4390,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11824:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenie_$4643","typeString":"contract CoinGenie"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenie_$4643","typeString":"contract CoinGenie"}],"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11816:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4388,"name":"address","nodeType":"ElementaryTypeName","src":"11816:7:20","typeDescriptions":{}}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11816:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11830:7:20","memberName":"balance","nodeType":"MemberAccess","src":"11816:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11790:47:20"},{"assignments":[4395],"declarations":[{"constant":false,"id":4395,"mutability":"mutable","name":"treasuryShare","nameLocation":"11856:13:20","nodeType":"VariableDeclaration","scope":4510,"src":"11848:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"11848:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4401,"initialValue":{"expression":{"baseExpression":{"id":4396,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11872:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4399,"indexExpression":{"expression":{"id":4397,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"11881:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11896:8:20","memberName":"Treasury","nodeType":"MemberAccess","referencedDeclaration":3976,"src":"11881:23:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11872:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11906:5:20","memberName":"share","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"11872:39:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11848:63:20"},{"assignments":[4403],"declarations":[{"constant":false,"id":4403,"mutability":"mutable","name":"devShare","nameLocation":"11929:8:20","nodeType":"VariableDeclaration","scope":4510,"src":"11921:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"11921:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4409,"initialValue":{"expression":{"baseExpression":{"id":4404,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11940:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4407,"indexExpression":{"expression":{"id":4405,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"11949:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11964:3:20","memberName":"Dev","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"11949:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11940:28:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11969:5:20","memberName":"share","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"11940:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11921:53:20"},{"assignments":[4411],"declarations":[{"constant":false,"id":4411,"mutability":"mutable","name":"legalShare","nameLocation":"11992:10:20","nodeType":"VariableDeclaration","scope":4510,"src":"11984:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"11984:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4417,"initialValue":{"expression":{"baseExpression":{"id":4412,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"12005:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4415,"indexExpression":{"expression":{"id":4413,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"12014:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12029:5:20","memberName":"Legal","nodeType":"MemberAccess","referencedDeclaration":3978,"src":"12014:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12005:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12036:5:20","memberName":"share","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"12005:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11984:57:20"},{"assignments":[4419],"declarations":[{"constant":false,"id":4419,"mutability":"mutable","name":"marketingShare","nameLocation":"12059:14:20","nodeType":"VariableDeclaration","scope":4510,"src":"12051:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"12051:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4425,"initialValue":{"expression":{"baseExpression":{"id":4420,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"12076:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4423,"indexExpression":{"expression":{"id":4421,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"12085:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12100:9:20","memberName":"Marketing","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"12085:24:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12076:34:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12111:5:20","memberName":"share","nodeType":"MemberAccess","referencedDeclaration":3984,"src":"12076:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12051:65:20"},{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"treasuryAmount","nameLocation":"12135:14:20","nodeType":"VariableDeclaration","scope":4510,"src":"12127:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"12127:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4435,"initialValue":{"arguments":[{"id":4433,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12191:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4430,"name":"treasuryShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"12172:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4428,"name":"contractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"12152:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12168:3:20","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"12152:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12187:3:20","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"12152:38:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12127:72:20"},{"assignments":[4437],"declarations":[{"constant":false,"id":4437,"mutability":"mutable","name":"devAmount","nameLocation":"12217:9:20","nodeType":"VariableDeclaration","scope":4510,"src":"12209:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"12209:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4445,"initialValue":{"arguments":[{"id":4443,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12263:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4440,"name":"devShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"12249:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4438,"name":"contractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"12229:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12245:3:20","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"12229:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12229:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12259:3:20","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"12229:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12229:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12209:62:20"},{"assignments":[4447],"declarations":[{"constant":false,"id":4447,"mutability":"mutable","name":"legalAmount","nameLocation":"12289:11:20","nodeType":"VariableDeclaration","scope":4510,"src":"12281:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"12281:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4455,"initialValue":{"arguments":[{"id":4453,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4450,"name":"legalShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"12323:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4448,"name":"contractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"12303:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12319:3:20","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"12303:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12303:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12335:3:20","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"12303:35:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12303:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12281:66:20"},{"assignments":[4457],"declarations":[{"constant":false,"id":4457,"mutability":"mutable","name":"marketingAmount","nameLocation":"12365:15:20","nodeType":"VariableDeclaration","scope":4510,"src":"12357:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"12357:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4465,"initialValue":{"arguments":[{"id":4463,"name":"MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12423:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4460,"name":"marketingShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"12403:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4458,"name":"contractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"12383:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12399:3:20","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"12383:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12383:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12419:3:20","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"12383:39:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12383:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12357:74:20"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4469,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"12471:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4472,"indexExpression":{"expression":{"id":4470,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"12480:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12495:8:20","memberName":"Treasury","nodeType":"MemberAccess","referencedDeclaration":3976,"src":"12480:23:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12471:33:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12505:8:20","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":3982,"src":"12471:42:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4474,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"12515:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4466,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"12442:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12455:15:20","memberName":"safeTransferETH","nodeType":"MemberAccess","referencedDeclaration":7296,"src":"12442:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12442:88:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4476,"nodeType":"ExpressionStatement","src":"12442:88:20"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4480,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"12569:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4483,"indexExpression":{"expression":{"id":4481,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"12578:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12593:3:20","memberName":"Dev","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"12578:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12569:28:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12598:8:20","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":3982,"src":"12569:37:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4485,"name":"devAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"12608:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4477,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"12540:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12553:15:20","memberName":"safeTransferETH","nodeType":"MemberAccess","referencedDeclaration":7296,"src":"12540:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12540:78:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4487,"nodeType":"ExpressionStatement","src":"12540:78:20"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4491,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"12657:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4494,"indexExpression":{"expression":{"id":4492,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"12666:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12681:5:20","memberName":"Legal","nodeType":"MemberAccess","referencedDeclaration":3978,"src":"12666:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12657:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12688:8:20","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":3982,"src":"12657:39:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4496,"name":"legalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"12698:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4488,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"12628:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12641:15:20","memberName":"safeTransferETH","nodeType":"MemberAccess","referencedDeclaration":7296,"src":"12628:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12628:82:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4498,"nodeType":"ExpressionStatement","src":"12628:82:20"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4502,"name":"_payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"12749:8:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_PayoutCategory_$3980_$_t_struct$_Payout_$3985_storage_$","typeString":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout storage ref)"}},"id":4505,"indexExpression":{"expression":{"id":4503,"name":"PayoutCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"12758:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PayoutCategory_$3980_$","typeString":"type(enum CoinGenie.PayoutCategory)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12773:9:20","memberName":"Marketing","nodeType":"MemberAccess","referencedDeclaration":3979,"src":"12758:24:20","typeDescriptions":{"typeIdentifier":"t_enum$_PayoutCategory_$3980","typeString":"enum CoinGenie.PayoutCategory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12749:34:20","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$3985_storage","typeString":"struct CoinGenie.Payout storage ref"}},"id":4506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12784:8:20","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":3982,"src":"12749:43:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4507,"name":"marketingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"12794:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4499,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"12720:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12733:15:20","memberName":"safeTransferETH","nodeType":"MemberAccess","referencedDeclaration":7296,"src":"12720:28:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12720:90:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4509,"nodeType":"ExpressionStatement","src":"12720:90:20"}]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"11665:81:20","text":" @notice Withdraw the contract balance to the payout addresses."},"functionSelector":"3ccfd60b","id":4511,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"11760:8:20","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[],"src":"11768:2:20"},"returnParameters":{"id":4385,"nodeType":"ParameterList","parameters":[],"src":"11780:0:20"},"scope":4643,"src":"11751:1066:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4598,"nodeType":"Block","src":"13082:744:20","statements":[{"assignments":[4522,4524,null],"declarations":[{"constant":false,"id":4522,"mutability":"mutable","name":"reserve0","nameLocation":"13101:8:20","nodeType":"VariableDeclaration","scope":4598,"src":"13093:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"13093:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"reserve1","nameLocation":"13119:8:20","nodeType":"VariableDeclaration","scope":4598,"src":"13111:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"13111:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":4530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4526,"name":"lpTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"13147:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4525,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13132:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Pair_$2836_$","typeString":"type(contract IUniswapV2Pair)"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13132:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13163:11:20","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":2778,"src":"13132:42:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"function () view external returns (uint112,uint112,uint32)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13132:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$","typeString":"tuple(uint112,uint112,uint32)"}},"nodeType":"VariableDeclarationStatement","src":"13092:84:20"},{"assignments":[4532],"declarations":[{"constant":false,"id":4532,"mutability":"mutable","name":"quotedAmount","nameLocation":"13194:12:20","nodeType":"VariableDeclaration","scope":4598,"src":"13186:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"13186:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4539,"initialValue":{"arguments":[{"id":4535,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"13233:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4536,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"13241:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4537,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"13251:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4533,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"13209:17:20","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13227:5:20","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"13209:23:20","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure external returns (uint256)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13209:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13186:74:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4540,"name":"quotedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"13275:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4541,"name":"quoteThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"13291:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13275:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4597,"nodeType":"IfStatement","src":"13271:549:20","trueBody":{"id":4596,"nodeType":"Block","src":"13307:513:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4550,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"13366:17:20","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}],"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13358:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4548,"name":"address","nodeType":"ElementaryTypeName","src":"13358:7:20","typeDescriptions":{}}},"id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13358:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4552,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"13386:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4545,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"13336:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4544,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"13329:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$950_$","typeString":"type(contract IERC20)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13329:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13350:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":937,"src":"13329:28:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13329:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417070726f76616c206661696c6564","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13395:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07","typeString":"literal_string \"Approval failed\""},"value":"Approval failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07","typeString":"literal_string \"Approval failed\""}],"id":4543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13321:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13321:92:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4556,"nodeType":"ExpressionStatement","src":"13321:92:20"},{"assignments":[4561],"declarations":[{"constant":false,"id":4561,"mutability":"mutable","name":"path","nameLocation":"13445:4:20","nodeType":"VariableDeclaration","scope":4596,"src":"13428:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4559,"name":"address","nodeType":"ElementaryTypeName","src":"13428:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4560,"nodeType":"ArrayTypeName","src":"13428:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4567,"initialValue":{"arguments":[{"hexValue":"32","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13466:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13452:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4562,"name":"address","nodeType":"ElementaryTypeName","src":"13456:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4563,"nodeType":"ArrayTypeName","src":"13456:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13452:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13428:40:20"},{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4568,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"13482:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4570,"indexExpression":{"hexValue":"30","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13487:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4571,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"13492:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13482:22:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4573,"nodeType":"ExpressionStatement","src":"13482:22:20"},{"expression":{"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4574,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"13518:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4576,"indexExpression":{"hexValue":"31","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13523:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13518:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4577,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"13528:17:20","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13546:4:20","memberName":"WETH","nodeType":"MemberAccess","referencedDeclaration":2864,"src":"13528:22:20","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13528:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13518:34:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4581,"nodeType":"ExpressionStatement","src":"13518:34:20"},{"expression":{"arguments":[{"id":4585,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"13656:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13680:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4587,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"13727:4:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":4590,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13757:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenie_$4643","typeString":"contract CoinGenie"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenie_$4643","typeString":"contract CoinGenie"}],"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13749:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4588,"name":"address","nodeType":"ElementaryTypeName","src":"13749:7:20","typeDescriptions":{}}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13749:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4592,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13780:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13786:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"13780:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4582,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"13567:17:20","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13585:53:20","memberName":"swapExactTokensForTokensSupportingFeeOnTransferTokens","nodeType":"MemberAccess","referencedDeclaration":3221,"src":"13567:71:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:242:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4595,"nodeType":"ExpressionStatement","src":"13567:242:20"}]}}]},"documentation":{"id":4512,"nodeType":"StructuredDocumentation","src":"12823:163:20","text":" @notice Swap ERC20 tokens for ETH.\n @param tokenAddress The address of the token to swap\n @param amount The amount of tokens to swap"},"functionSelector":"b579772f","id":4599,"implemented":true,"kind":"function","modifiers":[],"name":"swapERC20s","nameLocation":"13000:10:20","nodeType":"FunctionDefinition","parameters":{"id":4519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"tokenAddress","nameLocation":"13019:12:20","nodeType":"VariableDeclaration","scope":4599,"src":"13011:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4513,"name":"address","nodeType":"ElementaryTypeName","src":"13011:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"lpTokenAddress","nameLocation":"13041:14:20","nodeType":"VariableDeclaration","scope":4599,"src":"13033:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4515,"name":"address","nodeType":"ElementaryTypeName","src":"13033:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4518,"mutability":"mutable","name":"amount","nameLocation":"13065:6:20","nodeType":"VariableDeclaration","scope":4599,"src":"13057:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"13057:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13010:62:20"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[],"src":"13082:0:20"},"scope":4643,"src":"12991:835:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4611,"nodeType":"Block","src":"14079:49:20","statements":[{"expression":{"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4607,"name":"quoteThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"14089:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4608,"name":"_quoteThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"14106:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14089:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4610,"nodeType":"ExpressionStatement","src":"14089:32:20"}]},"documentation":{"id":4600,"nodeType":"StructuredDocumentation","src":"13832:171:20","text":" @notice Set the threshold for the amount of tokens to swap for ETH.\n @param _quoteThreshold The threshold for the amount of tokens to swap for ETH"},"functionSelector":"43584bca","id":4612,"implemented":true,"kind":"function","modifiers":[{"id":4605,"kind":"modifierInvocation","modifierName":{"id":4604,"name":"onlyOwner","nameLocations":["14069:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"14069:9:20"},"nodeType":"ModifierInvocation","src":"14069:9:20"}],"name":"setQuoteThreshold","nameLocation":"14017:17:20","nodeType":"FunctionDefinition","parameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"_quoteThreshold","nameLocation":"14043:15:20","nodeType":"VariableDeclaration","scope":4612,"src":"14035:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"14035:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14034:25:20"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[],"src":"14079:0:20"},"scope":4643,"src":"14008:120:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4626,"nodeType":"Block","src":"14407:50:20","statements":[{"expression":{"baseExpression":{"id":4622,"name":"tokensLaunchedBy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"14424:16:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage_$","typeString":"mapping(address => struct CoinGenie.LaunchedToken storage ref[] storage ref)"}},"id":4624,"indexExpression":{"id":4623,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"14441:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14424:26:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage","typeString":"struct CoinGenie.LaunchedToken storage ref[] storage ref"}},"functionReturnParameters":4621,"id":4625,"nodeType":"Return","src":"14417:33:20"}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"14134:159:20","text":" @notice Get the launched tokens.\n @param _address The address to get the tokens for\n @return tokens The array of launched tokens"},"functionSelector":"f14aade1","id":4627,"implemented":true,"kind":"function","modifiers":[],"name":"getLaunchedTokensForAddress","nameLocation":"14307:27:20","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"_address","nameLocation":"14343:8:20","nodeType":"VariableDeclaration","scope":4627,"src":"14335:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4614,"name":"address","nodeType":"ElementaryTypeName","src":"14335:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14334:18:20"},"returnParameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"tokens","nameLocation":"14399:6:20","nodeType":"VariableDeclaration","scope":4627,"src":"14376:29:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LaunchedToken_$3960_memory_ptr_$dyn_memory_ptr","typeString":"struct CoinGenie.LaunchedToken[]"},"typeName":{"baseType":{"id":4618,"nodeType":"UserDefinedTypeName","pathNode":{"id":4617,"name":"LaunchedToken","nameLocations":["14376:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":3960,"src":"14376:13:20"},"referencedDeclaration":3960,"src":"14376:13:20","typeDescriptions":{"typeIdentifier":"t_struct$_LaunchedToken_$3960_storage_ptr","typeString":"struct CoinGenie.LaunchedToken"}},"id":4619,"nodeType":"ArrayTypeName","src":"14376:15:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LaunchedToken_$3960_storage_$dyn_storage_ptr","typeString":"struct CoinGenie.LaunchedToken[]"}},"visibility":"internal"}],"src":"14375:31:20"},"scope":4643,"src":"14298:159:20","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4641,"nodeType":"Block","src":"14746:59:20","statements":[{"expression":{"baseExpression":{"id":4637,"name":"claimableAirdropCreatedBy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"14763:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage_$","typeString":"mapping(address => struct CoinGenie.ClaimableAirdrop storage ref[] storage ref)"}},"id":4639,"indexExpression":{"id":4638,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"14789:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14763:35:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage","typeString":"struct CoinGenie.ClaimableAirdrop storage ref[] storage ref"}},"functionReturnParameters":4636,"id":4640,"nodeType":"Return","src":"14756:42:20"}]},"documentation":{"id":4628,"nodeType":"StructuredDocumentation","src":"14463:133:20","text":" @notice Get the airdrops created by a specific address.\n @param _address The address to get the airdrops for"},"functionSelector":"a7bc6a17","id":4642,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimableAirdropsForAddress","nameLocation":"14610:30:20","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"_address","nameLocation":"14649:8:20","nodeType":"VariableDeclaration","scope":4642,"src":"14641:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"14641:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14640:18:20"},"returnParameters":{"id":4636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"airdrops","nameLocation":"14732:8:20","nodeType":"VariableDeclaration","scope":4642,"src":"14706:34:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimableAirdrop_$3975_memory_ptr_$dyn_memory_ptr","typeString":"struct CoinGenie.ClaimableAirdrop[]"},"typeName":{"baseType":{"id":4633,"nodeType":"UserDefinedTypeName","pathNode":{"id":4632,"name":"ClaimableAirdrop","nameLocations":["14706:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":3975,"src":"14706:16:20"},"referencedDeclaration":3975,"src":"14706:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_ClaimableAirdrop_$3975_storage_ptr","typeString":"struct CoinGenie.ClaimableAirdrop"}},"id":4634,"nodeType":"ArrayTypeName","src":"14706:18:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ClaimableAirdrop_$3975_storage_$dyn_storage_ptr","typeString":"struct CoinGenie.ClaimableAirdrop[]"}},"visibility":"internal"}],"src":"14705:36:20"},"scope":4643,"src":"14601:204:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4644,"src":"1022:13785:20","usedErrors":[3918,3923],"usedEvents":[13,3989,4005]}],"src":"36:14772:20"},"id":20},"src/CoinGenieERC20.sol":{"ast":{"absolutePath":"src/CoinGenieERC20.sol","exportedSymbols":{"CoinGenieERC20":[5980],"Common":[7282],"ERC20":[872],"ERC20Burnable":[994],"ERC20Pausable":[1031],"IERC20":[950],"IUniswapV2Factory":[2594],"IUniswapV2Pair":[2836],"IUniswapV2Router02":[3248],"Ownable":[112],"ReentrancyGuard":[285],"SafeMath":[1918],"SafeTransfer":[7396]},"id":5981,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4645,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:21"},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol","id":4647,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":873,"src":"63:83:21","symbolAliases":[{"foreign":{"id":4646,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"72:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","id":4649,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":951,"src":"147:85:21","symbolAliases":[{"foreign":{"id":4648,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"156:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","file":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","id":4651,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":113,"src":"233:82:21","symbolAliases":[{"foreign":{"id":4650,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"242:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":4653,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":995,"src":"316:110:21","symbolAliases":[{"foreign":{"id":4652,"name":"ERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"325:13:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":4655,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":1032,"src":"427:110:21","symbolAliases":[{"foreign":{"id":4654,"name":"ERC20Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"436:13:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","file":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","id":4657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":286,"src":"538:100:21","symbolAliases":[{"foreign":{"id":4656,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"547:15:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol","file":"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol","id":4659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":1919,"src":"639:88:21","symbolAliases":[{"foreign":{"id":4658,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"648:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol","file":"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol","id":4661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":2837,"src":"729:85:21","symbolAliases":[{"foreign":{"id":4660,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"738:14:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","file":"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol","id":4663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":3249,"src":"815:98:21","symbolAliases":[{"foreign":{"id":4662,"name":"IUniswapV2Router02","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"824:18:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol","file":"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol","id":4665,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":2595,"src":"914:91:21","symbolAliases":[{"foreign":{"id":4664,"name":"IUniswapV2Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"923:17:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/lib/Common.sol","file":"./lib/Common.sol","id":4667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":7283,"src":"1007:42:21","symbolAliases":[{"foreign":{"id":4666,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"1016:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/lib/SafeTransfer.sol","file":"./lib/SafeTransfer.sol","id":4669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5981,"sourceUnit":7397,"src":"1050:54:21","symbolAliases":[{"foreign":{"id":4668,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"1059:12:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4671,"name":"ERC20","nameLocations":["1341:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":872,"src":"1341:5:21"},"id":4672,"nodeType":"InheritanceSpecifier","src":"1341:5:21"},{"baseName":{"id":4673,"name":"ERC20Burnable","nameLocations":["1348:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"1348:13:21"},"id":4674,"nodeType":"InheritanceSpecifier","src":"1348:13:21"},{"baseName":{"id":4675,"name":"ERC20Pausable","nameLocations":["1363:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"1363:13:21"},"id":4676,"nodeType":"InheritanceSpecifier","src":"1363:13:21"},{"baseName":{"id":4677,"name":"Ownable","nameLocations":["1378:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1378:7:21"},"id":4678,"nodeType":"InheritanceSpecifier","src":"1378:7:21"},{"baseName":{"id":4679,"name":"ReentrancyGuard","nameLocations":["1387:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"1387:15:21"},"id":4680,"nodeType":"InheritanceSpecifier","src":"1387:15:21"}],"canonicalName":"CoinGenieERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"1106:207:21","text":" @title CoinGenieERC20\n @author @neuro_0x\n @notice A robust and secure ERC20 token for the Coin Genie ecosystem\n @notice THIS ERC20 SHOULD ONLY BE DEPLOYED FROM THE COINGENIE ERC20 FACTORY"},"fullyImplemented":true,"id":5980,"linearizedBaseContracts":[5980,285,112,1031,220,994,872,1056,950,1078],"name":"CoinGenieERC20","nameLocation":"1323:14:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4683,"libraryName":{"id":4681,"name":"SafeMath","nameLocations":["1415:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":1918,"src":"1415:8:21"},"nodeType":"UsingForDirective","src":"1409:27:21","typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"documentation":{"id":4684,"nodeType":"StructuredDocumentation","src":"1442:47:21","text":"@dev The max basis points representing 100%"},"id":4687,"mutability":"constant","name":"_MAX_BPS","nameLocation":"1519:8:21","nodeType":"VariableDeclaration","scope":5980,"src":"1494:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4685,"name":"uint256","nodeType":"ElementaryTypeName","src":"1494:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f303030","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:6:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10_000"},"visibility":"private"},{"constant":true,"documentation":{"id":4688,"nodeType":"StructuredDocumentation","src":"1543:102:21","text":"@dev The max tax that can be applied to a transaction. The value is in ether but is handled as 5%."},"id":4691,"mutability":"constant","name":"_MAX_TAX","nameLocation":"1675:8:21","nodeType":"VariableDeclaration","scope":5980,"src":"1650:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1650:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32303030","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1686:4:21","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"visibility":"private"},{"constant":true,"documentation":{"id":4692,"nodeType":"StructuredDocumentation","src":"1704:88:21","text":"@dev The minimum amount of eth that must be added to Uniswap when trading is opened."},"id":4695,"mutability":"constant","name":"_MIN_LIQUIDITY_ETH","nameLocation":"1822:18:21","nodeType":"VariableDeclaration","scope":5980,"src":"1797:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e35","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:9:21","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_500000000000000000_by_1","typeString":"int_const 500000000000000000"},"value":"0.5"},"visibility":"private"},{"constant":true,"documentation":{"id":4696,"nodeType":"StructuredDocumentation","src":"1859:96:21","text":"@dev The minimum amount of erc20 token that must be added to Uniswap when trading is opened."},"id":4699,"mutability":"constant","name":"_MIN_LIQUIDITY_TOKEN","nameLocation":"1985:20:21","nodeType":"VariableDeclaration","scope":5980,"src":"1960:55:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2008:7:21","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1"},"visibility":"private"},{"constant":false,"documentation":{"id":4700,"nodeType":"StructuredDocumentation","src":"2022:70:21","text":"@dev The amount of $GENIE a person has to hold to get the discount"},"functionSelector":"ec57459c","id":4703,"mutability":"mutable","name":"discountFeeRequiredAmount","nameLocation":"2112:25:21","nodeType":"VariableDeclaration","scope":5980,"src":"2097:58:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"315f3030305f303030","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2140:15:21","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1_000_000"},"visibility":"public"},{"constant":false,"documentation":{"id":4704,"nodeType":"StructuredDocumentation","src":"2162:39:21","text":"@dev The address of the genie token"},"functionSelector":"12d75f13","id":4706,"mutability":"mutable","name":"genieToken","nameLocation":"2221:10:21","nodeType":"VariableDeclaration","scope":5980,"src":"2206:25:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4705,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":4707,"nodeType":"StructuredDocumentation","src":"2238:40:21","text":"@dev number of decimals of the token"},"id":4709,"mutability":"immutable","name":"_tokenDecimals","nameLocation":"2307:14:21","nodeType":"VariableDeclaration","scope":5980,"src":"2283:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4708,"name":"uint8","nodeType":"ElementaryTypeName","src":"2283:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":4710,"nodeType":"StructuredDocumentation","src":"2328:76:21","text":"@dev initial number of tokens which will be minted during initialization"},"functionSelector":"378dc3dc","id":4712,"mutability":"immutable","name":"initialSupply","nameLocation":"2434:13:21","nodeType":"VariableDeclaration","scope":5980,"src":"2409:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4713,"nodeType":"StructuredDocumentation","src":"2454:48:21","text":"@dev max amount of tokens allowed per wallet"},"functionSelector":"d48e4127","id":4715,"mutability":"mutable","name":"maxTokenAmountPerAddress","nameLocation":"2522:24:21","nodeType":"VariableDeclaration","scope":5980,"src":"2507:39:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4716,"nodeType":"StructuredDocumentation","src":"2553:82:21","text":"@dev max amount of tokens the contract can accrue before swapping them for ETH"},"functionSelector":"62997f8c","id":4718,"mutability":"mutable","name":"maxTaxSwap","nameLocation":"2655:10:21","nodeType":"VariableDeclaration","scope":5980,"src":"2640:25:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2640:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4719,"nodeType":"StructuredDocumentation","src":"2672:95:21","text":"@dev max amount of ETH the contract can accrue before withdrawing them to the fee recipient"},"functionSelector":"84c5dd01","id":4721,"mutability":"mutable","name":"autoWithdrawThreshold","nameLocation":"2787:21:21","nodeType":"VariableDeclaration","scope":5980,"src":"2772:36:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4722,"nodeType":"StructuredDocumentation","src":"2815:30:21","text":"@dev features of the token"},"functionSelector":"ba9341c0","id":4725,"mutability":"mutable","name":"tokenConfig","nameLocation":"2886:11:21","nodeType":"VariableDeclaration","scope":5980,"src":"2850:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage","typeString":"struct Common.TokenConfigProperties"},"typeName":{"id":4724,"nodeType":"UserDefinedTypeName","pathNode":{"id":4723,"name":"Common.TokenConfigProperties","nameLocations":["2850:6:21","2857:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":7281,"src":"2850:28:21"},"referencedDeclaration":7281,"src":"2850:28:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage_ptr","typeString":"struct Common.TokenConfigProperties"}},"visibility":"public"},{"constant":false,"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"2904:41:21","text":"@dev the address of the fee recipient"},"functionSelector":"46904840","id":4728,"mutability":"mutable","name":"feeRecipient","nameLocation":"2965:12:21","nodeType":"VariableDeclaration","scope":5980,"src":"2950:27:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4727,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":4729,"nodeType":"StructuredDocumentation","src":"2984:47:21","text":"@dev address of the affiliate fee recipient"},"functionSelector":"c68ff0fe","id":4731,"mutability":"immutable","name":"affiliateFeeRecipient","nameLocation":"3061:21:21","nodeType":"VariableDeclaration","scope":5980,"src":"3036:46:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4730,"name":"address","nodeType":"ElementaryTypeName","src":"3036:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":4732,"nodeType":"StructuredDocumentation","src":"3089:58:21","text":"@dev address of the royalty fee recipient (Coin Genie)"},"functionSelector":"99735fd8","id":4734,"mutability":"mutable","name":"coinGenieTreasury","nameLocation":"3167:17:21","nodeType":"VariableDeclaration","scope":5980,"src":"3152:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4733,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":4735,"nodeType":"StructuredDocumentation","src":"3191:43:21","text":"@dev the fee percentage in basis points"},"functionSelector":"a001ecdd","id":4737,"mutability":"mutable","name":"feePercentage","nameLocation":"3254:13:21","nodeType":"VariableDeclaration","scope":5980,"src":"3239:28:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4736,"name":"uint256","nodeType":"ElementaryTypeName","src":"3239:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4738,"nodeType":"StructuredDocumentation","src":"3274:56:21","text":"@dev the affiliate fee percentage taken on transfers"},"functionSelector":"d1ed0a0f","id":4741,"mutability":"mutable","name":"affiliateFeePercentage","nameLocation":"3350:22:21","nodeType":"VariableDeclaration","scope":5980,"src":"3335:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3335:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3235","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3375:2:21","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"visibility":"public"},{"constant":false,"documentation":{"id":4742,"nodeType":"StructuredDocumentation","src":"3393:53:21","text":"@dev the affiliate fee percentage in basis points"},"functionSelector":"f01f20df","id":4744,"mutability":"mutable","name":"burnPercentage","nameLocation":"3466:14:21","nodeType":"VariableDeclaration","scope":5980,"src":"3451:29:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":4745,"nodeType":"StructuredDocumentation","src":"3487:54:21","text":"@dev the royalty fee percentage taken on transfers"},"functionSelector":"4c09f37c","id":4748,"mutability":"mutable","name":"treasuryFeePercentage","nameLocation":"3561:21:21","nodeType":"VariableDeclaration","scope":5980,"src":"3546:41:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3546:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3585:2:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":false,"documentation":{"id":4749,"nodeType":"StructuredDocumentation","src":"3603:56:21","text":"@dev the percent of eth taken when liquidity is open"},"functionSelector":"e08973ce","id":4752,"mutability":"mutable","name":"lpEthFeePercentage","nameLocation":"3679:18:21","nodeType":"VariableDeclaration","scope":5980,"src":"3664:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3700:2:21","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":true,"documentation":{"id":4753,"nodeType":"StructuredDocumentation","src":"3718:115:21","text":"@dev The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps"},"functionSelector":"a82ed9ec","id":4759,"mutability":"constant","name":"UNISWAP_V2_ROUTER","nameLocation":"3873:17:21","nodeType":"VariableDeclaration","scope":5980,"src":"3838:125:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"},"typeName":{"id":4755,"nodeType":"UserDefinedTypeName","pathNode":{"id":4754,"name":"IUniswapV2Router02","nameLocations":["3838:18:21"],"nodeType":"IdentifierPath","referencedDeclaration":3248,"src":"3838:18:21"},"referencedDeclaration":3248,"src":"3838:18:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"value":{"arguments":[{"hexValue":"307837613235306435363330423463463533393733396446324335644163623463363539463234383844","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3920:42:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4756,"name":"IUniswapV2Router02","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"3901:18:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Router02_$3248_$","typeString":"type(contract IUniswapV2Router02)"}},"id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3901:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"visibility":"public"},{"constant":false,"documentation":{"id":4760,"nodeType":"StructuredDocumentation","src":"3970:112:21","text":"@dev The address of the LP token. The contract uses the LP token to determine if a transfer is a buy or sell"},"functionSelector":"49bd5a5e","id":4762,"mutability":"mutable","name":"uniswapV2Pair","nameLocation":"4102:13:21","nodeType":"VariableDeclaration","scope":5980,"src":"4087:28:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4761,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":4763,"nodeType":"StructuredDocumentation","src":"4122:66:21","text":"@dev The flag for whether swapping is enabled and trading open"},"functionSelector":"351a964d","id":4765,"mutability":"mutable","name":"isSwapEnabled","nameLocation":"4205:13:21","nodeType":"VariableDeclaration","scope":5980,"src":"4193:25:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4764,"name":"bool","nodeType":"ElementaryTypeName","src":"4193:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"documentation":{"id":4766,"nodeType":"StructuredDocumentation","src":"4225:50:21","text":"@dev Are we currently swapping tokens for ETH?"},"id":4768,"mutability":"mutable","name":"_inSwap","nameLocation":"4293:7:21","nodeType":"VariableDeclaration","scope":5980,"src":"4280:20:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4767,"name":"bool","nodeType":"ElementaryTypeName","src":"4280:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"id":4772,"mutability":"mutable","name":"_feeWhitelist","nameLocation":"4363:13:21","nodeType":"VariableDeclaration","scope":5980,"src":"4307:69:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4771,"keyName":"feePayer","keyNameLocation":"4323:8:21","keyType":{"id":4769,"name":"address","nodeType":"ElementaryTypeName","src":"4315:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4307:47:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"isWhitelisted","valueNameLocation":"4340:13:21","valueType":{"id":4770,"name":"bool","nodeType":"ElementaryTypeName","src":"4335:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":4784,"nodeType":"Block","src":"4475:67:21","statements":[{"expression":{"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"_inSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"4485:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4495:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4485:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4778,"nodeType":"ExpressionStatement","src":"4485:14:21"},{"id":4779,"nodeType":"PlaceholderStatement","src":"4509:1:21"},{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4780,"name":"_inSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"4520:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4530:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4520:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4783,"nodeType":"ExpressionStatement","src":"4520:15:21"}]},"documentation":{"id":4773,"nodeType":"StructuredDocumentation","src":"4383:64:21","text":"@dev Modifier to prevent swapping tokens for ETH recursively"},"id":4785,"name":"lockTheSwap","nameLocation":"4461:11:21","nodeType":"ModifierDefinition","parameters":{"id":4774,"nodeType":"ParameterList","parameters":[],"src":"4472:2:21"},"src":"4452:90:21","virtual":false,"visibility":"internal"},{"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"4548:55:21","text":"@notice Error thrown when the genie is already set."},"errorSelector":"131d002d","id":4788,"name":"GenieAlreadySet","nameLocation":"4614:15:21","nodeType":"ErrorDefinition","parameters":{"id":4787,"nodeType":"ParameterList","parameters":[],"src":"4629:2:21"},"src":"4608:24:21"},{"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"4638:75:21","text":"@notice Error thrown when the provided maximum token amount is invalid."},"errorSelector":"64824b8d","id":4793,"name":"InvalidMaxTokenAmount","nameLocation":"4724:21:21","nodeType":"ErrorDefinition","parameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"maxPerWallet","nameLocation":"4754:12:21","nodeType":"VariableDeclaration","scope":4793,"src":"4746:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4745:22:21"},"src":"4718:50:21"},{"documentation":{"id":4794,"nodeType":"StructuredDocumentation","src":"4774:115:21","text":"@notice Error thrown when the new maximum token amount per address is less than or equal to the previous value."},"errorSelector":"a43d2d76","id":4796,"name":"MaxTokenAmountPerAddrLtPrevious","nameLocation":"4900:31:21","nodeType":"ErrorDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[],"src":"4931:2:21"},"src":"4894:40:21"},{"documentation":{"id":4797,"nodeType":"StructuredDocumentation","src":"4940:159:21","text":"@notice Error thrown when the destination balance exceeds the maximum allowed amount.\n @param addr The address whose balance would exceed the limit."},"errorSelector":"f6202a8f","id":4801,"name":"DestBalanceExceedsMaxAllowed","nameLocation":"5110:28:21","nodeType":"ErrorDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"addr","nameLocation":"5147:4:21","nodeType":"VariableDeclaration","scope":4801,"src":"5139:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4798,"name":"address","nodeType":"ElementaryTypeName","src":"5139:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5138:14:21"},"src":"5104:49:21"},{"documentation":{"id":4802,"nodeType":"StructuredDocumentation","src":"5159:53:21","text":"@notice Error thrown when burning is not enabled."},"errorSelector":"6cb59139","id":4804,"name":"BurningNotEnabled","nameLocation":"5223:17:21","nodeType":"ErrorDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[],"src":"5240:2:21"},"src":"5217:26:21"},{"documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"5249:53:21","text":"@notice Error thrown when pausing is not enabled."},"errorSelector":"f00085b9","id":4807,"name":"PausingNotEnabled","nameLocation":"5313:17:21","nodeType":"ErrorDefinition","parameters":{"id":4806,"nodeType":"ParameterList","parameters":[],"src":"5330:2:21"},"src":"5307:26:21"},{"documentation":{"id":4808,"nodeType":"StructuredDocumentation","src":"5339:60:21","text":"@notice Error thrown when the token is not deflationary."},"errorSelector":"cd9e5298","id":4810,"name":"TokenIsNotDeflationary","nameLocation":"5410:22:21","nodeType":"ErrorDefinition","parameters":{"id":4809,"nodeType":"ParameterList","parameters":[],"src":"5432:2:21"},"src":"5404:31:21"},{"documentation":{"id":4811,"nodeType":"StructuredDocumentation","src":"5441:122:21","text":"@notice Error thrown when an invalid tax basis point is provided.\n @param bps The invalid basis points for tax."},"errorSelector":"cb400e96","id":4815,"name":"InvalidTaxBPS","nameLocation":"5574:13:21","nodeType":"ErrorDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"bps","nameLocation":"5596:3:21","nodeType":"VariableDeclaration","scope":4815,"src":"5588:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"5588:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5587:13:21"},"src":"5568:33:21"},{"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"5607:134:21","text":"@notice Error thrown when an invalid deflation basis point is provided.\n @param bps The invalid basis points for deflation."},"errorSelector":"bb746520","id":4820,"name":"InvalidDeflationBPS","nameLocation":"5752:19:21","nodeType":"ErrorDefinition","parameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"bps","nameLocation":"5780:3:21","nodeType":"VariableDeclaration","scope":4820,"src":"5772:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"5772:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5771:13:21"},"src":"5746:39:21"},{"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"5791:54:21","text":"@notice Error thrown when trading is already open."},"errorSelector":"94215aac","id":4823,"name":"TradingAlreadyOpen","nameLocation":"5856:18:21","nodeType":"ErrorDefinition","parameters":{"id":4822,"nodeType":"ParameterList","parameters":[],"src":"5874:2:21"},"src":"5850:27:21"},{"documentation":{"id":4824,"nodeType":"StructuredDocumentation","src":"5883:175:21","text":"@notice Error thrown when the provided ETH amount is insufficient.\n @param amount The provided ETH amount.\n @param minAmount The minimum required ETH amount."},"errorSelector":"1fbeaea0","id":4830,"name":"InsufficientETH","nameLocation":"6069:15:21","nodeType":"ErrorDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"amount","nameLocation":"6093:6:21","nodeType":"VariableDeclaration","scope":4830,"src":"6085:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"6085:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4828,"mutability":"mutable","name":"minAmount","nameLocation":"6109:9:21","nodeType":"VariableDeclaration","scope":4830,"src":"6101:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"6101:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6084:35:21"},"src":"6063:57:21"},{"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"6126:181:21","text":"@notice Error thrown when the provided token amount is insufficient.\n @param amount The provided token amount.\n @param minAmount The minimum required token amount."},"errorSelector":"c7bcc1b9","id":4837,"name":"InsufficientTokens","nameLocation":"6318:18:21","nodeType":"ErrorDefinition","parameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"amount","nameLocation":"6345:6:21","nodeType":"VariableDeclaration","scope":4837,"src":"6337:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"6337:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"minAmount","nameLocation":"6361:9:21","nodeType":"VariableDeclaration","scope":4837,"src":"6353:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"6353:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6336:35:21"},"src":"6312:60:21"},{"anonymous":false,"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"6378:110:21","text":"@notice This event is emitted when the trading is opened.\n @param pair The address of the LP token."},"eventSelector":"57a9f98b233034883786b9c47f1f6fabcf1655e39d3213b7287b926ca387136e","id":4842,"name":"TradingOpened","nameLocation":"6499:13:21","nodeType":"EventDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"indexed":true,"mutability":"mutable","name":"pair","nameLocation":"6529:4:21","nodeType":"VariableDeclaration","scope":4842,"src":"6513:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4839,"name":"address","nodeType":"ElementaryTypeName","src":"6513:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6512:22:21"},"src":"6493:42:21"},{"anonymous":false,"documentation":{"id":4843,"nodeType":"StructuredDocumentation","src":"6541:178:21","text":"@notice This event is emitted when the maximum number of tokens allowed per wallet has been updated.\n @param newMaxTokenAmount The new maximum token amount per wallet."},"eventSelector":"aab136b9dbe20468ab36dcd11abd26b3dcea2b259f018136905bf827f37f5514","id":4847,"name":"MaxTokensPerWalletSet","nameLocation":"6730:21:21","nodeType":"EventDefinition","parameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"indexed":true,"mutability":"mutable","name":"newMaxTokenAmount","nameLocation":"6768:17:21","nodeType":"VariableDeclaration","scope":4847,"src":"6752:33:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"6752:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6751:35:21"},"src":"6724:63:21"},{"anonymous":false,"documentation":{"id":4848,"nodeType":"StructuredDocumentation","src":"6793:213:21","text":"@notice This event is emitted when the fee configuration of the token has been updated.\n @param _feeRecipient The updated fee recipient address.\n @param _feePercentage The updated fee percentage."},"eventSelector":"e42708d93b95810922305119a3271ca42233da9ebe1e1e503f0e887817a32c7a","id":4854,"name":"FeeConfigUpdated","nameLocation":"7017:16:21","nodeType":"EventDefinition","parameters":{"id":4853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"indexed":true,"mutability":"mutable","name":"_feeRecipient","nameLocation":"7050:13:21","nodeType":"VariableDeclaration","scope":4854,"src":"7034:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4849,"name":"address","nodeType":"ElementaryTypeName","src":"7034:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4852,"indexed":true,"mutability":"mutable","name":"_feePercentage","nameLocation":"7081:14:21","nodeType":"VariableDeclaration","scope":4854,"src":"7065:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4851,"name":"uint256","nodeType":"ElementaryTypeName","src":"7065:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7033:63:21"},"src":"7011:86:21"},{"anonymous":false,"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"7103:152:21","text":"@notice This event is emitted when the burn configuration of the token has been updated.\n @param _burnPercentage The updated burn percentage."},"eventSelector":"8c3208fa4fab043d09d9517339346757a58804a46f954585ba21465677820817","id":4859,"name":"BurnConfigUpdated","nameLocation":"7266:17:21","nodeType":"EventDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"indexed":true,"mutability":"mutable","name":"_burnPercentage","nameLocation":"7300:15:21","nodeType":"VariableDeclaration","scope":4859,"src":"7284:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"7284:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7283:33:21"},"src":"7260:57:21"},{"body":{"id":4997,"nodeType":"Block","src":"8556:1064:21","statements":[{"expression":{"arguments":[{"id":4895,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"8595:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4892,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"8566:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8579:15:21","memberName":"validateAddress","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"8566:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8566:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4897,"nodeType":"ExpressionStatement","src":"8566:40:21"},{"expression":{"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4898,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"8616:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4899,"name":"initialSupplyToSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"8632:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8616:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4901,"nodeType":"ExpressionStatement","src":"8616:34:21"},{"expression":{"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4902,"name":"_tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"8660:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8677:2:21","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"8660:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4905,"nodeType":"ExpressionStatement","src":"8660:19:21"},{"expression":{"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"affiliateFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"8689:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4907,"name":"_affilateFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"8713:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8689:45:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4909,"nodeType":"ExpressionStatement","src":"8689:45:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"8749:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4911,"name":"_MAX_TAX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"8766:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8749:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4918,"nodeType":"IfStatement","src":"8745:92:21","trueBody":{"id":4917,"nodeType":"Block","src":"8776:61:21","statements":[{"errorCall":{"arguments":[{"id":4914,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"8811:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4913,"name":"InvalidTaxBPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"8797:13:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8797:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4916,"nodeType":"RevertStatement","src":"8790:36:21"}]}},{"condition":{"expression":{"id":4919,"name":"customConfigProps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"8851:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties memory"}},"id":4920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8869:14:21","memberName":"isDeflationary","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"8851:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4935,"nodeType":"IfStatement","src":"8847:217:21","trueBody":{"id":4934,"nodeType":"Block","src":"8885:179:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4921,"name":"_burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"8903:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4922,"name":"_MAX_TAX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"8921:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8903:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4929,"nodeType":"IfStatement","src":"8899:108:21","trueBody":{"id":4928,"nodeType":"Block","src":"8931:76:21","statements":[{"errorCall":{"arguments":[{"id":4925,"name":"_burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"8976:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4924,"name":"InvalidDeflationBPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"8956:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8956:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4927,"nodeType":"RevertStatement","src":"8949:43:21"}]}},{"expression":{"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4930,"name":"burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"9021:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4931,"name":"_burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9038:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9021:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4933,"nodeType":"ExpressionStatement","src":"9021:32:21"}]}},{"expression":{"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4936,"name":"tokenConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"9074:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage","typeString":"struct Common.TokenConfigProperties storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4937,"name":"customConfigProps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"9088:17:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties memory"}},"src":"9074:31:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage","typeString":"struct Common.TokenConfigProperties storage ref"}},"id":4939,"nodeType":"ExpressionStatement","src":"9074:31:21"},{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4940,"name":"maxTokenAmountPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"9115:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4941,"name":"maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"9142:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9115:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ExpressionStatement","src":"9115:39:21"},{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"maxTaxSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"9164:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4945,"name":"maxToSwapForTax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"9177:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9164:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"9164:28:21"},{"expression":{"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4948,"name":"autoWithdrawThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"9202:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4949,"name":"_autoWithdrawThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"9226:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9202:46:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4951,"nodeType":"ExpressionStatement","src":"9202:46:21"},{"expression":{"arguments":[{"id":4955,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"9288:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4952,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"9259:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9272:15:21","memberName":"validateAddress","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"9259:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4957,"nodeType":"ExpressionStatement","src":"9259:43:21"},{"expression":{"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4958,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"9312:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4959,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"9327:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9312:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4961,"nodeType":"ExpressionStatement","src":"9312:28:21"},{"expression":{"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4962,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"9350:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4963,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"9366:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9350:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4965,"nodeType":"ExpressionStatement","src":"9350:30:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"initialSupplyToSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"9395:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9417:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9395:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4975,"nodeType":"IfStatement","src":"9391:91:21","trueBody":{"id":4974,"nodeType":"Block","src":"9420:62:21","statements":[{"expression":{"arguments":[{"id":4970,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"9440:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4971,"name":"initialSupplyToSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"9452:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4969,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"9434:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9434:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4973,"nodeType":"ExpressionStatement","src":"9434:37:21"}]}},{"expression":{"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4976,"name":"_feeWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"9492:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4981,"indexExpression":{"arguments":[{"id":4979,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9514:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9506:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4977,"name":"address","nodeType":"ElementaryTypeName","src":"9506:7:21","typeDescriptions":{}}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9492:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9523:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9492:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4984,"nodeType":"ExpressionStatement","src":"9492:35:21"},{"expression":{"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4985,"name":"_feeWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"9537:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4987,"indexExpression":{"id":4986,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"9551:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9537:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9565:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9537:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4990,"nodeType":"ExpressionStatement","src":"9537:32:21"},{"expression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4991,"name":"_feeWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"9579:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4993,"indexExpression":{"id":4992,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"9593:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9579:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9609:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9579:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4996,"nodeType":"ExpressionStatement","src":"9579:34:21"}]},"documentation":{"id":4860,"nodeType":"StructuredDocumentation","src":"7323:751:21","text":" @dev Initializes the contract with the provided parameters\n @param name_ The name of the token\n @param symbol_ The symbol of the token\n @param initialSupplyToSet The initial supply of the token\n @param tokenOwner The owner of the token\n @param customConfigProps Represents the features of the token\n @param maxPerWallet The max amount of tokens per wallet\n @param maxToSwapForTax The max amount of tokens to swap for tax\n @param _affilateFeeRecipient The address of the affiliate fee recipient\n @param _feeRecipient The address of the fee recipient\n @param _feePercentage The fee percentage in basis points\n @param _burnPercentage The burn percentage in basis points"},"id":4998,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4888,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"8536:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4889,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"8543:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4890,"kind":"baseConstructorSpecifier","modifierName":{"id":4887,"name":"ERC20","nameLocations":["8530:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":872,"src":"8530:5:21"},"nodeType":"ModifierInvocation","src":"8530:21:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"mutability":"mutable","name":"name_","nameLocation":"8114:5:21","nodeType":"VariableDeclaration","scope":4998,"src":"8100:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4861,"name":"string","nodeType":"ElementaryTypeName","src":"8100:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"symbol_","nameLocation":"8143:7:21","nodeType":"VariableDeclaration","scope":4998,"src":"8129:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4863,"name":"string","nodeType":"ElementaryTypeName","src":"8129:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"initialSupplyToSet","nameLocation":"8168:18:21","nodeType":"VariableDeclaration","scope":4998,"src":"8160:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"8160:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4868,"mutability":"mutable","name":"tokenOwner","nameLocation":"8204:10:21","nodeType":"VariableDeclaration","scope":4998,"src":"8196:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4867,"name":"address","nodeType":"ElementaryTypeName","src":"8196:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"customConfigProps","nameLocation":"8260:17:21","nodeType":"VariableDeclaration","scope":4998,"src":"8224:53:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties"},"typeName":{"id":4870,"nodeType":"UserDefinedTypeName","pathNode":{"id":4869,"name":"Common.TokenConfigProperties","nameLocations":["8224:6:21","8231:21:21"],"nodeType":"IdentifierPath","referencedDeclaration":7281,"src":"8224:28:21"},"referencedDeclaration":7281,"src":"8224:28:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage_ptr","typeString":"struct Common.TokenConfigProperties"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"maxPerWallet","nameLocation":"8295:12:21","nodeType":"VariableDeclaration","scope":4998,"src":"8287:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"8287:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4875,"mutability":"mutable","name":"maxToSwapForTax","nameLocation":"8325:15:21","nodeType":"VariableDeclaration","scope":4998,"src":"8317:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4874,"name":"uint256","nodeType":"ElementaryTypeName","src":"8317:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4877,"mutability":"mutable","name":"_autoWithdrawThreshold","nameLocation":"8358:22:21","nodeType":"VariableDeclaration","scope":4998,"src":"8350:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4879,"mutability":"mutable","name":"_affilateFeeRecipient","nameLocation":"8398:21:21","nodeType":"VariableDeclaration","scope":4998,"src":"8390:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4878,"name":"address","nodeType":"ElementaryTypeName","src":"8390:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4881,"mutability":"mutable","name":"_feeRecipient","nameLocation":"8437:13:21","nodeType":"VariableDeclaration","scope":4998,"src":"8429:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4880,"name":"address","nodeType":"ElementaryTypeName","src":"8429:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4883,"mutability":"mutable","name":"_feePercentage","nameLocation":"8468:14:21","nodeType":"VariableDeclaration","scope":4998,"src":"8460:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4882,"name":"uint256","nodeType":"ElementaryTypeName","src":"8460:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"_burnPercentage","nameLocation":"8500:15:21","nodeType":"VariableDeclaration","scope":4998,"src":"8492:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"8492:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8090:431:21"},"returnParameters":{"id":4891,"nodeType":"ParameterList","parameters":[],"src":"8556:0:21"},"scope":5980,"src":"8079:1541:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[860,1030],"body":{"id":5019,"nodeType":"Block","src":"10085:61:21","statements":[{"expression":{"arguments":[{"id":5014,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"10122:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5015,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"10128:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5016,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"10132:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5011,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"10095:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CoinGenieERC20_$5980_$","typeString":"type(contract super CoinGenieERC20)"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10101:20:21","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1030,"src":"10095:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10095:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5018,"nodeType":"ExpressionStatement","src":"10095:44:21"}]},"documentation":{"id":4999,"nodeType":"StructuredDocumentation","src":"9626:276:21","text":" @dev hook called before any transfer of tokens. This includes minting and burning\n imposed by the ERC20 standard\n @param from - address of the sender\n @param to - address of the recipient\n @param amount - amount of tokens to transfer"},"id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"9916:20:21","nodeType":"FunctionDefinition","overrides":{"id":5009,"nodeType":"OverrideSpecifier","overrides":[{"id":5007,"name":"ERC20","nameLocations":["10059:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":872,"src":"10059:5:21"},{"id":5008,"name":"ERC20Pausable","nameLocations":["10066:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":1031,"src":"10066:13:21"}],"src":"10050:30:21"},"parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"from","nameLocation":"9954:4:21","nodeType":"VariableDeclaration","scope":5020,"src":"9946:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5000,"name":"address","nodeType":"ElementaryTypeName","src":"9946:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5003,"mutability":"mutable","name":"to","nameLocation":"9976:2:21","nodeType":"VariableDeclaration","scope":5020,"src":"9968:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5002,"name":"address","nodeType":"ElementaryTypeName","src":"9968:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"amount","nameLocation":"9996:6:21","nodeType":"VariableDeclaration","scope":5020,"src":"9988:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"9988:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9936:72:21"},"returnParameters":{"id":5010,"nodeType":"ParameterList","parameters":[],"src":"10085:0:21"},"scope":5980,"src":"9907:239:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":5029,"nodeType":"Block","src":"10262:46:21","statements":[{"expression":{"expression":{"id":5026,"name":"tokenConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"10279:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage","typeString":"struct Common.TokenConfigProperties storage ref"}},"id":5027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10291:10:21","memberName":"isPausable","nodeType":"MemberAccess","referencedDeclaration":7278,"src":"10279:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5025,"id":5028,"nodeType":"Return","src":"10272:29:21"}]},"documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"10152:56:21","text":" @return true if the token is pausable"},"functionSelector":"a09a1601","id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"isPausable","nameLocation":"10222:10:21","nodeType":"FunctionDefinition","parameters":{"id":5022,"nodeType":"ParameterList","parameters":[],"src":"10232:2:21"},"returnParameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5030,"src":"10256:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5023,"name":"bool","nodeType":"ElementaryTypeName","src":"10256:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10255:6:21"},"scope":5980,"src":"10213:95:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5039,"nodeType":"Block","src":"10424:46:21","statements":[{"expression":{"expression":{"id":5036,"name":"tokenConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"10441:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage","typeString":"struct Common.TokenConfigProperties storage ref"}},"id":5037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10453:10:21","memberName":"isBurnable","nodeType":"MemberAccess","referencedDeclaration":7276,"src":"10441:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5035,"id":5038,"nodeType":"Return","src":"10434:29:21"}]},"documentation":{"id":5031,"nodeType":"StructuredDocumentation","src":"10314:56:21","text":" @return true if the token is burnable"},"functionSelector":"883356d9","id":5040,"implemented":true,"kind":"function","modifiers":[],"name":"isBurnable","nameLocation":"10384:10:21","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[],"src":"10394:2:21"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5040,"src":"10418:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5033,"name":"bool","nodeType":"ElementaryTypeName","src":"10418:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10417:6:21"},"scope":5980,"src":"10375:95:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5052,"nodeType":"Block","src":"10611:47:21","statements":[{"expression":{"baseExpression":{"id":5048,"name":"_feeWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"10628:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5050,"indexExpression":{"id":5049,"name":"feePayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"10642:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10628:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5047,"id":5051,"nodeType":"Return","src":"10621:30:21"}]},"documentation":{"id":5041,"nodeType":"StructuredDocumentation","src":"10476:62:21","text":" @return true if the feePayer is whitelisted"},"functionSelector":"3af32abf","id":5053,"implemented":true,"kind":"function","modifiers":[],"name":"isWhitelisted","nameLocation":"10552:13:21","nodeType":"FunctionDefinition","parameters":{"id":5044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"feePayer","nameLocation":"10574:8:21","nodeType":"VariableDeclaration","scope":5053,"src":"10566:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5042,"name":"address","nodeType":"ElementaryTypeName","src":"10566:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10565:18:21"},"returnParameters":{"id":5047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5053,"src":"10605:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5045,"name":"bool","nodeType":"ElementaryTypeName","src":"10605:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10604:6:21"},"scope":5980,"src":"10543:115:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[360],"body":{"id":5062,"nodeType":"Block","src":"10793:38:21","statements":[{"expression":{"id":5060,"name":"_tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"10810:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5059,"id":5061,"nodeType":"Return","src":"10803:21:21"}]},"documentation":{"id":5054,"nodeType":"StructuredDocumentation","src":"10664:59:21","text":" @return number of decimals for the token"},"functionSelector":"313ce567","id":5063,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"10737:8:21","nodeType":"FunctionDefinition","overrides":{"id":5056,"nodeType":"OverrideSpecifier","overrides":[],"src":"10768:8:21"},"parameters":{"id":5055,"nodeType":"ParameterList","parameters":[],"src":"10745:2:21"},"returnParameters":{"id":5059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5063,"src":"10786:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5057,"name":"uint8","nodeType":"ElementaryTypeName","src":"10786:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"10785:7:21"},"scope":5980,"src":"10728:103:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":5072,"nodeType":"Block","src":"10958:50:21","statements":[{"expression":{"expression":{"id":5069,"name":"tokenConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"10975:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage","typeString":"struct Common.TokenConfigProperties storage ref"}},"id":5070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10987:14:21","memberName":"isDeflationary","nodeType":"MemberAccess","referencedDeclaration":7280,"src":"10975:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5068,"id":5071,"nodeType":"Return","src":"10968:33:21"}]},"documentation":{"id":5064,"nodeType":"StructuredDocumentation","src":"10837:63:21","text":" @return true if the token supports deflation"},"functionSelector":"8e8c10a2","id":5073,"implemented":true,"kind":"function","modifiers":[],"name":"isDeflationary","nameLocation":"10914:14:21","nodeType":"FunctionDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[],"src":"10928:2:21"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5073,"src":"10952:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5066,"name":"bool","nodeType":"ElementaryTypeName","src":"10952:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10951:6:21"},"scope":5980,"src":"10905:103:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5094,"nodeType":"Block","src":"11222:149:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5079,"name":"coinGenieTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"11236:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11265:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11257:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5080,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:21","typeDescriptions":{}}},"id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11257:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11236:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5089,"nodeType":"IfStatement","src":"11232:86:21","trueBody":{"id":5088,"nodeType":"Block","src":"11269:49:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5085,"name":"GenieAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"11290:15:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11290:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5087,"nodeType":"RevertStatement","src":"11283:24:21"}]}},{"expression":{"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"coinGenieTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"11328:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5091,"name":"coinGenieAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"11348:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11328:36:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5093,"nodeType":"ExpressionStatement","src":"11328:36:21"}]},"documentation":{"id":5074,"nodeType":"StructuredDocumentation","src":"11014:138:21","text":" @dev Allows the owner to set the address of the coingenie\n @param coinGenieAddress - the address of the coinGenie"},"functionSelector":"3381e7e2","id":5095,"implemented":true,"kind":"function","modifiers":[],"name":"setCoinGenieTreasury","nameLocation":"11166:20:21","nodeType":"FunctionDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"coinGenieAddress","nameLocation":"11195:16:21","nodeType":"VariableDeclaration","scope":5095,"src":"11187:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5075,"name":"address","nodeType":"ElementaryTypeName","src":"11187:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11186:26:21"},"returnParameters":{"id":5078,"nodeType":"ParameterList","parameters":[],"src":"11222:0:21"},"scope":5980,"src":"11157:214:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5107,"nodeType":"Block","src":"11633:36:21","statements":[{"expression":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5103,"name":"maxTaxSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"11643:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5104,"name":"maxTax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"11656:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11643:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5106,"nodeType":"ExpressionStatement","src":"11643:19:21"}]},"documentation":{"id":5096,"nodeType":"StructuredDocumentation","src":"11377:193:21","text":" @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\n @param maxTax - the new max amount of tokens to swap for tax"},"functionSelector":"b9d0f1af","id":5108,"implemented":true,"kind":"function","modifiers":[{"id":5101,"kind":"modifierInvocation","modifierName":{"id":5100,"name":"onlyOwner","nameLocations":["11623:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"11623:9:21"},"nodeType":"ModifierInvocation","src":"11623:9:21"}],"name":"setMaxTaxSwap","nameLocation":"11584:13:21","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"maxTax","nameLocation":"11606:6:21","nodeType":"VariableDeclaration","scope":5108,"src":"11598:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5097,"name":"uint256","nodeType":"ElementaryTypeName","src":"11598:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11597:16:21"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[],"src":"11633:0:21"},"scope":5980,"src":"11575:94:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5120,"nodeType":"Block","src":"11948:50:21","statements":[{"expression":{"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5116,"name":"autoWithdrawThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"11958:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5117,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5111,"src":"11982:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11958:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5119,"nodeType":"ExpressionStatement","src":"11958:33:21"}]},"documentation":{"id":5109,"nodeType":"StructuredDocumentation","src":"11675:196:21","text":" @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\n @param threshold - the new max amount of tokens to swap for tax"},"functionSelector":"f69cf783","id":5121,"implemented":true,"kind":"function","modifiers":[{"id":5114,"kind":"modifierInvocation","modifierName":{"id":5113,"name":"onlyOwner","nameLocations":["11938:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"11938:9:21"},"nodeType":"ModifierInvocation","src":"11938:9:21"}],"name":"setAutoWithdrawThreshold","nameLocation":"11885:24:21","nodeType":"FunctionDefinition","parameters":{"id":5112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"threshold","nameLocation":"11918:9:21","nodeType":"VariableDeclaration","scope":5121,"src":"11910:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5110,"name":"uint256","nodeType":"ElementaryTypeName","src":"11910:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11909:19:21"},"returnParameters":{"id":5115,"nodeType":"ParameterList","parameters":[],"src":"11948:0:21"},"scope":5980,"src":"11876:122:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5147,"nodeType":"Block","src":"12449:242:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5131,"name":"newMaxTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"12463:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5132,"name":"maxTokenAmountPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"12484:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12463:45:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5138,"nodeType":"IfStatement","src":"12459:116:21","trueBody":{"id":5137,"nodeType":"Block","src":"12510:65:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5134,"name":"MaxTokenAmountPerAddrLtPrevious","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"12531:31:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12531:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5136,"nodeType":"RevertStatement","src":"12524:40:21"}]}},{"expression":{"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5139,"name":"maxTokenAmountPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"12585:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5140,"name":"newMaxTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"12612:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12585:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5142,"nodeType":"ExpressionStatement","src":"12585:44:21"},{"eventCall":{"arguments":[{"id":5144,"name":"newMaxTokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"12666:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5143,"name":"MaxTokensPerWalletSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"12644:21:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12644:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5146,"nodeType":"EmitStatement","src":"12639:45:21"}]},"documentation":{"id":5122,"nodeType":"StructuredDocumentation","src":"12004:343:21","text":" @dev Allows the owner to set a max amount of tokens per wallet\n @param newMaxTokenAmount - the new max amount of tokens per wallet\n @notice only callable by the owner\n @notice only callable if the token is not paused\n @notice only callable if the token supports max amount of tokens per wallet"},"functionSelector":"02252c4d","id":5148,"implemented":true,"kind":"function","modifiers":[{"id":5127,"kind":"modifierInvocation","modifierName":{"id":5126,"name":"onlyOwner","nameLocations":["12425:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"12425:9:21"},"nodeType":"ModifierInvocation","src":"12425:9:21"},{"id":5129,"kind":"modifierInvocation","modifierName":{"id":5128,"name":"whenNotPaused","nameLocations":["12435:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"12435:13:21"},"nodeType":"ModifierInvocation","src":"12435:13:21"}],"name":"setMaxTokenAmountPerAddress","nameLocation":"12361:27:21","nodeType":"FunctionDefinition","parameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"newMaxTokenAmount","nameLocation":"12397:17:21","nodeType":"VariableDeclaration","scope":5148,"src":"12389:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"12389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12388:27:21"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[],"src":"12449:0:21"},"scope":5980,"src":"12352:339:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5188,"nodeType":"Block","src":"13157:302:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5160,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"13171:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5161,"name":"_MAX_TAX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"13188:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13171:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5168,"nodeType":"IfStatement","src":"13167:92:21","trueBody":{"id":5167,"nodeType":"Block","src":"13198:61:21","statements":[{"errorCall":{"arguments":[{"id":5164,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"13233:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5163,"name":"InvalidTaxBPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"13219:13:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13219:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5166,"nodeType":"RevertStatement","src":"13212:36:21"}]}},{"expression":{"arguments":[{"id":5172,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"13298:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5169,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"13269:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13282:15:21","memberName":"validateAddress","nodeType":"MemberAccess","referencedDeclaration":7304,"src":"13269:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13269:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5174,"nodeType":"ExpressionStatement","src":"13269:43:21"},{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5175,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"13322:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5176,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"13337:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13322:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5178,"nodeType":"ExpressionStatement","src":"13322:28:21"},{"expression":{"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5179,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"13360:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5180,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"13376:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13360:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5182,"nodeType":"ExpressionStatement","src":"13360:30:21"},{"eventCall":{"arguments":[{"id":5184,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"13422:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5185,"name":"_feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"13437:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5183,"name":"FeeConfigUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"13405:16:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13405:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5187,"nodeType":"EmitStatement","src":"13400:52:21"}]},"documentation":{"id":5149,"nodeType":"StructuredDocumentation","src":"12697:353:21","text":" @dev Allows the owner to set the tax config\n @param _feeRecipient - the new feeRecipient\n @param _feePercentage - the new feePercentage\n @notice only callable by the owner\n @notice only callable if the token is not paused\n @notice only callable if the feePercentage is not greater than the max tax"},"functionSelector":"f19c4e3b","id":5189,"implemented":true,"kind":"function","modifiers":[{"id":5156,"kind":"modifierInvocation","modifierName":{"id":5155,"name":"onlyOwner","nameLocations":["13133:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13133:9:21"},"nodeType":"ModifierInvocation","src":"13133:9:21"},{"id":5158,"kind":"modifierInvocation","modifierName":{"id":5157,"name":"whenNotPaused","nameLocations":["13143:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"13143:13:21"},"nodeType":"ModifierInvocation","src":"13143:13:21"}],"name":"setTaxConfig","nameLocation":"13064:12:21","nodeType":"FunctionDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"_feeRecipient","nameLocation":"13085:13:21","nodeType":"VariableDeclaration","scope":5189,"src":"13077:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5150,"name":"address","nodeType":"ElementaryTypeName","src":"13077:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5153,"mutability":"mutable","name":"_feePercentage","nameLocation":"13108:14:21","nodeType":"VariableDeclaration","scope":5189,"src":"13100:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5152,"name":"uint256","nodeType":"ElementaryTypeName","src":"13100:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13076:47:21"},"returnParameters":{"id":5159,"nodeType":"ParameterList","parameters":[],"src":"13157:0:21"},"scope":5980,"src":"13055:404:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5224,"nodeType":"Block","src":"13936:297:21","statements":[{"condition":{"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13950:17:21","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5199,"name":"isDeflationary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"13951:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13951:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5206,"nodeType":"IfStatement","src":"13946:79:21","trueBody":{"id":5205,"nodeType":"Block","src":"13969:56:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5202,"name":"TokenIsNotDeflationary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"13990:22:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13990:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5204,"nodeType":"RevertStatement","src":"13983:31:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5207,"name":"_burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"14039:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5208,"name":"_MAX_TAX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"14057:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14039:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5215,"nodeType":"IfStatement","src":"14035:100:21","trueBody":{"id":5214,"nodeType":"Block","src":"14067:68:21","statements":[{"errorCall":{"arguments":[{"id":5211,"name":"_burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"14108:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5210,"name":"InvalidDeflationBPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"14088:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14088:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5213,"nodeType":"RevertStatement","src":"14081:43:21"}]}},{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"14145:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5217,"name":"_burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"14162:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14145:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5219,"nodeType":"ExpressionStatement","src":"14145:32:21"},{"eventCall":{"arguments":[{"id":5221,"name":"_burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"14210:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5220,"name":"BurnConfigUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"14192:17:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14192:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5223,"nodeType":"EmitStatement","src":"14187:39:21"}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"13465:380:21","text":" @dev Allows the owner to set the deflation config\n @param _burnPercentage - the new burnPercentage\n @notice only callable by the owner\n @notice only callable if the token is not paused\n @notice only callable if the token supports deflation\n @notice only callable if the burnPercentage is not greater than the max allowed bps"},"functionSelector":"d8f67851","id":5225,"implemented":true,"kind":"function","modifiers":[{"id":5195,"kind":"modifierInvocation","modifierName":{"id":5194,"name":"onlyOwner","nameLocations":["13912:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"13912:9:21"},"nodeType":"ModifierInvocation","src":"13912:9:21"},{"id":5197,"kind":"modifierInvocation","modifierName":{"id":5196,"name":"whenNotPaused","nameLocations":["13922:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"13922:13:21"},"nodeType":"ModifierInvocation","src":"13922:13:21"}],"name":"setDeflationConfig","nameLocation":"13859:18:21","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"_burnPercentage","nameLocation":"13886:15:21","nodeType":"VariableDeclaration","scope":5225,"src":"13878:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13878:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13877:25:21"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[],"src":"13936:0:21"},"scope":5980,"src":"13850:383:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[409],"body":{"id":5276,"nodeType":"Block","src":"15132:298:21","statements":[{"assignments":[5239],"declarations":[{"constant":false,"id":5239,"mutability":"mutable","name":"from","nameLocation":"15150:4:21","nodeType":"VariableDeclaration","scope":5276,"src":"15142:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5238,"name":"address","nodeType":"ElementaryTypeName","src":"15142:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5242,"initialValue":{"expression":{"id":5240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15157:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15161:6:21","memberName":"sender","nodeType":"MemberAccess","src":"15157:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15142:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"isSwapEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"15182:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15199:20:21","subExpression":{"baseExpression":{"id":5244,"name":"_feeWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"15200:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5246,"indexExpression":{"id":5245,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"15214:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15200:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15182:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15223:18:21","subExpression":{"baseExpression":{"id":5249,"name":"_feeWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"15224:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5251,"indexExpression":{"id":5250,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"15238:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15224:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15182:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5269,"nodeType":"IfStatement","src":"15178:202:21","trueBody":{"id":5268,"nodeType":"Block","src":"15243:137:21","statements":[{"assignments":[5255],"declarations":[{"constant":false,"id":5255,"mutability":"mutable","name":"amountToTransfer","nameLocation":"15265:16:21","nodeType":"VariableDeclaration","scope":5268,"src":"15257:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5254,"name":"uint256","nodeType":"ElementaryTypeName","src":"15257:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5261,"initialValue":{"arguments":[{"id":5257,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"15294:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5258,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"15300:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5259,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"15304:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5256,"name":"_takeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"15284:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) returns (uint256)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15284:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15257:54:21"},{"expression":{"arguments":[{"id":5264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"15348:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5265,"name":"amountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"15352:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5262,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"15333:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CoinGenieERC20_$5980_$","typeString":"type(contract super CoinGenieERC20)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15339:8:21","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":409,"src":"15333:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15333:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5237,"id":5267,"nodeType":"Return","src":"15326:43:21"}]}},{"expression":{"arguments":[{"id":5272,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"15412:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5273,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"15416:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5270,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"15397:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CoinGenieERC20_$5980_$","typeString":"type(contract super CoinGenieERC20)"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15403:8:21","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":409,"src":"15397:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15397:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5237,"id":5275,"nodeType":"Return","src":"15390:33:21"}]},"documentation":{"id":5226,"nodeType":"StructuredDocumentation","src":"14239:789:21","text":" @dev Allows to transfer a predefined amount of tokens to a predefined address\n @param to - the address to transfer the tokens to\n @param amount - the amount of tokens to transfer\n @return true if the transfer was successful\n @notice only callable if the token is not paused\n @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\n @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\n @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\n @notice captures the tax during the transfer if tax is enabvled\n @notice burns the deflationary amount during the transfer if deflation is enabled"},"functionSelector":"a9059cbb","id":5277,"implemented":true,"kind":"function","modifiers":[{"id":5234,"kind":"modifierInvocation","modifierName":{"id":5233,"name":"whenNotPaused","nameLocations":["15103:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"15103:13:21"},"nodeType":"ModifierInvocation","src":"15103:13:21"}],"name":"transfer","nameLocation":"15042:8:21","nodeType":"FunctionDefinition","overrides":{"id":5232,"nodeType":"OverrideSpecifier","overrides":[],"src":"15094:8:21"},"parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"to","nameLocation":"15059:2:21","nodeType":"VariableDeclaration","scope":5277,"src":"15051:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5227,"name":"address","nodeType":"ElementaryTypeName","src":"15051:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5230,"mutability":"mutable","name":"amount","nameLocation":"15071:6:21","nodeType":"VariableDeclaration","scope":5277,"src":"15063:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"15063:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15050:28:21"},"returnParameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5277,"src":"15126:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5235,"name":"bool","nodeType":"ElementaryTypeName","src":"15126:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15125:6:21"},"scope":5980,"src":"15033:397:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[485],"body":{"id":5327,"nodeType":"Block","src":"16508:282:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"isSwapEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"16522:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16539:20:21","subExpression":{"baseExpression":{"id":5293,"name":"_feeWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"16540:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5295,"indexExpression":{"id":5294,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"16554:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16540:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16522:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16563:18:21","subExpression":{"baseExpression":{"id":5298,"name":"_feeWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"16564:13:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5300,"indexExpression":{"id":5299,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"16578:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16564:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16522:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5319,"nodeType":"IfStatement","src":"16518:212:21","trueBody":{"id":5318,"nodeType":"Block","src":"16583:147:21","statements":[{"assignments":[5304],"declarations":[{"constant":false,"id":5304,"mutability":"mutable","name":"amountToTransfer","nameLocation":"16605:16:21","nodeType":"VariableDeclaration","scope":5318,"src":"16597:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"16597:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5310,"initialValue":{"arguments":[{"id":5306,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"16634:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"16640:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5308,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"16644:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5305,"name":"_takeFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"16624:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) returns (uint256)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16624:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16597:54:21"},{"expression":{"arguments":[{"id":5313,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"16692:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5314,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"16698:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5315,"name":"amountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"16702:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5311,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"16673:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CoinGenieERC20_$5980_$","typeString":"type(contract super CoinGenieERC20)"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16679:12:21","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":485,"src":"16673:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16673:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5291,"id":5317,"nodeType":"Return","src":"16666:53:21"}]}},{"expression":{"arguments":[{"id":5322,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"16766:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5323,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"16772:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5324,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5284,"src":"16776:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5320,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"16747:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CoinGenieERC20_$5980_$","typeString":"type(contract super CoinGenieERC20)"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16753:12:21","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":485,"src":"16747:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16747:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5291,"id":5326,"nodeType":"Return","src":"16740:43:21"}]},"documentation":{"id":5278,"nodeType":"StructuredDocumentation","src":"15436:876:21","text":" @dev Allows to transfer a predefined amount of tokens from a predefined address to a predefined address\n @param from - the address to transfer the tokens from\n @param to - the address to transfer the tokens to\n @param amount - the amount of tokens to transfer\n @return true if the transfer was successful\n @notice only callable if the token is not paused\n @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\n @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\n @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\n @notice captures the tax during the transfer if tax is enabvled\n @notice burns the deflationary amount during the transfer if deflation is enabled"},"functionSelector":"23b872dd","id":5328,"implemented":true,"kind":"function","modifiers":[{"id":5288,"kind":"modifierInvocation","modifierName":{"id":5287,"name":"whenNotPaused","nameLocations":["16467:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"16467:13:21"},"nodeType":"ModifierInvocation","src":"16467:13:21"}],"name":"transferFrom","nameLocation":"16326:12:21","nodeType":"FunctionDefinition","overrides":{"id":5286,"nodeType":"OverrideSpecifier","overrides":[],"src":"16450:8:21"},"parameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"from","nameLocation":"16356:4:21","nodeType":"VariableDeclaration","scope":5328,"src":"16348:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5279,"name":"address","nodeType":"ElementaryTypeName","src":"16348:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5282,"mutability":"mutable","name":"to","nameLocation":"16378:2:21","nodeType":"VariableDeclaration","scope":5328,"src":"16370:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5281,"name":"address","nodeType":"ElementaryTypeName","src":"16370:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5284,"mutability":"mutable","name":"amount","nameLocation":"16398:6:21","nodeType":"VariableDeclaration","scope":5328,"src":"16390:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5283,"name":"uint256","nodeType":"ElementaryTypeName","src":"16390:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16338:72:21"},"returnParameters":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5328,"src":"16498:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5289,"name":"bool","nodeType":"ElementaryTypeName","src":"16498:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16497:6:21"},"scope":5980,"src":"16317:473:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[972],"body":{"id":5353,"nodeType":"Block","src":"17155:115:21","statements":[{"condition":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17169:13:21","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5339,"name":"isBurnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"17170:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17170:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5346,"nodeType":"IfStatement","src":"17165:70:21","trueBody":{"id":5345,"nodeType":"Block","src":"17184:51:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5342,"name":"BurningNotEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"17205:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17205:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5344,"nodeType":"RevertStatement","src":"17198:26:21"}]}},{"expression":{"arguments":[{"id":5350,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"17256:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5347,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"17245:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CoinGenieERC20_$5980_$","typeString":"type(contract super CoinGenieERC20)"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17251:4:21","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":972,"src":"17245:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17245:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5352,"nodeType":"ExpressionStatement","src":"17245:18:21"}]},"documentation":{"id":5329,"nodeType":"StructuredDocumentation","src":"16796:284:21","text":" @dev Allows to burn a predefined amount of tokens\n @param amount - the amount of tokens to burn\n @notice only callable by the owner\n @notice only callable if the token is not paused\n @notice only callable if the token supports burning"},"functionSelector":"42966c68","id":5354,"implemented":true,"kind":"function","modifiers":[{"id":5335,"kind":"modifierInvocation","modifierName":{"id":5334,"name":"onlyOwner","nameLocations":["17131:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"17131:9:21"},"nodeType":"ModifierInvocation","src":"17131:9:21"},{"id":5337,"kind":"modifierInvocation","modifierName":{"id":5336,"name":"whenNotPaused","nameLocations":["17141:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"17141:13:21"},"nodeType":"ModifierInvocation","src":"17141:13:21"}],"name":"burn","nameLocation":"17094:4:21","nodeType":"FunctionDefinition","overrides":{"id":5333,"nodeType":"OverrideSpecifier","overrides":[],"src":"17122:8:21"},"parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"amount","nameLocation":"17107:6:21","nodeType":"VariableDeclaration","scope":5354,"src":"17099:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"17099:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17098:16:21"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[],"src":"17155:0:21"},"scope":5980,"src":"17085:185:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[993],"body":{"id":5382,"nodeType":"Block","src":"17766:125:21","statements":[{"condition":{"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17780:13:21","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5367,"name":"isBurnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"17781:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17781:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5374,"nodeType":"IfStatement","src":"17776:70:21","trueBody":{"id":5373,"nodeType":"Block","src":"17795:51:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5370,"name":"BurningNotEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"17816:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17816:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5372,"nodeType":"RevertStatement","src":"17809:26:21"}]}},{"expression":{"arguments":[{"id":5378,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5357,"src":"17871:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5379,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"17877:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5375,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"17856:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_CoinGenieERC20_$5980_$","typeString":"type(contract super CoinGenieERC20)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17862:8:21","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":993,"src":"17856:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17856:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5381,"nodeType":"ExpressionStatement","src":"17856:28:21"}]},"documentation":{"id":5355,"nodeType":"StructuredDocumentation","src":"17276:397:21","text":" @dev Allows to burn a predefined amount of tokens from a predefined address\n @param from - the address to burn the tokens from\n @param amount - the amount of tokens to burn\n @notice only callable by the owner\n @notice only callable if the token is not paused\n @notice only callable if the token supports burning\n @notice needs Approval"},"functionSelector":"79cc6790","id":5383,"implemented":true,"kind":"function","modifiers":[{"id":5363,"kind":"modifierInvocation","modifierName":{"id":5362,"name":"onlyOwner","nameLocations":["17742:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"17742:9:21"},"nodeType":"ModifierInvocation","src":"17742:9:21"},{"id":5365,"kind":"modifierInvocation","modifierName":{"id":5364,"name":"whenNotPaused","nameLocations":["17752:13:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"17752:13:21"},"nodeType":"ModifierInvocation","src":"17752:13:21"}],"name":"burnFrom","nameLocation":"17687:8:21","nodeType":"FunctionDefinition","overrides":{"id":5361,"nodeType":"OverrideSpecifier","overrides":[],"src":"17733:8:21"},"parameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5357,"mutability":"mutable","name":"from","nameLocation":"17704:4:21","nodeType":"VariableDeclaration","scope":5383,"src":"17696:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5356,"name":"address","nodeType":"ElementaryTypeName","src":"17696:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5359,"mutability":"mutable","name":"amount","nameLocation":"17718:6:21","nodeType":"VariableDeclaration","scope":5383,"src":"17710:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"17710:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17695:30:21"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[],"src":"17766:0:21"},"scope":5980,"src":"17678:213:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5400,"nodeType":"Block","src":"18036:104:21","statements":[{"condition":{"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18050:13:21","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5389,"name":"isPausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"18051:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18051:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5396,"nodeType":"IfStatement","src":"18046:70:21","trueBody":{"id":5395,"nodeType":"Block","src":"18065:51:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5392,"name":"PausingNotEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"18086:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18086:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5394,"nodeType":"RevertStatement","src":"18079:26:21"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5397,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"18125:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18125:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5399,"nodeType":"ExpressionStatement","src":"18125:8:21"}]},"documentation":{"id":5384,"nodeType":"StructuredDocumentation","src":"17897:98:21","text":" @dev Allows to pause the token\n @notice only callable by the owner"},"functionSelector":"8456cb59","id":5401,"implemented":true,"kind":"function","modifiers":[{"id":5387,"kind":"modifierInvocation","modifierName":{"id":5386,"name":"onlyOwner","nameLocations":["18026:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"18026:9:21"},"nodeType":"ModifierInvocation","src":"18026:9:21"}],"name":"pause","nameLocation":"18009:5:21","nodeType":"FunctionDefinition","parameters":{"id":5385,"nodeType":"ParameterList","parameters":[],"src":"18014:2:21"},"returnParameters":{"id":5388,"nodeType":"ParameterList","parameters":[],"src":"18036:0:21"},"scope":5980,"src":"18000:140:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5418,"nodeType":"Block","src":"18289:106:21","statements":[{"condition":{"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18303:13:21","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5407,"name":"isPausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"18304:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18304:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5414,"nodeType":"IfStatement","src":"18299:70:21","trueBody":{"id":5413,"nodeType":"Block","src":"18318:51:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5410,"name":"PausingNotEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"18339:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18339:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5412,"nodeType":"RevertStatement","src":"18332:26:21"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5415,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"18378:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18378:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5417,"nodeType":"ExpressionStatement","src":"18378:10:21"}]},"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"18146:100:21","text":" @dev Allows to unpause the token\n @notice only callable by the owner"},"functionSelector":"3f4ba83a","id":5419,"implemented":true,"kind":"function","modifiers":[{"id":5405,"kind":"modifierInvocation","modifierName":{"id":5404,"name":"onlyOwner","nameLocations":["18279:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"18279:9:21"},"nodeType":"ModifierInvocation","src":"18279:9:21"}],"name":"unpause","nameLocation":"18260:7:21","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[],"src":"18267:2:21"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[],"src":"18289:0:21"},"scope":5980,"src":"18251:144:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5609,"nodeType":"Block","src":"18891:1918:21","statements":[{"assignments":[5433],"declarations":[{"constant":false,"id":5433,"mutability":"mutable","name":"value","nameLocation":"18909:5:21","nodeType":"VariableDeclaration","scope":5609,"src":"18901:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"18901:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5436,"initialValue":{"expression":{"id":5434,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18917:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18921:5:21","memberName":"value","nodeType":"MemberAccess","src":"18917:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18901:25:21"},{"condition":{"id":5437,"name":"isSwapEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"18940:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5442,"nodeType":"IfStatement","src":"18936:71:21","trueBody":{"id":5441,"nodeType":"Block","src":"18955:52:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5438,"name":"TradingAlreadyOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"18976:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18976:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5440,"nodeType":"RevertStatement","src":"18969:27:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5443,"name":"amountToLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"19021:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5444,"name":"_MIN_LIQUIDITY_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"19034:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19021:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5447,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"19068:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19068:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5446,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"19058:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19058:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5450,"name":"amountToLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"19079:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19058:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19021:68:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"19017:158:21","trueBody":{"id":5458,"nodeType":"Block","src":"19091:84:21","statements":[{"errorCall":{"arguments":[{"id":5454,"name":"amountToLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"19131:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5455,"name":"_MIN_LIQUIDITY_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"19143:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5453,"name":"InsufficientTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"19112:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19112:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5457,"nodeType":"RevertStatement","src":"19105:59:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"19189:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5461,"name":"_MIN_LIQUIDITY_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"19197:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19189:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5469,"nodeType":"IfStatement","src":"19185:106:21","trueBody":{"id":5468,"nodeType":"Block","src":"19217:74:21","statements":[{"errorCall":{"arguments":[{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"19254:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5465,"name":"_MIN_LIQUIDITY_ETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"19261:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5463,"name":"InsufficientETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"19238:15:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19238:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5467,"nodeType":"RevertStatement","src":"19231:49:21"}]}},{"expression":{"arguments":[{"arguments":[{"id":5473,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19365:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19357:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5471,"name":"address","nodeType":"ElementaryTypeName","src":"19357:7:21","typeDescriptions":{}}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19357:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5475,"name":"amountToLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"19372:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[5277],"referencedDeclaration":5277,"src":"19348:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19348:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5477,"nodeType":"ExpressionStatement","src":"19348:35:21"},{"assignments":[5479],"declarations":[{"constant":false,"id":5479,"mutability":"mutable","name":"genieBalance","nameLocation":"19469:12:21","nodeType":"VariableDeclaration","scope":5609,"src":"19461:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5478,"name":"uint256","nodeType":"ElementaryTypeName","src":"19461:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5489,"initialValue":{"arguments":[{"arguments":[{"id":5486,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19521:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19513:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5484,"name":"address","nodeType":"ElementaryTypeName","src":"19513:7:21","typeDescriptions":{}}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5481,"name":"genieToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"19491:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5480,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"19484:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$950_$","typeString":"type(contract IERC20)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19484:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19503:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":907,"src":"19484:28:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19484:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19461:66:21"},{"assignments":[5491],"declarations":[{"constant":false,"id":5491,"mutability":"mutable","name":"ethAmountToTreasury","nameLocation":"19545:19:21","nodeType":"VariableDeclaration","scope":5609,"src":"19537:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5490,"name":"uint256","nodeType":"ElementaryTypeName","src":"19537:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5499,"initialValue":{"arguments":[{"id":5497,"name":"_MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"19601:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5494,"name":"lpEthFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"19577:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"19567:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19573:3:21","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"19567:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19567:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19597:3:21","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"19567:33:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19567:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19537:73:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5500,"name":"genieBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5479,"src":"19710:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5501,"name":"discountFeeRequiredAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"19725:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19710:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5508,"nodeType":"IfStatement","src":"19706:94:21","trueBody":{"id":5507,"nodeType":"Block","src":"19752:48:21","statements":[{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5503,"name":"ethAmountToTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"19766:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19788:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19766:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5506,"nodeType":"ExpressionStatement","src":"19766:23:21"}]}},{"assignments":[5510],"declarations":[{"constant":false,"id":5510,"mutability":"mutable","name":"ethAmountToLP","nameLocation":"19818:13:21","nodeType":"VariableDeclaration","scope":5609,"src":"19810:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5509,"name":"uint256","nodeType":"ElementaryTypeName","src":"19810:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5515,"initialValue":{"arguments":[{"id":5513,"name":"ethAmountToTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"19844:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"19834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19840:3:21","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":1797,"src":"19834:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19834:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19810:54:21"},{"expression":{"arguments":[{"arguments":[{"id":5519,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19942:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19934:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5517,"name":"address","nodeType":"ElementaryTypeName","src":"19934:7:21","typeDescriptions":{}}},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19934:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5523,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"19957:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}],"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19949:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5521,"name":"address","nodeType":"ElementaryTypeName","src":"19949:7:21","typeDescriptions":{}}},"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19949:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5525,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"19977:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19977:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5516,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"19925:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19925:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5528,"nodeType":"ExpressionStatement","src":"19925:66:21"},{"expression":{"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5529,"name":"uniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"20033:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5538,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20127:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20119:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5536,"name":"address","nodeType":"ElementaryTypeName","src":"20119:7:21","typeDescriptions":{}}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20119:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5540,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"20134:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20152:4:21","memberName":"WETH","nodeType":"MemberAccess","referencedDeclaration":2864,"src":"20134:22:21","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20134:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5531,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"20079:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20097:7:21","memberName":"factory","nodeType":"MemberAccess","referencedDeclaration":2859,"src":"20079:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20079:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5530,"name":"IUniswapV2Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"20061:17:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Factory_$2594_$","typeString":"type(contract IUniswapV2Factory)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20061:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Factory_$2594","typeString":"contract IUniswapV2Factory"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20108:10:21","memberName":"createPair","nodeType":"MemberAccess","referencedDeclaration":2583,"src":"20061:57:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) external returns (address)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20061:98:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20033:126:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5545,"nodeType":"ExpressionStatement","src":"20033:126:21"},{"expression":{"arguments":[{"arguments":[{"id":5552,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"20260:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}],"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20252:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5550,"name":"address","nodeType":"ElementaryTypeName","src":"20252:7:21","typeDescriptions":{}}},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20252:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20285:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5555,"name":"uint256","nodeType":"ElementaryTypeName","src":"20285:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"20280:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20280:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20294:3:21","memberName":"max","nodeType":"MemberAccess","src":"20280:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5547,"name":"uniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"20229:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5546,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"20222:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$950_$","typeString":"type(contract IERC20)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20222:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20244:7:21","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":937,"src":"20222:29:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20222:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"nodeType":"ExpressionStatement","src":"20222:76:21"},{"expression":{"arguments":[{"arguments":[{"id":5568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20424:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20416:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5566,"name":"address","nodeType":"ElementaryTypeName","src":"20416:7:21","typeDescriptions":{}}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20416:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":5573,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20449:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20441:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5571,"name":"address","nodeType":"ElementaryTypeName","src":"20441:7:21","typeDescriptions":{}}},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20441:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5570,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"20431:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20431:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20457:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20460:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[],"expression":{"argumentTypes":[],"id":5578,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"20463:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20463:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5580,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20472:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20478:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"20472:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5561,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"20345:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20363:15:21","memberName":"addLiquidityETH","nodeType":"MemberAccess","referencedDeclaration":2910,"src":"20345:33:21","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5564,"name":"ethAmountToLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"20387:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"20345:57:21","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value","typeString":"function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20345:152:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"id":5583,"nodeType":"ExpressionStatement","src":"20345:152:21"},{"expression":{"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5584,"name":"isSwapEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"20535:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20551:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20535:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5587,"nodeType":"ExpressionStatement","src":"20535:20:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5588,"name":"ethAmountToTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"20606:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20628:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20606:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5600,"nodeType":"IfStatement","src":"20602:110:21","trueBody":{"id":5599,"nodeType":"Block","src":"20631:81:21","statements":[{"expression":{"arguments":[{"id":5596,"name":"ethAmountToTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"20681:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5593,"name":"coinGenieTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"20653:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20645:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5591,"name":"address","nodeType":"ElementaryTypeName","src":"20645:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20645:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20672:8:21","memberName":"transfer","nodeType":"MemberAccess","src":"20645:35:21","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20645:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5598,"nodeType":"ExpressionStatement","src":"20645:56:21"}]}},{"eventCall":{"arguments":[{"id":5602,"name":"uniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"20741:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5601,"name":"TradingOpened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"20727:13:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20727:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5604,"nodeType":"EmitStatement","src":"20722:33:21"},{"expression":{"arguments":[{"id":5606,"name":"uniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"20788:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5605,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"20773:14:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Pair_$2836_$","typeString":"type(contract IUniswapV2Pair)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20773:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"}},"functionReturnParameters":5431,"id":5608,"nodeType":"Return","src":"20766:36:21"}]},"documentation":{"id":5420,"nodeType":"StructuredDocumentation","src":"18401:379:21","text":" @dev Opens trading for the token by adding liquidity to Uniswap.\n @param amountToLP The amount of tokens to add to Uniswap\n Emits a {TradingOpened} event.\n Preconditions:\n Requirements:\n `isSwapEnabled` must be false.\n `amountToLP >= _MIN_LIQUIDITY_TOKEN`\n `msg.value >= _MIN_LIQUIDITY_ETH`"},"functionSelector":"d1633649","id":5610,"implemented":true,"kind":"function","modifiers":[{"id":5425,"kind":"modifierInvocation","modifierName":{"id":5424,"name":"onlyOwner","nameLocations":["18843:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"18843:9:21"},"nodeType":"ModifierInvocation","src":"18843:9:21"},{"id":5427,"kind":"modifierInvocation","modifierName":{"id":5426,"name":"nonReentrant","nameLocations":["18853:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"18853:12:21"},"nodeType":"ModifierInvocation","src":"18853:12:21"}],"name":"openTrading","nameLocation":"18794:11:21","nodeType":"FunctionDefinition","parameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"amountToLP","nameLocation":"18814:10:21","nodeType":"VariableDeclaration","scope":5610,"src":"18806:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"18806:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18805:20:21"},"returnParameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5610,"src":"18875:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"},"typeName":{"id":5429,"nodeType":"UserDefinedTypeName","pathNode":{"id":5428,"name":"IUniswapV2Pair","nameLocations":["18875:14:21"],"nodeType":"IdentifierPath","referencedDeclaration":2836,"src":"18875:14:21"},"referencedDeclaration":2836,"src":"18875:14:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"}},"visibility":"internal"}],"src":"18874:16:21"},"scope":5980,"src":"18785:2024:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":5633,"nodeType":"Block","src":"20984:124:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5618,"name":"genieToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"20998:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21020:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21012:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5619,"name":"address","nodeType":"ElementaryTypeName","src":"21012:7:21","typeDescriptions":{}}},"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21012:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20998:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5628,"nodeType":"IfStatement","src":"20994:79:21","trueBody":{"id":5627,"nodeType":"Block","src":"21024:49:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5624,"name":"GenieAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"21045:15:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21045:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5626,"nodeType":"RevertStatement","src":"21038:24:21"}]}},{"expression":{"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5629,"name":"genieToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"21083:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5630,"name":"genie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"21096:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21083:18:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5632,"nodeType":"ExpressionStatement","src":"21083:18:21"}]},"documentation":{"id":5611,"nodeType":"StructuredDocumentation","src":"20815:112:21","text":" @dev Sets the address of the genie token\n @param genie - the address of the genie token"},"functionSelector":"dcc79cc8","id":5634,"implemented":true,"kind":"function","modifiers":[{"id":5616,"kind":"modifierInvocation","modifierName":{"id":5615,"name":"onlyOwner","nameLocations":["20974:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"20974:9:21"},"nodeType":"ModifierInvocation","src":"20974:9:21"}],"name":"setGenie","nameLocation":"20941:8:21","nodeType":"FunctionDefinition","parameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"genie","nameLocation":"20958:5:21","nodeType":"VariableDeclaration","scope":5634,"src":"20950:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5612,"name":"address","nodeType":"ElementaryTypeName","src":"20950:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20949:15:21"},"returnParameters":{"id":5617,"nodeType":"ParameterList","parameters":[],"src":"20984:0:21"},"scope":5980,"src":"20932:176:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5683,"nodeType":"Block","src":"21324:371:21","statements":[{"assignments":[5641],"declarations":[{"constant":false,"id":5641,"mutability":"mutable","name":"tokenBalance","nameLocation":"21342:12:21","nodeType":"VariableDeclaration","scope":5683,"src":"21334:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5640,"name":"uint256","nodeType":"ElementaryTypeName","src":"21334:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5648,"initialValue":{"arguments":[{"arguments":[{"id":5645,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21375:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21367:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5643,"name":"address","nodeType":"ElementaryTypeName","src":"21367:7:21","typeDescriptions":{}}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21367:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5642,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"21357:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21357:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21334:47:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5649,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"21395:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21410:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21395:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5660,"nodeType":"IfStatement","src":"21391:96:21","trueBody":{"id":5659,"nodeType":"Block","src":"21413:74:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":5654,"name":"tokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"21450:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5655,"name":"maxTaxSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"21464:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5653,"name":"_min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"21445:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21445:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5652,"name":"_swapTokensForEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"21427:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21427:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5658,"nodeType":"ExpressionStatement","src":"21427:49:21"}]}},{"assignments":[5662],"declarations":[{"constant":false,"id":5662,"mutability":"mutable","name":"ethBalance","nameLocation":"21543:10:21","nodeType":"VariableDeclaration","scope":5683,"src":"21535:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"21535:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5668,"initialValue":{"expression":{"arguments":[{"id":5665,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21564:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21556:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5663,"name":"address","nodeType":"ElementaryTypeName","src":"21556:7:21","typeDescriptions":{}}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21556:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21570:7:21","memberName":"balance","nodeType":"MemberAccess","src":"21556:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21535:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"ethBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"21591:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5670,"name":"autoWithdrawThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"21604:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21591:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5682,"nodeType":"IfStatement","src":"21587:102:21","trueBody":{"id":5681,"nodeType":"Block","src":"21627:62:21","statements":[{"expression":{"arguments":[{"id":5678,"name":"ethBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"21667:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5674,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"21649:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21649:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21641:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5672,"name":"address","nodeType":"ElementaryTypeName","src":"21641:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21641:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21658:8:21","memberName":"transfer","nodeType":"MemberAccess","src":"21641:25:21","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21641:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5680,"nodeType":"ExpressionStatement","src":"21641:37:21"}]}}]},"documentation":{"id":5635,"nodeType":"StructuredDocumentation","src":"21114:161:21","text":" @dev Swaps tokens for ETH if the contract balance is greater than the max amount to swap for tax. Then sends\n the ETH to the tax wallet."},"functionSelector":"51bc3c85","id":5684,"implemented":true,"kind":"function","modifiers":[{"id":5638,"kind":"modifierInvocation","modifierName":{"id":5637,"name":"nonReentrant","nameLocations":["21311:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"21311:12:21"},"nodeType":"ModifierInvocation","src":"21311:12:21"}],"name":"manualSwap","nameLocation":"21289:10:21","nodeType":"FunctionDefinition","parameters":{"id":5636,"nodeType":"ParameterList","parameters":[],"src":"21299:2:21"},"returnParameters":{"id":5639,"nodeType":"ParameterList","parameters":[],"src":"21324:0:21"},"scope":5980,"src":"21280:415:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5840,"nodeType":"Block","src":"21805:1697:21","statements":[{"assignments":[5696,5698,5700,5702],"declarations":[{"constant":false,"id":5696,"mutability":"mutable","name":"treasuryAmount","nameLocation":"21824:14:21","nodeType":"VariableDeclaration","scope":5840,"src":"21816:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"21816:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5698,"mutability":"mutable","name":"taxAmount","nameLocation":"21848:9:21","nodeType":"VariableDeclaration","scope":5840,"src":"21840:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5697,"name":"uint256","nodeType":"ElementaryTypeName","src":"21840:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5700,"mutability":"mutable","name":"affiliateAmount","nameLocation":"21867:15:21","nodeType":"VariableDeclaration","scope":5840,"src":"21859:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5699,"name":"uint256","nodeType":"ElementaryTypeName","src":"21859:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"deflationAmount","nameLocation":"21892:15:21","nodeType":"VariableDeclaration","scope":5840,"src":"21884:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"21884:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5706,"initialValue":{"arguments":[{"id":5704,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"21943:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5703,"name":"_getTransferAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"21923:19:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view returns (uint256,uint256,uint256,uint256)"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21923:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"21815:135:21"},{"expression":{"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5707,"name":"amountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"21961:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5708,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"21980:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5709,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"21989:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21980:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5711,"name":"taxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"22006:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21980:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5713,"name":"affiliateAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"22018:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21980:53:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5715,"name":"deflationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"22036:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21980:71:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21961:90:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5718,"nodeType":"ExpressionStatement","src":"21961:90:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"22079:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5720,"name":"uniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"22087:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22079:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5722,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"22104:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":5725,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"22118:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}],"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22110:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5723,"name":"address","nodeType":"ElementaryTypeName","src":"22110:7:21","typeDescriptions":{}}},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22110:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22104:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22079:57:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5730,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"22166:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5729,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"22156:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22156:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5732,"name":"amountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"22172:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22156:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5734,"name":"maxTokenAmountPerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"22191:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22156:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22079:136:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5742,"nodeType":"IfStatement","src":"22062:228:21","trueBody":{"id":5741,"nodeType":"Block","src":"22226:64:21","statements":[{"errorCall":{"arguments":[{"id":5738,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"22276:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5737,"name":"DestBalanceExceedsMaxAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"22247:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22247:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5740,"nodeType":"RevertStatement","src":"22240:39:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22304:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22322:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22304:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5753,"nodeType":"IfStatement","src":"22300:100:21","trueBody":{"id":5752,"nodeType":"Block","src":"22325:75:21","statements":[{"expression":{"arguments":[{"id":5747,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"22349:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5748,"name":"coinGenieTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"22355:17:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5749,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"22374:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"22339:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22339:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5751,"nodeType":"ExpressionStatement","src":"22339:50:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"affiliateAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"22414:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22433:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22414:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5764,"nodeType":"IfStatement","src":"22410:106:21","trueBody":{"id":5763,"nodeType":"Block","src":"22436:80:21","statements":[{"expression":{"arguments":[{"id":5758,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"22460:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5759,"name":"affiliateFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"22466:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5760,"name":"affiliateAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"22489:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5757,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"22450:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22450:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5762,"nodeType":"ExpressionStatement","src":"22450:55:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5765,"name":"taxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"22530:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22543:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22530:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5775,"nodeType":"IfStatement","src":"22526:85:21","trueBody":{"id":5774,"nodeType":"Block","src":"22546:65:21","statements":[{"expression":{"arguments":[{"id":5769,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"22570:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5770,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"22576:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5771,"name":"taxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"22590:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5768,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"22560:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22560:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5773,"nodeType":"ExpressionStatement","src":"22560:40:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"deflationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"22625:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22644:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22625:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5785,"nodeType":"IfStatement","src":"22621:79:21","trueBody":{"id":5784,"nodeType":"Block","src":"22647:53:21","statements":[{"expression":{"arguments":[{"id":5780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"22667:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5781,"name":"deflationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"22673:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5779,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"22661:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22661:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5783,"nodeType":"ExpressionStatement","src":"22661:28:21"}]}},{"assignments":[5787],"declarations":[{"constant":false,"id":5787,"mutability":"mutable","name":"contractTokenBalance","nameLocation":"22718:20:21","nodeType":"VariableDeclaration","scope":5840,"src":"22710:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5786,"name":"uint256","nodeType":"ElementaryTypeName","src":"22710:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5794,"initialValue":{"arguments":[{"arguments":[{"id":5791,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22759:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22751:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5789,"name":"address","nodeType":"ElementaryTypeName","src":"22751:7:21","typeDescriptions":{}}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22751:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5788,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"22741:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22741:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22710:55:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22933:8:21","subExpression":{"id":5795,"name":"_inSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"22934:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"22945:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5798,"name":"uniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"22951:13:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22945:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22933:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"22968:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5802,"name":"maxTaxSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"22991:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22968:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22933:68:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5839,"nodeType":"IfStatement","src":"22929:567:21","trueBody":{"id":5838,"nodeType":"Block","src":"23003:493:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":5807,"name":"amountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"23040:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5809,"name":"maxTaxSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"23063:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5810,"name":"contractTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"23075:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5808,"name":"_min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"23058:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23058:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5806,"name":"_min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"23035:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23035:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5805,"name":"_swapTokensForEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"23017:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23017:81:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5814,"nodeType":"ExpressionStatement","src":"23017:81:21"},{"assignments":[5816],"declarations":[{"constant":false,"id":5816,"mutability":"mutable","name":"contractEthBalance","nameLocation":"23261:18:21","nodeType":"VariableDeclaration","scope":5838,"src":"23253:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"23253:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5822,"initialValue":{"expression":{"arguments":[{"id":5819,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"23290:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23282:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5817,"name":"address","nodeType":"ElementaryTypeName","src":"23282:7:21","typeDescriptions":{}}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23282:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23296:7:21","memberName":"balance","nodeType":"MemberAccess","src":"23282:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23253:50:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"contractEthBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"23321:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5824,"name":"autoWithdrawThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"23342:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23321:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5835,"nodeType":"IfStatement","src":"23317:131:21","trueBody":{"id":5834,"nodeType":"Block","src":"23365:83:21","statements":[{"expression":{"arguments":[{"id":5831,"name":"contractEthBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"23414:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5828,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"23391:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23383:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5826,"name":"address","nodeType":"ElementaryTypeName","src":"23383:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23383:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23405:8:21","memberName":"transfer","nodeType":"MemberAccess","src":"23383:30:21","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23383:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5833,"nodeType":"ExpressionStatement","src":"23383:50:21"}]}},{"expression":{"id":5836,"name":"amountToTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5693,"src":"23469:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5694,"id":5837,"nodeType":"Return","src":"23462:23:21"}]}}]},"id":5841,"implemented":true,"kind":"function","modifiers":[],"name":"_takeFees","nameLocation":"21710:9:21","nodeType":"FunctionDefinition","parameters":{"id":5691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"from","nameLocation":"21728:4:21","nodeType":"VariableDeclaration","scope":5841,"src":"21720:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5685,"name":"address","nodeType":"ElementaryTypeName","src":"21720:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"to","nameLocation":"21742:2:21","nodeType":"VariableDeclaration","scope":5841,"src":"21734:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5687,"name":"address","nodeType":"ElementaryTypeName","src":"21734:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5690,"mutability":"mutable","name":"amount","nameLocation":"21754:6:21","nodeType":"VariableDeclaration","scope":5841,"src":"21746:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5689,"name":"uint256","nodeType":"ElementaryTypeName","src":"21746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21719:42:21"},"returnParameters":{"id":5694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"amountToTransfer","nameLocation":"21787:16:21","nodeType":"VariableDeclaration","scope":5841,"src":"21779:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5692,"name":"uint256","nodeType":"ElementaryTypeName","src":"21779:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21778:26:21"},"scope":5980,"src":"21701:1801:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5895,"nodeType":"Block","src":"23849:317:21","statements":[{"expression":{"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5855,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"23859:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"23877:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5857,"name":"treasuryFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"23886:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23877:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23876:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5860,"name":"_MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"23911:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23876:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23859:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5863,"nodeType":"ExpressionStatement","src":"23859:60:21"},{"expression":{"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5864,"name":"taxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5849,"src":"23929:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5865,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"23942:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5866,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"23951:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23942:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23941:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5869,"name":"_MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"23968:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23941:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23929:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5872,"nodeType":"ExpressionStatement","src":"23929:47:21"},{"expression":{"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5873,"name":"affiliateAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"23986:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5874,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"24005:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5875,"name":"affiliateFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"24014:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24004:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5878,"name":"_MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24040:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24004:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23986:62:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5881,"nodeType":"ExpressionStatement","src":"23986:62:21"},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":5882,"name":"isDeflationary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"24063:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24063:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5894,"nodeType":"IfStatement","src":"24059:101:21","trueBody":{"id":5893,"nodeType":"Block","src":"24081:79:21","statements":[{"expression":{"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5884,"name":"deflationAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"24095:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"24114:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5886,"name":"burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"24123:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24114:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24113:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5889,"name":"_MAX_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"24141:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24113:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24095:54:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5892,"nodeType":"ExpressionStatement","src":"24095:54:21"}]}}]},"documentation":{"id":5842,"nodeType":"StructuredDocumentation","src":"23508:148:21","text":" @dev Gets the amount of tokens to transfer and the amount of tax to capture\n @param amount The amount of tokens to transfer"},"id":5896,"implemented":true,"kind":"function","modifiers":[],"name":"_getTransferAmounts","nameLocation":"23670:19:21","nodeType":"FunctionDefinition","parameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"amount","nameLocation":"23698:6:21","nodeType":"VariableDeclaration","scope":5896,"src":"23690:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5843,"name":"uint256","nodeType":"ElementaryTypeName","src":"23690:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23689:16:21"},"returnParameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"treasuryAmount","nameLocation":"23760:14:21","nodeType":"VariableDeclaration","scope":5896,"src":"23752:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"23752:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5849,"mutability":"mutable","name":"taxAmount","nameLocation":"23784:9:21","nodeType":"VariableDeclaration","scope":5896,"src":"23776:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5848,"name":"uint256","nodeType":"ElementaryTypeName","src":"23776:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5851,"mutability":"mutable","name":"affiliateAmount","nameLocation":"23803:15:21","nodeType":"VariableDeclaration","scope":5896,"src":"23795:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint256","nodeType":"ElementaryTypeName","src":"23795:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5853,"mutability":"mutable","name":"deflationAmount","nameLocation":"23828:15:21","nodeType":"VariableDeclaration","scope":5896,"src":"23820:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5852,"name":"uint256","nodeType":"ElementaryTypeName","src":"23820:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23751:93:21"},"scope":5980,"src":"23661:505:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":5960,"nodeType":"Block","src":"24365:362:21","statements":[{"assignments":[5910],"declarations":[{"constant":false,"id":5910,"mutability":"mutable","name":"path","nameLocation":"24392:4:21","nodeType":"VariableDeclaration","scope":5960,"src":"24375:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5908,"name":"address","nodeType":"ElementaryTypeName","src":"24375:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5909,"nodeType":"ArrayTypeName","src":"24375:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5916,"initialValue":{"arguments":[{"hexValue":"32","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24413:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24399:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5911,"name":"address","nodeType":"ElementaryTypeName","src":"24403:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5912,"nodeType":"ArrayTypeName","src":"24403:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24399:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"24375:40:21"},{"expression":{"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5917,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"24425:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5919,"indexExpression":{"hexValue":"30","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24430:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24425:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5922,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24443:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24435:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5920,"name":"address","nodeType":"ElementaryTypeName","src":"24435:7:21","typeDescriptions":{}}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24435:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24425:23:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5925,"nodeType":"ExpressionStatement","src":"24425:23:21"},{"expression":{"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5926,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"24458:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5928,"indexExpression":{"hexValue":"31","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24463:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24458:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5929,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"24468:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24486:4:21","memberName":"WETH","nodeType":"MemberAccess","referencedDeclaration":2864,"src":"24468:22:21","typeDescriptions":{"typeIdentifier":"t_function_external_pure$__$returns$_t_address_$","typeString":"function () pure external returns (address)"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24468:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24458:34:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5933,"nodeType":"ExpressionStatement","src":"24458:34:21"},{"expression":{"arguments":[{"arguments":[{"id":5937,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24519:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24511:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5935,"name":"address","nodeType":"ElementaryTypeName","src":"24511:7:21","typeDescriptions":{}}},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24511:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5941,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"24534:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}],"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24526:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5939,"name":"address","nodeType":"ElementaryTypeName","src":"24526:7:21","typeDescriptions":{}}},"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24526:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5943,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"24554:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5934,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"24502:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24502:64:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5945,"nodeType":"ExpressionStatement","src":"24502:64:21"},{"expression":{"arguments":[{"id":5949,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"24658:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24671:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":5951,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"24674:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"id":5954,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24688:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}],"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24680:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5952,"name":"address","nodeType":"ElementaryTypeName","src":"24680:7:21","typeDescriptions":{}}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24680:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5956,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"24695:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24701:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"24695:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5946,"name":"UNISWAP_V2_ROUTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"24576:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Router02_$3248","typeString":"contract IUniswapV2Router02"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24594:50:21","memberName":"swapExactTokensForETHSupportingFeeOnTransferTokens","nodeType":"MemberAccess","referencedDeclaration":3247,"src":"24576:68:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address[] memory,address,uint256) external"}},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24576:144:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5959,"nodeType":"ExpressionStatement","src":"24576:144:21"}]},"documentation":{"id":5897,"nodeType":"StructuredDocumentation","src":"24172:107:21","text":" @dev Swaps tokens for ETH\n @param tokenAmount The amount of tokens to swap for ETH"},"id":5961,"implemented":true,"kind":"function","modifiers":[{"id":5902,"kind":"modifierInvocation","modifierName":{"id":5901,"name":"nonReentrant","nameLocations":["24340:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"24340:12:21"},"nodeType":"ModifierInvocation","src":"24340:12:21"},{"id":5904,"kind":"modifierInvocation","modifierName":{"id":5903,"name":"lockTheSwap","nameLocations":["24353:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4785,"src":"24353:11:21"},"nodeType":"ModifierInvocation","src":"24353:11:21"}],"name":"_swapTokensForEth","nameLocation":"24293:17:21","nodeType":"FunctionDefinition","parameters":{"id":5900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"tokenAmount","nameLocation":"24319:11:21","nodeType":"VariableDeclaration","scope":5961,"src":"24311:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"24311:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24310:21:21"},"returnParameters":{"id":5905,"nodeType":"ParameterList","parameters":[],"src":"24365:0:21"},"scope":5980,"src":"24284:443:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5978,"nodeType":"Block","src":"24934:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"24951:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5972,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"24955:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24951:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5975,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"24963:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24951:13:21","trueExpression":{"id":5974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"24959:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5970,"id":5977,"nodeType":"Return","src":"24944:20:21"}]},"documentation":{"id":5962,"nodeType":"StructuredDocumentation","src":"24733:129:21","text":" @dev Returns the smallest of two numbers.\n @param a The first number.\n @param b The second number."},"id":5979,"implemented":true,"kind":"function","modifiers":[],"name":"_min","nameLocation":"24876:4:21","nodeType":"FunctionDefinition","parameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"a","nameLocation":"24889:1:21","nodeType":"VariableDeclaration","scope":5979,"src":"24881:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5963,"name":"uint256","nodeType":"ElementaryTypeName","src":"24881:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5966,"mutability":"mutable","name":"b","nameLocation":"24900:1:21","nodeType":"VariableDeclaration","scope":5979,"src":"24892:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5965,"name":"uint256","nodeType":"ElementaryTypeName","src":"24892:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24880:22:21"},"returnParameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5979,"src":"24925:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"24925:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24924:9:21"},"scope":5980,"src":"24867:104:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5981,"src":"1314:23659:21","usedErrors":[4788,4793,4796,4801,4804,4807,4810,4815,4820,4823,4830,4837],"usedEvents":[13,123,128,884,893,4842,4847,4854,4859]}],"src":"37:24937:21"},"id":21},"src/ERC20Factory.sol":{"ast":{"absolutePath":"src/ERC20Factory.sol","exportedSymbols":{"CoinGenieERC20":[5980],"Common":[7282],"ERC20Factory":[6111],"Ownable":[112]},"id":6112,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":5982,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"37:24:22"},{"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","file":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","id":5984,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6112,"sourceUnit":113,"src":"63:82:22","symbolAliases":[{"foreign":{"id":5983,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"72:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/CoinGenieERC20.sol","file":"./CoinGenieERC20.sol","id":5986,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6112,"sourceUnit":5981,"src":"147:54:22","symbolAliases":[{"foreign":{"id":5985,"name":"CoinGenieERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"156:14:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/lib/Common.sol","file":"./lib/Common.sol","id":5988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6112,"sourceUnit":7283,"src":"202:42:22","symbolAliases":[{"foreign":{"id":5987,"name":"Common","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"211:6:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5990,"name":"Ownable","nameLocations":["401:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"401:7:22"},"id":5991,"nodeType":"InheritanceSpecifier","src":"401:7:22"}],"canonicalName":"ERC20Factory","contractDependencies":[5980],"contractKind":"contract","documentation":{"id":5989,"nodeType":"StructuredDocumentation","src":"246:129:22","text":" @title ERC20Factory\n @author @neuro_0x\n @dev A factory library to deploy instances of the CoinGenieERC20 contract."},"fullyImplemented":true,"id":6111,"linearizedBaseContracts":[6111,112,1078],"name":"ERC20Factory","nameLocation":"385:12:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":5992,"nodeType":"StructuredDocumentation","src":"415:39:22","text":"@dev The address of the genie token"},"id":5994,"mutability":"mutable","name":"_genie","nameLocation":"475:6:22","nodeType":"VariableDeclaration","scope":6111,"src":"459:22:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5993,"name":"address","nodeType":"ElementaryTypeName","src":"459:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":5995,"nodeType":"StructuredDocumentation","src":"488:55:22","text":"@notice Error thrown when the genie is already set."},"errorSelector":"131d002d","id":5997,"name":"GenieAlreadySet","nameLocation":"554:15:22","nodeType":"ErrorDefinition","parameters":{"id":5996,"nodeType":"ParameterList","parameters":[],"src":"569:2:22"},"src":"548:24:22"},{"body":{"id":6085,"nodeType":"Block","src":"2298:684:22","statements":[{"assignments":[6033],"declarations":[{"constant":false,"id":6033,"mutability":"mutable","name":"coinGenieERC20","nameLocation":"2323:14:22","nodeType":"VariableDeclaration","scope":6085,"src":"2308:29:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"},"typeName":{"id":6032,"nodeType":"UserDefinedTypeName","pathNode":{"id":6031,"name":"CoinGenieERC20","nameLocations":["2308:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":5980,"src":"2308:14:22"},"referencedDeclaration":5980,"src":"2308:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"visibility":"internal"}],"id":6050,"initialValue":{"arguments":[{"id":6037,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"2372:4:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6038,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6002,"src":"2390:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6039,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"2410:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6040,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"2437:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6041,"name":"customConfigProps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"2461:17:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties memory"}},{"id":6042,"name":"maxPerWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"2492:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6043,"name":"maxTaxSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"2518:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6044,"name":"autoWithdrawThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"2542:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6045,"name":"affilateFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"2577:20:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6046,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"2611:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6047,"name":"feePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"2637:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6048,"name":"burnPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"2664:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2340:18:22","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_struct$_TokenConfigProperties_$7281_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_contract$_CoinGenieERC20_$5980_$","typeString":"function (string memory,string memory,uint256,address,struct Common.TokenConfigProperties memory,uint256,uint256,uint256,address,address,uint256,uint256) returns (contract CoinGenieERC20)"},"typeName":{"id":6035,"nodeType":"UserDefinedTypeName","pathNode":{"id":6034,"name":"CoinGenieERC20","nameLocations":["2344:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":5980,"src":"2344:14:22"},"referencedDeclaration":5980,"src":"2344:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2340:348:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"nodeType":"VariableDeclarationStatement","src":"2308:380:22"},{"expression":{"arguments":[{"id":6054,"name":"coinGenieTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"2735:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6051,"name":"coinGenieERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"2699:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2714:20:22","memberName":"setCoinGenieTreasury","nodeType":"MemberAccess","referencedDeclaration":5095,"src":"2699:35:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6056,"nodeType":"ExpressionStatement","src":"2699:54:22"},{"expression":{"arguments":[{"id":6060,"name":"_genie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"2787:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6057,"name":"coinGenieERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"2763:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2778:8:22","memberName":"setGenie","nodeType":"MemberAccess","referencedDeclaration":5634,"src":"2763:23:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6062,"nodeType":"ExpressionStatement","src":"2763:31:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6063,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"2809:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2831:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2823:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6064,"name":"address","nodeType":"ElementaryTypeName","src":"2823:7:22","typeDescriptions":{}}},"id":6067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2823:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2809:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6069,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"2837:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6070,"name":"coinGenieERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"2851:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2866:5:22","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":40,"src":"2851:20:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2851:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2837:36:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2809:64:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6082,"nodeType":"IfStatement","src":"2805:139:22","trueBody":{"id":6081,"nodeType":"Block","src":"2875:69:22","statements":[{"expression":{"arguments":[{"id":6078,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"2922:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6075,"name":"coinGenieERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"2889:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2904:17:22","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":91,"src":"2889:32:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2889:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6080,"nodeType":"ExpressionStatement","src":"2889:44:22"}]}},{"expression":{"id":6083,"name":"coinGenieERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"2961:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"functionReturnParameters":6030,"id":6084,"nodeType":"Return","src":"2954:21:22"}]},"documentation":{"id":5998,"nodeType":"StructuredDocumentation","src":"578:1182:22","text":" @dev Creates a new instance of the CoinGenieERC20 contract\n @param name - the name of the token\n @param symbol - the ticker symbol of the token\n @param initialSupply - the initial supply of the token\n @param tokenOwner - the address that will be the owner of the token\n @param customConfigProps - a struct of configuration booleans for the token\n @param maxPerWallet - the maximum amount of tokens allowed to be held by one wallet\n @param maxTaxSwap - the maximum amount of tokens allowed to be swapped at once by manual or autoswap\n @param autoWithdrawThreshold - the threshold at which the contract will automatically withdraw the tax fees\n @param affilateFeeRecipient - the address to receive the affiliate fee\n @param feeRecipient - the address to receive the tax fees\n @param feePercentage - the percent in basis points to use as a tax\n @param burnPercentage - the percent in basis points to burn on every tx if this token is deflationary\n @param coinGenieTreasury - the address to receive the royalty fee\n @return newToken - the CoinGenieERC20 token that was created"},"functionSelector":"d5e71353","id":6086,"implemented":true,"kind":"function","modifiers":[],"name":"launchToken","nameLocation":"1774:11:22","nodeType":"FunctionDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"name","nameLocation":"1809:4:22","nodeType":"VariableDeclaration","scope":6086,"src":"1795:18:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5999,"name":"string","nodeType":"ElementaryTypeName","src":"1795:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6002,"mutability":"mutable","name":"symbol","nameLocation":"1837:6:22","nodeType":"VariableDeclaration","scope":6086,"src":"1823:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6001,"name":"string","nodeType":"ElementaryTypeName","src":"1823:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6004,"mutability":"mutable","name":"initialSupply","nameLocation":"1861:13:22","nodeType":"VariableDeclaration","scope":6086,"src":"1853:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6006,"mutability":"mutable","name":"tokenOwner","nameLocation":"1892:10:22","nodeType":"VariableDeclaration","scope":6086,"src":"1884:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6005,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6009,"mutability":"mutable","name":"customConfigProps","nameLocation":"1948:17:22","nodeType":"VariableDeclaration","scope":6086,"src":"1912:53:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_memory_ptr","typeString":"struct Common.TokenConfigProperties"},"typeName":{"id":6008,"nodeType":"UserDefinedTypeName","pathNode":{"id":6007,"name":"Common.TokenConfigProperties","nameLocations":["1912:6:22","1919:21:22"],"nodeType":"IdentifierPath","referencedDeclaration":7281,"src":"1912:28:22"},"referencedDeclaration":7281,"src":"1912:28:22","typeDescriptions":{"typeIdentifier":"t_struct$_TokenConfigProperties_$7281_storage_ptr","typeString":"struct Common.TokenConfigProperties"}},"visibility":"internal"},{"constant":false,"id":6011,"mutability":"mutable","name":"maxPerWallet","nameLocation":"1983:12:22","nodeType":"VariableDeclaration","scope":6086,"src":"1975:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6013,"mutability":"mutable","name":"autoWithdrawThreshold","nameLocation":"2013:21:22","nodeType":"VariableDeclaration","scope":6086,"src":"2005:29:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6015,"mutability":"mutable","name":"maxTaxSwap","nameLocation":"2052:10:22","nodeType":"VariableDeclaration","scope":6086,"src":"2044:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"2044:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6017,"mutability":"mutable","name":"affilateFeeRecipient","nameLocation":"2080:20:22","nodeType":"VariableDeclaration","scope":6086,"src":"2072:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6016,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6019,"mutability":"mutable","name":"feeRecipient","nameLocation":"2118:12:22","nodeType":"VariableDeclaration","scope":6086,"src":"2110:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6018,"name":"address","nodeType":"ElementaryTypeName","src":"2110:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6021,"mutability":"mutable","name":"feePercentage","nameLocation":"2148:13:22","nodeType":"VariableDeclaration","scope":6086,"src":"2140:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6020,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6023,"mutability":"mutable","name":"burnPercentage","nameLocation":"2179:14:22","nodeType":"VariableDeclaration","scope":6086,"src":"2171:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6025,"mutability":"mutable","name":"coinGenieTreasury","nameLocation":"2211:17:22","nodeType":"VariableDeclaration","scope":6086,"src":"2203:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6024,"name":"address","nodeType":"ElementaryTypeName","src":"2203:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1785:449:22"},"returnParameters":{"id":6030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"newToken","nameLocation":"2284:8:22","nodeType":"VariableDeclaration","scope":6086,"src":"2269:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"},"typeName":{"id":6028,"nodeType":"UserDefinedTypeName","pathNode":{"id":6027,"name":"CoinGenieERC20","nameLocations":["2269:14:22"],"nodeType":"IdentifierPath","referencedDeclaration":5980,"src":"2269:14:22"},"referencedDeclaration":5980,"src":"2269:14:22","typeDescriptions":{"typeIdentifier":"t_contract$_CoinGenieERC20_$5980","typeString":"contract CoinGenieERC20"}},"visibility":"internal"}],"src":"2268:25:22"},"scope":6111,"src":"1765:1217:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6109,"nodeType":"Block","src":"3157:116:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6094,"name":"_genie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"3171:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3189:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6095,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:22","typeDescriptions":{}}},"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3171:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6104,"nodeType":"IfStatement","src":"3167:75:22","trueBody":{"id":6103,"nodeType":"Block","src":"3193:49:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6100,"name":"GenieAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"3214:15:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6102,"nodeType":"RevertStatement","src":"3207:24:22"}]}},{"expression":{"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6105,"name":"_genie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"3252:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6106,"name":"genie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"3261:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3252:14:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6108,"nodeType":"ExpressionStatement","src":"3252:14:22"}]},"documentation":{"id":6087,"nodeType":"StructuredDocumentation","src":"2988:112:22","text":" @dev Sets the address of the genie token\n @param genie - the address of the genie token"},"functionSelector":"dcc79cc8","id":6110,"implemented":true,"kind":"function","modifiers":[{"id":6092,"kind":"modifierInvocation","modifierName":{"id":6091,"name":"onlyOwner","nameLocations":["3147:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3147:9:22"},"nodeType":"ModifierInvocation","src":"3147:9:22"}],"name":"setGenie","nameLocation":"3114:8:22","nodeType":"FunctionDefinition","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"genie","nameLocation":"3131:5:22","nodeType":"VariableDeclaration","scope":6110,"src":"3123:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6088,"name":"address","nodeType":"ElementaryTypeName","src":"3123:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3122:15:22"},"returnParameters":{"id":6093,"nodeType":"ParameterList","parameters":[],"src":"3157:0:22"},"scope":6111,"src":"3105:168:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6112,"src":"376:2899:22","usedErrors":[5997],"usedEvents":[13]}],"src":"37:3239:22"},"id":22},"src/LiquidityLocker.sol":{"ast":{"absolutePath":"src/LiquidityLocker.sol","exportedSymbols":{"EnumerableSet":[2531],"IERC20":[950],"IUniswapV2Factory":[2594],"IUniswapV2Migrator":[2852],"IUniswapV2Pair":[2836],"LiquidityLocker":[7270],"Ownable":[112],"ReentrancyGuard":[285],"SafeMath":[1918],"SafeTransfer":[7396]},"id":7271,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":6113,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"36:24:23"},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol","file":"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol","id":6115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":2532,"src":"62:101:23","symbolAliases":[{"foreign":{"id":6114,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"71:13:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","id":6117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":951,"src":"164:85:23","symbolAliases":[{"foreign":{"id":6116,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"173:6:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol","file":"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol","id":6119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":1919,"src":"250:88:23","symbolAliases":[{"foreign":{"id":6118,"name":"SafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"259:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","file":"lib/openzeppelin-contracts/contracts/access/Ownable.sol","id":6121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":113,"src":"339:82:23","symbolAliases":[{"foreign":{"id":6120,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"348:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","file":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","id":6123,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":286,"src":"422:100:23","symbolAliases":[{"foreign":{"id":6122,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"431:15:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol","file":"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol","id":6125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":2595,"src":"524:91:23","symbolAliases":[{"foreign":{"id":6124,"name":"IUniswapV2Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"533:17:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol","file":"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol","id":6127,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":2837,"src":"616:85:23","symbolAliases":[{"foreign":{"id":6126,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"625:14:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol","file":"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol","id":6129,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":2853,"src":"702:98:23","symbolAliases":[{"foreign":{"id":6128,"name":"IUniswapV2Migrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"711:18:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"src/lib/SafeTransfer.sol","file":"./lib/SafeTransfer.sol","id":6131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7271,"sourceUnit":7397,"src":"802:54:23","symbolAliases":[{"foreign":{"id":6130,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"811:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6133,"name":"Ownable","nameLocations":["1028:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1028:7:23"},"id":6134,"nodeType":"InheritanceSpecifier","src":"1028:7:23"},{"baseName":{"id":6135,"name":"ReentrancyGuard","nameLocations":["1037:15:23"],"nodeType":"IdentifierPath","referencedDeclaration":285,"src":"1037:15:23"},"id":6136,"nodeType":"InheritanceSpecifier","src":"1037:15:23"}],"canonicalName":"LiquidityLocker","contractDependencies":[],"contractKind":"contract","documentation":{"id":6132,"nodeType":"StructuredDocumentation","src":"858:141:23","text":" @title LiquidityLocker\n @author @neuro_0x\n @dev A contract for locking Uniswap V2 liquidity pool tokens for specified periods."},"fullyImplemented":true,"id":7270,"linearizedBaseContracts":[7270,285,112,1078],"name":"LiquidityLocker","nameLocation":"1009:15:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6139,"libraryName":{"id":6137,"name":"SafeMath","nameLocations":["1065:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":1918,"src":"1065:8:23"},"nodeType":"UsingForDirective","src":"1059:27:23","typeName":{"id":6138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1078:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":6143,"libraryName":{"id":6140,"name":"EnumerableSet","nameLocations":["1097:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":2531,"src":"1097:13:23"},"nodeType":"UsingForDirective","src":"1091:49:23","typeName":{"id":6142,"nodeType":"UserDefinedTypeName","pathNode":{"id":6141,"name":"EnumerableSet.AddressSet","nameLocations":["1115:13:23","1129:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"1115:24:23"},"referencedDeclaration":2244,"src":"1115:24:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"errorSelector":"2c5211c6","id":6145,"name":"InvalidAmount","nameLocation":"1152:13:23","nodeType":"ErrorDefinition","parameters":{"id":6144,"nodeType":"ParameterList","parameters":[],"src":"1165:2:23"},"src":"1146:22:23"},{"errorSelector":"7b663c49","id":6147,"name":"InvalidLockDate","nameLocation":"1179:15:23","nodeType":"ErrorDefinition","parameters":{"id":6146,"nodeType":"ParameterList","parameters":[],"src":"1194:2:23"},"src":"1173:24:23"},{"errorSelector":"459808cf","id":6149,"name":"LockMismatch","nameLocation":"1208:12:23","nodeType":"ErrorDefinition","parameters":{"id":6148,"nodeType":"ParameterList","parameters":[],"src":"1220:2:23"},"src":"1202:21:23"},{"errorSelector":"b9f317a5","id":6151,"name":"BeforeUnlockDate","nameLocation":"1234:16:23","nodeType":"ErrorDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[],"src":"1250:2:23"},"src":"1228:25:23"},{"errorSelector":"cf04b1bb","id":6153,"name":"OwnerAlreadySet","nameLocation":"1264:15:23","nodeType":"ErrorDefinition","parameters":{"id":6152,"nodeType":"ParameterList","parameters":[],"src":"1279:2:23"},"src":"1258:24:23"},{"errorSelector":"bb66fd4c","id":6155,"name":"MigratorNotSet","nameLocation":"1293:14:23","nodeType":"ErrorDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[],"src":"1307:2:23"},"src":"1287:23:23"},{"errorSelector":"28fdbb84","id":6159,"name":"NotUniPair","nameLocation":"1321:10:23","nodeType":"ErrorDefinition","parameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"mutability":"mutable","name":"lpToken","nameLocation":"1340:7:23","nodeType":"VariableDeclaration","scope":6159,"src":"1332:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6156,"name":"address","nodeType":"ElementaryTypeName","src":"1332:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1331:17:23"},"src":"1315:34:23"},{"constant":true,"id":6165,"mutability":"constant","name":"UNISWAP_V2_FACTORY","nameLocation":"1390:18:23","nodeType":"VariableDeclaration","scope":7270,"src":"1355:125:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Factory_$2594","typeString":"contract IUniswapV2Factory"},"typeName":{"id":6161,"nodeType":"UserDefinedTypeName","pathNode":{"id":6160,"name":"IUniswapV2Factory","nameLocations":["1355:17:23"],"nodeType":"IdentifierPath","referencedDeclaration":2594,"src":"1355:17:23"},"referencedDeclaration":2594,"src":"1355:17:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Factory_$2594","typeString":"contract IUniswapV2Factory"}},"value":{"arguments":[{"hexValue":"307835433639624565373031656638313461324236613345444434423136353243423963633561413666","id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1437:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6162,"name":"IUniswapV2Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"1419:17:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Factory_$2594_$","typeString":"type(contract IUniswapV2Factory)"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1419:61:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Factory_$2594","typeString":"contract IUniswapV2Factory"}},"visibility":"private"},{"canonicalName":"LiquidityLocker.User","id":6174,"members":[{"constant":false,"id":6168,"mutability":"mutable","name":"lockedTokens","nameLocation":"1534:12:23","nodeType":"VariableDeclaration","scope":6174,"src":"1509:37:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6167,"nodeType":"UserDefinedTypeName","pathNode":{"id":6166,"name":"EnumerableSet.AddressSet","nameLocations":["1509:13:23","1523:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"1509:24:23"},"referencedDeclaration":2244,"src":"1509:24:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":6173,"mutability":"mutable","name":"locksForToken","nameLocation":"1628:13:23","nodeType":"VariableDeclaration","scope":6174,"src":"1598:43:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":6172,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6169,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1598:29:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1617:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6171,"nodeType":"ArrayTypeName","src":"1617:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"internal"}],"name":"User","nameLocation":"1494:4:23","nodeType":"StructDefinition","scope":7270,"src":"1487:208:23","visibility":"public"},{"canonicalName":"LiquidityLocker.TokenLock","id":6187,"members":[{"constant":false,"id":6176,"mutability":"mutable","name":"lockDate","nameLocation":"1736:8:23","nodeType":"VariableDeclaration","scope":6187,"src":"1728:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6178,"mutability":"mutable","name":"amount","nameLocation":"1795:6:23","nodeType":"VariableDeclaration","scope":6187,"src":"1787:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6180,"mutability":"mutable","name":"initialAmount","nameLocation":"1889:13:23","nodeType":"VariableDeclaration","scope":6187,"src":"1881:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1881:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6182,"mutability":"mutable","name":"unlockDate","nameLocation":"1947:10:23","nodeType":"VariableDeclaration","scope":6187,"src":"1939:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1939:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6184,"mutability":"mutable","name":"lockID","nameLocation":"2014:6:23","nodeType":"VariableDeclaration","scope":6187,"src":"2006:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6183,"name":"uint256","nodeType":"ElementaryTypeName","src":"2006:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6186,"mutability":"mutable","name":"owner","nameLocation":"2067:5:23","nodeType":"VariableDeclaration","scope":6187,"src":"2059:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6185,"name":"address","nodeType":"ElementaryTypeName","src":"2059:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenLock","nameLocation":"1708:9:23","nodeType":"StructDefinition","scope":7270,"src":"1701:378:23","visibility":"public"},{"constant":false,"id":6192,"mutability":"mutable","name":"_users","nameLocation":"2135:6:23","nodeType":"VariableDeclaration","scope":7270,"src":"2085:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User)"},"typeName":{"id":6191,"keyName":"userAddress","keyNameLocation":"2101:11:23","keyType":{"id":6188,"name":"address","nodeType":"ElementaryTypeName","src":"2093:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2085:41:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User)"},"valueName":"user","valueNameLocation":"2121:4:23","valueType":{"id":6190,"nodeType":"UserDefinedTypeName","pathNode":{"id":6189,"name":"User","nameLocations":["2116:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":6174,"src":"2116:4:23"},"referencedDeclaration":6174,"src":"2116:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"}}},"visibility":"private"},{"constant":false,"id":6195,"mutability":"mutable","name":"_lockedTokens","nameLocation":"2181:13:23","nodeType":"VariableDeclaration","scope":7270,"src":"2148:46:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":6194,"nodeType":"UserDefinedTypeName","pathNode":{"id":6193,"name":"EnumerableSet.AddressSet","nameLocations":["2148:13:23","2162:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"2148:24:23"},"referencedDeclaration":2244,"src":"2148:24:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"constant":false,"functionSelector":"ccebfa3f","id":6201,"mutability":"mutable","name":"tokenLocks","nameLocation":"2250:10:23","nodeType":"VariableDeclaration","scope":7270,"src":"2200:60:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock[])"},"typeName":{"id":6200,"keyName":"pair","keyNameLocation":"2216:4:23","keyType":{"id":6196,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2200:42:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock[])"},"valueName":"locks","valueNameLocation":"2236:5:23","valueType":{"baseType":{"id":6198,"nodeType":"UserDefinedTypeName","pathNode":{"id":6197,"name":"TokenLock","nameLocations":["2224:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"2224:9:23"},"referencedDeclaration":6187,"src":"2224:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"id":6199,"nodeType":"ArrayTypeName","src":"2224:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_ptr","typeString":"struct LiquidityLocker.TokenLock[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"7cd07e47","id":6204,"mutability":"mutable","name":"migrator","nameLocation":"2328:8:23","nodeType":"VariableDeclaration","scope":7270,"src":"2302:34:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"},"typeName":{"id":6203,"nodeType":"UserDefinedTypeName","pathNode":{"id":6202,"name":"IUniswapV2Migrator","nameLocations":["2302:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":2852,"src":"2302:18:23"},"referencedDeclaration":2852,"src":"2302:18:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}},"visibility":"public"},{"anonymous":false,"eventSelector":"bace9fd79d5ea02ed8b43fa96af07e4e8f859a2f71ff878c748f5c22c5780284","id":6210,"name":"OnWithdraw","nameLocation":"2349:10:23","nodeType":"EventDefinition","parameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6206,"indexed":false,"mutability":"mutable","name":"lpToken","nameLocation":"2368:7:23","nodeType":"VariableDeclaration","scope":6210,"src":"2360:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6205,"name":"address","nodeType":"ElementaryTypeName","src":"2360:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6208,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2385:6:23","nodeType":"VariableDeclaration","scope":6210,"src":"2377:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6207,"name":"uint256","nodeType":"ElementaryTypeName","src":"2377:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2359:33:23"},"src":"2343:50:23"},{"anonymous":false,"eventSelector":"b173d70d03f0b8aa29e0087d55b3549db8a6343c5208ce69af3c0de4c0836fe7","id":6222,"name":"OnDeposit","nameLocation":"2404:9:23","nodeType":"EventDefinition","parameters":{"id":6221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"indexed":false,"mutability":"mutable","name":"lpToken","nameLocation":"2422:7:23","nodeType":"VariableDeclaration","scope":6222,"src":"2414:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6211,"name":"address","nodeType":"ElementaryTypeName","src":"2414:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6214,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2439:4:23","nodeType":"VariableDeclaration","scope":6222,"src":"2431:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6213,"name":"address","nodeType":"ElementaryTypeName","src":"2431:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6216,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2453:6:23","nodeType":"VariableDeclaration","scope":6222,"src":"2445:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6215,"name":"uint256","nodeType":"ElementaryTypeName","src":"2445:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6218,"indexed":false,"mutability":"mutable","name":"lockDate","nameLocation":"2469:8:23","nodeType":"VariableDeclaration","scope":6222,"src":"2461:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2461:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6220,"indexed":false,"mutability":"mutable","name":"unlockDate","nameLocation":"2487:10:23","nodeType":"VariableDeclaration","scope":6222,"src":"2479:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2413:85:23"},"src":"2398:101:23"},{"body":{"id":6235,"nodeType":"Block","src":"2747:37:23","statements":[{"expression":{"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6231,"name":"migrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"2757:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6232,"name":"_migrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"2768:9:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}},"src":"2757:20:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}},"id":6234,"nodeType":"ExpressionStatement","src":"2757:20:23"}]},"documentation":{"id":6223,"nodeType":"StructuredDocumentation","src":"2505:169:23","text":" @dev Set the migrator contract which allows locked lp tokens to be migrated to uniswap v3\n @param _migrator The address of the migrator contract"},"functionSelector":"23cf3118","id":6236,"implemented":true,"kind":"function","modifiers":[{"id":6229,"kind":"modifierInvocation","modifierName":{"id":6228,"name":"onlyOwner","nameLocations":["2737:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2737:9:23"},"nodeType":"ModifierInvocation","src":"2737:9:23"}],"name":"setMigrator","nameLocation":"2688:11:23","nodeType":"FunctionDefinition","parameters":{"id":6227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6226,"mutability":"mutable","name":"_migrator","nameLocation":"2719:9:23","nodeType":"VariableDeclaration","scope":6236,"src":"2700:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"},"typeName":{"id":6225,"nodeType":"UserDefinedTypeName","pathNode":{"id":6224,"name":"IUniswapV2Migrator","nameLocations":["2700:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":2852,"src":"2700:18:23"},"referencedDeclaration":2852,"src":"2700:18:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}},"visibility":"internal"}],"src":"2699:30:23"},"returnParameters":{"id":6230,"nodeType":"ParameterList","parameters":[],"src":"2747:0:23"},"scope":7270,"src":"2679:105:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6438,"nodeType":"Block","src":"3347:1439:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"amountOfLPToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"3361:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3381:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3361:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6261,"nodeType":"IfStatement","src":"3357:74:23","trueBody":{"id":6260,"nodeType":"Block","src":"3384:47:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6257,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"3405:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3405:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6259,"nodeType":"RevertStatement","src":"3398:22:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6262,"name":"unlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"3445:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31305f3030305f3030305f303030","id":6263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3458:14:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"10_000_000_000"},"src":"3445:27:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6269,"nodeType":"IfStatement","src":"3441:82:23","trueBody":{"id":6268,"nodeType":"Block","src":"3474:49:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6265,"name":"InvalidLockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"3495:15:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3495:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6267,"nodeType":"RevertStatement","src":"3488:24:23"}]}},{"assignments":[6272],"declarations":[{"constant":false,"id":6272,"mutability":"mutable","name":"lpair","nameLocation":"3616:5:23","nodeType":"VariableDeclaration","scope":6438,"src":"3601:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"},"typeName":{"id":6271,"nodeType":"UserDefinedTypeName","pathNode":{"id":6270,"name":"IUniswapV2Pair","nameLocations":["3601:14:23"],"nodeType":"IdentifierPath","referencedDeclaration":2836,"src":"3601:14:23"},"referencedDeclaration":2836,"src":"3601:14:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"}},"visibility":"internal"}],"id":6279,"initialValue":{"arguments":[{"arguments":[{"id":6276,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"3647:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3639:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6274,"name":"address","nodeType":"ElementaryTypeName","src":"3639:7:23","typeDescriptions":{}}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3639:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6273,"name":"IUniswapV2Pair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"3624:14:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV2Pair_$2836_$","typeString":"type(contract IUniswapV2Pair)"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3624:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"}},"nodeType":"VariableDeclarationStatement","src":"3601:55:23"},{"assignments":[6281],"declarations":[{"constant":false,"id":6281,"mutability":"mutable","name":"factoryPairAddress","nameLocation":"3674:18:23","nodeType":"VariableDeclaration","scope":6438,"src":"3666:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6280,"name":"address","nodeType":"ElementaryTypeName","src":"3666:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6291,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6284,"name":"lpair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"3722:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3728:6:23","memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"3722:12:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3722:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6287,"name":"lpair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"3738:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Pair_$2836","typeString":"contract IUniswapV2Pair"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3744:6:23","memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"3738:12:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3738:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6282,"name":"UNISWAP_V2_FACTORY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"3695:18:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Factory_$2594","typeString":"contract IUniswapV2Factory"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3714:7:23","memberName":"getPair","nodeType":"MemberAccess","referencedDeclaration":2562,"src":"3695:26:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3695:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3666:87:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"factoryPairAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3768:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":6295,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"3798:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3790:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6293,"name":"address","nodeType":"ElementaryTypeName","src":"3790:7:23","typeDescriptions":{}}},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3790:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3768:38:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6306,"nodeType":"IfStatement","src":"3764:104:23","trueBody":{"id":6305,"nodeType":"Block","src":"3808:60:23","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":6301,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"3848:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3840:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6299,"name":"address","nodeType":"ElementaryTypeName","src":"3840:7:23","typeDescriptions":{}}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6298,"name":"NotUniPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"3829:10:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3829:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6304,"nodeType":"RevertStatement","src":"3822:35:23"}]}},{"expression":{"arguments":[{"arguments":[{"id":6312,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"3916:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3908:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6310,"name":"address","nodeType":"ElementaryTypeName","src":"3908:7:23","typeDescriptions":{}}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6314,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3926:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3926:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6318,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3948:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidityLocker_$7270","typeString":"contract LiquidityLocker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LiquidityLocker_$7270","typeString":"contract LiquidityLocker"}],"id":6317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3940:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6316,"name":"address","nodeType":"ElementaryTypeName","src":"3940:7:23","typeDescriptions":{}}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3940:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6320,"name":"amountOfLPToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"3955:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6307,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"3878:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3891:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":7351,"src":"3878:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3878:94:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6322,"nodeType":"ExpressionStatement","src":"3878:94:23"},{"expression":{"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6323,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"3983:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3993:8:23","memberName":"lockDate","nodeType":"MemberAccess","referencedDeclaration":6176,"src":"3983:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6326,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4004:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4010:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"4004:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3983:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6329,"nodeType":"ExpressionStatement","src":"3983:36:23"},{"expression":{"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6330,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4029:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4039:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"4029:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6333,"name":"amountOfLPToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"4048:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4029:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6335,"nodeType":"ExpressionStatement","src":"4029:35:23"},{"expression":{"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6336,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4074:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6338,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4084:13:23","memberName":"initialAmount","nodeType":"MemberAccess","referencedDeclaration":6180,"src":"4074:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6339,"name":"amountOfLPToLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"4100:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4074:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6341,"nodeType":"ExpressionStatement","src":"4074:42:23"},{"expression":{"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6342,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4126:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4136:10:23","memberName":"unlockDate","nodeType":"MemberAccess","referencedDeclaration":6182,"src":"4126:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6345,"name":"unlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"4149:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4126:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6347,"nodeType":"ExpressionStatement","src":"4126:33:23"},{"expression":{"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6348,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4169:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4179:6:23","memberName":"lockID","nodeType":"MemberAccess","referencedDeclaration":6184,"src":"4169:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6351,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"4188:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":6356,"indexExpression":{"arguments":[{"id":6354,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"4207:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4199:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6352,"name":"address","nodeType":"ElementaryTypeName","src":"4199:7:23","typeDescriptions":{}}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4199:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4188:28:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4217:6:23","memberName":"length","nodeType":"MemberAccess","src":"4188:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4169:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6359,"nodeType":"ExpressionStatement","src":"4169:54:23"},{"expression":{"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6360,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4233:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4243:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6186,"src":"4233:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6363,"name":"withdrawer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"4251:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"4233:28:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6365,"nodeType":"ExpressionStatement","src":"4233:28:23"},{"expression":{"arguments":[{"id":6373,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4351:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}],"expression":{"baseExpression":{"id":6366,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"4317:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":6371,"indexExpression":{"arguments":[{"id":6369,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"4336:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4328:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6367,"name":"address","nodeType":"ElementaryTypeName","src":"4328:7:23","typeDescriptions":{}}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4328:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4317:28:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4346:4:23","memberName":"push","nodeType":"MemberAccess","src":"4317:33:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_ptr_$_t_struct$_TokenLock_$6187_storage_$returns$__$attached_to$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_ptr_$","typeString":"function (struct LiquidityLocker.TokenLock storage ref[] storage pointer,struct LiquidityLocker.TokenLock storage ref)"}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6375,"nodeType":"ExpressionStatement","src":"4317:44:23"},{"expression":{"arguments":[{"arguments":[{"id":6381,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"4397:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4389:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6379,"name":"address","nodeType":"ElementaryTypeName","src":"4389:7:23","typeDescriptions":{}}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4389:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6376,"name":"_lockedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"4371:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4385:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"4371:17:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2244_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6384,"nodeType":"ExpressionStatement","src":"4371:35:23"},{"assignments":[6387],"declarations":[{"constant":false,"id":6387,"mutability":"mutable","name":"user","nameLocation":"4470:4:23","nodeType":"VariableDeclaration","scope":6438,"src":"4457:17:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"},"typeName":{"id":6386,"nodeType":"UserDefinedTypeName","pathNode":{"id":6385,"name":"User","nameLocations":["4457:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":6174,"src":"4457:4:23"},"referencedDeclaration":6174,"src":"4457:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"}},"visibility":"internal"}],"id":6391,"initialValue":{"baseExpression":{"id":6388,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"4477:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6390,"indexExpression":{"id":6389,"name":"withdrawer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"4484:10:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4477:18:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4457:38:23"},{"expression":{"arguments":[{"arguments":[{"id":6399,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"4535:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4527:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6397,"name":"address","nodeType":"ElementaryTypeName","src":"4527:7:23","typeDescriptions":{}}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4527:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":6392,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"4505:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User storage pointer"}},"id":6395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4510:12:23","memberName":"lockedTokens","nodeType":"MemberAccess","referencedDeclaration":6168,"src":"4505:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4523:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"4505:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2244_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4505:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6402,"nodeType":"ExpressionStatement","src":"4505:39:23"},{"assignments":[6407],"declarations":[{"constant":false,"id":6407,"mutability":"mutable","name":"userLocks","nameLocation":"4572:9:23","nodeType":"VariableDeclaration","scope":6438,"src":"4554:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4554:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6406,"nodeType":"ArrayTypeName","src":"4554:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6415,"initialValue":{"baseExpression":{"expression":{"id":6408,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"4584:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User storage pointer"}},"id":6409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4589:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"4584:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6414,"indexExpression":{"arguments":[{"id":6412,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"4611:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4603:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6410,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:23","typeDescriptions":{}}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4603:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4584:36:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4554:66:23"},{"expression":{"arguments":[{"expression":{"id":6419,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4645:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4655:6:23","memberName":"lockID","nodeType":"MemberAccess","referencedDeclaration":6184,"src":"4645:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6416,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"4630:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4640:4:23","memberName":"push","nodeType":"MemberAccess","src":"4630:14:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:32:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"ExpressionStatement","src":"4630:32:23"},{"eventCall":{"arguments":[{"arguments":[{"id":6426,"name":"lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"4696:7:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4688:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6424,"name":"address","nodeType":"ElementaryTypeName","src":"4688:7:23","typeDescriptions":{}}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4688:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6428,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"4706:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4706:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6430,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4720:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4730:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"4720:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6432,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4738:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4748:8:23","memberName":"lockDate","nodeType":"MemberAccess","referencedDeclaration":6176,"src":"4738:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6434,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"4758:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock memory"}},"id":6435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4768:10:23","memberName":"unlockDate","nodeType":"MemberAccess","referencedDeclaration":6182,"src":"4758:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6423,"name":"OnDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"4678:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4678:101:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6437,"nodeType":"EmitStatement","src":"4673:106:23"}]},"documentation":{"id":6237,"nodeType":"StructuredDocumentation","src":"2790:300:23","text":" @dev Creates a new lock\n @param lpToken the univ2 token address\n @param amountOfLPToLock amount of LP tokens to lock\n @param unlockDate the unix timestamp (in seconds) until unlock\n @param withdrawer the user who can withdraw liquidity once the lock expires"},"functionSelector":"df41bc5f","id":6439,"implemented":true,"kind":"function","modifiers":[{"id":6249,"kind":"modifierInvocation","modifierName":{"id":6248,"name":"nonReentrant","nameLocations":["3285:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"3285:12:23"},"nodeType":"ModifierInvocation","src":"3285:12:23"}],"name":"lockLPToken","nameLocation":"3104:11:23","nodeType":"FunctionDefinition","parameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"lpToken","nameLocation":"3132:7:23","nodeType":"VariableDeclaration","scope":6439,"src":"3125:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"},"typeName":{"id":6239,"nodeType":"UserDefinedTypeName","pathNode":{"id":6238,"name":"IERC20","nameLocations":["3125:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"3125:6:23"},"referencedDeclaration":950,"src":"3125:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6242,"mutability":"mutable","name":"amountOfLPToLock","nameLocation":"3157:16:23","nodeType":"VariableDeclaration","scope":6439,"src":"3149:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3149:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6244,"mutability":"mutable","name":"unlockDate","nameLocation":"3191:10:23","nodeType":"VariableDeclaration","scope":6439,"src":"3183:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6246,"mutability":"mutable","name":"withdrawer","nameLocation":"3227:10:23","nodeType":"VariableDeclaration","scope":6439,"src":"3211:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6245,"name":"address","nodeType":"ElementaryTypeName","src":"3211:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3115:128:23"},"returnParameters":{"id":6253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6252,"mutability":"mutable","name":"tokenLock","nameLocation":"3332:9:23","nodeType":"VariableDeclaration","scope":6439,"src":"3315:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock"},"typeName":{"id":6251,"nodeType":"UserDefinedTypeName","pathNode":{"id":6250,"name":"TokenLock","nameLocations":["3315:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"3315:9:23"},"referencedDeclaration":6187,"src":"3315:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"visibility":"internal"}],"src":"3314:28:23"},"scope":7270,"src":"3095:1691:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":6518,"nodeType":"Block","src":"5363:560:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6454,"name":"_unlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"5377:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31305f3030305f3030305f303030","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5391:14:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"10_000_000_000"},"src":"5377:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6461,"nodeType":"IfStatement","src":"5373:83:23","trueBody":{"id":6460,"nodeType":"Block","src":"5407:49:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6457,"name":"InvalidLockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"5428:15:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5428:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6459,"nodeType":"RevertStatement","src":"5421:24:23"}]}},{"assignments":[6463],"declarations":[{"constant":false,"id":6463,"mutability":"mutable","name":"lockID","nameLocation":"5514:6:23","nodeType":"VariableDeclaration","scope":6518,"src":"5506:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6462,"name":"uint256","nodeType":"ElementaryTypeName","src":"5506:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6476,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"baseExpression":{"id":6464,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"5523:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6467,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6465,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5530:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5530:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5523:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5544:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"5523:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6473,"indexExpression":{"arguments":[{"id":6471,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6443,"src":"5566:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6469,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:23","typeDescriptions":{}}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5523:53:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6475,"indexExpression":{"id":6474,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"5577:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5523:61:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5506:78:23"},{"assignments":[6479],"declarations":[{"constant":false,"id":6479,"mutability":"mutable","name":"userLock","nameLocation":"5612:8:23","nodeType":"VariableDeclaration","scope":6518,"src":"5594:26:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"},"typeName":{"id":6478,"nodeType":"UserDefinedTypeName","pathNode":{"id":6477,"name":"TokenLock","nameLocations":["5594:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"5594:9:23"},"referencedDeclaration":6187,"src":"5594:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"visibility":"internal"}],"id":6488,"initialValue":{"baseExpression":{"baseExpression":{"id":6480,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"5623:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":6485,"indexExpression":{"arguments":[{"id":6483,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6443,"src":"5642:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5634:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6481,"name":"address","nodeType":"ElementaryTypeName","src":"5634:7:23","typeDescriptions":{}}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5634:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5623:29:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":6487,"indexExpression":{"id":6486,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"5653:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5623:37:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage","typeString":"struct LiquidityLocker.TokenLock storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5594:66:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6489,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"5675:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6490,"name":"_lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"5685:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5675:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6492,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"5696:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5705:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6186,"src":"5696:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6494,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5714:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5714:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5696:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5675:51:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6502,"nodeType":"IfStatement","src":"5671:103:23","trueBody":{"id":6501,"nodeType":"Block","src":"5728:46:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6498,"name":"LockMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"5749:12:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6500,"nodeType":"RevertStatement","src":"5742:21:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6503,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"5788:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5797:10:23","memberName":"unlockDate","nodeType":"MemberAccess","referencedDeclaration":6182,"src":"5788:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6505,"name":"_unlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"5810:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5788:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6511,"nodeType":"IfStatement","src":"5784:89:23","trueBody":{"id":6510,"nodeType":"Block","src":"5823:50:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6507,"name":"BeforeUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"5844:16:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5844:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6509,"nodeType":"RevertStatement","src":"5837:25:23"}]}},{"expression":{"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6512,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"5883:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5892:10:23","memberName":"unlockDate","nodeType":"MemberAccess","referencedDeclaration":6182,"src":"5883:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6515,"name":"_unlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"5905:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5883:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6517,"nodeType":"ExpressionStatement","src":"5883:33:23"}]},"documentation":{"id":6440,"nodeType":"StructuredDocumentation","src":"4792:457:23","text":" @dev extend a lock with a new unlock date, _index and _lockID ensure the correct lock is changed\n this prevents errors when a user performs multiple tx per block possibly with varying gas prices\n @param _lpToken the univ2 token address\n @param _index the index of the lock for the token\n @param _lockID the lockID of the lock for the token\n @param _unlockDate the new unix timestamp (in seconds) until unlock"},"functionSelector":"60491d24","id":6519,"implemented":true,"kind":"function","modifiers":[{"id":6452,"kind":"modifierInvocation","modifierName":{"id":6451,"name":"nonReentrant","nameLocations":["5350:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"5350:12:23"},"nodeType":"ModifierInvocation","src":"5350:12:23"}],"name":"relock","nameLocation":"5263:6:23","nodeType":"FunctionDefinition","parameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6443,"mutability":"mutable","name":"_lpToken","nameLocation":"5277:8:23","nodeType":"VariableDeclaration","scope":6519,"src":"5270:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"},"typeName":{"id":6442,"nodeType":"UserDefinedTypeName","pathNode":{"id":6441,"name":"IERC20","nameLocations":["5270:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"5270:6:23"},"referencedDeclaration":950,"src":"5270:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6445,"mutability":"mutable","name":"_index","nameLocation":"5295:6:23","nodeType":"VariableDeclaration","scope":6519,"src":"5287:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6444,"name":"uint256","nodeType":"ElementaryTypeName","src":"5287:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6447,"mutability":"mutable","name":"_lockID","nameLocation":"5311:7:23","nodeType":"VariableDeclaration","scope":6519,"src":"5303:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6446,"name":"uint256","nodeType":"ElementaryTypeName","src":"5303:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6449,"mutability":"mutable","name":"_unlockDate","nameLocation":"5328:11:23","nodeType":"VariableDeclaration","scope":6519,"src":"5320:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5320:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5269:71:23"},"returnParameters":{"id":6453,"nodeType":"ParameterList","parameters":[],"src":"5363:0:23"},"scope":7270,"src":"5254:669:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6678,"nodeType":"Block","src":"6263:1047:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6534,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"6277:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6288:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6277:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6541,"nodeType":"IfStatement","src":"6273:65:23","trueBody":{"id":6540,"nodeType":"Block","src":"6291:47:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6537,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"6312:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6539,"nodeType":"RevertStatement","src":"6305:22:23"}]}},{"assignments":[6543],"declarations":[{"constant":false,"id":6543,"mutability":"mutable","name":"lockID","nameLocation":"6356:6:23","nodeType":"VariableDeclaration","scope":6678,"src":"6348:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6542,"name":"uint256","nodeType":"ElementaryTypeName","src":"6348:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6556,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"baseExpression":{"id":6544,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"6365:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6547,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6545,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6372:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6365:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6386:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"6365:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6553,"indexExpression":{"arguments":[{"id":6551,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"6408:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6400:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6549,"name":"address","nodeType":"ElementaryTypeName","src":"6400:7:23","typeDescriptions":{}}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6365:53:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6555,"indexExpression":{"id":6554,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"6419:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6365:61:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6348:78:23"},{"assignments":[6559],"declarations":[{"constant":false,"id":6559,"mutability":"mutable","name":"userLock","nameLocation":"6454:8:23","nodeType":"VariableDeclaration","scope":6678,"src":"6436:26:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"},"typeName":{"id":6558,"nodeType":"UserDefinedTypeName","pathNode":{"id":6557,"name":"TokenLock","nameLocations":["6436:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"6436:9:23"},"referencedDeclaration":6187,"src":"6436:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"visibility":"internal"}],"id":6568,"initialValue":{"baseExpression":{"baseExpression":{"id":6560,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"6465:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":6565,"indexExpression":{"arguments":[{"id":6563,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"6484:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6476:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6561,"name":"address","nodeType":"ElementaryTypeName","src":"6476:7:23","typeDescriptions":{}}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6465:29:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":6567,"indexExpression":{"id":6566,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"6495:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6465:37:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage","typeString":"struct LiquidityLocker.TokenLock storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6436:66:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"6517:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6570,"name":"_lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"6527:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6517:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6572,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"6538:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6547:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6186,"src":"6538:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6574,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6556:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6556:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6538:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6517:51:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6582,"nodeType":"IfStatement","src":"6513:103:23","trueBody":{"id":6581,"nodeType":"Block","src":"6570:46:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6578,"name":"LockMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"6591:12:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6591:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6580,"nodeType":"RevertStatement","src":"6584:21:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6583,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"6630:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6639:10:23","memberName":"unlockDate","nodeType":"MemberAccess","referencedDeclaration":6182,"src":"6630:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":6585,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6652:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6658:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"6652:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6630:37:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"nodeType":"IfStatement","src":"6626:93:23","trueBody":{"id":6591,"nodeType":"Block","src":"6669:50:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6588,"name":"BeforeUnlockDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"6690:16:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6690:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6590,"nodeType":"RevertStatement","src":"6683:25:23"}]}},{"expression":{"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6593,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"6729:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6738:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"6729:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6596,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"6747:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6756:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"6747:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6598,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"6765:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6747:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6729:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6601,"nodeType":"ExpressionStatement","src":"6729:43:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6602,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"6817:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6826:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"6817:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6836:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6817:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6657,"nodeType":"IfStatement","src":"6813:360:23","trueBody":{"id":6656,"nodeType":"Block","src":"6839:334:23","statements":[{"assignments":[6610],"declarations":[{"constant":false,"id":6610,"mutability":"mutable","name":"userLocks","nameLocation":"6871:9:23","nodeType":"VariableDeclaration","scope":6656,"src":"6853:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6608,"name":"uint256","nodeType":"ElementaryTypeName","src":"6853:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6609,"nodeType":"ArrayTypeName","src":"6853:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6621,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"id":6611,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"6883:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6614,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6612,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"6890:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6890:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6883:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6904:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"6883:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6620,"indexExpression":{"arguments":[{"id":6618,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"6926:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6918:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6616,"name":"address","nodeType":"ElementaryTypeName","src":"6918:7:23","typeDescriptions":{}}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6918:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6883:53:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6853:83:23"},{"expression":{"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6622,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"6950:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6624,"indexExpression":{"id":6623,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"6960:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6950:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6625,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"6970:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6630,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6626,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"6980:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6990:6:23","memberName":"length","nodeType":"MemberAccess","src":"6980:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6999:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6980:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6970:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6950:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6632,"nodeType":"ExpressionStatement","src":"6950:51:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6633,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"7015:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7025:3:23","memberName":"pop","nodeType":"MemberAccess","src":"7015:13:23","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6637,"nodeType":"ExpressionStatement","src":"7015:15:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6638,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"7048:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7058:6:23","memberName":"length","nodeType":"MemberAccess","src":"7048:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7068:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7048:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6655,"nodeType":"IfStatement","src":"7044:119:23","trueBody":{"id":6654,"nodeType":"Block","src":"7071:92:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":6650,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"7138:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7130:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6648,"name":"address","nodeType":"ElementaryTypeName","src":"7130:7:23","typeDescriptions":{}}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7130:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":6642,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"7089:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6645,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6643,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7096:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7096:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7089:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7110:12:23","memberName":"lockedTokens","nodeType":"MemberAccess","referencedDeclaration":6168,"src":"7089:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7123:6:23","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"7089:40:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2244_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7089:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6653,"nodeType":"ExpressionStatement","src":"7089:59:23"}]}}]}},{"expression":{"arguments":[{"arguments":[{"id":6663,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"7217:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7209:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6661,"name":"address","nodeType":"ElementaryTypeName","src":"7209:7:23","typeDescriptions":{}}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7209:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6665,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7228:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7228:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6667,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"7242:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6658,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"7183:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7196:12:23","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7395,"src":"7183:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7183:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6669,"nodeType":"ExpressionStatement","src":"7183:67:23"},{"eventCall":{"arguments":[{"arguments":[{"id":6673,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"7284:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7276:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6671,"name":"address","nodeType":"ElementaryTypeName","src":"7276:7:23","typeDescriptions":{}}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6675,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"7295:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"name":"OnWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"7265:10:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6677,"nodeType":"EmitStatement","src":"7260:43:23"}]},"documentation":{"id":6520,"nodeType":"StructuredDocumentation","src":"5929:222:23","text":" @dev withdraw a specified amount from a lock. _index and _lockID ensure the correct lock is changed\n this prevents errors when a user performs multiple tx per block possibly with varying gas prices"},"functionSelector":"4532d776","id":6679,"implemented":true,"kind":"function","modifiers":[{"id":6532,"kind":"modifierInvocation","modifierName":{"id":6531,"name":"nonReentrant","nameLocations":["6250:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"6250:12:23"},"nodeType":"ModifierInvocation","src":"6250:12:23"}],"name":"withdraw","nameLocation":"6165:8:23","nodeType":"FunctionDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"_lpToken","nameLocation":"6181:8:23","nodeType":"VariableDeclaration","scope":6679,"src":"6174:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"},"typeName":{"id":6522,"nodeType":"UserDefinedTypeName","pathNode":{"id":6521,"name":"IERC20","nameLocations":["6174:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"6174:6:23"},"referencedDeclaration":950,"src":"6174:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6525,"mutability":"mutable","name":"_index","nameLocation":"6199:6:23","nodeType":"VariableDeclaration","scope":6679,"src":"6191:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6524,"name":"uint256","nodeType":"ElementaryTypeName","src":"6191:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6527,"mutability":"mutable","name":"_lockID","nameLocation":"6215:7:23","nodeType":"VariableDeclaration","scope":6679,"src":"6207:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6526,"name":"uint256","nodeType":"ElementaryTypeName","src":"6207:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6529,"mutability":"mutable","name":"_amount","nameLocation":"6232:7:23","nodeType":"VariableDeclaration","scope":6679,"src":"6224:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6173:67:23"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[],"src":"6263:0:23"},"scope":7270,"src":"6156:1154:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6791,"nodeType":"Block","src":"7717:660:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6697,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"7731:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7742:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7731:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"IfStatement","src":"7727:65:23","trueBody":{"id":6703,"nodeType":"Block","src":"7745:47:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6700,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"7766:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7766:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6702,"nodeType":"RevertStatement","src":"7759:22:23"}]}},{"assignments":[6706],"declarations":[{"constant":false,"id":6706,"mutability":"mutable","name":"lockID","nameLocation":"7810:6:23","nodeType":"VariableDeclaration","scope":6791,"src":"7802:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6705,"name":"uint256","nodeType":"ElementaryTypeName","src":"7802:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6719,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"baseExpression":{"id":6707,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"7819:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6710,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6708,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7826:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7826:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7819:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7840:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"7819:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6716,"indexExpression":{"arguments":[{"id":6714,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"7862:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7854:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6712,"name":"address","nodeType":"ElementaryTypeName","src":"7854:7:23","typeDescriptions":{}}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7854:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7819:53:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6718,"indexExpression":{"id":6717,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6685,"src":"7873:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7819:61:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7802:78:23"},{"assignments":[6722],"declarations":[{"constant":false,"id":6722,"mutability":"mutable","name":"userLock","nameLocation":"7908:8:23","nodeType":"VariableDeclaration","scope":6791,"src":"7890:26:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"},"typeName":{"id":6721,"nodeType":"UserDefinedTypeName","pathNode":{"id":6720,"name":"TokenLock","nameLocations":["7890:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"7890:9:23"},"referencedDeclaration":6187,"src":"7890:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"visibility":"internal"}],"id":6731,"initialValue":{"baseExpression":{"baseExpression":{"id":6723,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"7919:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":6728,"indexExpression":{"arguments":[{"id":6726,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"7938:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7930:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6724,"name":"address","nodeType":"ElementaryTypeName","src":"7930:7:23","typeDescriptions":{}}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7919:29:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":6730,"indexExpression":{"id":6729,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"7949:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7919:37:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage","typeString":"struct LiquidityLocker.TokenLock storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7890:66:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6732,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"7971:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6733,"name":"_lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"7981:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7971:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6735,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"7992:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8001:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6186,"src":"7992:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6737,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8010:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8010:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7992:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7971:51:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6745,"nodeType":"IfStatement","src":"7967:103:23","trueBody":{"id":6744,"nodeType":"Block","src":"8024:46:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6741,"name":"LockMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"8045:12:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6743,"nodeType":"RevertStatement","src":"8038:21:23"}]}},{"expression":{"arguments":[{"arguments":[{"id":6751,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"8118:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8110:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6749,"name":"address","nodeType":"ElementaryTypeName","src":"8110:7:23","typeDescriptions":{}}},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8110:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6755,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8137:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8137:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8129:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6753,"name":"address","nodeType":"ElementaryTypeName","src":"8129:7:23","typeDescriptions":{}}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6760,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8160:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_LiquidityLocker_$7270","typeString":"contract LiquidityLocker"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LiquidityLocker_$7270","typeString":"contract LiquidityLocker"}],"id":6759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8152:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6758,"name":"address","nodeType":"ElementaryTypeName","src":"8152:7:23","typeDescriptions":{}}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8152:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6762,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"8167:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6746,"name":"SafeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"8080:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeTransfer_$7396_$","typeString":"type(library SafeTransfer)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8093:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":7351,"src":"8080:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,address,uint256) returns (bool)"}},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8080:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6764,"nodeType":"ExpressionStatement","src":"8080:95:23"},{"expression":{"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6765,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"8186:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8195:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"8186:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6768,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"8204:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8213:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"8204:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6770,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"8222:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8204:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8186:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6773,"nodeType":"ExpressionStatement","src":"8186:43:23"},{"eventCall":{"arguments":[{"arguments":[{"id":6777,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"8263:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8255:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6775,"name":"address","nodeType":"ElementaryTypeName","src":"8255:7:23","typeDescriptions":{}}},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8255:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":6779,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8274:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8274:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6781,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"8288:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8297:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"8288:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6783,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"8305:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8314:8:23","memberName":"lockDate","nodeType":"MemberAccess","referencedDeclaration":6176,"src":"8305:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6785,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"8324:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8333:10:23","memberName":"unlockDate","nodeType":"MemberAccess","referencedDeclaration":6182,"src":"8324:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6774,"name":"OnDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"8245:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256)"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8245:99:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6788,"nodeType":"EmitStatement","src":"8240:104:23"},{"expression":{"id":6789,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"8362:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"functionReturnParameters":6696,"id":6790,"nodeType":"Return","src":"8355:15:23"}]},"documentation":{"id":6680,"nodeType":"StructuredDocumentation","src":"7316:181:23","text":" @dev increase the amount of tokens per a specific lock, this is preferable to creating a new lock, less fees,\n and faster loading on our live block explorer"},"functionSelector":"a9b07cea","id":6792,"implemented":true,"kind":"function","modifiers":[{"id":6692,"kind":"modifierInvocation","modifierName":{"id":6691,"name":"nonReentrant","nameLocations":["7655:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"7655:12:23"},"nodeType":"ModifierInvocation","src":"7655:12:23"}],"name":"incrementLock","nameLocation":"7511:13:23","nodeType":"FunctionDefinition","parameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6683,"mutability":"mutable","name":"_lpToken","nameLocation":"7541:8:23","nodeType":"VariableDeclaration","scope":6792,"src":"7534:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"},"typeName":{"id":6682,"nodeType":"UserDefinedTypeName","pathNode":{"id":6681,"name":"IERC20","nameLocations":["7534:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"7534:6:23"},"referencedDeclaration":950,"src":"7534:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6685,"mutability":"mutable","name":"_index","nameLocation":"7567:6:23","nodeType":"VariableDeclaration","scope":6792,"src":"7559:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6684,"name":"uint256","nodeType":"ElementaryTypeName","src":"7559:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6687,"mutability":"mutable","name":"_lockID","nameLocation":"7591:7:23","nodeType":"VariableDeclaration","scope":6792,"src":"7583:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7583:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6689,"mutability":"mutable","name":"_amount","nameLocation":"7616:7:23","nodeType":"VariableDeclaration","scope":6792,"src":"7608:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6688,"name":"uint256","nodeType":"ElementaryTypeName","src":"7608:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7524:105:23"},"returnParameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"_userLock","nameLocation":"7702:9:23","nodeType":"VariableDeclaration","scope":6792,"src":"7685:26:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_memory_ptr","typeString":"struct LiquidityLocker.TokenLock"},"typeName":{"id":6694,"nodeType":"UserDefinedTypeName","pathNode":{"id":6693,"name":"TokenLock","nameLocations":["7685:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"7685:9:23"},"referencedDeclaration":6187,"src":"7685:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"visibility":"internal"}],"src":"7684:28:23"},"scope":7270,"src":"7502:875:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6930,"nodeType":"Block","src":"8649:995:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6804,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"8663:9:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"8676:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8676:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8663:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6812,"nodeType":"IfStatement","src":"8659:75:23","trueBody":{"id":6811,"nodeType":"Block","src":"8685:49:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6808,"name":"OwnerAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"8706:15:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8706:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6810,"nodeType":"RevertStatement","src":"8699:24:23"}]}},{"assignments":[6814],"declarations":[{"constant":false,"id":6814,"mutability":"mutable","name":"lockID","nameLocation":"8752:6:23","nodeType":"VariableDeclaration","scope":6930,"src":"8744:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6813,"name":"uint256","nodeType":"ElementaryTypeName","src":"8744:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6824,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"baseExpression":{"id":6815,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"8761:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6818,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6816,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8768:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8768:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8761:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8782:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"8761:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6821,"indexExpression":{"id":6820,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"8796:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8761:44:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6823,"indexExpression":{"id":6822,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"8806:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8761:52:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8744:69:23"},{"assignments":[6827],"declarations":[{"constant":false,"id":6827,"mutability":"mutable","name":"transferredLock","nameLocation":"8841:15:23","nodeType":"VariableDeclaration","scope":6930,"src":"8823:33:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"},"typeName":{"id":6826,"nodeType":"UserDefinedTypeName","pathNode":{"id":6825,"name":"TokenLock","nameLocations":["8823:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"8823:9:23"},"referencedDeclaration":6187,"src":"8823:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"visibility":"internal"}],"id":6833,"initialValue":{"baseExpression":{"baseExpression":{"id":6828,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"8859:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":6830,"indexExpression":{"id":6829,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"8870:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8859:20:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":6832,"indexExpression":{"id":6831,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"8880:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8859:28:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage","typeString":"struct LiquidityLocker.TokenLock storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8823:64:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6834,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"8902:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6835,"name":"_lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"8912:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8902:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6837,"name":"transferredLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"8923:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8939:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6186,"src":"8923:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6839,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"8948:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8948:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8923:37:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8902:58:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6847,"nodeType":"IfStatement","src":"8898:110:23","trueBody":{"id":6846,"nodeType":"Block","src":"8962:46:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6843,"name":"LockMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"8983:12:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8983:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6845,"nodeType":"RevertStatement","src":"8976:21:23"}]}},{"assignments":[6850],"declarations":[{"constant":false,"id":6850,"mutability":"mutable","name":"user","nameLocation":"9076:4:23","nodeType":"VariableDeclaration","scope":6930,"src":"9063:17:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"},"typeName":{"id":6849,"nodeType":"UserDefinedTypeName","pathNode":{"id":6848,"name":"User","nameLocations":["9063:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":6174,"src":"9063:4:23"},"referencedDeclaration":6174,"src":"9063:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"}},"visibility":"internal"}],"id":6854,"initialValue":{"baseExpression":{"id":6851,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"9083:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6853,"indexExpression":{"id":6852,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"9090:9:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9083:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9063:37:23"},{"expression":{"arguments":[{"id":6860,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"9132:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":6855,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"9110:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User storage pointer"}},"id":6858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9115:12:23","memberName":"lockedTokens","nodeType":"MemberAccess","referencedDeclaration":6168,"src":"9110:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9128:3:23","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2271,"src":"9110:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2244_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6862,"nodeType":"ExpressionStatement","src":"9110:31:23"},{"assignments":[6867],"declarations":[{"constant":false,"id":6867,"mutability":"mutable","name":"userLocks","nameLocation":"9170:9:23","nodeType":"VariableDeclaration","scope":6930,"src":"9152:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6865,"name":"uint256","nodeType":"ElementaryTypeName","src":"9152:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6866,"nodeType":"ArrayTypeName","src":"9152:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6872,"initialValue":{"baseExpression":{"expression":{"id":6868,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"9182:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User storage pointer"}},"id":6869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9187:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"9182:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6871,"indexExpression":{"id":6870,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"9201:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9182:28:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9152:58:23"},{"expression":{"arguments":[{"expression":{"id":6876,"name":"transferredLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"9235:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9251:6:23","memberName":"lockID","nodeType":"MemberAccess","referencedDeclaration":6184,"src":"9235:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6873,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"9220:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9230:4:23","memberName":"push","nodeType":"MemberAccess","src":"9220:14:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6879,"nodeType":"ExpressionStatement","src":"9220:38:23"},{"assignments":[6884],"declarations":[{"constant":false,"id":6884,"mutability":"mutable","name":"userLocks2","nameLocation":"9333:10:23","nodeType":"VariableDeclaration","scope":6930,"src":"9315:28:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6882,"name":"uint256","nodeType":"ElementaryTypeName","src":"9315:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6883,"nodeType":"ArrayTypeName","src":"9315:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6892,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"id":6885,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"9346:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6888,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6886,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"9353:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9353:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9346:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6889,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9367:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"9346:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6891,"indexExpression":{"id":6890,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"9381:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9346:44:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9315:75:23"},{"expression":{"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6893,"name":"userLocks2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"9400:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6895,"indexExpression":{"id":6894,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"9411:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9400:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6896,"name":"userLocks2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"9421:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6901,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6897,"name":"userLocks2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"9432:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9443:6:23","memberName":"length","nodeType":"MemberAccess","src":"9432:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9452:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9432:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9421:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9400:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6903,"nodeType":"ExpressionStatement","src":"9400:54:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6904,"name":"userLocks2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"9464:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9475:3:23","memberName":"pop","nodeType":"MemberAccess","src":"9464:14:23","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9464:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6908,"nodeType":"ExpressionStatement","src":"9464:16:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6909,"name":"userLocks2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"9495:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9506:6:23","memberName":"length","nodeType":"MemberAccess","src":"9495:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9516:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9495:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6923,"nodeType":"IfStatement","src":"9491:103:23","trueBody":{"id":6922,"nodeType":"Block","src":"9519:75:23","statements":[{"expression":{"arguments":[{"id":6919,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"9574:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":6913,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"9533:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6916,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6914,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"9540:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9540:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9533:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9554:12:23","memberName":"lockedTokens","nodeType":"MemberAccess","referencedDeclaration":6168,"src":"9533:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":6918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9567:6:23","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"9533:40:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2244_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9533:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6921,"nodeType":"ExpressionStatement","src":"9533:50:23"}]}},{"expression":{"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6924,"name":"transferredLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"9604:15:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9620:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6186,"src":"9604:21:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6927,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"9628:9:23","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"9604:33:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6929,"nodeType":"ExpressionStatement","src":"9604:33:23"}]},"documentation":{"id":6793,"nodeType":"StructuredDocumentation","src":"8383:93:23","text":" @dev transfer a lock to a new owner, e.g. presale project -> project owner"},"functionSelector":"bef497fd","id":6931,"implemented":true,"kind":"function","modifiers":[],"name":"transferLockOwnership","nameLocation":"8490:21:23","nodeType":"FunctionDefinition","parameters":{"id":6802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6795,"mutability":"mutable","name":"_lpToken","nameLocation":"8529:8:23","nodeType":"VariableDeclaration","scope":6931,"src":"8521:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6794,"name":"address","nodeType":"ElementaryTypeName","src":"8521:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6797,"mutability":"mutable","name":"_index","nameLocation":"8555:6:23","nodeType":"VariableDeclaration","scope":6931,"src":"8547:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"8547:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6799,"mutability":"mutable","name":"_lockID","nameLocation":"8579:7:23","nodeType":"VariableDeclaration","scope":6931,"src":"8571:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6798,"name":"uint256","nodeType":"ElementaryTypeName","src":"8571:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6801,"mutability":"mutable","name":"_newOwner","nameLocation":"8612:9:23","nodeType":"VariableDeclaration","scope":6931,"src":"8596:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6800,"name":"address","nodeType":"ElementaryTypeName","src":"8596:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"8511:116:23"},"returnParameters":{"id":6803,"nodeType":"ParameterList","parameters":[],"src":"8649:0:23"},"scope":7270,"src":"8481:1163:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7103,"nodeType":"Block","src":"9817:1086:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6948,"name":"migrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"9839:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}],"id":6947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9831:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6946,"name":"address","nodeType":"ElementaryTypeName","src":"9831:7:23","typeDescriptions":{}}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9860:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9852:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6950,"name":"address","nodeType":"ElementaryTypeName","src":"9852:7:23","typeDescriptions":{}}},"id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9831:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6959,"nodeType":"IfStatement","src":"9827:85:23","trueBody":{"id":6958,"nodeType":"Block","src":"9864:48:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6955,"name":"MigratorNotSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"9885:14:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9885:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6957,"nodeType":"RevertStatement","src":"9878:23:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6960,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"9926:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9937:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9926:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6967,"nodeType":"IfStatement","src":"9922:65:23","trueBody":{"id":6966,"nodeType":"Block","src":"9940:47:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6963,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6145,"src":"9961:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9961:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6965,"nodeType":"RevertStatement","src":"9954:22:23"}]}},{"assignments":[6969],"declarations":[{"constant":false,"id":6969,"mutability":"mutable","name":"lockID","nameLocation":"10005:6:23","nodeType":"VariableDeclaration","scope":7103,"src":"9997:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6968,"name":"uint256","nodeType":"ElementaryTypeName","src":"9997:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6982,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"baseExpression":{"id":6970,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"10014:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":6973,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6971,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"10021:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10021:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10014:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":6974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10035:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"10014:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":6979,"indexExpression":{"arguments":[{"id":6977,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"10057:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10049:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6975,"name":"address","nodeType":"ElementaryTypeName","src":"10049:7:23","typeDescriptions":{}}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10049:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10014:53:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6981,"indexExpression":{"id":6980,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"10068:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10014:61:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9997:78:23"},{"assignments":[6985],"declarations":[{"constant":false,"id":6985,"mutability":"mutable","name":"userLock","nameLocation":"10103:8:23","nodeType":"VariableDeclaration","scope":7103,"src":"10085:26:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"},"typeName":{"id":6984,"nodeType":"UserDefinedTypeName","pathNode":{"id":6983,"name":"TokenLock","nameLocations":["10085:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"10085:9:23"},"referencedDeclaration":6187,"src":"10085:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"visibility":"internal"}],"id":6994,"initialValue":{"baseExpression":{"baseExpression":{"id":6986,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"10114:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":6991,"indexExpression":{"arguments":[{"id":6989,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"10133:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10125:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6987,"name":"address","nodeType":"ElementaryTypeName","src":"10125:7:23","typeDescriptions":{}}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10125:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10114:29:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":6993,"indexExpression":{"id":6992,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"10144:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10114:37:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage","typeString":"struct LiquidityLocker.TokenLock storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10085:66:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6995,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"10166:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6996,"name":"_lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"10176:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6998,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10187:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":6999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10196:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6186,"src":"10187:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7000,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"10205:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10205:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10187:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10166:51:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7008,"nodeType":"IfStatement","src":"10162:103:23","trueBody":{"id":7007,"nodeType":"Block","src":"10219:46:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7004,"name":"LockMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"10240:12:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10240:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7006,"nodeType":"RevertStatement","src":"10233:21:23"}]}},{"expression":{"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7009,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10275:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10284:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"10275:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7012,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10293:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10302:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"10293:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7014,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"10311:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10293:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10275:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7017,"nodeType":"ExpressionStatement","src":"10275:43:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7018,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10363:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10372:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"10363:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10382:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10363:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7073,"nodeType":"IfStatement","src":"10359:360:23","trueBody":{"id":7072,"nodeType":"Block","src":"10385:334:23","statements":[{"assignments":[7026],"declarations":[{"constant":false,"id":7026,"mutability":"mutable","name":"userLocks","nameLocation":"10417:9:23","nodeType":"VariableDeclaration","scope":7072,"src":"10399:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7024,"name":"uint256","nodeType":"ElementaryTypeName","src":"10399:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7025,"nodeType":"ArrayTypeName","src":"10399:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7037,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"id":7027,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"10429:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":7030,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7028,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"10436:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10436:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10429:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":7031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10450:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"10429:34:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7036,"indexExpression":{"arguments":[{"id":7034,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"10472:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":7033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10464:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7032,"name":"address","nodeType":"ElementaryTypeName","src":"10464:7:23","typeDescriptions":{}}},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10464:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10429:53:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10399:83:23"},{"expression":{"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7038,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"10496:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":7040,"indexExpression":{"id":7039,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"10506:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10496:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7041,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"10516:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":7046,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7042,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"10526:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10536:6:23","memberName":"length","nodeType":"MemberAccess","src":"10526:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10526:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10516:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10496:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7048,"nodeType":"ExpressionStatement","src":"10496:51:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7049,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"10561:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10571:3:23","memberName":"pop","nodeType":"MemberAccess","src":"10561:13:23","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer)"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10561:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7053,"nodeType":"ExpressionStatement","src":"10561:15:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7054,"name":"userLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"10594:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10604:6:23","memberName":"length","nodeType":"MemberAccess","src":"10594:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10594:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7071,"nodeType":"IfStatement","src":"10590:119:23","trueBody":{"id":7070,"nodeType":"Block","src":"10617:92:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":7066,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"10684:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":7065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10676:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7064,"name":"address","nodeType":"ElementaryTypeName","src":"10676:7:23","typeDescriptions":{}}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10676:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":7058,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"10635:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":7061,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7059,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"10642:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10642:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10635:20:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":7062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10656:12:23","memberName":"lockedTokens","nodeType":"MemberAccess","referencedDeclaration":6168,"src":"10635:33:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10669:6:23","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2298,"src":"10635:40:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$2244_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10635:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7069,"nodeType":"ExpressionStatement","src":"10635:59:23"}]}}]}},{"expression":{"arguments":[{"arguments":[{"id":7080,"name":"migrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"10762:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}],"id":7079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10754:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7078,"name":"address","nodeType":"ElementaryTypeName","src":"10754:7:23","typeDescriptions":{}}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10754:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7082,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"10773:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7075,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"10736:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":7074,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10729:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$950_$","typeString":"type(contract IERC20)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10729:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10746:7:23","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":937,"src":"10729:24:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10729:52:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7084,"nodeType":"ExpressionStatement","src":"10729:52:23"},{"expression":{"arguments":[{"arguments":[{"id":7090,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"10816:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}],"id":7089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10808:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7088,"name":"address","nodeType":"ElementaryTypeName","src":"10808:7:23","typeDescriptions":{}}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10808:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7092,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"10827:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7093,"name":"userLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10836:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10845:10:23","memberName":"unlockDate","nodeType":"MemberAccess","referencedDeclaration":6182,"src":"10836:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":7095,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"10857:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10857:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7097,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10871:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10877:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"10871:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10889:6:23","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"10871:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7085,"name":"migrator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"10791:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV2Migrator_$2852","typeString":"contract IUniswapV2Migrator"}},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10800:7:23","memberName":"migrate","nodeType":"MemberAccess","referencedDeclaration":2851,"src":"10791:16:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,address,uint256) external"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10791:105:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7102,"nodeType":"ExpressionStatement","src":"10791:105:23"}]},"documentation":{"id":6932,"nodeType":"StructuredDocumentation","src":"9650:56:23","text":" @dev migrates liquidity to uniswap v3"},"functionSelector":"ee424278","id":7104,"implemented":true,"kind":"function","modifiers":[{"id":6944,"kind":"modifierInvocation","modifierName":{"id":6943,"name":"nonReentrant","nameLocations":["9804:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"9804:12:23"},"nodeType":"ModifierInvocation","src":"9804:12:23"}],"name":"migrate","nameLocation":"9720:7:23","nodeType":"FunctionDefinition","parameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"_lpToken","nameLocation":"9735:8:23","nodeType":"VariableDeclaration","scope":7104,"src":"9728:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"},"typeName":{"id":6934,"nodeType":"UserDefinedTypeName","pathNode":{"id":6933,"name":"IERC20","nameLocations":["9728:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":950,"src":"9728:6:23"},"referencedDeclaration":950,"src":"9728:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$950","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":6937,"mutability":"mutable","name":"_index","nameLocation":"9753:6:23","nodeType":"VariableDeclaration","scope":7104,"src":"9745:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6936,"name":"uint256","nodeType":"ElementaryTypeName","src":"9745:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6939,"mutability":"mutable","name":"_lockID","nameLocation":"9769:7:23","nodeType":"VariableDeclaration","scope":7104,"src":"9761:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6938,"name":"uint256","nodeType":"ElementaryTypeName","src":"9761:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6941,"mutability":"mutable","name":"_amount","nameLocation":"9786:7:23","nodeType":"VariableDeclaration","scope":7104,"src":"9778:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6940,"name":"uint256","nodeType":"ElementaryTypeName","src":"9778:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9727:67:23"},"returnParameters":{"id":6945,"nodeType":"ParameterList","parameters":[],"src":"9817:0:23"},"scope":7270,"src":"9711:1192:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7117,"nodeType":"Block","src":"11114:51:23","statements":[{"expression":{"expression":{"baseExpression":{"id":7112,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"11131:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":7114,"indexExpression":{"id":7113,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"11142:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11131:20:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11152:6:23","memberName":"length","nodeType":"MemberAccess","src":"11131:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7111,"id":7116,"nodeType":"Return","src":"11124:34:23"}]},"documentation":{"id":7105,"nodeType":"StructuredDocumentation","src":"10909:121:23","text":" @dev Get the number of locks for a specific token.\n @param _lpToken The address of the LP token."},"functionSelector":"1f2a1d2f","id":7118,"implemented":true,"kind":"function","modifiers":[],"name":"getNumLocksForToken","nameLocation":"11044:19:23","nodeType":"FunctionDefinition","parameters":{"id":7108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7107,"mutability":"mutable","name":"_lpToken","nameLocation":"11072:8:23","nodeType":"VariableDeclaration","scope":7118,"src":"11064:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7106,"name":"address","nodeType":"ElementaryTypeName","src":"11064:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11063:18:23"},"returnParameters":{"id":7111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7118,"src":"11105:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7109,"name":"uint256","nodeType":"ElementaryTypeName","src":"11105:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11104:9:23"},"scope":7270,"src":"11035:130:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7128,"nodeType":"Block","src":"11299:46:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7124,"name":"_lockedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"11316:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11330:6:23","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"11316:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2244_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11316:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7123,"id":7127,"nodeType":"Return","src":"11309:29:23"}]},"documentation":{"id":7119,"nodeType":"StructuredDocumentation","src":"11171:61:23","text":" @dev Get the total number of locked tokens"},"functionSelector":"783451e8","id":7129,"implemented":true,"kind":"function","modifiers":[],"name":"getNumLockedTokens","nameLocation":"11246:18:23","nodeType":"FunctionDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[],"src":"11264:2:23"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7129,"src":"11290:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7121,"name":"uint256","nodeType":"ElementaryTypeName","src":"11290:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11289:9:23"},"scope":7270,"src":"11237:108:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7142,"nodeType":"Block","src":"11550:48:23","statements":[{"expression":{"arguments":[{"id":7139,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"11584:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7137,"name":"_lockedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"11567:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11581:2:23","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"11567:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2244_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11567:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7136,"id":7141,"nodeType":"Return","src":"11560:31:23"}]},"documentation":{"id":7130,"nodeType":"StructuredDocumentation","src":"11351:115:23","text":" @dev Get the address of a locked token at an index.\n @param _index The index of the token."},"functionSelector":"14dd79a3","id":7143,"implemented":true,"kind":"function","modifiers":[],"name":"getLockedTokenAtIndex","nameLocation":"11480:21:23","nodeType":"FunctionDefinition","parameters":{"id":7133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7132,"mutability":"mutable","name":"_index","nameLocation":"11510:6:23","nodeType":"VariableDeclaration","scope":7143,"src":"11502:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7131,"name":"uint256","nodeType":"ElementaryTypeName","src":"11502:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11501:16:23"},"returnParameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7143,"src":"11541:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7134,"name":"address","nodeType":"ElementaryTypeName","src":"11541:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11540:9:23"},"scope":7270,"src":"11471:127:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7163,"nodeType":"Block","src":"11800:93:23","statements":[{"assignments":[7153],"declarations":[{"constant":false,"id":7153,"mutability":"mutable","name":"user","nameLocation":"11823:4:23","nodeType":"VariableDeclaration","scope":7163,"src":"11810:17:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"},"typeName":{"id":7152,"nodeType":"UserDefinedTypeName","pathNode":{"id":7151,"name":"User","nameLocations":["11810:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":6174,"src":"11810:4:23"},"referencedDeclaration":6174,"src":"11810:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"}},"visibility":"internal"}],"id":7157,"initialValue":{"baseExpression":{"id":7154,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"11830:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":7156,"indexExpression":{"id":7155,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"11837:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11830:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11810:33:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":7158,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"11860:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User storage pointer"}},"id":7159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11865:12:23","memberName":"lockedTokens","nodeType":"MemberAccess","referencedDeclaration":6168,"src":"11860:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11878:6:23","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2340,"src":"11860:24:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2244_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7150,"id":7162,"nodeType":"Return","src":"11853:33:23"}]},"documentation":{"id":7144,"nodeType":"StructuredDocumentation","src":"11604:112:23","text":" @dev Get the number of tokens a user has locked.\n @param _user The address of the user."},"functionSelector":"a3969815","id":7164,"implemented":true,"kind":"function","modifiers":[],"name":"getUserNumLockedTokens","nameLocation":"11730:22:23","nodeType":"FunctionDefinition","parameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7146,"mutability":"mutable","name":"_user","nameLocation":"11761:5:23","nodeType":"VariableDeclaration","scope":7164,"src":"11753:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7145,"name":"address","nodeType":"ElementaryTypeName","src":"11753:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11752:15:23"},"returnParameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7164,"src":"11791:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7148,"name":"uint256","nodeType":"ElementaryTypeName","src":"11791:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11790:9:23"},"scope":7270,"src":"11721:172:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7187,"nodeType":"Block","src":"12168:95:23","statements":[{"assignments":[7176],"declarations":[{"constant":false,"id":7176,"mutability":"mutable","name":"user","nameLocation":"12191:4:23","nodeType":"VariableDeclaration","scope":7187,"src":"12178:17:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"},"typeName":{"id":7175,"nodeType":"UserDefinedTypeName","pathNode":{"id":7174,"name":"User","nameLocations":["12178:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":6174,"src":"12178:4:23"},"referencedDeclaration":6174,"src":"12178:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"}},"visibility":"internal"}],"id":7180,"initialValue":{"baseExpression":{"id":7177,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"12198:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":7179,"indexExpression":{"id":7178,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"12205:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12198:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12178:33:23"},{"expression":{"arguments":[{"id":7184,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"12249:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7181,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7176,"src":"12228:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User storage pointer"}},"id":7182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12233:12:23","memberName":"lockedTokens","nodeType":"MemberAccess","referencedDeclaration":6168,"src":"12228:17:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2244_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":7183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12246:2:23","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2367,"src":"12228:20:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$2244_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$2244_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12228:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7173,"id":7186,"nodeType":"Return","src":"12221:35:23"}]},"documentation":{"id":7165,"nodeType":"StructuredDocumentation","src":"11899:166:23","text":" @dev Get the token address a user has locked at an index.\n @param _user The address of the user.\n @param _index The index of the token."},"functionSelector":"903df806","id":7188,"implemented":true,"kind":"function","modifiers":[],"name":"getUserLockedTokenAtIndex","nameLocation":"12079:25:23","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7167,"mutability":"mutable","name":"_user","nameLocation":"12113:5:23","nodeType":"VariableDeclaration","scope":7188,"src":"12105:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7166,"name":"address","nodeType":"ElementaryTypeName","src":"12105:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7169,"mutability":"mutable","name":"_index","nameLocation":"12128:6:23","nodeType":"VariableDeclaration","scope":7188,"src":"12120:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7168,"name":"uint256","nodeType":"ElementaryTypeName","src":"12120:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12104:31:23"},"returnParameters":{"id":7173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7188,"src":"12159:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7171,"name":"address","nodeType":"ElementaryTypeName","src":"12159:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12158:9:23"},"scope":7270,"src":"12070:193:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7211,"nodeType":"Block","src":"12547:102:23","statements":[{"assignments":[7200],"declarations":[{"constant":false,"id":7200,"mutability":"mutable","name":"user","nameLocation":"12570:4:23","nodeType":"VariableDeclaration","scope":7211,"src":"12557:17:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"},"typeName":{"id":7199,"nodeType":"UserDefinedTypeName","pathNode":{"id":7198,"name":"User","nameLocations":["12557:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":6174,"src":"12557:4:23"},"referencedDeclaration":6174,"src":"12557:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User"}},"visibility":"internal"}],"id":7204,"initialValue":{"baseExpression":{"id":7201,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"12577:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":7203,"indexExpression":{"id":7202,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"12584:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12577:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12557:33:23"},{"expression":{"expression":{"baseExpression":{"expression":{"id":7205,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"12607:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage_ptr","typeString":"struct LiquidityLocker.User storage pointer"}},"id":7206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12612:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"12607:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7208,"indexExpression":{"id":7207,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"12626:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12607:28:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12636:6:23","memberName":"length","nodeType":"MemberAccess","src":"12607:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7197,"id":7210,"nodeType":"Return","src":"12600:42:23"}]},"documentation":{"id":7189,"nodeType":"StructuredDocumentation","src":"12269:175:23","text":" @dev Get the number of locks for a specific user and token.\n @param _user The address of the user.\n @param _lpToken The address of the LP token."},"functionSelector":"a69d9c4f","id":7212,"implemented":true,"kind":"function","modifiers":[],"name":"getUserNumLocksForToken","nameLocation":"12458:23:23","nodeType":"FunctionDefinition","parameters":{"id":7194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7191,"mutability":"mutable","name":"_user","nameLocation":"12490:5:23","nodeType":"VariableDeclaration","scope":7212,"src":"12482:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7190,"name":"address","nodeType":"ElementaryTypeName","src":"12482:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7193,"mutability":"mutable","name":"_lpToken","nameLocation":"12505:8:23","nodeType":"VariableDeclaration","scope":7212,"src":"12497:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7192,"name":"address","nodeType":"ElementaryTypeName","src":"12497:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12481:33:23"},"returnParameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7212,"src":"12538:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7195,"name":"uint256","nodeType":"ElementaryTypeName","src":"12538:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12537:9:23"},"scope":7270,"src":"12449:200:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7268,"nodeType":"Block","src":"13328:366:23","statements":[{"assignments":[7235],"declarations":[{"constant":false,"id":7235,"mutability":"mutable","name":"lockID","nameLocation":"13346:6:23","nodeType":"VariableDeclaration","scope":7268,"src":"13338:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7234,"name":"uint256","nodeType":"ElementaryTypeName","src":"13338:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7244,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"baseExpression":{"id":7236,"name":"_users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"13355:6:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6174_storage_$","typeString":"mapping(address => struct LiquidityLocker.User storage ref)"}},"id":7238,"indexExpression":{"id":7237,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"13362:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13355:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6174_storage","typeString":"struct LiquidityLocker.User storage ref"}},"id":7239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13369:13:23","memberName":"locksForToken","nodeType":"MemberAccess","referencedDeclaration":6173,"src":"13355:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7241,"indexExpression":{"id":7240,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"13383:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13355:37:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7243,"indexExpression":{"id":7242,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7219,"src":"13393:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13355:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13338:62:23"},{"assignments":[7247],"declarations":[{"constant":false,"id":7247,"mutability":"mutable","name":"tokenLock","nameLocation":"13428:9:23","nodeType":"VariableDeclaration","scope":7268,"src":"13410:27:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"},"typeName":{"id":7246,"nodeType":"UserDefinedTypeName","pathNode":{"id":7245,"name":"TokenLock","nameLocations":["13410:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":6187,"src":"13410:9:23"},"referencedDeclaration":6187,"src":"13410:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock"}},"visibility":"internal"}],"id":7253,"initialValue":{"baseExpression":{"baseExpression":{"id":7248,"name":"tokenLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"13440:10:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage_$","typeString":"mapping(address => struct LiquidityLocker.TokenLock storage ref[] storage ref)"}},"id":7250,"indexExpression":{"id":7249,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"13451:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13440:20:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenLock_$6187_storage_$dyn_storage","typeString":"struct LiquidityLocker.TokenLock storage ref[] storage ref"}},"id":7252,"indexExpression":{"id":7251,"name":"lockID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"13461:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13440:28:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage","typeString":"struct LiquidityLocker.TokenLock storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13410:58:23"},{"expression":{"components":[{"expression":{"id":7254,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"13499:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7255,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13509:8:23","memberName":"lockDate","nodeType":"MemberAccess","referencedDeclaration":6176,"src":"13499:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7256,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"13531:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13541:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":6178,"src":"13531:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7258,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"13561:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13571:13:23","memberName":"initialAmount","nodeType":"MemberAccess","referencedDeclaration":6180,"src":"13561:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7260,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"13598:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13608:10:23","memberName":"unlockDate","nodeType":"MemberAccess","referencedDeclaration":6182,"src":"13598:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7262,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"13632:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13642:6:23","memberName":"lockID","nodeType":"MemberAccess","referencedDeclaration":6184,"src":"13632:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7264,"name":"tokenLock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7247,"src":"13662:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_TokenLock_$6187_storage_ptr","typeString":"struct LiquidityLocker.TokenLock storage pointer"}},"id":7265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13672:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6186,"src":"13662:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13485:202:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,address)"}},"functionReturnParameters":7233,"id":7267,"nodeType":"Return","src":"13478:209:23"}]},"documentation":{"id":7213,"nodeType":"StructuredDocumentation","src":"12655:448:23","text":" @dev Get the lock for a specific user and token at an index.\n @param _user The address of the user.\n @param _lpToken The address of the LP token.\n @param _index The index of the lock.\n @return The lock date.\n @return Amount of tokens locked.\n @return Initial amount of tokens locked.\n @return Unlock date of the lock.\n @return Lock ID of the lock.\n @return Owner of the lock."},"functionSelector":"d4ff493f","id":7269,"implemented":true,"kind":"function","modifiers":[],"name":"getUserLockForTokenAtIndex","nameLocation":"13117:26:23","nodeType":"FunctionDefinition","parameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7215,"mutability":"mutable","name":"_user","nameLocation":"13161:5:23","nodeType":"VariableDeclaration","scope":7269,"src":"13153:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7214,"name":"address","nodeType":"ElementaryTypeName","src":"13153:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7217,"mutability":"mutable","name":"_lpToken","nameLocation":"13184:8:23","nodeType":"VariableDeclaration","scope":7269,"src":"13176:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7216,"name":"address","nodeType":"ElementaryTypeName","src":"13176:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7219,"mutability":"mutable","name":"_index","nameLocation":"13210:6:23","nodeType":"VariableDeclaration","scope":7269,"src":"13202:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7218,"name":"uint256","nodeType":"ElementaryTypeName","src":"13202:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13143:79:23"},"returnParameters":{"id":7233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7269,"src":"13270:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7221,"name":"uint256","nodeType":"ElementaryTypeName","src":"13270:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7269,"src":"13279:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7223,"name":"uint256","nodeType":"ElementaryTypeName","src":"13279:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7269,"src":"13288:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7225,"name":"uint256","nodeType":"ElementaryTypeName","src":"13288:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7269,"src":"13297:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7227,"name":"uint256","nodeType":"ElementaryTypeName","src":"13297:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7269,"src":"13306:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7229,"name":"uint256","nodeType":"ElementaryTypeName","src":"13306:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7269,"src":"13315:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7231,"name":"address","nodeType":"ElementaryTypeName","src":"13315:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13269:54:23"},"scope":7270,"src":"13108:586:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7271,"src":"1000:12696:23","usedErrors":[6145,6147,6149,6151,6153,6155,6159,7286],"usedEvents":[13,6210,6222]}],"src":"36:13661:23"},"id":23},"src/lib/Common.sol":{"ast":{"absolutePath":"src/lib/Common.sol","exportedSymbols":{"Common":[7282]},"id":7283,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":7272,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"36:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"Common","contractDependencies":[],"contractKind":"library","documentation":{"id":7273,"nodeType":"StructuredDocumentation","src":"62:82:24","text":" @title Common\n @dev Common items used across the CoinGenie contracts."},"fullyImplemented":true,"id":7282,"linearizedBaseContracts":[7282],"name":"Common","nameLocation":"153:6:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Common.TokenConfigProperties","documentation":{"id":7274,"nodeType":"StructuredDocumentation","src":"166:47:24","text":"@dev set of features supported by the token"},"id":7281,"members":[{"constant":false,"id":7276,"mutability":"mutable","name":"isBurnable","nameLocation":"262:10:24","nodeType":"VariableDeclaration","scope":7281,"src":"257:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7275,"name":"bool","nodeType":"ElementaryTypeName","src":"257:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7278,"mutability":"mutable","name":"isPausable","nameLocation":"287:10:24","nodeType":"VariableDeclaration","scope":7281,"src":"282:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7277,"name":"bool","nodeType":"ElementaryTypeName","src":"282:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7280,"mutability":"mutable","name":"isDeflationary","nameLocation":"312:14:24","nodeType":"VariableDeclaration","scope":7281,"src":"307:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7279,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TokenConfigProperties","nameLocation":"225:21:24","nodeType":"StructDefinition","scope":7282,"src":"218:115:24","visibility":"public"}],"scope":7283,"src":"145:190:24","usedErrors":[],"usedEvents":[]}],"src":"36:300:24"},"id":24},"src/lib/SafeTransfer.sol":{"ast":{"absolutePath":"src/lib/SafeTransfer.sol","exportedSymbols":{"SafeTransfer":[7396]},"id":7397,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":7284,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"36:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeTransfer","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":7396,"linearizedBaseContracts":[7396],"name":"SafeTransfer","nameLocation":"70:12:25","nodeType":"ContractDefinition","nodes":[{"errorSelector":"90b8ec18","id":7286,"name":"TransferFailed","nameLocation":"95:14:25","nodeType":"ErrorDefinition","parameters":{"id":7285,"nodeType":"ParameterList","parameters":[],"src":"109:2:25"},"src":"89:23:25"},{"body":{"id":7295,"nodeType":"Block","src":"342:509:25","statements":[{"AST":{"nodeType":"YulBlock","src":"417:428:25","statements":[{"body":{"nodeType":"YulBlock","src":"544:291:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"722:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"728:10:25","type":"","value":"0xb12d13eb"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"715:6:25"},"nodeType":"YulFunctionCall","src":"715:24:25"},"nodeType":"YulExpressionStatement","src":"715:24:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"810:4:25","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"816:4:25","type":"","value":"0x04"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"803:6:25"},"nodeType":"YulFunctionCall","src":"803:18:25"},"nodeType":"YulExpressionStatement","src":"803:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"512:3:25"},"nodeType":"YulFunctionCall","src":"512:5:25"},{"name":"to","nodeType":"YulIdentifier","src":"519:2:25"},{"name":"amount","nodeType":"YulIdentifier","src":"523:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"531:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"534:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"537:1:25","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"540:1:25","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"507:4:25"},"nodeType":"YulFunctionCall","src":"507:35:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"500:6:25"},"nodeType":"YulFunctionCall","src":"500:43:25"},"nodeType":"YulIf","src":"497:338:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":7291,"isOffset":false,"isSlot":false,"src":"523:6:25","valueSize":1},{"declaration":7289,"isOffset":false,"isSlot":false,"src":"519:2:25","valueSize":1}],"id":7294,"nodeType":"InlineAssembly","src":"408:437:25"}]},"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"118:157:25","text":" @dev Sends `amount` (in wei) ETH to `to`.\n @param to The address to send the ETH to.\n @param amount The amount of ETH to send."},"id":7296,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"289:15:25","nodeType":"FunctionDefinition","parameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"mutability":"mutable","name":"to","nameLocation":"313:2:25","nodeType":"VariableDeclaration","scope":7296,"src":"305:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7288,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7291,"mutability":"mutable","name":"amount","nameLocation":"325:6:25","nodeType":"VariableDeclaration","scope":7296,"src":"317:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7290,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"304:28:25"},"returnParameters":{"id":7293,"nodeType":"ParameterList","parameters":[],"src":"342:0:25"},"scope":7396,"src":"280:571:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7303,"nodeType":"Block","src":"1108:409:25","statements":[{"AST":{"nodeType":"YulBlock","src":"1183:328:25","statements":[{"body":{"nodeType":"YulBlock","src":"1222:279:25","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1388:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1394:10:25","type":"","value":"0xd92e233d"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1381:6:25"},"nodeType":"YulFunctionCall","src":"1381:24:25"},"nodeType":"YulExpressionStatement","src":"1381:24:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1476:4:25","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1482:4:25","type":"","value":"0x04"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1469:6:25"},"nodeType":"YulFunctionCall","src":"1469:18:25"},"nodeType":"YulExpressionStatement","src":"1469:18:25"}]},"condition":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1211:2:25","type":"","value":"96"},{"name":"addr","nodeType":"YulIdentifier","src":"1215:4:25"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1207:3:25"},"nodeType":"YulFunctionCall","src":"1207:13:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1200:6:25"},"nodeType":"YulFunctionCall","src":"1200:21:25"},"nodeType":"YulIf","src":"1197:304:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":7299,"isOffset":false,"isSlot":false,"src":"1215:4:25","valueSize":1}],"id":7302,"nodeType":"InlineAssembly","src":"1174:337:25"}]},"documentation":{"id":7297,"nodeType":"StructuredDocumentation","src":"857:193:25","text":" @notice Validates that the address is not the zero address using assembly.\n @dev Reverts if the address is the zero address.\n @param addr The address to validate."},"id":7304,"implemented":true,"kind":"function","modifiers":[],"name":"validateAddress","nameLocation":"1064:15:25","nodeType":"FunctionDefinition","parameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"addr","nameLocation":"1088:4:25","nodeType":"VariableDeclaration","scope":7304,"src":"1080:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7298,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1079:14:25"},"returnParameters":{"id":7301,"nodeType":"ParameterList","parameters":[],"src":"1108:0:25"},"scope":7396,"src":"1055:462:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7350,"nodeType":"Block","src":"2020:648:25","statements":[{"assignments":[7319,7321],"declarations":[{"constant":false,"id":7319,"mutability":"mutable","name":"success","nameLocation":"2036:7:25","nodeType":"VariableDeclaration","scope":7350,"src":"2031:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7318,"name":"bool","nodeType":"ElementaryTypeName","src":"2031:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7321,"mutability":"mutable","name":"data","nameLocation":"2058:4:25","nodeType":"VariableDeclaration","scope":7350,"src":"2045:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7320,"name":"bytes","nodeType":"ElementaryTypeName","src":"2045:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7332,"initialValue":{"arguments":[{"arguments":[{"hexValue":"7472616e7366657246726f6d28616464726573732c616464726573732c75696e7432353629","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2176:39:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_23b872dd7302113369cda2901243429419bec145408fa8b352b3dd92b66c680b","typeString":"literal_string \"transferFrom(address,address,uint256)\""},"value":"transferFrom(address,address,uint256)"},{"id":7327,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"2217:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7328,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"2223:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7329,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"2227:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_23b872dd7302113369cda2901243429419bec145408fa8b352b3dd92b66c680b","typeString":"literal_string \"transferFrom(address,address,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7324,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2152:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2156:19:25","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"2152:23:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:82:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7322,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"2134:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2147:4:25","memberName":"call","nodeType":"MemberAccess","src":"2134:17:25","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2134:101:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2030:205:25"},{"condition":{"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2249:8:25","subExpression":{"id":7333,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"2250:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7347,"nodeType":"IfStatement","src":"2245:395:25","trueBody":{"id":7346,"nodeType":"Block","src":"2259:381:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7335,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"2277:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2282:6:25","memberName":"length","nodeType":"MemberAccess","src":"2277:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2277:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7344,"nodeType":"Block","src":"2574:56:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7341,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"2599:14:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7343,"nodeType":"RevertStatement","src":"2592:23:25"}]},"id":7345,"nodeType":"IfStatement","src":"2273:357:25","trueBody":{"id":7340,"nodeType":"Block","src":"2295:273:25","statements":[{"AST":{"nodeType":"YulBlock","src":"2421:133:25","statements":[{"nodeType":"YulVariableDeclaration","src":"2443:34:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2472:4:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2466:5:25"},"nodeType":"YulFunctionCall","src":"2466:11:25"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"2447:15:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2509:2:25","type":"","value":"32"},{"name":"data","nodeType":"YulIdentifier","src":"2513:4:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2505:3:25"},"nodeType":"YulFunctionCall","src":"2505:13:25"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"2520:15:25"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2498:6:25"},"nodeType":"YulFunctionCall","src":"2498:38:25"},"nodeType":"YulExpressionStatement","src":"2498:38:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":7321,"isOffset":false,"isSlot":false,"src":"2472:4:25","valueSize":1},{"declaration":7321,"isOffset":false,"isSlot":false,"src":"2513:4:25","valueSize":1}],"id":7339,"nodeType":"InlineAssembly","src":"2412:142:25"}]}}]}},{"expression":{"hexValue":"74727565","id":7348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2657:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7317,"id":7349,"nodeType":"Return","src":"2650:11:25"}]},"documentation":{"id":7305,"nodeType":"StructuredDocumentation","src":"1523:378:25","text":" @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\n @dev Reverts if the ERC20 transfer fails.\n @param tokenAddress The address of the ERC20 token.\n @param from The address to transfer the tokens from.\n @param to The address to transfer the tokens to.\n @param amount The amount of tokens to transfer."},"id":7351,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1915:16:25","nodeType":"FunctionDefinition","parameters":{"id":7314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7307,"mutability":"mutable","name":"tokenAddress","nameLocation":"1940:12:25","nodeType":"VariableDeclaration","scope":7351,"src":"1932:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7306,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7309,"mutability":"mutable","name":"from","nameLocation":"1962:4:25","nodeType":"VariableDeclaration","scope":7351,"src":"1954:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7308,"name":"address","nodeType":"ElementaryTypeName","src":"1954:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7311,"mutability":"mutable","name":"to","nameLocation":"1976:2:25","nodeType":"VariableDeclaration","scope":7351,"src":"1968:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7310,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7313,"mutability":"mutable","name":"amount","nameLocation":"1988:6:25","nodeType":"VariableDeclaration","scope":7351,"src":"1980:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1980:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1931:64:25"},"returnParameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7351,"src":"2014:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7315,"name":"bool","nodeType":"ElementaryTypeName","src":"2014:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2013:6:25"},"scope":7396,"src":"1906:762:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7394,"nodeType":"Block","src":"3082:630:25","statements":[{"assignments":[7364,7366],"declarations":[{"constant":false,"id":7364,"mutability":"mutable","name":"success","nameLocation":"3098:7:25","nodeType":"VariableDeclaration","scope":7394,"src":"3093:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7363,"name":"bool","nodeType":"ElementaryTypeName","src":"3093:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7366,"mutability":"mutable","name":"data","nameLocation":"3120:4:25","nodeType":"VariableDeclaration","scope":7394,"src":"3107:17:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7365,"name":"bytes","nodeType":"ElementaryTypeName","src":"3107:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7376,"initialValue":{"arguments":[{"arguments":[{"hexValue":"7472616e7366657228616464726573732c75696e7432353629","id":7371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3238:27:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b","typeString":"literal_string \"transfer(address,uint256)\""},"value":"transfer(address,uint256)"},{"id":7372,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"3267:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7373,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"3271:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b","typeString":"literal_string \"transfer(address,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7369,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3214:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3218:19:25","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"3214:23:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7367,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"3196:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3209:4:25","memberName":"call","nodeType":"MemberAccess","src":"3196:17:25","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:83:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3092:187:25"},{"condition":{"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3293:8:25","subExpression":{"id":7377,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"3294:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7391,"nodeType":"IfStatement","src":"3289:395:25","trueBody":{"id":7390,"nodeType":"Block","src":"3303:381:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7379,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"3321:4:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3326:6:25","memberName":"length","nodeType":"MemberAccess","src":"3321:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3336:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3321:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7388,"nodeType":"Block","src":"3618:56:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7385,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"3643:14:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3643:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7387,"nodeType":"RevertStatement","src":"3636:23:25"}]},"id":7389,"nodeType":"IfStatement","src":"3317:357:25","trueBody":{"id":7384,"nodeType":"Block","src":"3339:273:25","statements":[{"AST":{"nodeType":"YulBlock","src":"3465:133:25","statements":[{"nodeType":"YulVariableDeclaration","src":"3487:34:25","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3516:4:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3510:5:25"},"nodeType":"YulFunctionCall","src":"3510:11:25"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"3491:15:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3553:2:25","type":"","value":"32"},{"name":"data","nodeType":"YulIdentifier","src":"3557:4:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:25"},"nodeType":"YulFunctionCall","src":"3549:13:25"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"3564:15:25"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3542:6:25"},"nodeType":"YulFunctionCall","src":"3542:38:25"},"nodeType":"YulExpressionStatement","src":"3542:38:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":7366,"isOffset":false,"isSlot":false,"src":"3516:4:25","valueSize":1},{"declaration":7366,"isOffset":false,"isSlot":false,"src":"3557:4:25","valueSize":1}],"id":7383,"nodeType":"InlineAssembly","src":"3456:142:25"}]}}]}},{"expression":{"hexValue":"74727565","id":7392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3701:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7362,"id":7393,"nodeType":"Return","src":"3694:11:25"}]},"documentation":{"id":7352,"nodeType":"StructuredDocumentation","src":"2674:307:25","text":"@notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\n @dev Reverts if the ERC20 transfer fails.\n @param tokenAddress The address of the ERC20 token.\n @param to The address to transfer the tokens to.\n @param amount The amount of tokens to transfer."},"id":7395,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"2995:12:25","nodeType":"FunctionDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7354,"mutability":"mutable","name":"tokenAddress","nameLocation":"3016:12:25","nodeType":"VariableDeclaration","scope":7395,"src":"3008:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7353,"name":"address","nodeType":"ElementaryTypeName","src":"3008:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7356,"mutability":"mutable","name":"to","nameLocation":"3038:2:25","nodeType":"VariableDeclaration","scope":7395,"src":"3030:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7355,"name":"address","nodeType":"ElementaryTypeName","src":"3030:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7358,"mutability":"mutable","name":"amount","nameLocation":"3050:6:25","nodeType":"VariableDeclaration","scope":7395,"src":"3042:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7357,"name":"uint256","nodeType":"ElementaryTypeName","src":"3042:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3007:50:25"},"returnParameters":{"id":7362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7395,"src":"3076:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7360,"name":"bool","nodeType":"ElementaryTypeName","src":"3076:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3075:6:25"},"scope":7396,"src":"2986:726:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7397,"src":"62:3652:25","usedErrors":[7286],"usedEvents":[]}],"src":"36:3679:25"},"id":25}},"contracts":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"lib/openzeppelin-contracts/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract in unpaused state."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":130,"contract":"lib/openzeppelin-contracts/contracts/security/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":231,"contract":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_available_length_string_fromMemory":{"entryPoint":207,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_string_fromMemory":{"entryPoint":293,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":116,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":141,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":594,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":559,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC20":{"entryPoint":914,"id":330,"parameterSlots":2,"returnSlots":0},"convert_uint256_to_uint256":{"entryPoint":480,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_ERC20":{"entryPoint":373,"id":null,"parameterSlots":0,"returnSlots":2},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":677,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":170,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":434,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":76,"id":null,"parameterSlots":2,"returnSlots":0},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":412,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":54,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":545,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_offsett_string_to_string":{"entryPoint":902,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":496,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000031576200001f6200001862000175565b9062000392565b604051610a74620003ad8239610a7490f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160401b0381116200006e57602090601f01601f19160190565b60005b838110620000be5750506000910152565b8181015183820152602001620000ad565b90929192620000e8620000e2826200008d565b62000074565b9381855260208501908284011162000031576200008b92620000aa565b9080601f83011215620000315781516200012292602001620000cf565b90565b919091604081840312620000315780516001600160401b0381116200003157836200015291830162000105565b60208201519093906001600160401b038111620000315762000122920162000105565b6200019862000e21803803806200018c8162000074565b92833981019062000125565b9091565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620001d5575b6020831014620001cf57565b6200019c565b91607f1691620001c3565b6200012262000122620001229290565b919062000205620001226200021d93620001e0565b90835460001960089290920291821b191691901b1790565b9055565b6200008b91600091620001f0565b8181106200023b575050565b806200024b600060019362000221565b016200022f565b9190601f81116200026257505050565b620002766200008b93600052602060002090565b906020601f8401819004830193106200029a575b6020601f9091010401906200022f565b90915081906200028a565b90620002af815190565b906001600160401b0382116200006e57620002d782620002d08554620001b2565b8562000252565b602090601f831160011462000316576200021d9291600091836200030a575b5050600019600883021c1916906002021790565b015190503880620002f6565b601f198316916200032c85600052602060002090565b9260005b8181106200036d5750916002939185600196941062000353575b50505002019055565b01516000196008601f8516021c191690553880806200034a565b9193602060018192878701518155019501920162000330565b906200008b91620002a5565b90620003a46200008b92600362000386565b60046200038656fe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146100c2578063095ea7b3146100bd57806318160ddd146100b857806323b872dd146100b3578063313ce567146100ae57806339509351146100a957806370a08231146100a457806395d89b411461009f578063a457c2d71461009a578063a9059cbb146100955763dd62ed3e036100c75761036a565b61032b565b61030f565b6102f4565b6102d9565b6102a9565b61027a565b61025e565b610202565b6101d4565b610146565b600080fd5b60009103126100c757565b60005b8381106100ea5750506000910152565b81810151838201526020016100da565b61011b61012460209361012e9361010f815190565b80835293849260200190565b958691016100d7565b601f01601f191690565b0190565b6020808252610143929101906100fa565b90565b346100c7576101563660046100cc565b61016d6101616104bb565b60405191829182610132565b0390f35b6001600160a01b031690565b6001600160a01b0381165b036100c757565b9050359061019c8261017d565b565b80610188565b9050359061019c8261019e565b91906040838203126100c757610143906101cb818561018f565b936020016101a4565b346100c75761016d6101f06101ea3660046101b1565b90610596565b60405191829182901515815260200190565b346100c7576102123660046100cc565b61016d61021d6104fd565b6040515b9182918290815260200190565b90916060828403126100c757610143610247848461018f565b93610255816020860161018f565b936040016101a4565b346100c75761016d6101f061027436600461022e565b916105a1565b346100c75761028a3660046100cc565b61016d6102956104e2565b6040519182918260ff909116815260200190565b346100c75761016d6101f06102bf3660046101b1565b906105da565b906020828203126100c7576101439161018f565b346100c75761016d61021d6102ef3660046102c5565b610545565b346100c7576103043660046100cc565b61016d6101616104c5565b346100c75761016d6101f06103253660046101b1565b90610653565b346100c75761016d6101f06103413660046101b1565b90610561565b91906040838203126100c75761014390610361818561018f565b9360200161018f565b346100c75761016d61021d610380366004610347565b90610576565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156103bc575b60208310146103b757565b610386565b91607f16916103ac565b805460009392916103e36103d98361039c565b8085529360200190565b916001811690811561043557506001146103fc57505050565b61040f9192939450600052602060002090565b916000925b8184106104215750500190565b805484840152602090930192600101610414565b92949550505060ff1916825215156020020190565b90610143916103c6565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761048c57604052565b610454565b9061019c6104ab926104a260405190565b9384809261044a565b038361046a565b61014390610491565b61014360036104b2565b61014360046104b2565b6104dc6101436101439290565b60ff1690565b61014360126104cf565b6101439081565b61014390546104ec565b61014360026104f3565b61014390610171906001600160a01b031682565b61014390610507565b6101439061051b565b9061053790610524565b600052602052604060002090565b61055c61014391610554600090565b50600061052d565b6104f3565b6105719190336107bb565b6107bb565b600190565b6101439161059161055c92610589600090565b50600161052d565b61052d565b610571919033610938565b61057192919061056c833383610a06565b634e487b7160e01b600052601160045260246000fd5b919082018092116105d557565b6105b2565b61057191906105f333926105ee8385610576565b6105c8565b91610938565b1561060057565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b61057191906105f333926106678385610576565b610673828210156105f9565b0390565b6101716101436101439290565b61014390610677565b1561069457565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156106ee57565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561074657565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6101436101436101439290565b906101436101436107b79261079a565b9055565b6108446108318360006108026107f16107d383610684565b6101716001600160a01b0382166001600160a01b038a16141561068d565b6001600160a01b03841614156106e7565b6105916108228861081661055c898661052d565b6106738282101561073f565b61082c878461052d565b6107a7565b61083e8561012e836104f3565b906107a7565b61088461087a6108747fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610524565b93610524565b9361022160405190565b0390a3565b1561089057565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b156108e857565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b6109776109666109486000610684565b6101716001600160a01b0382166001600160a01b0386161415610889565b6001600160a01b03841614156108e1565b61098a8361082c8461059185600161052d565b61088461087a6108747f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610524565b156109c157565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b90610a118183610576565b6000198103610a21575b50505050565b610a35936105f391610673828210156109ba565b38808080610a1b56fea2646970667358221220eea853399f8d971327847a5c958009fc474a71f77b32ecf0668e1b441377ba9064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x31 JUMPI PUSH3 0x1F PUSH3 0x18 PUSH3 0x175 JUMP JUMPDEST SWAP1 PUSH3 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA74 PUSH3 0x3AD DUP3 CODECOPY PUSH2 0xA74 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x6E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x36 JUMP JUMPDEST SWAP1 PUSH3 0x8B PUSH3 0x83 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x6E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xBE JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xAD JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH3 0xE8 PUSH3 0xE2 DUP3 PUSH3 0x8D JUMP JUMPDEST PUSH3 0x74 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH3 0x31 JUMPI PUSH3 0x8B SWAP3 PUSH3 0xAA JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0x31 JUMPI DUP2 MLOAD PUSH3 0x122 SWAP3 PUSH1 0x20 ADD PUSH3 0xCF JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x40 DUP2 DUP5 SUB SLT PUSH3 0x31 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x31 JUMPI DUP4 PUSH3 0x152 SWAP2 DUP4 ADD PUSH3 0x105 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x31 JUMPI PUSH3 0x122 SWAP3 ADD PUSH3 0x105 JUMP JUMPDEST PUSH3 0x198 PUSH3 0xE21 DUP1 CODESIZE SUB DUP1 PUSH3 0x18C DUP2 PUSH3 0x74 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x125 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH3 0x1D5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1CF JUMPI JUMP JUMPDEST PUSH3 0x19C JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x1C3 JUMP JUMPDEST PUSH3 0x122 PUSH3 0x122 PUSH3 0x122 SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x205 PUSH3 0x122 PUSH3 0x21D SWAP4 PUSH3 0x1E0 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL NOT AND SWAP2 SWAP1 SHL OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x8B SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x1F0 JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x23B JUMPI POP POP JUMP JUMPDEST DUP1 PUSH3 0x24B PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH3 0x221 JUMP JUMPDEST ADD PUSH3 0x22F JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH3 0x262 JUMPI POP POP POP JUMP JUMPDEST PUSH3 0x276 PUSH3 0x8B SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH3 0x29A JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x28A JUMP JUMPDEST SWAP1 PUSH3 0x2AF DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x6E JUMPI PUSH3 0x2D7 DUP3 PUSH3 0x2D0 DUP6 SLOAD PUSH3 0x1B2 JUMP JUMPDEST DUP6 PUSH3 0x252 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x316 JUMPI PUSH3 0x21D SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x30A JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x2F6 JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH3 0x32C DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x36D JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH3 0x353 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x34A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH3 0x330 JUMP JUMPDEST SWAP1 PUSH3 0x8B SWAP2 PUSH3 0x2A5 JUMP JUMPDEST SWAP1 PUSH3 0x3A4 PUSH3 0x8B SWAP3 PUSH1 0x3 PUSH3 0x386 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x386 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x95 JUMPI PUSH4 0xDD62ED3E SUB PUSH2 0xC7 JUMPI PUSH2 0x36A JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x146 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xC7 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xEA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0x11B PUSH2 0x124 PUSH1 0x20 SWAP4 PUSH2 0x12E SWAP4 PUSH2 0x10F DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x143 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x161 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x132 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x19C DUP3 PUSH2 0x17D JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x188 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x19C DUP3 PUSH2 0x19E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xC7 JUMPI PUSH2 0x143 SWAP1 PUSH2 0x1CB DUP2 DUP6 PUSH2 0x18F JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1A4 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x21D PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xC7 JUMPI PUSH2 0x143 PUSH2 0x247 DUP5 DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP4 PUSH2 0x255 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x18F JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1A4 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E JUMP JUMPDEST SWAP2 PUSH2 0x5A1 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x295 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 PUSH2 0x5DA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC7 JUMPI PUSH2 0x143 SWAP2 PUSH2 0x18F JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x21D PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x161 PUSH2 0x4C5 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 PUSH2 0x653 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 PUSH2 0x561 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xC7 JUMPI PUSH2 0x143 SWAP1 PUSH2 0x361 DUP2 DUP6 PUSH2 0x18F JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x18F JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x21D PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x347 JUMP JUMPDEST SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x3BC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3B7 JUMPI JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3AC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x3E3 PUSH2 0x3D9 DUP4 PUSH2 0x39C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x435 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3FC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x40F SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x421 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x414 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x143 SWAP2 PUSH2 0x3C6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x48C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST SWAP1 PUSH2 0x19C PUSH2 0x4AB SWAP3 PUSH2 0x4A2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x44A JUMP JUMPDEST SUB DUP4 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x3 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x4 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x4DC PUSH2 0x143 PUSH2 0x143 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x12 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x143 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x143 SWAP1 SLOAD PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x143 PUSH1 0x2 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x171 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x51B JUMP JUMPDEST SWAP1 PUSH2 0x537 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x55C PUSH2 0x143 SWAP2 PUSH2 0x554 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 CALLER PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x143 SWAP2 PUSH2 0x591 PUSH2 0x55C SWAP3 PUSH2 0x589 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 CALLER PUSH2 0x938 JUMP JUMPDEST PUSH2 0x571 SWAP3 SWAP2 SWAP1 PUSH2 0x56C DUP4 CALLER DUP4 PUSH2 0xA06 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5D5 JUMPI JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x5F3 CALLER SWAP3 PUSH2 0x5EE DUP4 DUP6 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST SWAP2 PUSH2 0x938 JUMP JUMPDEST ISZERO PUSH2 0x600 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x5F3 CALLER SWAP3 PUSH2 0x667 DUP4 DUP6 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x673 DUP3 DUP3 LT ISZERO PUSH2 0x5F9 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x143 PUSH2 0x143 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x677 JUMP JUMPDEST ISZERO PUSH2 0x694 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x6EE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x746 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x143 PUSH2 0x143 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x143 PUSH2 0x143 PUSH2 0x7B7 SWAP3 PUSH2 0x79A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x844 PUSH2 0x831 DUP4 PUSH1 0x0 PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7D3 DUP4 PUSH2 0x684 JUMP JUMPDEST PUSH2 0x171 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ ISZERO PUSH2 0x68D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x591 PUSH2 0x822 DUP9 PUSH2 0x816 PUSH2 0x55C DUP10 DUP7 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x673 DUP3 DUP3 LT ISZERO PUSH2 0x73F JUMP JUMPDEST PUSH2 0x82C DUP8 DUP5 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x83E DUP6 PUSH2 0x12E DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x884 PUSH2 0x87A PUSH2 0x874 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x524 JUMP JUMPDEST SWAP4 PUSH2 0x524 JUMP JUMPDEST SWAP4 PUSH2 0x221 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x8E8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x977 PUSH2 0x966 PUSH2 0x948 PUSH1 0x0 PUSH2 0x684 JUMP JUMPDEST PUSH2 0x171 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x98A DUP4 PUSH2 0x82C DUP5 PUSH2 0x591 DUP6 PUSH1 0x1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x884 PUSH2 0x87A PUSH2 0x874 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x524 JUMP JUMPDEST ISZERO PUSH2 0x9C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xA11 DUP2 DUP4 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 SUB PUSH2 0xA21 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA35 SWAP4 PUSH2 0x5F3 SWAP2 PUSH2 0x673 DUP3 DUP3 LT ISZERO PUSH2 0x9BA JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA1B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xA8 MSTORE8 CODECOPY SWAP16 DUP14 SWAP8 SGT 0x27 DUP5 PUSH27 0x5C958009FC474A71F77B32ECF0668E1B441377BA9064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1532:11312:3:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1532:11312:3;;;;;;-1:-1:-1;;;;;1532:11312:3;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;1532:11312:3;;;;;;;;-1:-1:-1;;1532:11312:3;;;:::o;:::-;;;;;;;;-1:-1:-1;;1532:11312:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1532:11312:3;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1532:11312:3;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1532:11312:3;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1532:11312:3;;;;;;;;;;;;;-1:-1:-1;;;;;1532:11312:3;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1532:11312:3;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1532:11312:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1980:113::-;;2046:13;2069:17;1980:113;2046:13;;:::i;:::-;2069:17;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":204,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":839,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_uint256":{"entryPoint":558,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_uint256":{"entryPoint":433,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_address":{"entryPoint":709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":966,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0557":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2488":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_3b66":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4107":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_baec":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c953":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f8b4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_3b66":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":1480,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":369,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_address":{"entryPoint":1316,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_to_string":{"entryPoint":1202,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1668,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1655,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint8":{"entryPoint":1231,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1307,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1287,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":1946,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":1169,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":215,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_allowance":{"entryPoint":874,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_approve":{"entryPoint":468,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":729,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_decimals":{"entryPoint":634,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_decreaseAllowance":{"entryPoint":783,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_increaseAllowance":{"entryPoint":681,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":326,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":756,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":514,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transfer":{"entryPoint":811,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":606,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":924,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":1260,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1130,"id":null,"parameterSlots":2,"returnSlots":0},"fun__approve":{"entryPoint":2360,"id":806,"parameterSlots":3,"returnSlots":0},"fun__transfer":{"entryPoint":1979,"id":632,"parameterSlots":3,"returnSlots":0},"fun_allowance":{"entryPoint":1398,"id":427,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":1430,"id":452,"parameterSlots":2,"returnSlots":1},"fun_balanceOf":{"entryPoint":1349,"id":384,"parameterSlots":1,"returnSlots":1},"fun_decimals":{"entryPoint":1250,"id":360,"parameterSlots":0,"returnSlots":1},"fun_decreaseAllowance":{"entryPoint":1619,"id":555,"parameterSlots":2,"returnSlots":1},"fun_increaseAllowance":{"entryPoint":1498,"id":514,"parameterSlots":2,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_name":{"entryPoint":1211,"id":340,"parameterSlots":0,"returnSlots":1},"fun_spendAllowance":{"entryPoint":2566,"id":849,"parameterSlots":3,"returnSlots":0},"fun_symbol":{"entryPoint":1221,"id":350,"parameterSlots":0,"returnSlots":1},"fun_totalSupply":{"entryPoint":1277,"id":370,"parameterSlots":0,"returnSlots":1},"fun_transfer":{"entryPoint":1377,"id":409,"parameterSlots":2,"returnSlots":1},"fun_transferFrom":{"entryPoint":1441,"id":485,"parameterSlots":3,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":1325,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1458,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":902,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1108,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_uint256":{"entryPoint":1267,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":1767,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2488":{"entryPoint":2273,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3b66":{"entryPoint":2490,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4107":{"entryPoint":1855,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_baec":{"entryPoint":1677,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c953":{"entryPoint":2185,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f8b4":{"entryPoint":1529,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":199,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":1959,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":414,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_uint8":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806306fdde03146100c2578063095ea7b3146100bd57806318160ddd146100b857806323b872dd146100b3578063313ce567146100ae57806339509351146100a957806370a08231146100a457806395d89b411461009f578063a457c2d71461009a578063a9059cbb146100955763dd62ed3e036100c75761036a565b61032b565b61030f565b6102f4565b6102d9565b6102a9565b61027a565b61025e565b610202565b6101d4565b610146565b600080fd5b60009103126100c757565b60005b8381106100ea5750506000910152565b81810151838201526020016100da565b61011b61012460209361012e9361010f815190565b80835293849260200190565b958691016100d7565b601f01601f191690565b0190565b6020808252610143929101906100fa565b90565b346100c7576101563660046100cc565b61016d6101616104bb565b60405191829182610132565b0390f35b6001600160a01b031690565b6001600160a01b0381165b036100c757565b9050359061019c8261017d565b565b80610188565b9050359061019c8261019e565b91906040838203126100c757610143906101cb818561018f565b936020016101a4565b346100c75761016d6101f06101ea3660046101b1565b90610596565b60405191829182901515815260200190565b346100c7576102123660046100cc565b61016d61021d6104fd565b6040515b9182918290815260200190565b90916060828403126100c757610143610247848461018f565b93610255816020860161018f565b936040016101a4565b346100c75761016d6101f061027436600461022e565b916105a1565b346100c75761028a3660046100cc565b61016d6102956104e2565b6040519182918260ff909116815260200190565b346100c75761016d6101f06102bf3660046101b1565b906105da565b906020828203126100c7576101439161018f565b346100c75761016d61021d6102ef3660046102c5565b610545565b346100c7576103043660046100cc565b61016d6101616104c5565b346100c75761016d6101f06103253660046101b1565b90610653565b346100c75761016d6101f06103413660046101b1565b90610561565b91906040838203126100c75761014390610361818561018f565b9360200161018f565b346100c75761016d61021d610380366004610347565b90610576565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156103bc575b60208310146103b757565b610386565b91607f16916103ac565b805460009392916103e36103d98361039c565b8085529360200190565b916001811690811561043557506001146103fc57505050565b61040f9192939450600052602060002090565b916000925b8184106104215750500190565b805484840152602090930192600101610414565b92949550505060ff1916825215156020020190565b90610143916103c6565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761048c57604052565b610454565b9061019c6104ab926104a260405190565b9384809261044a565b038361046a565b61014390610491565b61014360036104b2565b61014360046104b2565b6104dc6101436101439290565b60ff1690565b61014360126104cf565b6101439081565b61014390546104ec565b61014360026104f3565b61014390610171906001600160a01b031682565b61014390610507565b6101439061051b565b9061053790610524565b600052602052604060002090565b61055c61014391610554600090565b50600061052d565b6104f3565b6105719190336107bb565b6107bb565b600190565b6101439161059161055c92610589600090565b50600161052d565b61052d565b610571919033610938565b61057192919061056c833383610a06565b634e487b7160e01b600052601160045260246000fd5b919082018092116105d557565b6105b2565b61057191906105f333926105ee8385610576565b6105c8565b91610938565b1561060057565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b61057191906105f333926106678385610576565b610673828210156105f9565b0390565b6101716101436101439290565b61014390610677565b1561069457565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156106ee57565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561074657565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6101436101436101439290565b906101436101436107b79261079a565b9055565b6108446108318360006108026107f16107d383610684565b6101716001600160a01b0382166001600160a01b038a16141561068d565b6001600160a01b03841614156106e7565b6105916108228861081661055c898661052d565b6106738282101561073f565b61082c878461052d565b6107a7565b61083e8561012e836104f3565b906107a7565b61088461087a6108747fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610524565b93610524565b9361022160405190565b0390a3565b1561089057565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b156108e857565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b6109776109666109486000610684565b6101716001600160a01b0382166001600160a01b0386161415610889565b6001600160a01b03841614156108e1565b61098a8361082c8461059185600161052d565b61088461087a6108747f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610524565b156109c157565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b90610a118183610576565b6000198103610a21575b50505050565b610a35936105f391610673828210156109ba565b38808080610a1b56fea2646970667358221220eea853399f8d971327847a5c958009fc474a71f77b32ecf0668e1b441377ba9064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xA4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x95 JUMPI PUSH4 0xDD62ED3E SUB PUSH2 0xC7 JUMPI PUSH2 0x36A JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x2D9 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x146 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xC7 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xEA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0x11B PUSH2 0x124 PUSH1 0x20 SWAP4 PUSH2 0x12E SWAP4 PUSH2 0x10F DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x143 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xFA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x161 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x132 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0xC7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x19C DUP3 PUSH2 0x17D JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x188 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x19C DUP3 PUSH2 0x19E JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xC7 JUMPI PUSH2 0x143 SWAP1 PUSH2 0x1CB DUP2 DUP6 PUSH2 0x18F JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1A4 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x21D PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0xC7 JUMPI PUSH2 0x143 PUSH2 0x247 DUP5 DUP5 PUSH2 0x18F JUMP JUMPDEST SWAP4 PUSH2 0x255 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x18F JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1A4 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x22E JUMP JUMPDEST SWAP2 PUSH2 0x5A1 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x295 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 PUSH2 0x5DA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xC7 JUMPI PUSH2 0x143 SWAP2 PUSH2 0x18F JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x21D PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0x545 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC JUMP JUMPDEST PUSH2 0x16D PUSH2 0x161 PUSH2 0x4C5 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 PUSH2 0x653 JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x1F0 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 PUSH2 0x561 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xC7 JUMPI PUSH2 0x143 SWAP1 PUSH2 0x361 DUP2 DUP6 PUSH2 0x18F JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x18F JUMP JUMPDEST CALLVALUE PUSH2 0xC7 JUMPI PUSH2 0x16D PUSH2 0x21D PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0x347 JUMP JUMPDEST SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x3BC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3B7 JUMPI JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3AC JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x3E3 PUSH2 0x3D9 DUP4 PUSH2 0x39C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x435 JUMPI POP PUSH1 0x1 EQ PUSH2 0x3FC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x40F SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x421 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x414 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x143 SWAP2 PUSH2 0x3C6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x48C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST SWAP1 PUSH2 0x19C PUSH2 0x4AB SWAP3 PUSH2 0x4A2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x44A JUMP JUMPDEST SUB DUP4 PUSH2 0x46A JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x3 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x4 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x4DC PUSH2 0x143 PUSH2 0x143 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x143 PUSH1 0x12 PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x143 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x143 SWAP1 SLOAD PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x143 PUSH1 0x2 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x171 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x51B JUMP JUMPDEST SWAP1 PUSH2 0x537 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x55C PUSH2 0x143 SWAP2 PUSH2 0x554 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 CALLER PUSH2 0x7BB JUMP JUMPDEST PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x143 SWAP2 PUSH2 0x591 PUSH2 0x55C SWAP3 PUSH2 0x589 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 CALLER PUSH2 0x938 JUMP JUMPDEST PUSH2 0x571 SWAP3 SWAP2 SWAP1 PUSH2 0x56C DUP4 CALLER DUP4 PUSH2 0xA06 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5D5 JUMPI JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x5F3 CALLER SWAP3 PUSH2 0x5EE DUP4 DUP6 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST SWAP2 PUSH2 0x938 JUMP JUMPDEST ISZERO PUSH2 0x600 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x5F3 CALLER SWAP3 PUSH2 0x667 DUP4 DUP6 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x673 DUP3 DUP3 LT ISZERO PUSH2 0x5F9 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH2 0x171 PUSH2 0x143 PUSH2 0x143 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x143 SWAP1 PUSH2 0x677 JUMP JUMPDEST ISZERO PUSH2 0x694 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x6EE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x746 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x143 PUSH2 0x143 PUSH2 0x143 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x143 PUSH2 0x143 PUSH2 0x7B7 SWAP3 PUSH2 0x79A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x844 PUSH2 0x831 DUP4 PUSH1 0x0 PUSH2 0x802 PUSH2 0x7F1 PUSH2 0x7D3 DUP4 PUSH2 0x684 JUMP JUMPDEST PUSH2 0x171 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ ISZERO PUSH2 0x68D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x591 PUSH2 0x822 DUP9 PUSH2 0x816 PUSH2 0x55C DUP10 DUP7 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x673 DUP3 DUP3 LT ISZERO PUSH2 0x73F JUMP JUMPDEST PUSH2 0x82C DUP8 DUP5 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x83E DUP6 PUSH2 0x12E DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x884 PUSH2 0x87A PUSH2 0x874 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x524 JUMP JUMPDEST SWAP4 PUSH2 0x524 JUMP JUMPDEST SWAP4 PUSH2 0x221 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x890 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x8E8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x977 PUSH2 0x966 PUSH2 0x948 PUSH1 0x0 PUSH2 0x684 JUMP JUMPDEST PUSH2 0x171 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x889 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x8E1 JUMP JUMPDEST PUSH2 0x98A DUP4 PUSH2 0x82C DUP5 PUSH2 0x591 DUP6 PUSH1 0x1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x884 PUSH2 0x87A PUSH2 0x874 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x524 JUMP JUMPDEST ISZERO PUSH2 0x9C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0xA11 DUP2 DUP4 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 SUB PUSH2 0xA21 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA35 SWAP4 PUSH2 0x5F3 SWAP2 PUSH2 0x673 DUP3 DUP3 LT ISZERO PUSH2 0x9BA JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA1B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xA8 MSTORE8 CODECOPY SWAP16 DUP14 SWAP8 SGT 0x27 DUP5 PUSH27 0x5C958009FC474A71F77B32ECF0668E1B441377BA9064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1532:11312:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1532:11312:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1532:11312:3;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1532:11312:3;;:::o;:::-;-1:-1:-1;;;;;1532:11312:3;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1532:11312:3;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;2158:98::-;2237:12;2244:5;2237:12;:::i;2369:102::-;2450:14;2457:7;2450:14;:::i;1532:11312::-;;;;;;;;;;;;3104:91;3179:9;3186:2;3179:9;:::i;1532:11312::-;;;;;;;;;;:::i;3255:106::-;3342:12;;;:::i;1532:11312::-;;;;;-1:-1:-1;;;;;1532:11312:3;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;3419:125::-;3519:18;;3419:125;3493:7;1532:11312;;;3493:7;3519:9;;:18;:::i;:::-;;:::i;3740:189::-;3894:6;;;719:10:8;3894:6:3;:::i;3851:12::-;3894:6;:::i;:::-;3918:4;3740:189;:::o;3987:149::-;4102:27;3987:149;4102:18;:27;3987:149;4076:7;1532:11312;;;4076:7;4102:11;;:18;:::i;:::-;:27;:::i;4444:197::-;4606:6;;;719:10:8;4606:6:3;:::i;5203:256::-;5424:6;;;5203:256;5387:6;5424;719:10:8;5387:6:3;;:::i;1532:11312::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;5854:234::-;6021:38;;;;719:10:8;6021:25:3;;;;;:::i;:::-;:38;:::i;:::-;;;:::i;1532:11312::-;;;;:::o;:::-;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:3;;;;;;;6575:427;6928:34;;;;719:10:8;6749:25:3;;;;;:::i;:::-;6784:85;6792:35;;;;6784:85;:::i;:::-;1532:11312;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;7456:788::-;8114:23;:13;7568:1;;7622:64;7630:16;7560:10;;;:::i;:::-;7544:68;-1:-1:-1;;;;;1532:11312:3;;-1:-1:-1;;;;;1532:11312:3;;7552:18;;7544:68;:::i;7630:16::-;-1:-1:-1;;;;;1532:11312:3;;7630:16;;7622:64;:::i;:::-;7899:38;7917:20;7768:15;;;;;;:::i;:::-;7793:72;7801:21;;;;7793:72;:::i;7917:20::-;7899:15;;;;:::i;:::-;:38;:::i;8114:13::-;:23;;;;;:::i;:::-;;;:::i;:::-;8163:26;;;;;;:::i;:::-;;;:::i;:::-;;;1532:11312;;;;8163:26;;;;7456:788::o;1532:11312::-;;;;:::o;:::-;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1532:11312:3;;;;;;;10457:340;10628:68;10636:21;10567:10;10575:1;10567:10;:::i;:::-;10550:68;-1:-1:-1;;;;;1532:11312:3;;-1:-1:-1;;;;;1532:11312:3;;10558:19;;10550:68;:::i;10636:21::-;-1:-1:-1;;;;;1532:11312:3;;10636:21;;10628:68;:::i;:::-;10707:36;:11;:27;:11;:18;:11;;:18;:::i;:36::-;10758:32;;;;;;:::i;1532:11312::-;;;;:::o;:::-;;;-1:-1:-1;;;1532:11312:3;;;;;;;;;;;;;;;;;;;;11078:411;;11205:25;;;;:::i;:::-;-1:-1:-1;;11244:37:3;;11240:243;;11078:411;;;;;:::o;11240:243::-;11432:25;;;;11297:68;11305:26;;;;11297:68;:::i;11432:25::-;11240:243;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"535200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"infinite","decimals()":"infinite","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"infinite","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":301,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":307,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":309,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":311,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":313,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":301,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":307,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":309,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":311,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":313,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract unpausable.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract unpausable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../security/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract unpausable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(!paused(), \\\"ERC20Pausable: token transfer while paused\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":301,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":307,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":309,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":311,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":313,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":130,"contract":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable","label":"_paused","offset":0,"slot":"5","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"devdoc":{"details":"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220470ae9104afe313af64173f062e30e8e0ba9b1397df28c4d029fca1599f4bfe864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXP 0xE9 LT 0x4A INVALID BALANCE GASPRICE 0xF6 COINBASE PUSH20 0xF062E30E8E0BA9B1397DF28C4D029FCA1599F4BF 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"802:8819:9:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220470ae9104afe313af64173f062e30e8e0ba9b1397df28c4d029fca1599f4bfe864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXP 0xE9 LT 0x4A INVALID BALANCE GASPRICE 0xF6 COINBASE PUSH20 0xF062E30E8E0BA9B1397DF28C4D029FCA1599F4BF 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"802:8819:9:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_efficientHash(bytes32,bytes32)":"infinite","_hashPair(bytes32,bytes32)":"infinite","multiProofVerify(bytes32[] memory,bool[] memory,bytes32,bytes32[] memory)":"infinite","multiProofVerifyCalldata(bytes32[] calldata,bool[] calldata,bytes32,bytes32[] memory)":"infinite","processMultiProof(bytes32[] memory,bool[] memory,bytes32[] memory)":"infinite","processMultiProofCalldata(bytes32[] calldata,bool[] calldata,bytes32[] memory)":"infinite","processProof(bytes32[] memory,bytes32)":"infinite","processProofCalldata(bytes32[] calldata,bytes32)":"infinite","verify(bytes32[] memory,bytes32,bytes32)":"infinite","verifyCalldata(bytes32[] calldata,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Tree proofs.\\n *\\n * The tree and the proofs can be generated using our\\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\\n * You will find a quickstart guide in the readme.\\n *\\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\\n * hashing, or use a hash function other than keccak256 for hashing leaves.\\n * This is because the concatenation of a sorted pair of internal nodes in\\n * the merkle tree could be reinterpreted as a leaf value.\\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\\n * against this attack out of the box.\\n */\\nlibrary MerkleProof {\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {verify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProofCalldata(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     *\\n     * _Available since v4.4._\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerify(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProof(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {multiProofVerify}\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerifyCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\\n     * respectively.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProof(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proofLen - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            require(proofPos == proofLen, \\\"MerkleProof: invalid multiproof\\\");\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processMultiProof}.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProofCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proofLen - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            require(proofPos == proofLen, \\\"MerkleProof: invalid multiproof\\\");\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\\n    }\\n\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220b6066f4df57ae5886e1a3889a6296ab732041a5461b029acdd31ee47aae95fb564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 MOD PUSH16 0x4DF57AE5886E1A3889A6296AB732041A SLOAD PUSH2 0xB029 0xAC 0xDD BALANCE 0xEE SELFBALANCE 0xAA 0xE9 PUSH0 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"482:6210:10:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220b6066f4df57ae5886e1a3889a6296ab732041a5461b029acdd31ee47aae95fb564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 MOD PUSH16 0x4DF57AE5886E1A3889A6296AB732041A SLOAD PUSH2 0xB029 0xAC 0xDD BALANCE 0xEE SELFBALANCE 0xAA 0xE9 PUSH0 0xB5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"482:6210:10:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"infinite","totalCost":"infinite"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea2646970667358221220efdfe5c8fc9fc6a15cf72e9d18a723fb456685ee3cd7054a9d7b6cf21ba7b7fe64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xDF 0xE5 0xC8 0xFC SWAP16 0xC6 LOG1 0x5C 0xF7 0x2E SWAP14 XOR 0xA7 0x23 0xFB GASLIMIT PUSH7 0x85EE3CD7054A9D PUSH28 0x6CF21BA7B7FE64736F6C634300081400330000000000000000000000 ","sourceMap":"1329:11630:11:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220efdfe5c8fc9fc6a15cf72e9d18a723fb456685ee3cd7054a9d7b6cf21ba7b7fe64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xDF 0xE5 0xC8 0xFC SWAP16 0xC6 LOG1 0x5C 0xF7 0x2E SWAP14 XOR 0xA7 0x23 0xFB GASLIMIT PUSH7 0x85EE3CD7054A9D PUSH28 0x6CF21BA7B7FE64736F6C634300081400330000000000000000000000 ","sourceMap":"1329:11630:11:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_add(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSet.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSet.Set storage pointer)":"infinite","_remove(struct EnumerableSet.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSet.Set storage pointer)":"infinite","add(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSet.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSet.AddressSet storage pointer)":"infinite","length(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSet.UintSet storage pointer)":"infinite","remove(struct EnumerableSet.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSet.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSet.AddressSet storage pointer)":"infinite","values(struct EnumerableSet.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSet.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol":{"IUniswapV2Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":false,"internalType":"address","name":"pair","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"PairCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPairs","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allPairsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"createPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeTo","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeToSetter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"getPair","outputs":[{"internalType":"address","name":"pair","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"setFeeToSetter","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allPairs(uint256)":"1e3dd18b","allPairsLength()":"574f2ba3","createPair(address,address)":"c9c65396","feeTo()":"017e7e58","feeToSetter()":"094b7415","getPair(address,address)":"e6a43905","setFeeTo(address)":"f46901ed","setFeeToSetter(address)":"a2e74af6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol":{"IUniswapV2Pair":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint112","name":"reserve0","type":"uint112"},{"indexed":false,"internalType":"uint112","name":"reserve1","type":"uint112"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"reserve0","type":"uint112"},{"internalType":"uint112","name":"reserve1","type":"uint112"},{"internalType":"uint32","name":"blockTimestampLast","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"kLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"price0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","MINIMUM_LIQUIDITY()":"ba9a7a56","PERMIT_TYPEHASH()":"30adf81f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address)":"89afcb44","decimals()":"313ce567","factory()":"c45a0155","getReserves()":"0902f1ac","initialize(address,address)":"485cc955","kLast()":"7464fc3d","mint(address)":"6a627842","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","price0CumulativeLast()":"5909c0d5","price1CumulativeLast()":"5a3d5493","skim(address)":"bc25cf77","swap(uint256,uint256,address,bytes)":"022c0d9f","symbol()":"95d89b41","sync()":"fff6cae9","token0()":"0dfe1681","token1()":"d21220a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol":{"IUniswapV2Migrator":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"migrate(address,uint256,uint256,address,uint256)":"b7df1d25"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol\":\"IUniswapV2Migrator\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Migrator {\\n    function migrate(address token, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external;\\n}\\n\",\"keccak256\":\"0xa83ac0f597c04134b3ea423fd55d3077e952197c1991e23c4e304bfb35a90124\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"IUniswapV2Router01":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"IUniswapV2Router02":{"abi":[{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountIn","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"reserveIn","type":"uint256"},{"internalType":"uint256","name":"reserveOut","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsIn","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"}],"name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"removeLiquidityETHSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermit","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"approveMax","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"removeLiquidityWithPermit","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapETHForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactETHForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForETHSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMax","type":"uint256"},{"internalType":"address[]","name":"path","type":"address[]"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapTokensForExactTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"WETH()":"ad5c4648","addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)":"e8e33700","addLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"f305d719","factory()":"c45a0155","getAmountIn(uint256,uint256,uint256)":"85f8c259","getAmountOut(uint256,uint256,uint256)":"054d50d4","getAmountsIn(uint256,address[])":"1f00ca74","getAmountsOut(uint256,address[])":"d06ca61f","quote(uint256,uint256,uint256)":"ad615dec","removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)":"baa2abde","removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)":"02751cec","removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)":"af2979eb","removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"ded9382a","removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"5b0d5984","removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)":"2195995c","swapETHForExactTokens(uint256,address[],address,uint256)":"fb3bdb41","swapExactETHForTokens(uint256,address[],address,uint256)":"7ff36ab5","swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)":"b6f9de95","swapExactTokensForETH(uint256,uint256,address[],address,uint256)":"18cbafe5","swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"791ac947","swapExactTokensForTokens(uint256,uint256,address[],address,uint256)":"38ed1739","swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)":"5c11d795","swapTokensForExactETH(uint256,uint256,address[],address,uint256)":"4a25d94a","swapTokensForExactTokens(uint256,uint256,address[],address,uint256)":"8803dbee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/AirdropERC20.sol":{"AirdropERC20":{"abi":[{"inputs":[],"name":"InsufficientAllowance","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"NoRecipients","type":"error"},{"inputs":[],"name":"NotERC20","type":"error"},{"inputs":[],"name":"TokenAddressZero","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"AirdropFailed","type":"event"},{"inputs":[],"name":"NATIVE_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct AirdropERC20.AirdropContent[]","name":"contents","type":"tuple[]"}],"name":"airdrop","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"author":"@neuro_0x","details":"A contract for distributing ERC20 tokens to a list of recipients.","events":{"AirdropFailed(address,address,address,uint256)":{"details":"Emitted when an failed airdrop occurs."}},"kind":"dev","methods":{"airdrop(address,address,(address,uint256)[])":{"details":"needs Approval","params":{"contents":"A list of recipients and amounts for the airdrop.","tokenAddress":"The address of the token to be airdropped.","tokenOwner":"The address of the token owner initiating the airdrop."}}},"stateVariables":{"NATIVE_TOKEN":{"details":"The address of the native token (ETH)."}},"title":"AirdropERC20","version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":65,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_AirdropERC20":{"entryPoint":39,"id":null,"parameterSlots":0,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":95,"id":239,"parameterSlots":0,"returnSlots":0},"convert_rational_by_to_uint256":{"entryPoint":49,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":75,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040523461002257610011610027565b604051610804610072823961080490f35b600080fd5b61002f61005f565b565b61003e61003e61003e9290565b90565b61003e6001610031565b9061003e61003e61005b92610031565b9055565b61002f61006a610041565b600061004b56fe6080604052600436101561001257600080fd5b60003560e01c806331f7d964146100325763da26dbf1036100375761011c565b610058565b600080fd5b600091031261003757565b90565b6001600160a01b031690565b565b346100375761006836600461003c565b60405173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152602090f35b6001600160a01b0381165b0361003757565b9050359061005682610087565b909182601f830112156100375781359167ffffffffffffffff831161003757602001926040830284011161003757565b91606083830312610037576100eb8284610099565b926100f98360208301610099565b92604082013567ffffffffffffffff81116100375761011892016100a6565b9091565b61013361012a3660046100d6565b92919091610375565b604051005b9061014c9392916101476103fc565b6101e2565b610056610438565b6100476100476100479290565b61004a6100476100479290565b61004790610161565b634e487b7160e01b600052603260045260246000fd5b919081101561019d576040020190565b610177565b3561004781610087565b80610092565b35610047816101ac565b6100479061004a906001600160a01b031682565b610047906101bc565b610047906101d0565b929392919084936000906101f582610154565b86146103635761020761004a8361016e565b6001600160a01b038616146103515773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0386161461033f5761024382610154565b865b811015610335576102ab81898188876102946102908d6102738461026d6102459c8a8961018d565b016101a2565b8d61028a60206102848a8c8b61018d565b016101b2565b92610561565b1590565b6102b2575b505050506102a76001610154565b0190565b9050610243565b826102ca6102849261026d6102d1968860209761018d565b948c61018d565b907f35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff6102fc8b6101d9565b9061032961031261030c8c6101d9565b946101d9565b9461031c60405190565b9182918290815260200190565b0390a489818887610299565b5095505050505050565b604051635e81097b60e01b8152600490fd5b6040516381c609f760e01b8152600490fd5b6040516348e0555160e11b8152600490fd5b90610056939291610138565b6100479081565b6100479054610381565b6100476002610154565b156103a357565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b906100476100476103f892610154565b9055565b6100566104096000610388565b610427610414610392565b918290610420565b9190565b141561039c565b60006103e8565b6100476001610154565b61005661042761042e565b6001600160a01b039182168152911660208201526060810192916100569160400152565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761049f57604052565b610467565b906100566104b160405190565b928361047d565b67ffffffffffffffff811161049f57602090601f01601f19160190565b906104e76104e2836104b8565b6104a4565b918252565b3d15610506576104fb3d6104d5565b903d6000602084013e565b606090565b801515610092565b905051906100568261050b565b906020828203126100375761004791610513565b90505190610056826101ac565b906020828203126100375761004791610534565b6040513d6000823e3d90fd5b9190939261056d600090565b5060009261057a84610154565b82146107c45773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b038216036105c55750829394506105b260405190565b90818003925af16105c16104ec565b5090565b9280600461060482956105f5866323b872dd60e01b928c6105e560405190565b9687956020870190815201610443565b6020820181038252038261047d565b80519060200182875af1946106176104ec565b861590811561077b575b5061062d575b50505050565b909192945061064461063f84966101d9565b6101d9565b906370a0823161065d61065660405190565b9160e01b90565b81526001600160a01b0382166004820152602081602481865afa90811561074657859161075d575b50831161074b5760209063dd62ed3e926106bb6106a1306101d9565b946106da6106ae60405190565b9687958694859460e01b90565b84526001600160a01b0390811660048501521660248301526044820190565b03915afa928315610746579261070e575b50905b106106fc5738808080610627565b6040516313be252b60e01b8152600490fd5b6106ee91925061073761041c9160203d811161073f575b61072f818361047d565b810190610541565b9291506106eb565b503d610725565b610555565b604051631e9acf1760e31b8152600490fd5b610775915060203d811161073f5761072f818361047d565b38610685565b9050610785815190565b61079161041c86610154565b1190816107a0575b5038610621565b6107be91508060206107b3610290935190565b818301019101610520565b38610799565b506001945050505056fea2646970667358221220c268be60640235073d5a0bb2fd424b124be1dbbf4d6e885a9ec3b904eb635daf64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x22 JUMPI PUSH2 0x11 PUSH2 0x27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x804 PUSH2 0x72 DUP3 CODECOPY PUSH2 0x804 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F PUSH2 0x5F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3E PUSH2 0x3E PUSH2 0x3E SWAP3 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3E PUSH1 0x1 PUSH2 0x31 JUMP JUMPDEST SWAP1 PUSH2 0x3E PUSH2 0x3E PUSH2 0x5B SWAP3 PUSH2 0x31 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2F PUSH2 0x6A PUSH2 0x41 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x32 JUMPI PUSH4 0xDA26DBF1 SUB PUSH2 0x37 JUMPI PUSH2 0x11C JUMP JUMPDEST PUSH2 0x58 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x37 JUMPI JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x37 JUMPI PUSH2 0x68 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x37 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x87 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x37 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x37 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x40 DUP4 MUL DUP5 ADD GT PUSH2 0x37 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x37 JUMPI PUSH2 0xEB DUP3 DUP5 PUSH2 0x99 JUMP JUMPDEST SWAP3 PUSH2 0xF9 DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x99 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37 JUMPI PUSH2 0x118 SWAP3 ADD PUSH2 0xA6 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SWAP1 PUSH2 0x14C SWAP4 SWAP3 SWAP2 PUSH2 0x147 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x56 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x47 PUSH2 0x47 PUSH2 0x47 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x4A PUSH2 0x47 PUSH2 0x47 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x47 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x19D JUMPI PUSH1 0x40 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST CALLDATALOAD PUSH2 0x47 DUP2 PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH2 0x92 JUMP JUMPDEST CALLDATALOAD PUSH2 0x47 DUP2 PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x47 SWAP1 PUSH2 0x4A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x47 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x47 SWAP1 PUSH2 0x1D0 JUMP JUMPDEST SWAP3 SWAP4 SWAP3 SWAP2 SWAP1 DUP5 SWAP4 PUSH1 0x0 SWAP1 PUSH2 0x1F5 DUP3 PUSH2 0x154 JUMP JUMPDEST DUP7 EQ PUSH2 0x363 JUMPI PUSH2 0x207 PUSH2 0x4A DUP4 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x351 JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x33F JUMPI PUSH2 0x243 DUP3 PUSH2 0x154 JUMP JUMPDEST DUP7 JUMPDEST DUP2 LT ISZERO PUSH2 0x335 JUMPI PUSH2 0x2AB DUP2 DUP10 DUP2 DUP9 DUP8 PUSH2 0x294 PUSH2 0x290 DUP14 PUSH2 0x273 DUP5 PUSH2 0x26D PUSH2 0x245 SWAP13 DUP11 DUP10 PUSH2 0x18D JUMP JUMPDEST ADD PUSH2 0x1A2 JUMP JUMPDEST DUP14 PUSH2 0x28A PUSH1 0x20 PUSH2 0x284 DUP11 DUP13 DUP12 PUSH2 0x18D JUMP JUMPDEST ADD PUSH2 0x1B2 JUMP JUMPDEST SWAP3 PUSH2 0x561 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2B2 JUMPI JUMPDEST POP POP POP POP PUSH2 0x2A7 PUSH1 0x1 PUSH2 0x154 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x243 JUMP JUMPDEST DUP3 PUSH2 0x2CA PUSH2 0x284 SWAP3 PUSH2 0x26D PUSH2 0x2D1 SWAP7 DUP9 PUSH1 0x20 SWAP8 PUSH2 0x18D JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x18D JUMP JUMPDEST SWAP1 PUSH32 0x35BE58330ABB60221820BFD214BB857A6EA979DBF24009982022925A7FC137FF PUSH2 0x2FC DUP12 PUSH2 0x1D9 JUMP JUMPDEST SWAP1 PUSH2 0x329 PUSH2 0x312 PUSH2 0x30C DUP13 PUSH2 0x1D9 JUMP JUMPDEST SWAP5 PUSH2 0x1D9 JUMP JUMPDEST SWAP5 PUSH2 0x31C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 DUP10 DUP2 DUP9 DUP8 PUSH2 0x299 JUMP JUMPDEST POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E81097B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x81C609F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x48E05551 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x56 SWAP4 SWAP3 SWAP2 PUSH2 0x138 JUMP JUMPDEST PUSH2 0x47 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x47 SWAP1 SLOAD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x47 PUSH1 0x2 PUSH2 0x154 JUMP JUMPDEST ISZERO PUSH2 0x3A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x47 PUSH2 0x47 PUSH2 0x3F8 SWAP3 PUSH2 0x154 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x56 PUSH2 0x409 PUSH1 0x0 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x427 PUSH2 0x414 PUSH2 0x392 JUMP JUMPDEST SWAP2 DUP3 SWAP1 PUSH2 0x420 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ ISZERO PUSH2 0x39C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x47 PUSH1 0x1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x56 PUSH2 0x427 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH2 0x56 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x49F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST SWAP1 PUSH2 0x56 PUSH2 0x4B1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x47D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x49F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4E7 PUSH2 0x4E2 DUP4 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x506 JUMPI PUSH2 0x4FB RETURNDATASIZE PUSH2 0x4D5 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x92 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x50B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x37 JUMPI PUSH2 0x47 SWAP2 PUSH2 0x513 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x1AC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x37 JUMPI PUSH2 0x47 SWAP2 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP4 SWAP3 PUSH2 0x56D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 PUSH2 0x57A DUP5 PUSH2 0x154 JUMP JUMPDEST DUP3 EQ PUSH2 0x7C4 JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x5C5 JUMPI POP DUP3 SWAP4 SWAP5 POP PUSH2 0x5B2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 DUP1 SUB SWAP3 GAS CALL PUSH2 0x5C1 PUSH2 0x4EC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP3 DUP1 PUSH1 0x4 PUSH2 0x604 DUP3 SWAP6 PUSH2 0x5F5 DUP7 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP3 DUP13 PUSH2 0x5E5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 PUSH1 0x20 DUP8 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x47D JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD DUP3 DUP8 GAS CALL SWAP5 PUSH2 0x617 PUSH2 0x4EC JUMP JUMPDEST DUP7 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x77B JUMPI JUMPDEST POP PUSH2 0x62D JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP5 POP PUSH2 0x644 PUSH2 0x63F DUP5 SWAP7 PUSH2 0x1D9 JUMP JUMPDEST PUSH2 0x1D9 JUMP JUMPDEST SWAP1 PUSH4 0x70A08231 PUSH2 0x65D PUSH2 0x656 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x746 JUMPI DUP6 SWAP2 PUSH2 0x75D JUMPI JUMPDEST POP DUP4 GT PUSH2 0x74B JUMPI PUSH1 0x20 SWAP1 PUSH4 0xDD62ED3E SWAP3 PUSH2 0x6BB PUSH2 0x6A1 ADDRESS PUSH2 0x1D9 JUMP JUMPDEST SWAP5 PUSH2 0x6DA PUSH2 0x6AE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x746 JUMPI SWAP3 PUSH2 0x70E JUMPI JUMPDEST POP SWAP1 JUMPDEST LT PUSH2 0x6FC JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13BE252B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x6EE SWAP2 SWAP3 POP PUSH2 0x737 PUSH2 0x41C SWAP2 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x73F JUMPI JUMPDEST PUSH2 0x72F DUP2 DUP4 PUSH2 0x47D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x541 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x6EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x725 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x775 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x73F JUMPI PUSH2 0x72F DUP2 DUP4 PUSH2 0x47D JUMP JUMPDEST CODESIZE PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH2 0x785 DUP2 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x791 PUSH2 0x41C DUP7 PUSH2 0x154 JUMP JUMPDEST GT SWAP1 DUP2 PUSH2 0x7A0 JUMPI JUMPDEST POP CODESIZE PUSH2 0x621 JUMP JUMPDEST PUSH2 0x7BE SWAP2 POP DUP1 PUSH1 0x20 PUSH2 0x7B3 PUSH2 0x290 SWAP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x520 JUMP JUMPDEST CODESIZE PUSH2 0x799 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH9 0xBE60640235073D5A0B 0xB2 REVERT TIMESTAMP 0x4B SLT 0x4B 0xE1 0xDB 0xBF 0x4D PUSH15 0x885A9EC3B904EB635DAF64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"432:4834:17:-:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;1676:41:2;1716:1;;;:::i;:::-;;;;;;;:::i;:::-;;;:::o;1797:53::-;1821:22;1831:12;;:::i;:::-;1821:22;;:::i"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":60,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_array_struct_AirdropContent_calldata_dyn_calldata":{"entryPoint":214,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_array_struct_AirdropContent_calldata_dyn_calldata":{"entryPoint":166,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool_fromMemory":{"entryPoint":1312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":1299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":1345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":1091,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_packed_stringliteral_c5d2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c5d2":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":1188,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":1237,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1208,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_struct_AirdropContent_calldata_dyn_calldata":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_bytes_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_struct_AirdropContent_calldata_dyn_calldata":{"entryPoint":397,"id":null,"parameterSlots":3,"returnSlots":1},"cleanup_address":{"entryPoint":74,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_ENTERED":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NATIVE_TOKEN":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":1070,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":473,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":366,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":353,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":340,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":464,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":444,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_NATIVE_TOKEN":{"entryPoint":88,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_airdrop":{"entryPoint":284,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_offsett_uint256":{"entryPoint":897,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":1260,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1149,"id":null,"parameterSlots":2,"returnSlots":0},"fun_airdrop":{"entryPoint":885,"id":3384,"parameterSlots":4,"returnSlots":0},"fun_airdrop_inner":{"entryPoint":482,"id":null,"parameterSlots":4,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":1080,"id":273,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":1020,"id":265,"parameterSlots":0,"returnSlots":0},"fun_transferCurrencyWithReturnVal":{"entryPoint":1377,"id":3500,"parameterSlots":4,"returnSlots":1},"getter_fun_NATIVE_TOKEN":{"entryPoint":null,"id":3273,"parameterSlots":0,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":312,"id":250,"parameterSlots":4,"returnSlots":0},"panic_error_0x32":{"entryPoint":375,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1127,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_address":{"entryPoint":418,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_uint256":{"entryPoint":434,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":904,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_ebf7":{"entryPoint":924,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":55,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":1365,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":135,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1291,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806331f7d964146100325763da26dbf1036100375761011c565b610058565b600080fd5b600091031261003757565b90565b6001600160a01b031690565b565b346100375761006836600461003c565b60405173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152602090f35b6001600160a01b0381165b0361003757565b9050359061005682610087565b909182601f830112156100375781359167ffffffffffffffff831161003757602001926040830284011161003757565b91606083830312610037576100eb8284610099565b926100f98360208301610099565b92604082013567ffffffffffffffff81116100375761011892016100a6565b9091565b61013361012a3660046100d6565b92919091610375565b604051005b9061014c9392916101476103fc565b6101e2565b610056610438565b6100476100476100479290565b61004a6100476100479290565b61004790610161565b634e487b7160e01b600052603260045260246000fd5b919081101561019d576040020190565b610177565b3561004781610087565b80610092565b35610047816101ac565b6100479061004a906001600160a01b031682565b610047906101bc565b610047906101d0565b929392919084936000906101f582610154565b86146103635761020761004a8361016e565b6001600160a01b038616146103515773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b0386161461033f5761024382610154565b865b811015610335576102ab81898188876102946102908d6102738461026d6102459c8a8961018d565b016101a2565b8d61028a60206102848a8c8b61018d565b016101b2565b92610561565b1590565b6102b2575b505050506102a76001610154565b0190565b9050610243565b826102ca6102849261026d6102d1968860209761018d565b948c61018d565b907f35be58330abb60221820bfd214bb857a6ea979dbf24009982022925a7fc137ff6102fc8b6101d9565b9061032961031261030c8c6101d9565b946101d9565b9461031c60405190565b9182918290815260200190565b0390a489818887610299565b5095505050505050565b604051635e81097b60e01b8152600490fd5b6040516381c609f760e01b8152600490fd5b6040516348e0555160e11b8152600490fd5b90610056939291610138565b6100479081565b6100479054610381565b6100476002610154565b156103a357565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b906100476100476103f892610154565b9055565b6100566104096000610388565b610427610414610392565b918290610420565b9190565b141561039c565b60006103e8565b6100476001610154565b61005661042761042e565b6001600160a01b039182168152911660208201526060810192916100569160400152565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761049f57604052565b610467565b906100566104b160405190565b928361047d565b67ffffffffffffffff811161049f57602090601f01601f19160190565b906104e76104e2836104b8565b6104a4565b918252565b3d15610506576104fb3d6104d5565b903d6000602084013e565b606090565b801515610092565b905051906100568261050b565b906020828203126100375761004791610513565b90505190610056826101ac565b906020828203126100375761004791610534565b6040513d6000823e3d90fd5b9190939261056d600090565b5060009261057a84610154565b82146107c45773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b038216036105c55750829394506105b260405190565b90818003925af16105c16104ec565b5090565b9280600461060482956105f5866323b872dd60e01b928c6105e560405190565b9687956020870190815201610443565b6020820181038252038261047d565b80519060200182875af1946106176104ec565b861590811561077b575b5061062d575b50505050565b909192945061064461063f84966101d9565b6101d9565b906370a0823161065d61065660405190565b9160e01b90565b81526001600160a01b0382166004820152602081602481865afa90811561074657859161075d575b50831161074b5760209063dd62ed3e926106bb6106a1306101d9565b946106da6106ae60405190565b9687958694859460e01b90565b84526001600160a01b0390811660048501521660248301526044820190565b03915afa928315610746579261070e575b50905b106106fc5738808080610627565b6040516313be252b60e01b8152600490fd5b6106ee91925061073761041c9160203d811161073f575b61072f818361047d565b810190610541565b9291506106eb565b503d610725565b610555565b604051631e9acf1760e31b8152600490fd5b610775915060203d811161073f5761072f818361047d565b38610685565b9050610785815190565b61079161041c86610154565b1190816107a0575b5038610621565b6107be91508060206107b3610290935190565b818301019101610520565b38610799565b506001945050505056fea2646970667358221220c268be60640235073d5a0bb2fd424b124be1dbbf4d6e885a9ec3b904eb635daf64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x32 JUMPI PUSH4 0xDA26DBF1 SUB PUSH2 0x37 JUMPI PUSH2 0x11C JUMP JUMPDEST PUSH2 0x58 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x37 JUMPI JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x37 JUMPI PUSH2 0x68 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x37 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x87 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x37 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x37 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x40 DUP4 MUL DUP5 ADD GT PUSH2 0x37 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP4 DUP4 SUB SLT PUSH2 0x37 JUMPI PUSH2 0xEB DUP3 DUP5 PUSH2 0x99 JUMP JUMPDEST SWAP3 PUSH2 0xF9 DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x99 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37 JUMPI PUSH2 0x118 SWAP3 ADD PUSH2 0xA6 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SWAP1 PUSH2 0x14C SWAP4 SWAP3 SWAP2 PUSH2 0x147 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x56 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x47 PUSH2 0x47 PUSH2 0x47 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x4A PUSH2 0x47 PUSH2 0x47 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x47 SWAP1 PUSH2 0x161 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x19D JUMPI PUSH1 0x40 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST CALLDATALOAD PUSH2 0x47 DUP2 PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH2 0x92 JUMP JUMPDEST CALLDATALOAD PUSH2 0x47 DUP2 PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x47 SWAP1 PUSH2 0x4A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x47 SWAP1 PUSH2 0x1BC JUMP JUMPDEST PUSH2 0x47 SWAP1 PUSH2 0x1D0 JUMP JUMPDEST SWAP3 SWAP4 SWAP3 SWAP2 SWAP1 DUP5 SWAP4 PUSH1 0x0 SWAP1 PUSH2 0x1F5 DUP3 PUSH2 0x154 JUMP JUMPDEST DUP7 EQ PUSH2 0x363 JUMPI PUSH2 0x207 PUSH2 0x4A DUP4 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x351 JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ PUSH2 0x33F JUMPI PUSH2 0x243 DUP3 PUSH2 0x154 JUMP JUMPDEST DUP7 JUMPDEST DUP2 LT ISZERO PUSH2 0x335 JUMPI PUSH2 0x2AB DUP2 DUP10 DUP2 DUP9 DUP8 PUSH2 0x294 PUSH2 0x290 DUP14 PUSH2 0x273 DUP5 PUSH2 0x26D PUSH2 0x245 SWAP13 DUP11 DUP10 PUSH2 0x18D JUMP JUMPDEST ADD PUSH2 0x1A2 JUMP JUMPDEST DUP14 PUSH2 0x28A PUSH1 0x20 PUSH2 0x284 DUP11 DUP13 DUP12 PUSH2 0x18D JUMP JUMPDEST ADD PUSH2 0x1B2 JUMP JUMPDEST SWAP3 PUSH2 0x561 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2B2 JUMPI JUMPDEST POP POP POP POP PUSH2 0x2A7 PUSH1 0x1 PUSH2 0x154 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x243 JUMP JUMPDEST DUP3 PUSH2 0x2CA PUSH2 0x284 SWAP3 PUSH2 0x26D PUSH2 0x2D1 SWAP7 DUP9 PUSH1 0x20 SWAP8 PUSH2 0x18D JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x18D JUMP JUMPDEST SWAP1 PUSH32 0x35BE58330ABB60221820BFD214BB857A6EA979DBF24009982022925A7FC137FF PUSH2 0x2FC DUP12 PUSH2 0x1D9 JUMP JUMPDEST SWAP1 PUSH2 0x329 PUSH2 0x312 PUSH2 0x30C DUP13 PUSH2 0x1D9 JUMP JUMPDEST SWAP5 PUSH2 0x1D9 JUMP JUMPDEST SWAP5 PUSH2 0x31C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 DUP10 DUP2 DUP9 DUP8 PUSH2 0x299 JUMP JUMPDEST POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E81097B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x81C609F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x48E05551 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x56 SWAP4 SWAP3 SWAP2 PUSH2 0x138 JUMP JUMPDEST PUSH2 0x47 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x47 SWAP1 SLOAD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x47 PUSH1 0x2 PUSH2 0x154 JUMP JUMPDEST ISZERO PUSH2 0x3A3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x47 PUSH2 0x47 PUSH2 0x3F8 SWAP3 PUSH2 0x154 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x56 PUSH2 0x409 PUSH1 0x0 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x427 PUSH2 0x414 PUSH2 0x392 JUMP JUMPDEST SWAP2 DUP3 SWAP1 PUSH2 0x420 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ ISZERO PUSH2 0x39C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x47 PUSH1 0x1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x56 PUSH2 0x427 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH2 0x56 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x49F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST SWAP1 PUSH2 0x56 PUSH2 0x4B1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x47D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x49F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4E7 PUSH2 0x4E2 DUP4 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x506 JUMPI PUSH2 0x4FB RETURNDATASIZE PUSH2 0x4D5 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x92 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x50B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x37 JUMPI PUSH2 0x47 SWAP2 PUSH2 0x513 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x1AC JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x37 JUMPI PUSH2 0x47 SWAP2 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP4 SWAP3 PUSH2 0x56D PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 PUSH2 0x57A DUP5 PUSH2 0x154 JUMP JUMPDEST DUP3 EQ PUSH2 0x7C4 JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x5C5 JUMPI POP DUP3 SWAP4 SWAP5 POP PUSH2 0x5B2 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 DUP1 SUB SWAP3 GAS CALL PUSH2 0x5C1 PUSH2 0x4EC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP3 DUP1 PUSH1 0x4 PUSH2 0x604 DUP3 SWAP6 PUSH2 0x5F5 DUP7 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP3 DUP13 PUSH2 0x5E5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 PUSH1 0x20 DUP8 ADD SWAP1 DUP2 MSTORE ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x47D JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD DUP3 DUP8 GAS CALL SWAP5 PUSH2 0x617 PUSH2 0x4EC JUMP JUMPDEST DUP7 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x77B JUMPI JUMPDEST POP PUSH2 0x62D JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP5 POP PUSH2 0x644 PUSH2 0x63F DUP5 SWAP7 PUSH2 0x1D9 JUMP JUMPDEST PUSH2 0x1D9 JUMP JUMPDEST SWAP1 PUSH4 0x70A08231 PUSH2 0x65D PUSH2 0x656 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x746 JUMPI DUP6 SWAP2 PUSH2 0x75D JUMPI JUMPDEST POP DUP4 GT PUSH2 0x74B JUMPI PUSH1 0x20 SWAP1 PUSH4 0xDD62ED3E SWAP3 PUSH2 0x6BB PUSH2 0x6A1 ADDRESS PUSH2 0x1D9 JUMP JUMPDEST SWAP5 PUSH2 0x6DA PUSH2 0x6AE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x746 JUMPI SWAP3 PUSH2 0x70E JUMPI JUMPDEST POP SWAP1 JUMPDEST LT PUSH2 0x6FC JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13BE252B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x6EE SWAP2 SWAP3 POP PUSH2 0x737 PUSH2 0x41C SWAP2 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x73F JUMPI JUMPDEST PUSH2 0x72F DUP2 DUP4 PUSH2 0x47D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x541 JUMP JUMPDEST SWAP3 SWAP2 POP PUSH2 0x6EB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x725 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E9ACF17 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x775 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x73F JUMPI PUSH2 0x72F DUP2 DUP4 PUSH2 0x47D JUMP JUMPDEST CODESIZE PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH2 0x785 DUP2 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x791 PUSH2 0x41C DUP7 PUSH2 0x154 JUMP JUMPDEST GT SWAP1 DUP2 PUSH2 0x7A0 JUMPI JUMPDEST POP CODESIZE PUSH2 0x621 JUMP JUMPDEST PUSH2 0x7BE SWAP2 POP DUP1 PUSH1 0x20 PUSH2 0x7B3 PUSH2 0x290 SWAP4 MLOAD SWAP1 JUMP JUMPDEST DUP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x520 JUMP JUMPDEST CODESIZE PUSH2 0x799 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PUSH9 0xBE60640235073D5A0B 0xB2 REVERT TIMESTAMP 0x4B SLT 0x4B 0xE1 0xDB 0xBF 0x4D PUSH15 0x885A9EC3B904EB635DAF64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"432:4834:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;678:81::-;;:::o;432:4834::-;-1:-1:-1;;;;;432:4834:17;678:81;:::o;432:4834::-;:::o;:::-;;;;;;;;:::i;:::-;;;717:42;432:4834;;;;;;-1:-1:-1;;;;;432:4834:17;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;-1:-1:-1;2227:103:2;;2292:1;2227:103;;;;;:::i;:::-;2292:1;:::i;:::-;;;:::i;432:4834:17:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;432:4834:17;;;;;;;:::i;:::-;;;;:::i;1598:1057::-;;;;;;;1814:1;;1795:20;;;;:::i;:::-;;;1791:72;;1877:26;1893:10;;;:::i;1877:26::-;-1:-1:-1;;;;;432:4834:17;;1877:26;1873:82;;717:42;-1:-1:-1;;;;;432:4834:17;;1969:28;1965:76;;2095:13;;;:::i;:::-;2110:7;;;;;;;2618:6;2305:11;;;;;2366:8;2248:99;2305:11;:21;:11;;2110:7;2305:11;;;;:::i;:::-;:21;;:::i;:::-;2328:11;:18;;:11;;;;;:::i;:::-;:18;;:::i;:::-;2248:99;;:::i;:::-;2366:8;;432:4834;2366:8;2362:177;;2095:13;2623:1;;;;2618:6;2623:1;2618:6;:::i;:::-;432:4834;678:81;;2618:6;2095:13;;;;2362:177;2482:11;:21;2505:11;2482;;2505:18;2482:11;;2505:18;2482:11;;:::i;:21::-;2505:11;;;:::i;:18::-;2442:82;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;432:4834;;;;2442:82;;;;;432:4834;;;;;;;2442:82;;;;2362:177;;;;;;2110:7;;;;;;;;;1598:1057::o;1965:76::-;432:4834;;-1:-1:-1;;;2020:10:17;;;;;1873:82;432:4834;;-1:-1:-1;;;1926:18:17;;;;2020:10;1791:72;432:4834;;-1:-1:-1;;;1838:14:17;;;;2020:10;1598:1057;;;;;;;:::i;432:4834::-;;;;;;;;;;:::i;1723:37:2:-;1759:1;;;:::i;:::-;;;;:::o;:::-;432:4834:17;;-1:-1:-1;;;1759:1:2;;;;;;;;;;;;;;;;;;;2020:10:17;1759:1:2;;;;;;;:::i;:::-;;;:::o;2336:287::-;2598:18;2468:7;;;:::i;:::-;2460:63;2479:8;;:::i;:::-;2468:19;;;;432:4834:17;2468:19:2;;432:4834:17;;2468:19:2;;;2460:63;:::i;:::-;2598:18;;:::i;1676:41::-;1716:1;;;:::i;2629:209::-;2809:22;2819:12;;:::i;432:4834:17:-;-1:-1:-1;;;;;432:4834:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;432:4834:17;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;432:4834:17;1759:1:2;;:::o;432:4834:17:-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;678:81;:::o;432:4834::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3076:1333;;;;;3251:12;432:4834;;;3251:12;3337:1;;3326:12;;;;:::i;:::-;;;3322:85;;717:42;-1:-1:-1;;;;;432:4834:17;;3494:25;3490:913;;3548:30;;;;;;432:4834;;;;3548:30;;;;;;;;;;:::i;:::-;;3490:913;3076:1333::o;3490:913::-;3818:28;;3795:73;;3818:28;;3795:73;3818:28;;;;3795:73;;;432:4834;;;;3795:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;3780:89;;;;;;;;;;;;:::i;:::-;3992:8;;:60;;;;;3490:913;3988:405;;;3490:913;;;;;3076:1333::o;3988:405::-;4072:15;;;;;4110:27;:17;4072:15;4110:17;;:::i;:::-;:27;:::i;:::-;;;:34;;432:4834;;;;4110:34;;432:4834;;;;4110:34;;;-1:-1:-1;;;;;432:4834:17;;4110:34;;;432:4834;4110:34;;432:4834;4110:34;;;;;;;;;;;;;3988:405;-1:-1:-1;4110:44:17;-1:-1:-1;4106:119:17;;4247:49;:27;;4290:4;4247:49;4282:13;4290:4;4282:13;:::i;:::-;4247:49;;;432:4834;;;;4247:49;;;;;;;;432:4834;;;;4247:49;;;-1:-1:-1;;;;;432:4834:17;;;4247:49;;;432:4834;;;;;;;;;;;4247:49;;;;;;;;;;;;;3988:405;-1:-1:-1;4247:59:17;;;4243:136;;3988:405;;;;;;4243:136;432:4834;;-1:-1:-1;;;4337:23:17;;;;2020:10;4247:49;:59;:49;;;;:59;:49;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;4106:119::-;432:4834;;-1:-1:-1;;;4185:21:17;;;;2020:10;4110:34;;;;;;;;;;;;;;:::i;:::-;;;;3992:60;4005:12;;;;432:4834;;;4005:12;:16;;;;:::i;:::-;;:46;;;;3992:60;;;;;4005:46;4025:26;4026:25;;;;;;;432:4834;;;4026:25;;;;;;;;:::i;4025:26::-;4005:46;;;3322:85;-1:-1:-1;3364:4:17;;-1:-1:-1;;;;3382:14:17:o"},"gasEstimates":{"creation":{"codeDepositCost":"410400","executionCost":"infinite","totalCost":"infinite"},"external":{"NATIVE_TOKEN()":"186","airdrop(address,address,(address,uint256)[])":"infinite"},"internal":{"_safeTransferERC20(address,address,address,uint256)":"infinite","_transferCurrencyWithReturnVal(address,address,address,uint256)":"infinite"}},"methodIdentifiers":{"NATIVE_TOKEN()":"31f7d964","airdrop(address,address,(address,uint256)[])":"da26dbf1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRecipients\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotERC20\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAddressZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropFailed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AirdropERC20.AirdropContent[]\",\"name\":\"contents\",\"type\":\"tuple[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@neuro_0x\",\"details\":\"A contract for distributing ERC20 tokens to a list of recipients.\",\"events\":{\"AirdropFailed(address,address,address,uint256)\":{\"details\":\"Emitted when an failed airdrop occurs.\"}},\"kind\":\"dev\",\"methods\":{\"airdrop(address,address,(address,uint256)[])\":{\"details\":\"needs Approval\",\"params\":{\"contents\":\"A list of recipients and amounts for the airdrop.\",\"tokenAddress\":\"The address of the token to be airdropped.\",\"tokenOwner\":\"The address of the token owner initiating the airdrop.\"}}},\"stateVariables\":{\"NATIVE_TOKEN\":{\"details\":\"The address of the native token (ETH).\"}},\"title\":\"AirdropERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"airdrop(address,address,(address,uint256)[])\":{\"notice\":\"Allows the user to distribute ERC20 tokens to a list of addresses.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AirdropERC20.sol\":\"AirdropERC20\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"src/AirdropERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport { ReentrancyGuard } from \\\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\\\";\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport { SafeTransfer } from \\\"./lib/SafeTransfer.sol\\\";\\n\\n/**\\n * @title AirdropERC20\\n * @author @neuro_0x\\n * @dev A contract for distributing ERC20 tokens to a list of recipients.\\n */\\ncontract AirdropERC20 is ReentrancyGuard {\\n    error NoRecipients();\\n    error TokenAddressZero();\\n    error NotERC20();\\n    error InsufficientBalance();\\n    error InsufficientAllowance();\\n\\n    /// @dev The address of the native token (ETH).\\n    address public constant NATIVE_TOKEN = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    /// @dev Emitted when an failed airdrop occurs.\\n    event AirdropFailed(\\n        address indexed tokenAddress, address indexed tokenOwner, address indexed recipient, uint256 amount\\n    );\\n\\n    /**\\n     * @dev Details of amount and recipient for airdropped token.\\n     * @param recipient The recipient of the tokens.\\n     * @param amount The quantity of tokens to airdrop.\\n     */\\n    struct AirdropContent {\\n        address recipient;\\n        uint256 amount;\\n    }\\n\\n    /**\\n     * @notice Allows the user to distribute ERC20 tokens to a list of addresses.\\n     * @param tokenAddress The address of the token to be airdropped.\\n     * @param tokenOwner The address of the token owner initiating the airdrop.\\n     * @param contents A list of recipients and amounts for the airdrop.\\n     *\\n     * @dev needs Approval\\n     *\\n     */\\n    function airdrop(\\n        address tokenAddress,\\n        address tokenOwner,\\n        AirdropContent[] calldata contents\\n    )\\n        external\\n        payable\\n        nonReentrant\\n    {\\n        if (contents.length == 0) {\\n            revert NoRecipients();\\n        }\\n\\n        if (tokenAddress == address(0)) {\\n            revert TokenAddressZero();\\n        }\\n\\n        if (tokenAddress == NATIVE_TOKEN) {\\n            revert NotERC20();\\n        }\\n\\n        uint256 len = contents.length;\\n        for (uint256 i = 0; i < len;) {\\n            // Attempt to transfer the specified amount of tokens to the recipient\\n            bool success =\\n                _transferCurrencyWithReturnVal(tokenAddress, tokenOwner, contents[i].recipient, contents[i].amount);\\n\\n            if (!success) {\\n                // Log the failed transfer\\n                emit AirdropFailed(tokenAddress, tokenOwner, contents[i].recipient, contents[i].amount);\\n            }\\n\\n            // Increment the counter\\n            unchecked {\\n                i += 1;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to transfer the specified currency (either ERC20 or native) from the sender to the recipient.\\n     * @param _currency The address of the currency to be transferred.\\n     * @param _from The sender's address.\\n     * @param _to The recipient's address.\\n     * @param _amount The amount to be transferred.\\n     * @return success A boolean indicating if the transfer was successful.\\n     */\\n    function _transferCurrencyWithReturnVal(\\n        address _currency,\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    )\\n        private\\n        returns (bool success)\\n    {\\n        // If _amount is zero, return true\\n        if (_amount == 0) {\\n            success = true;\\n            return success;\\n        }\\n\\n        // Attempt to transfer if the currency is the native token (ETH)\\n        if (_currency == NATIVE_TOKEN) {\\n            (success,) = _to.call{ value: _amount }(\\\"\\\");\\n        } else {\\n            // Attempt to transfer if the currency is an ERC20 token\\n            (bool success_, bytes memory data_) = // solhint-disable-next-line avoid-low-level-calls\\n             _currency.call(abi.encodeWithSelector(IERC20.transferFrom.selector, _from, _to, _amount));\\n\\n            success = success_;\\n\\n            // If the transfer failed, check the allowance and balance\\n            if (!success || (data_.length > 0 && !abi.decode(data_, (bool)))) {\\n                success = false;\\n\\n                if (IERC20(_currency).balanceOf(_from) < _amount) {\\n                    revert InsufficientBalance();\\n                }\\n\\n                if (IERC20(_currency).allowance(_from, address(this)) < _amount) {\\n                    revert InsufficientAllowance();\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers ERC20 tokens from the sender to the recipient.\\n     * @param _currency The address of the ERC20 token to be transferred.\\n     * @param _from The sender's address.\\n     * @param _to The recipient's address.\\n     * @param _amount The amount to be transferred.\\n     */\\n    function _safeTransferERC20(address _currency, address _from, address _to, uint256 _amount) private {\\n        // if _from is _to, return\\n        if (_from == _to) {\\n            return;\\n        }\\n\\n        // If _from is the contract, transfer the ERC20 token\\n        if (_from == address(this)) {\\n            SafeTransfer.safeTransfer(_currency, _to, _amount);\\n        } else {\\n            // Otherwise, transfer the ERC20 token via the allowance mechanism\\n            SafeTransfer.safeTransferFrom(_currency, _from, _to, _amount);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2efb9d174663edf6d1b50934f588aff94be4c66108c20cbd5cd6e2c012d17b8f\",\"license\":\"GPL-3.0\"},\"src/lib/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nlibrary SafeTransfer {\\n    error TransferFailed();\\n\\n    /**\\n     * @dev Sends `amount` (in wei) ETH to `to`.\\n     * @param to The address to send the ETH to.\\n     * @param amount The amount of ETH to send.\\n     */\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Transfer the ETH and check if it succeeded or not.\\n            if iszero(call(gas(), to, amount, 0, 0, 0, 0)) {\\n                // Store the function selector of `ETHTransferFailed()`.\\n                // bytes4(keccak256(bytes(\\\"ETHTransferFailed()\\\"))) = 0xb12d13eb\\n                mstore(0x00, 0xb12d13eb)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Validates that the address is not the zero address using assembly.\\n     * @dev Reverts if the address is the zero address.\\n     * @param addr The address to validate.\\n     */\\n    function validateAddress(address addr) internal pure {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            if iszero(shl(96, addr)) {\\n                // Store the function selector of `ZeroAddress()`.\\n                // bytes4(keccak256(bytes(\\\"ZeroAddress()\\\"))) = 0xd92e233d\\n                mstore(0x00, 0xd92e233d)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n     * @dev Reverts if the ERC20 transfer fails.\\n     * @param tokenAddress The address of the ERC20 token.\\n     * @param from The address to transfer the tokens from.\\n     * @param to The address to transfer the tokens to.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(address tokenAddress, address from, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transferFrom(address,address,uint256)\\\", from, to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n    /// @dev Reverts if the ERC20 transfer fails.\\n    /// @param tokenAddress The address of the ERC20 token.\\n    /// @param to The address to transfer the tokens to.\\n    /// @param amount The amount of tokens to transfer.\\n    function safeTransfer(address tokenAddress, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xcd0139a88ea2bcaa2dc562192f25f6fe7e18dc526081b42f9c1f8ef47a6aefa9\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":231,"contract":"src/AirdropERC20.sol:AirdropERC20","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"airdrop(address,address,(address,uint256)[])":{"notice":"Allows the user to distribute ERC20 tokens to a list of addresses."}},"version":1}}},"src/AirdropERC20Claimable.sol":{"AirdropERC20Claimable":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenOwner","type":"address"},{"internalType":"address","name":"_airdropTokenAddress","type":"address"},{"internalType":"uint256","name":"_airdropAmount","type":"uint256"},{"internalType":"uint256","name":"_expirationTimestamp","type":"uint256"},{"internalType":"uint256","name":"_maxWalletClaimCount","type":"uint256"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AirdropExpired","type":"error"},{"inputs":[],"name":"AlreadyClaimedMax","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"airdropTokenAddress","type":"address"},{"internalType":"uint256","name":"airdropAmount","type":"uint256"}],"name":"InvalidAirdropParameters","type":"error"},{"inputs":[],"name":"InvalidTransferAmount","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"claimer","type":"address"},{"indexed":false,"internalType":"uint256","name":"quantityClaimed","type":"uint256"}],"name":"TokensClaimed","type":"event"},{"inputs":[],"name":"airdropTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"availableAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"proofs","type":"bytes32[]"},{"internalType":"uint256","name":"proofMaxQuantityForWallet","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"expirationTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxWalletClaimCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"}],"name":"totalClaimedByWallet","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"claimant","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32[]","name":"proofs","type":"bytes32[]"},{"internalType":"uint256","name":"proofMaxQuantityForWallet","type":"uint256"}],"name":"verifyClaim","outputs":[],"stateMutability":"view","type":"function"}],"devdoc":{"author":"@neuro_0x","details":"A contract for airdropping ERC20 tokens to specific recipients based on Merkle proofs.","events":{"TokensClaimed(address,uint256)":{"details":"Emitted when tokens are claimed"}},"kind":"dev","methods":{"claim(uint256,bytes32[],uint256)":{"details":"Claims tokens from the airdrop.","params":{"amount":"The quantity of tokens to claim.","proofMaxQuantityForWallet":"The maximum quantity of tokens that can be claimed by a wallet.","proofs":"Claims proofs."}},"constructor":{"details":"Initializes the contract.","params":{"_airdropAmount":"The quantity of tokens available for airdrop.","_airdropTokenAddress":"The address of the token to be airdropped.","_expirationTimestamp":"Expiration timestamp of the airdrop.","_maxWalletClaimCount":"Maximum number of tokens that can be claimed by a wallet if not in the whitelist.","_merkleRoot":"Merkle root of the whitelist.","_tokenOwner":"The owner of the token to be airdropped."}},"verifyClaim(address,uint256,bytes32[],uint256)":{"details":"Verifies the claim and reverts if the claim is invalid.","params":{"amount":"The quantity of tokens to claim.","claimant":"The address of the claimer.","proofMaxQuantityForWallet":"The maximum quantity of tokens that can be claimed by a wallet.","proofs":"Claims proofs."}}},"stateVariables":{"airdropTokenAddress":{"details":"The address of the token to be airdropped."},"availableAmount":{"details":"The quantity of tokens available for airdrop."},"expirationTimestamp":{"details":"Expiration timestamp of the airdrop."},"maxWalletClaimCount":{"details":"Maximum number of tokens that can be claimed by a wallet if not in the whitelist."},"merkleRoot":{"details":"Merkle root of the whitelist."},"tokenOwner":{"details":"The owner of the token to be airdropped."},"totalClaimedByWallet":{"details":"Mapping from address => total number of tokens a wallet has claimed."}},"title":"AirdropERC20Claimable","version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_uint256t_uint256t_bytes32_fromMemory":{"entryPoint":218,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256":{"entryPoint":407,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":122,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":147,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_AirdropERC20Claimable":{"entryPoint":597,"id":3665,"parameterSlots":6,"returnSlots":0},"convert_address_to_address":{"entryPoint":498,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":380,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":364,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":391,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":487,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":465,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_AirdropERC20Claimable":{"entryPoint":321,"id":null,"parameterSlots":0,"returnSlots":6},"finalize_allocation":{"entryPoint":82,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":60,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":541,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":444,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":509,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32":{"entryPoint":580,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":552,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":162,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":196,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052346200003757620000256200001862000141565b9493909392919262000255565b604051610a57620003418239610a5790f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200007457604052565b6200003c565b90620000916200008960405190565b928362000052565b565b6001600160a01b031690565b90565b6001600160a01b0381165b036200003757565b905051906200009182620000a2565b80620000ad565b905051906200009182620000c4565b909160c0828403126200003757620000f38383620000b5565b92620001038160208501620000b5565b92620001138260408301620000cb565b926200009f620001278460608501620000cb565b93620001378160808601620000cb565b9360a001620000cb565b6200016462000d988038038062000158816200007a565b928339810190620000da565b909192939495565b620000936200009f6200009f9290565b6200009f906200016c565b6200009f6200009f6200009f9290565b6001600160a01b03918216815291166020820152606081019291620000919160400152565b906001600160a01b03905b9181191691161790565b6200009f9062000093906001600160a01b031682565b6200009f90620001d1565b6200009f90620001e7565b90620002116200009f6200021992620001f2565b8254620001bc565b9055565b9060001990620001c7565b906200023c6200009f620002199262000187565b82546200021d565b906200023c6200009f620002199290565b959493929190956000906200026a826200017c565b6001600160a01b0381166001600160a01b0383161490811562000323575b5080156200030f575b620002e357620002d392620002c3620000919899620002db979694620002bd620002cb956001620001fd565b620001fd565b600262000228565b600362000228565b600462000228565b600562000244565b87906200030b84620002f460405190565b633d7c241d60e01b81529384936004850162000197565b0390fd5b506200031b8262000187565b831462000291565b6001600160a01b031690506001600160a01b03891614386200028856fe6080604052600436101561001257600080fd5b60003560e01c806305981769146100a2578063097b3cdb1461009d5780632eb4a7ab146100985780637dc680771461009357806391f7cfb91461008e5780639f43ddd214610089578063a3e6761014610084578063b73e0e8b1461007f5763f339f526036100a7576103ba565b61035b565b610329565b6102d1565b6102aa565b610283565b6101ff565b6101d2565b6100e2565b600080fd5b60009103126100a757565b6100c2916008021c81565b90565b906100c291546100b7565b6100c2600060046100c5565b9052565b565b346100a7576100f23660046100ac565b61010e6100fd6100d0565b6040515b9182918290815260200190565b0390f35b6001600160a01b031690565b61012781610112565b036100a757565b905035906100e08261011e565b80610127565b905035906100e08261013b565b909182601f830112156100a75781359167ffffffffffffffff83116100a75760200192602083028401116100a757565b9190916080818403126100a757610195838261012e565b926101a38160208401610141565b92604083013567ffffffffffffffff81116100a7576101c7836100c292860161014e565b939094606001610141565b346100a7576101ee6101e536600461017e565b93929092610573565b604051005b6100c2600060056100c5565b346100a75761020f3660046100ac565b61010e6100fd6101f3565b906020828203126100a7576100c29161012e565b6100c290610112906001600160a01b031682565b6100c29061022e565b6100c290610242565b9061025e9061024b565b600052602052604060002090565b6100c29061027e600691600092610254565b6100c5565b346100a75761010e6100fd61029936600461021a565b61026c565b6100c2600060026100c5565b346100a7576102ba3660046100ac565b61010e6100fd61029e565b6100c2600060036100c5565b346100a7576102e13660046100ac565b61010e6100fd6102c5565b6100c2916008021c610112565b906100c291546102ec565b6100c2600060016102f9565b6100dc90610112565b6020810192916100e09190610310565b346100a7576103393660046100ac565b61010e610344610304565b60405191829182610319565b6100c26000806102f9565b346100a75761036b3660046100ac565b61010e610344610350565b906060828203126100a75761038b8183610141565b92602083013567ffffffffffffffff81116100a7576103af836100c292860161014e565b939094604001610141565b346100a7576101ee6103cd366004610376565b33926103db92908585610573565b6103e582826108c1565b61041c6104127f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4309261024b565b9261010160405190565b0390a2565b6100c29081565b6100c29054610421565b6100c26100c26100c29290565b60601b90565b6100c29061043f565b61045a6100dc91610112565b610445565b601481610472610478936020969561044e565b01918252565b0190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176104b457604052565b61047c565b906100e06104c660405190565b9283610492565b67ffffffffffffffff81116104b45760208091020190565b909291926104fa6104f5826104cd565b6104b9565b93818552602080860192028301928184116100a757915b83831061051e5750505050565b6020809161052c8486610141565b815201920191610511565b6100c29136916104e5565b634e487b7160e01b600052601160045260246000fd5b9190610563565b9290565b820180921161056e57565b610542565b909392906000926105846005610428565b9260009361059b6105976100c287610432565b9190565b03610678575b50506105b16105b6916006610254565b610428565b6105bf82610432565b85148015610663575b610651576105d66003610428565b6105df83610432565b8114159081610646575b5061063457610606936105979361055f9350156106235794610558565b1161060d57565b604051630ce2eab560e11b8152600490fd5b0390fd5b5061062e6004610428565b94610558565b604051635228cdbf60e01b8152600490fd5b9050421015386105e9565b604051630f16a02160e21b8152600490fd5b506106716100c26002610428565b85116105c8565b6105b69294506105b1916106dd916106d86106936005610428565b916106b36106bf8b8b6106a560405190565b93849260208401928361045f565b90810382520382610492565b6106d16106ca825190565b9160200190565b2093610537565b6106e4565b93916105a1565b61055f6106fe9293610597926106f8600090565b5061074a565b1490565b600019811461056e5760010190565b634e487b7160e01b600052603260045260246000fd5b90610730825190565b811015610741576020809102010190565b610711565b5190565b6107546000610432565b915b6107616100c2835190565b8310156107935761078761078d9161078161077c8686610727565b610746565b90610799565b92610702565b91610756565b91505090565b818110156107b457906100c291600052602052604060002090565b6100c291600052602052604060002090565b906100c26100c26107d692610432565b9055565b9190820391821161056e57565b6100c290610112565b6100c290546107e7565b801515610127565b905051906100e0826107fa565b906020828203126100a7576100c291610802565b9160206100e092949361083e60408201966000830190610310565b0152565b6040513d6000823e3d90fd5b60409061083e6100e0949695939661086e60608401986000850190610310565b6020830190610310565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b156108a857565b60405162461bcd60e51b81528061061f60048201610878565b906108e86108d0336006610254565b6108e2836108dd83610428565b610558565b906107c6565b6109056108fe826108f96002610428565b6107da565b60026107c6565b61091a61091561091560006107f0565b61024b565b9063a9059cbb61093361092c60405190565b9160e01b90565b815260208180610947858860048401610823565b03816000875af180156109ee5761096491600091610a0557501590565b6109f35760209161099960006323b872dd6109a461098260016107f0565b9561098c60405190565b9889978896879560e01b90565b85526004850161084e565b03925af180156109ee576100e0916000916109c0575b506108a1565b6109e1915060203d81116109e7575b6109d98183610492565b81019061080f565b386109ba565b503d6109cf565b610842565b6040516312171d8360e31b8152600490fd5b610a1d915060203d81116109e7576109d98183610492565b159056fea26469706673582212207661dd8897b171d24341442e29fdf264e9fff91a08a7d421ce787dbf17ceaac064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x37 JUMPI PUSH3 0x25 PUSH3 0x18 PUSH3 0x141 JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH3 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA57 PUSH3 0x341 DUP3 CODECOPY PUSH2 0xA57 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x74 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x3C JUMP JUMPDEST SWAP1 PUSH3 0x91 PUSH3 0x89 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x52 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH3 0x37 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x91 DUP3 PUSH3 0xA2 JUMP JUMPDEST DUP1 PUSH3 0xAD JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x91 DUP3 PUSH3 0xC4 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH3 0x37 JUMPI PUSH3 0xF3 DUP4 DUP4 PUSH3 0xB5 JUMP JUMPDEST SWAP3 PUSH3 0x103 DUP2 PUSH1 0x20 DUP6 ADD PUSH3 0xB5 JUMP JUMPDEST SWAP3 PUSH3 0x113 DUP3 PUSH1 0x40 DUP4 ADD PUSH3 0xCB JUMP JUMPDEST SWAP3 PUSH3 0x9F PUSH3 0x127 DUP5 PUSH1 0x60 DUP6 ADD PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH3 0x137 DUP2 PUSH1 0x80 DUP7 ADD PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH3 0xCB JUMP JUMPDEST PUSH3 0x164 PUSH3 0xD98 DUP1 CODESIZE SUB DUP1 PUSH3 0x158 DUP2 PUSH3 0x7A JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xDA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH3 0x93 PUSH3 0x9F PUSH3 0x9F SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x16C JUMP JUMPDEST PUSH3 0x9F PUSH3 0x9F PUSH3 0x9F SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH3 0x91 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x93 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x1D1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x1E7 JUMP JUMPDEST SWAP1 PUSH3 0x211 PUSH3 0x9F PUSH3 0x219 SWAP3 PUSH3 0x1F2 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x1BC JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH3 0x1C7 JUMP JUMPDEST SWAP1 PUSH3 0x23C PUSH3 0x9F PUSH3 0x219 SWAP3 PUSH3 0x187 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x21D JUMP JUMPDEST SWAP1 PUSH3 0x23C PUSH3 0x9F PUSH3 0x219 SWAP3 SWAP1 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP6 PUSH1 0x0 SWAP1 PUSH3 0x26A DUP3 PUSH3 0x17C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH3 0x323 JUMPI JUMPDEST POP DUP1 ISZERO PUSH3 0x30F JUMPI JUMPDEST PUSH3 0x2E3 JUMPI PUSH3 0x2D3 SWAP3 PUSH3 0x2C3 PUSH3 0x91 SWAP9 SWAP10 PUSH3 0x2DB SWAP8 SWAP7 SWAP5 PUSH3 0x2BD PUSH3 0x2CB SWAP6 PUSH1 0x1 PUSH3 0x1FD JUMP JUMPDEST PUSH3 0x1FD JUMP JUMPDEST PUSH1 0x2 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x5 PUSH3 0x244 JUMP JUMPDEST DUP8 SWAP1 PUSH3 0x30B DUP5 PUSH3 0x2F4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3D7C241D PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH3 0x197 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH3 0x31B DUP3 PUSH3 0x187 JUMP JUMPDEST DUP4 EQ PUSH3 0x291 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EQ CODESIZE PUSH3 0x288 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5981769 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x97B3CDB EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x7DC68077 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x91F7CFB9 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x9F43DDD2 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xA3E67610 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xB73E0E8B EQ PUSH2 0x7F JUMPI PUSH4 0xF339F526 SUB PUSH2 0xA7 JUMPI PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xA7 JUMPI JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 SLOAD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x4 PUSH2 0xC5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x127 DUP2 PUSH2 0x112 JUMP JUMPDEST SUB PUSH2 0xA7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x13B JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xA7 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA7 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0xA7 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0x195 DUP4 DUP3 PUSH2 0x12E JUMP JUMPDEST SWAP3 PUSH2 0x1A3 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x141 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA7 JUMPI PUSH2 0x1C7 DUP4 PUSH2 0xC2 SWAP3 DUP7 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x60 ADD PUSH2 0x141 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x1EE PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x5 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x1F3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x112 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x242 JUMP JUMPDEST SWAP1 PUSH2 0x25E SWAP1 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x27E PUSH1 0x6 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x254 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x10E PUSH2 0xFD PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x2 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x29E JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x3 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x112 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 SLOAD PUSH2 0x2EC JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0x344 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x319 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 DUP1 PUSH2 0x2F9 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0x344 PUSH2 0x350 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0x38B DUP2 DUP4 PUSH2 0x141 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA7 JUMPI PUSH2 0x3AF DUP4 PUSH2 0xC2 SWAP3 DUP7 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x40 ADD PUSH2 0x141 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x1EE PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x376 JUMP JUMPDEST CALLER SWAP3 PUSH2 0x3DB SWAP3 SWAP1 DUP6 DUP6 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3E5 DUP3 DUP3 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x41C PUSH2 0x412 PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 SWAP3 PUSH2 0x24B JUMP JUMPDEST SWAP3 PUSH2 0x101 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xC2 PUSH2 0xC2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x45A PUSH2 0xDC SWAP2 PUSH2 0x112 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x472 PUSH2 0x478 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x44E JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST SWAP1 PUSH2 0xE0 PUSH2 0x4C6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4B4 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x4FA PUSH2 0x4F5 DUP3 PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xA7 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x51E JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x52C DUP5 DUP7 PUSH2 0x141 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x511 JUMP JUMPDEST PUSH2 0xC2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x4E5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x584 PUSH1 0x5 PUSH2 0x428 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH2 0x59B PUSH2 0x597 PUSH2 0xC2 DUP8 PUSH2 0x432 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x678 JUMPI JUMPDEST POP POP PUSH2 0x5B1 PUSH2 0x5B6 SWAP2 PUSH1 0x6 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH2 0x5BF DUP3 PUSH2 0x432 JUMP JUMPDEST DUP6 EQ DUP1 ISZERO PUSH2 0x663 JUMPI JUMPDEST PUSH2 0x651 JUMPI PUSH2 0x5D6 PUSH1 0x3 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x5DF DUP4 PUSH2 0x432 JUMP JUMPDEST DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x646 JUMPI JUMPDEST POP PUSH2 0x634 JUMPI PUSH2 0x606 SWAP4 PUSH2 0x597 SWAP4 PUSH2 0x55F SWAP4 POP ISZERO PUSH2 0x623 JUMPI SWAP5 PUSH2 0x558 JUMP JUMPDEST GT PUSH2 0x60D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCE2EAB5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH1 0x4 PUSH2 0x428 JUMP JUMPDEST SWAP5 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5228CDBF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO CODESIZE PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF16A021 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x671 PUSH2 0xC2 PUSH1 0x2 PUSH2 0x428 JUMP JUMPDEST DUP6 GT PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x5B6 SWAP3 SWAP5 POP PUSH2 0x5B1 SWAP2 PUSH2 0x6DD SWAP2 PUSH2 0x6D8 PUSH2 0x693 PUSH1 0x5 PUSH2 0x428 JUMP JUMPDEST SWAP2 PUSH2 0x6B3 PUSH2 0x6BF DUP12 DUP12 PUSH2 0x6A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x45F JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x6D1 PUSH2 0x6CA DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP4 PUSH2 0x537 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x55F PUSH2 0x6FE SWAP3 SWAP4 PUSH2 0x597 SWAP3 PUSH2 0x6F8 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x74A JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x56E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x730 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x741 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH2 0x432 JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x761 PUSH2 0xC2 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x793 JUMPI PUSH2 0x787 PUSH2 0x78D SWAP2 PUSH2 0x781 PUSH2 0x77C DUP7 DUP7 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST SWAP1 PUSH2 0x799 JUMP JUMPDEST SWAP3 PUSH2 0x702 JUMP JUMPDEST SWAP2 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7B4 JUMPI SWAP1 PUSH2 0xC2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 PUSH2 0xC2 PUSH2 0x7D6 SWAP3 PUSH2 0x432 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x7E7 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x127 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x7FA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x802 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE0 SWAP3 SWAP5 SWAP4 PUSH2 0x83E PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x83E PUSH2 0xE0 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x86E PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x61F PUSH1 0x4 DUP3 ADD PUSH2 0x878 JUMP JUMPDEST SWAP1 PUSH2 0x8E8 PUSH2 0x8D0 CALLER PUSH1 0x6 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x8DD DUP4 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x905 PUSH2 0x8FE DUP3 PUSH2 0x8F9 PUSH1 0x2 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x2 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x91A PUSH2 0x915 PUSH2 0x915 PUSH1 0x0 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST SWAP1 PUSH4 0xA9059CBB PUSH2 0x933 PUSH2 0x92C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x947 DUP6 DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x823 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH2 0x964 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xA05 JUMPI POP ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x999 PUSH1 0x0 PUSH4 0x23B872DD PUSH2 0x9A4 PUSH2 0x982 PUSH1 0x1 PUSH2 0x7F0 JUMP JUMPDEST SWAP6 PUSH2 0x98C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x84E JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH2 0xE0 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x9C0 JUMPI JUMPDEST POP PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x9E1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x9E7 JUMPI JUMPDEST PUSH2 0x9D9 DUP2 DUP4 PUSH2 0x492 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x80F JUMP JUMPDEST CODESIZE PUSH2 0x9BA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xA1D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x9E7 JUMPI PUSH2 0x9D9 DUP2 DUP4 PUSH2 0x492 JUMP JUMPDEST ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x61DD8897B171D24341442E29FDF264E9FFF91A08A7D421 0xCE PUSH25 0x7DBF17CEAAC064736F6C634300081400330000000000000000 ","sourceMap":"408:5412:18:-:0;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;408:5412:18;;;;;;-1:-1:-1;;;;;408:5412:18;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;408:5412:18;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;408:5412:18;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;408:5412:18;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;408:5412:18;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;408:5412:18;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;408:5412:18;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;2056:704;;;;;;;;2315:1;2307:10;;;;:::i;:::-;-1:-1:-1;;;;;408:5412:18;;-1:-1:-1;;;;;408:5412:18;;2292:25;:63;;;;;2056:704;2292:86;;;;;2056:704;2288:199;;2625:42;2497:24;2531:42;2729:24;2497;;2677:42;2497:24;;;;2583:32;2497:24;;;:::i;:::-;2531:42;:::i;:::-;2583:32;;:::i;:::-;2625:42;;:::i;:::-;2677;;:::i;:::-;2729:24;;:::i;2288:199::-;2401:75;;;;;408:5412;;;;2401:75;-1:-1:-1;;;2401:75:18;;;;;;;;;:::i;:::-;;;;2292:86;2359:19;;;;:::i;:::-;;;2292:86;;:63;-1:-1:-1;;;;;408:5412:18;;-1:-1:-1;;;;;;408:5412:18;;2321:34;2292:63;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":172,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":302,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_uint256t_array_bytes32_dyn_calldatat_uint256":{"entryPoint":382,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":334,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":1253,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":2063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":2050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_array_bytes32_dyn_calldatat_uint256":{"entryPoint":886,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_address":{"entryPoint":784,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256":{"entryPoint":2126,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_to_address_nonPadded_inplace":{"entryPoint":1102,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_uint256":{"entryPoint":2083,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_packed_address_uint256":{"entryPoint":1119,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_stringliteral_25ad":{"entryPoint":2168,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":793,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":220,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_to_uint256_nonPadded_inplace":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":1209,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":1229,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":1368,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":2010,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":274,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_address_to_address":{"entryPoint":587,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_bytes32_dyn_calldata_to_array_bytes32_dyn":{"entryPoint":1335,"id":null,"parameterSlots":2,"returnSlots":1},"convert_rational_by_to_bytes32":{"entryPoint":1074,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":578,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":558,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_airdropTokenAddress":{"entryPoint":859,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_availableAmount":{"entryPoint":682,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_claim":{"entryPoint":954,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_expirationTimestamp":{"entryPoint":721,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxWalletClaimCount":{"entryPoint":226,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_merkleRoot":{"entryPoint":511,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenOwner":{"entryPoint":809,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalClaimedByWallet":{"entryPoint":643,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifyClaim":{"entryPoint":466,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_address":{"entryPoint":748,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":183,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":2023,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bytes32":{"entryPoint":1057,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1170,"id":null,"parameterSlots":2,"returnSlots":0},"fun_claim":{"entryPoint":null,"id":3697,"parameterSlots":4,"returnSlots":0},"fun_efficientHash":{"entryPoint":null,"id":1605,"parameterSlots":2,"returnSlots":1},"fun_hashPair":{"entryPoint":1945,"id":1594,"parameterSlots":2,"returnSlots":1},"fun_processProof":{"entryPoint":1866,"id":1163,"parameterSlots":2,"returnSlots":1},"fun_transferClaimedTokens":{"entryPoint":2241,"id":3837,"parameterSlots":2,"returnSlots":0},"fun_verify":{"entryPoint":1764,"id":1102,"parameterSlots":3,"returnSlots":1},"fun_verifyClaim":{"entryPoint":1395,"id":3789,"parameterSlots":5,"returnSlots":0},"getter_fun_airdropTokenAddress":{"entryPoint":848,"id":3572,"parameterSlots":0,"returnSlots":1},"getter_fun_availableAmount":{"entryPoint":670,"id":3578,"parameterSlots":0,"returnSlots":1},"getter_fun_expirationTimestamp":{"entryPoint":709,"id":3581,"parameterSlots":0,"returnSlots":1},"getter_fun_maxWalletClaimCount":{"entryPoint":208,"id":3584,"parameterSlots":0,"returnSlots":1},"getter_fun_merkleRoot":{"entryPoint":499,"id":3587,"parameterSlots":0,"returnSlots":1},"getter_fun_tokenOwner":{"entryPoint":772,"id":3575,"parameterSlots":0,"returnSlots":1},"getter_fun_totalClaimedByWallet":{"entryPoint":620,"id":3592,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":1794,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_address":{"entryPoint":1093,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_uint160":{"entryPoint":1087,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":596,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":1831,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1346,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1809,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1148,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bytes32":{"entryPoint":1862,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":761,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":197,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":2032,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":1064,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_25ad":{"entryPoint":2209,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":167,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":2114,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":1990,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":286,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":2042,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":315,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_bool":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806305981769146100a2578063097b3cdb1461009d5780632eb4a7ab146100985780637dc680771461009357806391f7cfb91461008e5780639f43ddd214610089578063a3e6761014610084578063b73e0e8b1461007f5763f339f526036100a7576103ba565b61035b565b610329565b6102d1565b6102aa565b610283565b6101ff565b6101d2565b6100e2565b600080fd5b60009103126100a757565b6100c2916008021c81565b90565b906100c291546100b7565b6100c2600060046100c5565b9052565b565b346100a7576100f23660046100ac565b61010e6100fd6100d0565b6040515b9182918290815260200190565b0390f35b6001600160a01b031690565b61012781610112565b036100a757565b905035906100e08261011e565b80610127565b905035906100e08261013b565b909182601f830112156100a75781359167ffffffffffffffff83116100a75760200192602083028401116100a757565b9190916080818403126100a757610195838261012e565b926101a38160208401610141565b92604083013567ffffffffffffffff81116100a7576101c7836100c292860161014e565b939094606001610141565b346100a7576101ee6101e536600461017e565b93929092610573565b604051005b6100c2600060056100c5565b346100a75761020f3660046100ac565b61010e6100fd6101f3565b906020828203126100a7576100c29161012e565b6100c290610112906001600160a01b031682565b6100c29061022e565b6100c290610242565b9061025e9061024b565b600052602052604060002090565b6100c29061027e600691600092610254565b6100c5565b346100a75761010e6100fd61029936600461021a565b61026c565b6100c2600060026100c5565b346100a7576102ba3660046100ac565b61010e6100fd61029e565b6100c2600060036100c5565b346100a7576102e13660046100ac565b61010e6100fd6102c5565b6100c2916008021c610112565b906100c291546102ec565b6100c2600060016102f9565b6100dc90610112565b6020810192916100e09190610310565b346100a7576103393660046100ac565b61010e610344610304565b60405191829182610319565b6100c26000806102f9565b346100a75761036b3660046100ac565b61010e610344610350565b906060828203126100a75761038b8183610141565b92602083013567ffffffffffffffff81116100a7576103af836100c292860161014e565b939094604001610141565b346100a7576101ee6103cd366004610376565b33926103db92908585610573565b6103e582826108c1565b61041c6104127f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4309261024b565b9261010160405190565b0390a2565b6100c29081565b6100c29054610421565b6100c26100c26100c29290565b60601b90565b6100c29061043f565b61045a6100dc91610112565b610445565b601481610472610478936020969561044e565b01918252565b0190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176104b457604052565b61047c565b906100e06104c660405190565b9283610492565b67ffffffffffffffff81116104b45760208091020190565b909291926104fa6104f5826104cd565b6104b9565b93818552602080860192028301928184116100a757915b83831061051e5750505050565b6020809161052c8486610141565b815201920191610511565b6100c29136916104e5565b634e487b7160e01b600052601160045260246000fd5b9190610563565b9290565b820180921161056e57565b610542565b909392906000926105846005610428565b9260009361059b6105976100c287610432565b9190565b03610678575b50506105b16105b6916006610254565b610428565b6105bf82610432565b85148015610663575b610651576105d66003610428565b6105df83610432565b8114159081610646575b5061063457610606936105979361055f9350156106235794610558565b1161060d57565b604051630ce2eab560e11b8152600490fd5b0390fd5b5061062e6004610428565b94610558565b604051635228cdbf60e01b8152600490fd5b9050421015386105e9565b604051630f16a02160e21b8152600490fd5b506106716100c26002610428565b85116105c8565b6105b69294506105b1916106dd916106d86106936005610428565b916106b36106bf8b8b6106a560405190565b93849260208401928361045f565b90810382520382610492565b6106d16106ca825190565b9160200190565b2093610537565b6106e4565b93916105a1565b61055f6106fe9293610597926106f8600090565b5061074a565b1490565b600019811461056e5760010190565b634e487b7160e01b600052603260045260246000fd5b90610730825190565b811015610741576020809102010190565b610711565b5190565b6107546000610432565b915b6107616100c2835190565b8310156107935761078761078d9161078161077c8686610727565b610746565b90610799565b92610702565b91610756565b91505090565b818110156107b457906100c291600052602052604060002090565b6100c291600052602052604060002090565b906100c26100c26107d692610432565b9055565b9190820391821161056e57565b6100c290610112565b6100c290546107e7565b801515610127565b905051906100e0826107fa565b906020828203126100a7576100c291610802565b9160206100e092949361083e60408201966000830190610310565b0152565b6040513d6000823e3d90fd5b60409061083e6100e0949695939661086e60608401986000850190610310565b6020830190610310565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b156108a857565b60405162461bcd60e51b81528061061f60048201610878565b906108e86108d0336006610254565b6108e2836108dd83610428565b610558565b906107c6565b6109056108fe826108f96002610428565b6107da565b60026107c6565b61091a61091561091560006107f0565b61024b565b9063a9059cbb61093361092c60405190565b9160e01b90565b815260208180610947858860048401610823565b03816000875af180156109ee5761096491600091610a0557501590565b6109f35760209161099960006323b872dd6109a461098260016107f0565b9561098c60405190565b9889978896879560e01b90565b85526004850161084e565b03925af180156109ee576100e0916000916109c0575b506108a1565b6109e1915060203d81116109e7575b6109d98183610492565b81019061080f565b386109ba565b503d6109cf565b610842565b6040516312171d8360e31b8152600490fd5b610a1d915060203d81116109e7576109d98183610492565b159056fea26469706673582212207661dd8897b171d24341442e29fdf264e9fff91a08a7d421ce787dbf17ceaac064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5981769 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x97B3CDB EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x7DC68077 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x91F7CFB9 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x9F43DDD2 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xA3E67610 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xB73E0E8B EQ PUSH2 0x7F JUMPI PUSH4 0xF339F526 SUB PUSH2 0xA7 JUMPI PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xA7 JUMPI JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 SLOAD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x4 PUSH2 0xC5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x127 DUP2 PUSH2 0x112 JUMP JUMPDEST SUB PUSH2 0xA7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x13B JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xA7 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA7 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0xA7 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0x195 DUP4 DUP3 PUSH2 0x12E JUMP JUMPDEST SWAP3 PUSH2 0x1A3 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x141 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA7 JUMPI PUSH2 0x1C7 DUP4 PUSH2 0xC2 SWAP3 DUP7 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x60 ADD PUSH2 0x141 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x1EE PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x5 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x1F3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x112 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x242 JUMP JUMPDEST SWAP1 PUSH2 0x25E SWAP1 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x27E PUSH1 0x6 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x254 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x10E PUSH2 0xFD PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x2 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x29E JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x3 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x112 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 SLOAD PUSH2 0x2EC JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0x344 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x319 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 DUP1 PUSH2 0x2F9 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0x344 PUSH2 0x350 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0x38B DUP2 DUP4 PUSH2 0x141 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA7 JUMPI PUSH2 0x3AF DUP4 PUSH2 0xC2 SWAP3 DUP7 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x40 ADD PUSH2 0x141 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x1EE PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x376 JUMP JUMPDEST CALLER SWAP3 PUSH2 0x3DB SWAP3 SWAP1 DUP6 DUP6 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3E5 DUP3 DUP3 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x41C PUSH2 0x412 PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 SWAP3 PUSH2 0x24B JUMP JUMPDEST SWAP3 PUSH2 0x101 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xC2 PUSH2 0xC2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x45A PUSH2 0xDC SWAP2 PUSH2 0x112 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x472 PUSH2 0x478 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x44E JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST SWAP1 PUSH2 0xE0 PUSH2 0x4C6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4B4 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x4FA PUSH2 0x4F5 DUP3 PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xA7 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x51E JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x52C DUP5 DUP7 PUSH2 0x141 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x511 JUMP JUMPDEST PUSH2 0xC2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x4E5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x584 PUSH1 0x5 PUSH2 0x428 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH2 0x59B PUSH2 0x597 PUSH2 0xC2 DUP8 PUSH2 0x432 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x678 JUMPI JUMPDEST POP POP PUSH2 0x5B1 PUSH2 0x5B6 SWAP2 PUSH1 0x6 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH2 0x5BF DUP3 PUSH2 0x432 JUMP JUMPDEST DUP6 EQ DUP1 ISZERO PUSH2 0x663 JUMPI JUMPDEST PUSH2 0x651 JUMPI PUSH2 0x5D6 PUSH1 0x3 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x5DF DUP4 PUSH2 0x432 JUMP JUMPDEST DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x646 JUMPI JUMPDEST POP PUSH2 0x634 JUMPI PUSH2 0x606 SWAP4 PUSH2 0x597 SWAP4 PUSH2 0x55F SWAP4 POP ISZERO PUSH2 0x623 JUMPI SWAP5 PUSH2 0x558 JUMP JUMPDEST GT PUSH2 0x60D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCE2EAB5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH1 0x4 PUSH2 0x428 JUMP JUMPDEST SWAP5 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5228CDBF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO CODESIZE PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF16A021 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x671 PUSH2 0xC2 PUSH1 0x2 PUSH2 0x428 JUMP JUMPDEST DUP6 GT PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x5B6 SWAP3 SWAP5 POP PUSH2 0x5B1 SWAP2 PUSH2 0x6DD SWAP2 PUSH2 0x6D8 PUSH2 0x693 PUSH1 0x5 PUSH2 0x428 JUMP JUMPDEST SWAP2 PUSH2 0x6B3 PUSH2 0x6BF DUP12 DUP12 PUSH2 0x6A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x45F JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x6D1 PUSH2 0x6CA DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP4 PUSH2 0x537 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x55F PUSH2 0x6FE SWAP3 SWAP4 PUSH2 0x597 SWAP3 PUSH2 0x6F8 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x74A JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x56E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x730 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x741 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH2 0x432 JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x761 PUSH2 0xC2 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x793 JUMPI PUSH2 0x787 PUSH2 0x78D SWAP2 PUSH2 0x781 PUSH2 0x77C DUP7 DUP7 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST SWAP1 PUSH2 0x799 JUMP JUMPDEST SWAP3 PUSH2 0x702 JUMP JUMPDEST SWAP2 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7B4 JUMPI SWAP1 PUSH2 0xC2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 PUSH2 0xC2 PUSH2 0x7D6 SWAP3 PUSH2 0x432 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x7E7 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x127 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x7FA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x802 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE0 SWAP3 SWAP5 SWAP4 PUSH2 0x83E PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x83E PUSH2 0xE0 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x86E PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x61F PUSH1 0x4 DUP3 ADD PUSH2 0x878 JUMP JUMPDEST SWAP1 PUSH2 0x8E8 PUSH2 0x8D0 CALLER PUSH1 0x6 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x8DD DUP4 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x905 PUSH2 0x8FE DUP3 PUSH2 0x8F9 PUSH1 0x2 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x2 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x91A PUSH2 0x915 PUSH2 0x915 PUSH1 0x0 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST SWAP1 PUSH4 0xA9059CBB PUSH2 0x933 PUSH2 0x92C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x947 DUP6 DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x823 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH2 0x964 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xA05 JUMPI POP ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x999 PUSH1 0x0 PUSH4 0x23B872DD PUSH2 0x9A4 PUSH2 0x982 PUSH1 0x1 PUSH2 0x7F0 JUMP JUMPDEST SWAP6 PUSH2 0x98C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x84E JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH2 0xE0 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x9C0 JUMPI JUMPDEST POP PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x9E1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x9E7 JUMPI JUMPDEST PUSH2 0x9D9 DUP2 DUP4 PUSH2 0x492 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x80F JUMP JUMPDEST CODESIZE PUSH2 0x9BA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xA1D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x9E7 JUMPI PUSH2 0x9D9 DUP2 DUP4 PUSH2 0x492 JUMP JUMPDEST ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x61DD8897B171D24341442E29FDF264E9FFF91A08A7D421 0xCE PUSH25 0x7DBF17CEAAC064736F6C634300081400330000000000000000 ","sourceMap":"408:5412:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;1141:34::-;;;;;:::i;408:5412::-;;;:::o;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;408:5412:18;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;-1:-1:-1;1225:25:18;;;;;:::i;408:5412::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;408:5412:18;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;1339:70::-;;;;;;;;;:::i;:::-;;:::i;408:5412::-;;;;;;;;;;:::i;:::-;;:::i;918:30::-;;;;;:::i;408:5412::-;;;;;;;;:::i;:::-;;;;:::i;1005:34::-;;;;;:::i;408:5412::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;827:25::-;;;;;:::i;408:5412::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;732:34::-;;;;;:::i;408:5412::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;3172:10;;3200:25;;408:5412;;3172:10;3200:25;:::i;:::-;3310:6;;;;:::i;:::-;3372:33;;;;;:::i;:::-;;;408:5412;;;;3372:33;;;;3020:392::o;408:5412::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;408:5412:18;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;3747:1252::-;;;;;408:5412;4011:10;;;;:::i;:::-;4033:1;;4025:10;4011:24;;4025:10;;;:::i;4011:24::-;;408:5412;;4011:24;;4007:186;;3747:1252;4292:20;;:30;;:20;;:30;:::i;:::-;;:::i;:::-;4376:11;;;:::i;:::-;;;:39;;;;3747:1252;4372:100;;4549:19;;;:::i;:::-;4582:17;;;:::i;:::-;;;;:52;;;;3747:1252;4578:106;;;4889:51;;;;:29;;-1:-1:-1;4817:58:18;;;;4889:29;:::i;:51::-;;4885:108;;3747:1252::o;4885:108::-;408:5412;;-1:-1:-1;;;4963:19:18;;;;;;;;;4817:58;4856:19;;;;:::i;:::-;4817:58;4889:29;:::i;4578:106::-;408:5412;;-1:-1:-1;;;4657:16:18;;;;4963:19;4582:52;4603:31;-1:-1:-1;4603:15:18;:31;;4582:52;;;4372:100;408:5412;;-1:-1:-1;;;4438:23:18;;;;4963:19;4376:39;4400:15;4391:24;4400:15;;;:::i;4391:24::-;;;4376:39;;4007:186;4292:30;4105:10;;;4292:30;4105:10;4078:104;4105:10;4078:104;4105:10;;;:::i;:::-;4127:53;;;;;;408:5412;;;;4127:53;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;4117:64;;;408:5412;;;4117:64;;408:5412;;;;4117:64;;4078:104;;:::i;:::-;;:::i;:::-;4007:186;;;;1156:154:9;1270:25;:33;1156:154;;1270:33;1156:154;1247:4;408:5412:18;;;1247:4:9;1270:25;;:::i;:33::-;;1156:154;:::o;408:5412:18:-;-1:-1:-1;;408:5412:18;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;1934:290:9;2078:13;2090:1;2078:13;:::i;:::-;2073:116;2111:3;2093:16;2097:12;;408:5412:18;;;2093:16:9;;;;;;2145:33;2111:3;2169:8;;;;;;:::i;:::-;;:::i;:::-;2145:33;;:::i;:::-;2111:3;;:::i;:::-;2078:13;;;2093:16;;;;1934:290;:::o;9205:147::-;9294:5;;;:51;;;9302:20;;;408:5412:18;;;;;;;;;9294:51:9;9325:20;;9494:119;;;;;;;9358:261;:::o;408:5412:18:-;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;408:5412:18;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;408:5412:18;;;;;;;;:::i;5187:631::-;;5476:42;:32;5497:10;5476:20;:32;:::i;:::-;:42;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5528:25;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;5628:21;5586:27;5593:19;;;:::i;:::-;5586:27;:::i;5628:21::-;;;:40;;408:5412;;;;5628:40;;408:5412;;;;5628:40;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;5627:41;5628:40;-1:-1:-1;5628:40:18;;;-1:-1:-1;5627:41:18;;408:5412;5627:41;5623:95;;5735:56;:25;:56;;:25;:56;5761:10;;;:::i;:::-;5735:56;;408:5412;;;;5735:56;;;;;;;;408:5412;;;;5735:56;;;;;;;:::i;:::-;;;;;;;;;5727:84;5735:56;-1:-1:-1;5735:56:18;;;5187:631;5727:84;;:::i;5735:56::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;5623:95::-;408:5412;;-1:-1:-1;;;5691:16:18;;;;4963:19;5628:40;;;;;;;;;;;;;;:::i;:::-;5627:41;;408:5412"},"gasEstimates":{"creation":{"codeDepositCost":"529400","executionCost":"infinite","totalCost":"infinite"},"external":{"airdropTokenAddress()":"infinite","availableAmount()":"infinite","claim(uint256,bytes32[],uint256)":"infinite","expirationTimestamp()":"infinite","maxWalletClaimCount()":"infinite","merkleRoot()":"infinite","tokenOwner()":"infinite","totalClaimedByWallet(address)":"infinite","verifyClaim(address,uint256,bytes32[],uint256)":"infinite"},"internal":{"_transferClaimedTokens(address,uint256)":"infinite"}},"methodIdentifiers":{"airdropTokenAddress()":"b73e0e8b","availableAmount()":"91f7cfb9","claim(uint256,bytes32[],uint256)":"f339f526","expirationTimestamp()":"9f43ddd2","maxWalletClaimCount()":"05981769","merkleRoot()":"2eb4a7ab","tokenOwner()":"a3e67610","totalClaimedByWallet(address)":"7dc68077","verifyClaim(address,uint256,bytes32[],uint256)":"097b3cdb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_airdropTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_airdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxWalletClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AirdropExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyClaimedMax\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"airdropTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"airdropAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAirdropParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofMaxQuantityForWallet\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWalletClaimCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"totalClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofMaxQuantityForWallet\",\"type\":\"uint256\"}],\"name\":\"verifyClaim\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@neuro_0x\",\"details\":\"A contract for airdropping ERC20 tokens to specific recipients based on Merkle proofs.\",\"events\":{\"TokensClaimed(address,uint256)\":{\"details\":\"Emitted when tokens are claimed\"}},\"kind\":\"dev\",\"methods\":{\"claim(uint256,bytes32[],uint256)\":{\"details\":\"Claims tokens from the airdrop.\",\"params\":{\"amount\":\"The quantity of tokens to claim.\",\"proofMaxQuantityForWallet\":\"The maximum quantity of tokens that can be claimed by a wallet.\",\"proofs\":\"Claims proofs.\"}},\"constructor\":{\"details\":\"Initializes the contract.\",\"params\":{\"_airdropAmount\":\"The quantity of tokens available for airdrop.\",\"_airdropTokenAddress\":\"The address of the token to be airdropped.\",\"_expirationTimestamp\":\"Expiration timestamp of the airdrop.\",\"_maxWalletClaimCount\":\"Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\",\"_merkleRoot\":\"Merkle root of the whitelist.\",\"_tokenOwner\":\"The owner of the token to be airdropped.\"}},\"verifyClaim(address,uint256,bytes32[],uint256)\":{\"details\":\"Verifies the claim and reverts if the claim is invalid.\",\"params\":{\"amount\":\"The quantity of tokens to claim.\",\"claimant\":\"The address of the claimer.\",\"proofMaxQuantityForWallet\":\"The maximum quantity of tokens that can be claimed by a wallet.\",\"proofs\":\"Claims proofs.\"}}},\"stateVariables\":{\"airdropTokenAddress\":{\"details\":\"The address of the token to be airdropped.\"},\"availableAmount\":{\"details\":\"The quantity of tokens available for airdrop.\"},\"expirationTimestamp\":{\"details\":\"Expiration timestamp of the airdrop.\"},\"maxWalletClaimCount\":{\"details\":\"Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\"},\"merkleRoot\":{\"details\":\"Merkle root of the whitelist.\"},\"tokenOwner\":{\"details\":\"The owner of the token to be airdropped.\"},\"totalClaimedByWallet\":{\"details\":\"Mapping from address => total number of tokens a wallet has claimed.\"}},\"title\":\"AirdropERC20Claimable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AirdropERC20Claimable.sol\":\"AirdropERC20Claimable\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Tree proofs.\\n *\\n * The tree and the proofs can be generated using our\\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\\n * You will find a quickstart guide in the readme.\\n *\\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\\n * hashing, or use a hash function other than keccak256 for hashing leaves.\\n * This is because the concatenation of a sorted pair of internal nodes in\\n * the merkle tree could be reinterpreted as a leaf value.\\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\\n * against this attack out of the box.\\n */\\nlibrary MerkleProof {\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {verify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProofCalldata(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     *\\n     * _Available since v4.4._\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerify(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProof(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {multiProofVerify}\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerifyCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\\n     * respectively.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProof(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proofLen - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            require(proofPos == proofLen, \\\"MerkleProof: invalid multiproof\\\");\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processMultiProof}.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProofCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proofLen - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            require(proofPos == proofLen, \\\"MerkleProof: invalid multiproof\\\");\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\\n    }\\n\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\"},\"src/AirdropERC20Claimable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\\\";\\nimport { MerkleProof } from \\\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\\\";\\n\\n/**\\n * @title AirdropERC20Claimable\\n * @author @neuro_0x\\n * @dev A contract for airdropping ERC20 tokens to specific recipients based on Merkle proofs.\\n */\\n\\ncontract AirdropERC20Claimable {\\n    error InvalidTransferAmount();\\n    error AirdropExpired();\\n    error AlreadyClaimedMax();\\n    error TransferFailed();\\n    error InvalidAirdropParameters(address tokenOwner, address airdropTokenAddress, uint256 airdropAmount);\\n\\n    /// @dev The address of the token to be airdropped.\\n    address public airdropTokenAddress;\\n\\n    /// @dev The owner of the token to be airdropped.\\n    address public tokenOwner;\\n\\n    /// @dev The quantity of tokens available for airdrop.\\n    uint256 public availableAmount;\\n\\n    /// @dev Expiration timestamp of the airdrop.\\n    uint256 public expirationTimestamp;\\n\\n    /// @dev Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\\n    uint256 public maxWalletClaimCount;\\n\\n    /// @dev Merkle root of the whitelist.\\n    bytes32 public merkleRoot;\\n\\n    /// @dev Mapping from address => total number of tokens a wallet has claimed.\\n    mapping(address claimer => uint256 amount) public totalClaimedByWallet;\\n\\n    /// @dev Emitted when tokens are claimed\\n    event TokensClaimed(address indexed claimer, uint256 quantityClaimed);\\n\\n    /**\\n     * @dev Initializes the contract.\\n     * @param _tokenOwner The owner of the token to be airdropped.\\n     * @param _airdropTokenAddress The address of the token to be airdropped.\\n     * @param _airdropAmount The quantity of tokens available for airdrop.\\n     * @param _expirationTimestamp Expiration timestamp of the airdrop.\\n     * @param _maxWalletClaimCount Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\\n     * @param _merkleRoot Merkle root of the whitelist.\\n     */\\n    constructor(\\n        address _tokenOwner,\\n        address _airdropTokenAddress,\\n        uint256 _airdropAmount,\\n        uint256 _expirationTimestamp,\\n        uint256 _maxWalletClaimCount,\\n        bytes32 _merkleRoot\\n    ) {\\n        if (_tokenOwner == address(0) || _airdropTokenAddress == address(0) || _airdropAmount == 0) {\\n            revert InvalidAirdropParameters(_tokenOwner, _airdropTokenAddress, _airdropAmount);\\n        }\\n\\n        tokenOwner = _tokenOwner;\\n        airdropTokenAddress = _airdropTokenAddress;\\n        availableAmount = _airdropAmount;\\n        expirationTimestamp = _expirationTimestamp;\\n        maxWalletClaimCount = _maxWalletClaimCount;\\n        merkleRoot = _merkleRoot;\\n    }\\n\\n    /**\\n     * @dev Claims tokens from the airdrop.\\n     * @param amount The quantity of tokens to claim.\\n     * @param proofs Claims proofs.\\n     * @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet.\\n     */\\n    function claim(uint256 amount, bytes32[] calldata proofs, uint256 proofMaxQuantityForWallet) external {\\n        // Verify the claim\\n        verifyClaim(msg.sender, amount, proofs, proofMaxQuantityForWallet);\\n        // Transfer the claimed tokens\\n        _transferClaimedTokens(msg.sender, amount);\\n        // Emit the TokensClaimed event\\n        emit TokensClaimed(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Verifies the claim and reverts if the claim is invalid.\\n     * @param claimant The address of the claimer.\\n     * @param amount The quantity of tokens to claim.\\n     * @param proofs Claims proofs.\\n     * @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet.\\n     */\\n    function verifyClaim(\\n        address claimant,\\n        uint256 amount,\\n        bytes32[] calldata proofs,\\n        uint256 proofMaxQuantityForWallet\\n    )\\n        public\\n        view\\n    {\\n        bool verified;\\n        // Get the proof of the claimer\\n        if (merkleRoot != bytes32(0)) {\\n            verified =\\n                MerkleProof.verify(proofs, merkleRoot, keccak256(abi.encodePacked(claimant, proofMaxQuantityForWallet)));\\n        }\\n\\n        // Check if the wallet has already claimed tokens\\n        uint256 supplyClaimedAlready = totalClaimedByWallet[claimant];\\n\\n        // Check if the claim is valid\\n        if (amount == 0 || amount > availableAmount) {\\n            revert InvalidTransferAmount();\\n        }\\n\\n        // Check if the airdrop has expired\\n        uint256 expTimestamp = expirationTimestamp;\\n        if (expTimestamp != 0 && block.timestamp >= expTimestamp) {\\n            revert AirdropExpired();\\n        }\\n\\n        // Check if the wallet has exceeded the maximum number of tokens that can be claimed\\n        uint256 claimLimitForWallet = verified ? proofMaxQuantityForWallet : maxWalletClaimCount;\\n        if (amount + supplyClaimedAlready > claimLimitForWallet) {\\n            revert AlreadyClaimedMax();\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers the claimed tokens to the recipient.\\n     * @param recipient The recipient of the tokens.\\n     * @param amount The quantity of tokens to claim.\\n     */\\n    function _transferClaimedTokens(address recipient, uint256 amount) private {\\n        // if transfer claimed tokens is called when `to != msg.sender`, it'd use msg.sender's limits.\\n        // behavior would be similar to `msg.sender` mint for itself, then transfer to `_recipient`.\\n        totalClaimedByWallet[msg.sender] += amount;\\n        availableAmount -= amount;\\n\\n        IERC20 airdropToken = IERC20(airdropTokenAddress);\\n        if (!airdropToken.transfer(recipient, amount)) {\\n            revert TransferFailed();\\n        }\\n        require(airdropToken.transferFrom(tokenOwner, recipient, amount), \\\"Transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x860d790cae509e04250b2c8fa8013f08d8004081a36a84a5cbbec3f6ce51c477\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3572,"contract":"src/AirdropERC20Claimable.sol:AirdropERC20Claimable","label":"airdropTokenAddress","offset":0,"slot":"0","type":"t_address"},{"astId":3575,"contract":"src/AirdropERC20Claimable.sol:AirdropERC20Claimable","label":"tokenOwner","offset":0,"slot":"1","type":"t_address"},{"astId":3578,"contract":"src/AirdropERC20Claimable.sol:AirdropERC20Claimable","label":"availableAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":3581,"contract":"src/AirdropERC20Claimable.sol:AirdropERC20Claimable","label":"expirationTimestamp","offset":0,"slot":"3","type":"t_uint256"},{"astId":3584,"contract":"src/AirdropERC20Claimable.sol:AirdropERC20Claimable","label":"maxWalletClaimCount","offset":0,"slot":"4","type":"t_uint256"},{"astId":3587,"contract":"src/AirdropERC20Claimable.sol:AirdropERC20Claimable","label":"merkleRoot","offset":0,"slot":"5","type":"t_bytes32"},{"astId":3592,"contract":"src/AirdropERC20Claimable.sol:AirdropERC20Claimable","label":"totalClaimedByWallet","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/AirdropERC20ClaimableFactory.sol":{"AirdropERC20ClaimableFactory":{"abi":[{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"airdropTokenAddress","type":"address"},{"internalType":"uint256","name":"airdropAmount","type":"uint256"},{"internalType":"uint256","name":"expirationTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxWalletClaimCount","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"createClaimableAirdrop","outputs":[{"internalType":"contract AirdropERC20Claimable","name":"newAirdrop","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"@neuro_0x","kind":"dev","methods":{"createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)":{"details":"Launch a new instance of the CoinGenieAirdropClaimable Contract.","params":{"airdropAmount":"The amount of tokens available for airdrop","airdropTokenAddress":"The address of the airdrop token","expirationTimestamp":"The expiration timestamp of the airdrop","maxWalletClaimCount":"The maximum number of tokens that can be claimed by a wallet if not in the whitelist","merkleRoot":"The merkle root of the whitelist","tokenOwner":"The address of the token owner"},"returns":{"newAirdrop":"The address of the newly deployed airdrop contract"}}},"title":"AirdropERC20ClaimableFactory","version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1A JUMPI PUSH1 0x40 MLOAD PUSH2 0xFD4 PUSH2 0x20 DUP3 CODECOPY PUSH2 0xFD4 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x9B1DE1FF EQ PUSH2 0x108 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x23 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x37 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x42 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x58 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH2 0x23 JUMPI PUSH2 0x81 DUP4 DUP4 PUSH2 0x49 JUMP JUMPDEST SWAP3 PUSH2 0x8F DUP2 PUSH1 0x20 DUP6 ADD PUSH2 0x49 JUMP JUMPDEST SWAP3 PUSH2 0x9D DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x5E JUMP JUMPDEST SWAP3 PUSH2 0x34 PUSH2 0xAE DUP5 PUSH1 0x60 DUP6 ADD PUSH2 0x5E JUMP JUMPDEST SWAP4 PUSH2 0xBC DUP2 PUSH1 0x80 DUP7 ADD PUSH2 0x5E JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH2 0x5E JUMP JUMPDEST PUSH2 0x34 SWAP1 PUSH2 0x28 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x34 SWAP1 PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x34 SWAP1 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0xF4 SWAP1 PUSH2 0xE2 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x56 SWAP2 SWAP1 PUSH2 0xEB JUMP JUMPDEST CALLVALUE PUSH2 0x23 JUMPI PUSH2 0x136 PUSH2 0x12A PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x6B JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xF8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP5 PUSH2 0x1A1 PUSH2 0x1A8 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x19A PUSH1 0xA0 SWAP7 PUSH2 0x193 PUSH2 0x56 SWAP11 PUSH2 0x183 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP6 PUSH2 0xD98 DUP8 ADD SWAP5 DUP8 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x201 JUMPI DUP8 SWAP7 PUSH2 0x1EE SWAP7 PUSH2 0xD98 PUSH2 0x207 DUP11 CODECOPY PUSH2 0x150 JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x1FC JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x13A JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x37 JUMPI PUSH3 0x25 PUSH3 0x18 PUSH3 0x141 JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH3 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA57 PUSH3 0x341 DUP3 CODECOPY PUSH2 0xA57 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x74 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x3C JUMP JUMPDEST SWAP1 PUSH3 0x91 PUSH3 0x89 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x52 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH3 0x37 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x91 DUP3 PUSH3 0xA2 JUMP JUMPDEST DUP1 PUSH3 0xAD JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x91 DUP3 PUSH3 0xC4 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH3 0x37 JUMPI PUSH3 0xF3 DUP4 DUP4 PUSH3 0xB5 JUMP JUMPDEST SWAP3 PUSH3 0x103 DUP2 PUSH1 0x20 DUP6 ADD PUSH3 0xB5 JUMP JUMPDEST SWAP3 PUSH3 0x113 DUP3 PUSH1 0x40 DUP4 ADD PUSH3 0xCB JUMP JUMPDEST SWAP3 PUSH3 0x9F PUSH3 0x127 DUP5 PUSH1 0x60 DUP6 ADD PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH3 0x137 DUP2 PUSH1 0x80 DUP7 ADD PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH3 0xCB JUMP JUMPDEST PUSH3 0x164 PUSH3 0xD98 DUP1 CODESIZE SUB DUP1 PUSH3 0x158 DUP2 PUSH3 0x7A JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xDA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH3 0x93 PUSH3 0x9F PUSH3 0x9F SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x16C JUMP JUMPDEST PUSH3 0x9F PUSH3 0x9F PUSH3 0x9F SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH3 0x91 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x93 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x1D1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x1E7 JUMP JUMPDEST SWAP1 PUSH3 0x211 PUSH3 0x9F PUSH3 0x219 SWAP3 PUSH3 0x1F2 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x1BC JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH3 0x1C7 JUMP JUMPDEST SWAP1 PUSH3 0x23C PUSH3 0x9F PUSH3 0x219 SWAP3 PUSH3 0x187 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x21D JUMP JUMPDEST SWAP1 PUSH3 0x23C PUSH3 0x9F PUSH3 0x219 SWAP3 SWAP1 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP6 PUSH1 0x0 SWAP1 PUSH3 0x26A DUP3 PUSH3 0x17C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH3 0x323 JUMPI JUMPDEST POP DUP1 ISZERO PUSH3 0x30F JUMPI JUMPDEST PUSH3 0x2E3 JUMPI PUSH3 0x2D3 SWAP3 PUSH3 0x2C3 PUSH3 0x91 SWAP9 SWAP10 PUSH3 0x2DB SWAP8 SWAP7 SWAP5 PUSH3 0x2BD PUSH3 0x2CB SWAP6 PUSH1 0x1 PUSH3 0x1FD JUMP JUMPDEST PUSH3 0x1FD JUMP JUMPDEST PUSH1 0x2 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x5 PUSH3 0x244 JUMP JUMPDEST DUP8 SWAP1 PUSH3 0x30B DUP5 PUSH3 0x2F4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3D7C241D PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH3 0x197 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH3 0x31B DUP3 PUSH3 0x187 JUMP JUMPDEST DUP4 EQ PUSH3 0x291 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EQ CODESIZE PUSH3 0x288 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5981769 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x97B3CDB EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x7DC68077 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x91F7CFB9 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x9F43DDD2 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xA3E67610 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xB73E0E8B EQ PUSH2 0x7F JUMPI PUSH4 0xF339F526 SUB PUSH2 0xA7 JUMPI PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xA7 JUMPI JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 SLOAD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x4 PUSH2 0xC5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x127 DUP2 PUSH2 0x112 JUMP JUMPDEST SUB PUSH2 0xA7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x13B JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xA7 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA7 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0xA7 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0x195 DUP4 DUP3 PUSH2 0x12E JUMP JUMPDEST SWAP3 PUSH2 0x1A3 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x141 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA7 JUMPI PUSH2 0x1C7 DUP4 PUSH2 0xC2 SWAP3 DUP7 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x60 ADD PUSH2 0x141 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x1EE PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x5 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x1F3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x112 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x242 JUMP JUMPDEST SWAP1 PUSH2 0x25E SWAP1 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x27E PUSH1 0x6 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x254 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x10E PUSH2 0xFD PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x2 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x29E JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x3 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x112 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 SLOAD PUSH2 0x2EC JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0x344 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x319 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 DUP1 PUSH2 0x2F9 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0x344 PUSH2 0x350 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0x38B DUP2 DUP4 PUSH2 0x141 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA7 JUMPI PUSH2 0x3AF DUP4 PUSH2 0xC2 SWAP3 DUP7 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x40 ADD PUSH2 0x141 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x1EE PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x376 JUMP JUMPDEST CALLER SWAP3 PUSH2 0x3DB SWAP3 SWAP1 DUP6 DUP6 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3E5 DUP3 DUP3 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x41C PUSH2 0x412 PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 SWAP3 PUSH2 0x24B JUMP JUMPDEST SWAP3 PUSH2 0x101 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xC2 PUSH2 0xC2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x45A PUSH2 0xDC SWAP2 PUSH2 0x112 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x472 PUSH2 0x478 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x44E JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST SWAP1 PUSH2 0xE0 PUSH2 0x4C6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4B4 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x4FA PUSH2 0x4F5 DUP3 PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xA7 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x51E JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x52C DUP5 DUP7 PUSH2 0x141 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x511 JUMP JUMPDEST PUSH2 0xC2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x4E5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x584 PUSH1 0x5 PUSH2 0x428 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH2 0x59B PUSH2 0x597 PUSH2 0xC2 DUP8 PUSH2 0x432 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x678 JUMPI JUMPDEST POP POP PUSH2 0x5B1 PUSH2 0x5B6 SWAP2 PUSH1 0x6 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH2 0x5BF DUP3 PUSH2 0x432 JUMP JUMPDEST DUP6 EQ DUP1 ISZERO PUSH2 0x663 JUMPI JUMPDEST PUSH2 0x651 JUMPI PUSH2 0x5D6 PUSH1 0x3 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x5DF DUP4 PUSH2 0x432 JUMP JUMPDEST DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x646 JUMPI JUMPDEST POP PUSH2 0x634 JUMPI PUSH2 0x606 SWAP4 PUSH2 0x597 SWAP4 PUSH2 0x55F SWAP4 POP ISZERO PUSH2 0x623 JUMPI SWAP5 PUSH2 0x558 JUMP JUMPDEST GT PUSH2 0x60D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCE2EAB5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH1 0x4 PUSH2 0x428 JUMP JUMPDEST SWAP5 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5228CDBF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO CODESIZE PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF16A021 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x671 PUSH2 0xC2 PUSH1 0x2 PUSH2 0x428 JUMP JUMPDEST DUP6 GT PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x5B6 SWAP3 SWAP5 POP PUSH2 0x5B1 SWAP2 PUSH2 0x6DD SWAP2 PUSH2 0x6D8 PUSH2 0x693 PUSH1 0x5 PUSH2 0x428 JUMP JUMPDEST SWAP2 PUSH2 0x6B3 PUSH2 0x6BF DUP12 DUP12 PUSH2 0x6A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x45F JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x6D1 PUSH2 0x6CA DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP4 PUSH2 0x537 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x55F PUSH2 0x6FE SWAP3 SWAP4 PUSH2 0x597 SWAP3 PUSH2 0x6F8 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x74A JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x56E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x730 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x741 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH2 0x432 JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x761 PUSH2 0xC2 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x793 JUMPI PUSH2 0x787 PUSH2 0x78D SWAP2 PUSH2 0x781 PUSH2 0x77C DUP7 DUP7 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST SWAP1 PUSH2 0x799 JUMP JUMPDEST SWAP3 PUSH2 0x702 JUMP JUMPDEST SWAP2 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7B4 JUMPI SWAP1 PUSH2 0xC2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 PUSH2 0xC2 PUSH2 0x7D6 SWAP3 PUSH2 0x432 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x7E7 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x127 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x7FA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x802 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE0 SWAP3 SWAP5 SWAP4 PUSH2 0x83E PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x83E PUSH2 0xE0 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x86E PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x61F PUSH1 0x4 DUP3 ADD PUSH2 0x878 JUMP JUMPDEST SWAP1 PUSH2 0x8E8 PUSH2 0x8D0 CALLER PUSH1 0x6 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x8DD DUP4 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x905 PUSH2 0x8FE DUP3 PUSH2 0x8F9 PUSH1 0x2 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x2 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x91A PUSH2 0x915 PUSH2 0x915 PUSH1 0x0 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST SWAP1 PUSH4 0xA9059CBB PUSH2 0x933 PUSH2 0x92C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x947 DUP6 DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x823 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH2 0x964 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xA05 JUMPI POP ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x999 PUSH1 0x0 PUSH4 0x23B872DD PUSH2 0x9A4 PUSH2 0x982 PUSH1 0x1 PUSH2 0x7F0 JUMP JUMPDEST SWAP6 PUSH2 0x98C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x84E JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH2 0xE0 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x9C0 JUMPI JUMPDEST POP PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x9E1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x9E7 JUMPI JUMPDEST PUSH2 0x9D9 DUP2 DUP4 PUSH2 0x492 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x80F JUMP JUMPDEST CODESIZE PUSH2 0x9BA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xA1D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x9E7 JUMPI PUSH2 0x9D9 DUP2 DUP4 PUSH2 0x492 JUMP JUMPDEST ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x61DD8897B171D24341442E29FDF264E9FFF91A08A7D421 0xCE PUSH25 0x7DBF17CEAAC064736F6C63430008140033A264697066735822 SLT KECCAK256 LOG2 0xE9 AND EXTCODESIZE 0xD3 0xD3 ADD 0xC4 DUP11 SUB 0x29 JUMPDEST SWAP7 0xB8 0xE9 STOP MOD 0x22 MLOAD 0x49 SWAP4 0xFC PUSH22 0xC57D59923C6E40DA3664736F6C634300081400330000 ","sourceMap":"288:1277:19:-:0;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":73,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_uint256t_uint256t_bytes32":{"entryPoint":107,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":94,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_uint256_uint256_uint256_bytes32":{"entryPoint":336,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_contract_AirdropERC20Claimable":{"entryPoint":235,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_contract_AirdropERC20Claimable":{"entryPoint":248,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":40,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_AirdropERC20Claimable_to_address":{"entryPoint":226,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":217,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":197,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_createClaimableAirdrop":{"entryPoint":264,"id":null,"parameterSlots":0,"returnSlots":0},"fun_createClaimableAirdrop":{"entryPoint":440,"id":3879,"parameterSlots":6,"returnSlots":1},"panic_error_0x41":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":35,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":428,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_address":{"entryPoint":55,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":88,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_contract_AirdropERC20Claimable":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x9B1DE1FF EQ PUSH2 0x108 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH2 0x23 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x37 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x42 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x56 DUP3 PUSH2 0x58 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH2 0x23 JUMPI PUSH2 0x81 DUP4 DUP4 PUSH2 0x49 JUMP JUMPDEST SWAP3 PUSH2 0x8F DUP2 PUSH1 0x20 DUP6 ADD PUSH2 0x49 JUMP JUMPDEST SWAP3 PUSH2 0x9D DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x5E JUMP JUMPDEST SWAP3 PUSH2 0x34 PUSH2 0xAE DUP5 PUSH1 0x60 DUP6 ADD PUSH2 0x5E JUMP JUMPDEST SWAP4 PUSH2 0xBC DUP2 PUSH1 0x80 DUP7 ADD PUSH2 0x5E JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH2 0x5E JUMP JUMPDEST PUSH2 0x34 SWAP1 PUSH2 0x28 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x34 SWAP1 PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x34 SWAP1 PUSH2 0xD9 JUMP JUMPDEST PUSH2 0xF4 SWAP1 PUSH2 0xE2 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x56 SWAP2 SWAP1 PUSH2 0xEB JUMP JUMPDEST CALLVALUE PUSH2 0x23 JUMPI PUSH2 0x136 PUSH2 0x12A PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x6B JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xF8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP5 PUSH2 0x1A1 PUSH2 0x1A8 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x19A PUSH1 0xA0 SWAP7 PUSH2 0x193 PUSH2 0x56 SWAP11 PUSH2 0x183 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP6 PUSH2 0xD98 DUP8 ADD SWAP5 DUP8 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x201 JUMPI DUP8 SWAP7 PUSH2 0x1EE SWAP7 PUSH2 0xD98 PUSH2 0x207 DUP11 CODECOPY PUSH2 0x150 JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x1FC JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x13A JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x37 JUMPI PUSH3 0x25 PUSH3 0x18 PUSH3 0x141 JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH3 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA57 PUSH3 0x341 DUP3 CODECOPY PUSH2 0xA57 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x74 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x3C JUMP JUMPDEST SWAP1 PUSH3 0x91 PUSH3 0x89 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x52 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND JUMPDEST SUB PUSH3 0x37 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x91 DUP3 PUSH3 0xA2 JUMP JUMPDEST DUP1 PUSH3 0xAD JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x91 DUP3 PUSH3 0xC4 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH3 0x37 JUMPI PUSH3 0xF3 DUP4 DUP4 PUSH3 0xB5 JUMP JUMPDEST SWAP3 PUSH3 0x103 DUP2 PUSH1 0x20 DUP6 ADD PUSH3 0xB5 JUMP JUMPDEST SWAP3 PUSH3 0x113 DUP3 PUSH1 0x40 DUP4 ADD PUSH3 0xCB JUMP JUMPDEST SWAP3 PUSH3 0x9F PUSH3 0x127 DUP5 PUSH1 0x60 DUP6 ADD PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH3 0x137 DUP2 PUSH1 0x80 DUP7 ADD PUSH3 0xCB JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH3 0xCB JUMP JUMPDEST PUSH3 0x164 PUSH3 0xD98 DUP1 CODESIZE SUB DUP1 PUSH3 0x158 DUP2 PUSH3 0x7A JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xDA JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 JUMP JUMPDEST PUSH3 0x93 PUSH3 0x9F PUSH3 0x9F SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x16C JUMP JUMPDEST PUSH3 0x9F PUSH3 0x9F PUSH3 0x9F SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH3 0x91 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x93 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x1D1 JUMP JUMPDEST PUSH3 0x9F SWAP1 PUSH3 0x1E7 JUMP JUMPDEST SWAP1 PUSH3 0x211 PUSH3 0x9F PUSH3 0x219 SWAP3 PUSH3 0x1F2 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x1BC JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH3 0x1C7 JUMP JUMPDEST SWAP1 PUSH3 0x23C PUSH3 0x9F PUSH3 0x219 SWAP3 PUSH3 0x187 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x21D JUMP JUMPDEST SWAP1 PUSH3 0x23C PUSH3 0x9F PUSH3 0x219 SWAP3 SWAP1 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP6 PUSH1 0x0 SWAP1 PUSH3 0x26A DUP3 PUSH3 0x17C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH3 0x323 JUMPI JUMPDEST POP DUP1 ISZERO PUSH3 0x30F JUMPI JUMPDEST PUSH3 0x2E3 JUMPI PUSH3 0x2D3 SWAP3 PUSH3 0x2C3 PUSH3 0x91 SWAP9 SWAP10 PUSH3 0x2DB SWAP8 SWAP7 SWAP5 PUSH3 0x2BD PUSH3 0x2CB SWAP6 PUSH1 0x1 PUSH3 0x1FD JUMP JUMPDEST PUSH3 0x1FD JUMP JUMPDEST PUSH1 0x2 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x228 JUMP JUMPDEST PUSH1 0x5 PUSH3 0x244 JUMP JUMPDEST DUP8 SWAP1 PUSH3 0x30B DUP5 PUSH3 0x2F4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x3D7C241D PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 DUP5 SWAP4 PUSH1 0x4 DUP6 ADD PUSH3 0x197 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH3 0x31B DUP3 PUSH3 0x187 JUMP JUMPDEST DUP4 EQ PUSH3 0x291 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EQ CODESIZE PUSH3 0x288 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5981769 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x97B3CDB EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x7DC68077 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x91F7CFB9 EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0x9F43DDD2 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xA3E67610 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xB73E0E8B EQ PUSH2 0x7F JUMPI PUSH4 0xF339F526 SUB PUSH2 0xA7 JUMPI PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xA7 JUMPI JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 SLOAD PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x4 PUSH2 0xC5 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x127 DUP2 PUSH2 0x112 JUMP JUMPDEST SUB PUSH2 0xA7 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x11E JUMP JUMPDEST DUP1 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x13B JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xA7 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA7 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0xA7 JUMPI JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0x195 DUP4 DUP3 PUSH2 0x12E JUMP JUMPDEST SWAP3 PUSH2 0x1A3 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x141 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA7 JUMPI PUSH2 0x1C7 DUP4 PUSH2 0xC2 SWAP3 DUP7 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x60 ADD PUSH2 0x141 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x1EE PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x5 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x1F3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x12E JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x112 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x242 JUMP JUMPDEST SWAP1 PUSH2 0x25E SWAP1 PUSH2 0x24B JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x27E PUSH1 0x6 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x254 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x10E PUSH2 0xFD PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x2 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x29E JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x3 PUSH2 0xC5 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0xFD PUSH2 0x2C5 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x8 MUL SHR PUSH2 0x112 JUMP JUMPDEST SWAP1 PUSH2 0xC2 SWAP2 SLOAD PUSH2 0x2EC JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2F9 JUMP JUMPDEST PUSH2 0xDC SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x310 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0x344 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x319 JUMP JUMPDEST PUSH2 0xC2 PUSH1 0x0 DUP1 PUSH2 0x2F9 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0xAC JUMP JUMPDEST PUSH2 0x10E PUSH2 0x344 PUSH2 0x350 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0x38B DUP2 DUP4 PUSH2 0x141 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA7 JUMPI PUSH2 0x3AF DUP4 PUSH2 0xC2 SWAP3 DUP7 ADD PUSH2 0x14E JUMP JUMPDEST SWAP4 SWAP1 SWAP5 PUSH1 0x40 ADD PUSH2 0x141 JUMP JUMPDEST CALLVALUE PUSH2 0xA7 JUMPI PUSH2 0x1EE PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x376 JUMP JUMPDEST CALLER SWAP3 PUSH2 0x3DB SWAP3 SWAP1 DUP6 DUP6 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3E5 DUP3 DUP3 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x41C PUSH2 0x412 PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 SWAP3 PUSH2 0x24B JUMP JUMPDEST SWAP3 PUSH2 0x101 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x421 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xC2 PUSH2 0xC2 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x43F JUMP JUMPDEST PUSH2 0x45A PUSH2 0xDC SWAP2 PUSH2 0x112 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH1 0x14 DUP2 PUSH2 0x472 PUSH2 0x478 SWAP4 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x44E JUMP JUMPDEST ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4B4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST SWAP1 PUSH2 0xE0 PUSH2 0x4C6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x492 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4B4 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x4FA PUSH2 0x4F5 DUP3 PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 MUL DUP4 ADD SWAP3 DUP2 DUP5 GT PUSH2 0xA7 JUMPI SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x51E JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x52C DUP5 DUP7 PUSH2 0x141 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x511 JUMP JUMPDEST PUSH2 0xC2 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x4E5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST SWAP3 SWAP1 JUMP JUMPDEST DUP3 ADD DUP1 SWAP3 GT PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x584 PUSH1 0x5 PUSH2 0x428 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH2 0x59B PUSH2 0x597 PUSH2 0xC2 DUP8 PUSH2 0x432 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SUB PUSH2 0x678 JUMPI JUMPDEST POP POP PUSH2 0x5B1 PUSH2 0x5B6 SWAP2 PUSH1 0x6 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST PUSH2 0x5BF DUP3 PUSH2 0x432 JUMP JUMPDEST DUP6 EQ DUP1 ISZERO PUSH2 0x663 JUMPI JUMPDEST PUSH2 0x651 JUMPI PUSH2 0x5D6 PUSH1 0x3 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x5DF DUP4 PUSH2 0x432 JUMP JUMPDEST DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x646 JUMPI JUMPDEST POP PUSH2 0x634 JUMPI PUSH2 0x606 SWAP4 PUSH2 0x597 SWAP4 PUSH2 0x55F SWAP4 POP ISZERO PUSH2 0x623 JUMPI SWAP5 PUSH2 0x558 JUMP JUMPDEST GT PUSH2 0x60D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCE2EAB5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x62E PUSH1 0x4 PUSH2 0x428 JUMP JUMPDEST SWAP5 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5228CDBF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO CODESIZE PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF16A021 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH2 0x671 PUSH2 0xC2 PUSH1 0x2 PUSH2 0x428 JUMP JUMPDEST DUP6 GT PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x5B6 SWAP3 SWAP5 POP PUSH2 0x5B1 SWAP2 PUSH2 0x6DD SWAP2 PUSH2 0x6D8 PUSH2 0x693 PUSH1 0x5 PUSH2 0x428 JUMP JUMPDEST SWAP2 PUSH2 0x6B3 PUSH2 0x6BF DUP12 DUP12 PUSH2 0x6A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP4 PUSH2 0x45F JUMP JUMPDEST SWAP1 DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x492 JUMP JUMPDEST PUSH2 0x6D1 PUSH2 0x6CA DUP3 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST KECCAK256 SWAP4 PUSH2 0x537 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST SWAP4 SWAP2 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x55F PUSH2 0x6FE SWAP3 SWAP4 PUSH2 0x597 SWAP3 PUSH2 0x6F8 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x74A JUMP JUMPDEST EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x56E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x730 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x741 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x754 PUSH1 0x0 PUSH2 0x432 JUMP JUMPDEST SWAP2 JUMPDEST PUSH2 0x761 PUSH2 0xC2 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x793 JUMPI PUSH2 0x787 PUSH2 0x78D SWAP2 PUSH2 0x781 PUSH2 0x77C DUP7 DUP7 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST SWAP1 PUSH2 0x799 JUMP JUMPDEST SWAP3 PUSH2 0x702 JUMP JUMPDEST SWAP2 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7B4 JUMPI SWAP1 PUSH2 0xC2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xC2 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xC2 PUSH2 0xC2 PUSH2 0x7D6 SWAP3 PUSH2 0x432 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH2 0xC2 SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH2 0xC2 SWAP1 SLOAD PUSH2 0x7E7 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x127 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0xE0 DUP3 PUSH2 0x7FA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0xA7 JUMPI PUSH2 0xC2 SWAP2 PUSH2 0x802 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0xE0 SWAP3 SWAP5 SWAP4 PUSH2 0x83E PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x83E PUSH2 0xE0 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x86E PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x8A8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x61F PUSH1 0x4 DUP3 ADD PUSH2 0x878 JUMP JUMPDEST SWAP1 PUSH2 0x8E8 PUSH2 0x8D0 CALLER PUSH1 0x6 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x8E2 DUP4 PUSH2 0x8DD DUP4 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x905 PUSH2 0x8FE DUP3 PUSH2 0x8F9 PUSH1 0x2 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x2 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x91A PUSH2 0x915 PUSH2 0x915 PUSH1 0x0 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST SWAP1 PUSH4 0xA9059CBB PUSH2 0x933 PUSH2 0x92C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH2 0x947 DUP6 DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x823 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH2 0x964 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xA05 JUMPI POP ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x9F3 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x999 PUSH1 0x0 PUSH4 0x23B872DD PUSH2 0x9A4 PUSH2 0x982 PUSH1 0x1 PUSH2 0x7F0 JUMP JUMPDEST SWAP6 PUSH2 0x98C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x84E JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH2 0xE0 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x9C0 JUMPI JUMPDEST POP PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x9E1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x9E7 JUMPI JUMPDEST PUSH2 0x9D9 DUP2 DUP4 PUSH2 0x492 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x80F JUMP JUMPDEST CODESIZE PUSH2 0x9BA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0xA1D SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x9E7 JUMPI PUSH2 0x9D9 DUP2 DUP4 PUSH2 0x492 JUMP JUMPDEST ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x61DD8897B171D24341442E29FDF264E9FFF91A08A7D421 0xCE PUSH25 0x7DBF17CEAAC064736F6C63430008140033A264697066735822 SLT KECCAK256 LOG2 0xE9 AND EXTCODESIZE 0xD3 0xD3 ADD 0xC4 DUP11 SUB 0x29 JUMPDEST SWAP7 0xB8 0xE9 STOP MOD 0x22 MLOAD 0x49 SWAP4 0xFC PUSH22 0xC57D59923C6E40DA3664736F6C634300081400330000 ","sourceMap":"288:1277:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;288:1277:19;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;288:1277:19;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;288:1277:19;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;288:1277:19;;;;;-1:-1:-1;;;;;288:1277:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;954:609;;;;;;;288:1277;;1313:209;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;954:609;:::o;1313:209::-;;:::i;:::-;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"810400","executionCost":"855","totalCost":"811255"},"external":{"createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)":"infinite"}},"methodIdentifiers":{"createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)":"9b1de1ff"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"airdropTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"airdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWalletClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"createClaimableAirdrop\",\"outputs\":[{\"internalType\":\"contract AirdropERC20Claimable\",\"name\":\"newAirdrop\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@neuro_0x\",\"kind\":\"dev\",\"methods\":{\"createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)\":{\"details\":\"Launch a new instance of the CoinGenieAirdropClaimable Contract.\",\"params\":{\"airdropAmount\":\"The amount of tokens available for airdrop\",\"airdropTokenAddress\":\"The address of the airdrop token\",\"expirationTimestamp\":\"The expiration timestamp of the airdrop\",\"maxWalletClaimCount\":\"The maximum number of tokens that can be claimed by a wallet if not in the whitelist\",\"merkleRoot\":\"The merkle root of the whitelist\",\"tokenOwner\":\"The address of the token owner\"},\"returns\":{\"newAirdrop\":\"The address of the newly deployed airdrop contract\"}}},\"title\":\"AirdropERC20ClaimableFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A factory library to deploy instances of the AirdropERC20Claimable contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AirdropERC20ClaimableFactory.sol\":\"AirdropERC20ClaimableFactory\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Tree proofs.\\n *\\n * The tree and the proofs can be generated using our\\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\\n * You will find a quickstart guide in the readme.\\n *\\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\\n * hashing, or use a hash function other than keccak256 for hashing leaves.\\n * This is because the concatenation of a sorted pair of internal nodes in\\n * the merkle tree could be reinterpreted as a leaf value.\\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\\n * against this attack out of the box.\\n */\\nlibrary MerkleProof {\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {verify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProofCalldata(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     *\\n     * _Available since v4.4._\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerify(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProof(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {multiProofVerify}\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerifyCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\\n     * respectively.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProof(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proofLen - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            require(proofPos == proofLen, \\\"MerkleProof: invalid multiproof\\\");\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processMultiProof}.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProofCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proofLen - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            require(proofPos == proofLen, \\\"MerkleProof: invalid multiproof\\\");\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\\n    }\\n\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\"},\"src/AirdropERC20Claimable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\\\";\\nimport { MerkleProof } from \\\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\\\";\\n\\n/**\\n * @title AirdropERC20Claimable\\n * @author @neuro_0x\\n * @dev A contract for airdropping ERC20 tokens to specific recipients based on Merkle proofs.\\n */\\n\\ncontract AirdropERC20Claimable {\\n    error InvalidTransferAmount();\\n    error AirdropExpired();\\n    error AlreadyClaimedMax();\\n    error TransferFailed();\\n    error InvalidAirdropParameters(address tokenOwner, address airdropTokenAddress, uint256 airdropAmount);\\n\\n    /// @dev The address of the token to be airdropped.\\n    address public airdropTokenAddress;\\n\\n    /// @dev The owner of the token to be airdropped.\\n    address public tokenOwner;\\n\\n    /// @dev The quantity of tokens available for airdrop.\\n    uint256 public availableAmount;\\n\\n    /// @dev Expiration timestamp of the airdrop.\\n    uint256 public expirationTimestamp;\\n\\n    /// @dev Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\\n    uint256 public maxWalletClaimCount;\\n\\n    /// @dev Merkle root of the whitelist.\\n    bytes32 public merkleRoot;\\n\\n    /// @dev Mapping from address => total number of tokens a wallet has claimed.\\n    mapping(address claimer => uint256 amount) public totalClaimedByWallet;\\n\\n    /// @dev Emitted when tokens are claimed\\n    event TokensClaimed(address indexed claimer, uint256 quantityClaimed);\\n\\n    /**\\n     * @dev Initializes the contract.\\n     * @param _tokenOwner The owner of the token to be airdropped.\\n     * @param _airdropTokenAddress The address of the token to be airdropped.\\n     * @param _airdropAmount The quantity of tokens available for airdrop.\\n     * @param _expirationTimestamp Expiration timestamp of the airdrop.\\n     * @param _maxWalletClaimCount Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\\n     * @param _merkleRoot Merkle root of the whitelist.\\n     */\\n    constructor(\\n        address _tokenOwner,\\n        address _airdropTokenAddress,\\n        uint256 _airdropAmount,\\n        uint256 _expirationTimestamp,\\n        uint256 _maxWalletClaimCount,\\n        bytes32 _merkleRoot\\n    ) {\\n        if (_tokenOwner == address(0) || _airdropTokenAddress == address(0) || _airdropAmount == 0) {\\n            revert InvalidAirdropParameters(_tokenOwner, _airdropTokenAddress, _airdropAmount);\\n        }\\n\\n        tokenOwner = _tokenOwner;\\n        airdropTokenAddress = _airdropTokenAddress;\\n        availableAmount = _airdropAmount;\\n        expirationTimestamp = _expirationTimestamp;\\n        maxWalletClaimCount = _maxWalletClaimCount;\\n        merkleRoot = _merkleRoot;\\n    }\\n\\n    /**\\n     * @dev Claims tokens from the airdrop.\\n     * @param amount The quantity of tokens to claim.\\n     * @param proofs Claims proofs.\\n     * @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet.\\n     */\\n    function claim(uint256 amount, bytes32[] calldata proofs, uint256 proofMaxQuantityForWallet) external {\\n        // Verify the claim\\n        verifyClaim(msg.sender, amount, proofs, proofMaxQuantityForWallet);\\n        // Transfer the claimed tokens\\n        _transferClaimedTokens(msg.sender, amount);\\n        // Emit the TokensClaimed event\\n        emit TokensClaimed(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Verifies the claim and reverts if the claim is invalid.\\n     * @param claimant The address of the claimer.\\n     * @param amount The quantity of tokens to claim.\\n     * @param proofs Claims proofs.\\n     * @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet.\\n     */\\n    function verifyClaim(\\n        address claimant,\\n        uint256 amount,\\n        bytes32[] calldata proofs,\\n        uint256 proofMaxQuantityForWallet\\n    )\\n        public\\n        view\\n    {\\n        bool verified;\\n        // Get the proof of the claimer\\n        if (merkleRoot != bytes32(0)) {\\n            verified =\\n                MerkleProof.verify(proofs, merkleRoot, keccak256(abi.encodePacked(claimant, proofMaxQuantityForWallet)));\\n        }\\n\\n        // Check if the wallet has already claimed tokens\\n        uint256 supplyClaimedAlready = totalClaimedByWallet[claimant];\\n\\n        // Check if the claim is valid\\n        if (amount == 0 || amount > availableAmount) {\\n            revert InvalidTransferAmount();\\n        }\\n\\n        // Check if the airdrop has expired\\n        uint256 expTimestamp = expirationTimestamp;\\n        if (expTimestamp != 0 && block.timestamp >= expTimestamp) {\\n            revert AirdropExpired();\\n        }\\n\\n        // Check if the wallet has exceeded the maximum number of tokens that can be claimed\\n        uint256 claimLimitForWallet = verified ? proofMaxQuantityForWallet : maxWalletClaimCount;\\n        if (amount + supplyClaimedAlready > claimLimitForWallet) {\\n            revert AlreadyClaimedMax();\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers the claimed tokens to the recipient.\\n     * @param recipient The recipient of the tokens.\\n     * @param amount The quantity of tokens to claim.\\n     */\\n    function _transferClaimedTokens(address recipient, uint256 amount) private {\\n        // if transfer claimed tokens is called when `to != msg.sender`, it'd use msg.sender's limits.\\n        // behavior would be similar to `msg.sender` mint for itself, then transfer to `_recipient`.\\n        totalClaimedByWallet[msg.sender] += amount;\\n        availableAmount -= amount;\\n\\n        IERC20 airdropToken = IERC20(airdropTokenAddress);\\n        if (!airdropToken.transfer(recipient, amount)) {\\n            revert TransferFailed();\\n        }\\n        require(airdropToken.transferFrom(tokenOwner, recipient, amount), \\\"Transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x860d790cae509e04250b2c8fa8013f08d8004081a36a84a5cbbec3f6ce51c477\",\"license\":\"GPL-3.0\"},\"src/AirdropERC20ClaimableFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport { AirdropERC20Claimable } from \\\"./AirdropERC20Claimable.sol\\\";\\n\\n/**\\n * @title AirdropERC20ClaimableFactory\\n * @author @neuro_0x\\n * @notice A factory library to deploy instances of the AirdropERC20Claimable contract.\\n */\\ncontract AirdropERC20ClaimableFactory {\\n    /**\\n     * @dev Launch a new instance of the CoinGenieAirdropClaimable Contract.\\n     * @param tokenOwner The address of the token owner\\n     * @param airdropTokenAddress The address of the airdrop token\\n     * @param airdropAmount The amount of tokens available for airdrop\\n     * @param expirationTimestamp The expiration timestamp of the airdrop\\n     * @param maxWalletClaimCount The maximum number of tokens that can be claimed by a wallet if not in the whitelist\\n     * @param merkleRoot The merkle root of the whitelist\\n     *\\n     * @return newAirdrop The address of the newly deployed airdrop contract\\n     */\\n    function createClaimableAirdrop(\\n        address tokenOwner,\\n        address airdropTokenAddress,\\n        uint256 airdropAmount,\\n        uint256 expirationTimestamp,\\n        uint256 maxWalletClaimCount,\\n        bytes32 merkleRoot\\n    )\\n        external\\n        returns (AirdropERC20Claimable newAirdrop)\\n    {\\n        AirdropERC20Claimable claimableAirdrop = new AirdropERC20Claimable(\\n            tokenOwner,\\n            airdropTokenAddress,\\n            airdropAmount,\\n            expirationTimestamp,\\n            maxWalletClaimCount,\\n            merkleRoot\\n        );\\n\\n        return claimableAirdrop;\\n    }\\n}\\n\",\"keccak256\":\"0xb2b60f42d71e22e5944417291bb5e6c2311105e82a7ecdad7e4f215d4f4e78fe\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"A factory library to deploy instances of the AirdropERC20Claimable contract.","version":1}}},"src/CoinGenie.sol":{"CoinGenie":{"abi":[{"inputs":[{"internalType":"address","name":"erc20FactoryAddress","type":"address"},{"internalType":"address","name":"airdropClaimableERC20FactoryAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"enum CoinGenie.PayoutCategory","name":"category","type":"uint8"}],"name":"InvalidPayoutCategory","type":"error"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"uint256","name":"maxShare","type":"uint256"}],"name":"ShareToHigh","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"airdropAddress","type":"address"},{"indexed":false,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"address","name":"airdropTokenAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"airdropAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expirationTimestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxWalletClaimCount","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"ClaimableAirdropCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newTokenAddress","type":"address"}],"name":"ERC20Launched","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"UNISWAP_V2_ROUTER","outputs":[{"internalType":"contract IUniswapV2Router02","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"claimableAirdropCreatedBy","outputs":[{"internalType":"address","name":"airdropAddress","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"airdropTokenAddress","type":"address"},{"internalType":"uint256","name":"airdropAmount","type":"uint256"},{"internalType":"uint256","name":"expirationTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxWalletClaimCount","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"airdropTokenAddress","type":"address"},{"internalType":"uint256","name":"airdropAmount","type":"uint256"},{"internalType":"uint256","name":"expirationTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxWalletClaimCount","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"name":"createClaimableAirdrop","outputs":[{"internalType":"address","name":"dropAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"createdClaimableAirdrops","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getClaimableAirdropsForAddress","outputs":[{"components":[{"internalType":"address","name":"airdropAddress","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"airdropTokenAddress","type":"address"},{"internalType":"uint256","name":"airdropAmount","type":"uint256"},{"internalType":"uint256","name":"expirationTimestamp","type":"uint256"},{"internalType":"uint256","name":"maxWalletClaimCount","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"internalType":"struct CoinGenie.ClaimableAirdrop[]","name":"airdrops","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"getLaunchedTokensForAddress","outputs":[{"components":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"bool","name":"isBurnable","type":"bool"},{"internalType":"bool","name":"isDeflationary","type":"bool"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"autoWithdrawThreshold","type":"uint256"},{"internalType":"uint256","name":"maxTaxSwap","type":"uint256"},{"internalType":"address","name":"affiliateFeeRecipient","type":"address"},{"internalType":"address","name":"feeRecipient","type":"address"},{"internalType":"uint256","name":"feePercentage","type":"uint256"},{"internalType":"uint256","name":"burnPercentage","type":"uint256"}],"internalType":"struct CoinGenie.LaunchedToken[]","name":"tokens","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum CoinGenie.PayoutCategory","name":"category","type":"uint8"}],"name":"getPayoutAddress","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum CoinGenie.PayoutCategory","name":"category","type":"uint8"}],"name":"getPayoutShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"tokenOwner","type":"address"},{"components":[{"internalType":"bool","name":"isBurnable","type":"bool"},{"internalType":"bool","name":"isPausable","type":"bool"},{"internalType":"bool","name":"isDeflationary","type":"bool"}],"internalType":"struct Common.TokenConfigProperties","name":"customConfigProps","type":"tuple"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"autoWithdrawThreshold","type":"uint256"},{"internalType":"uint256","name":"maxTaxSwap","type":"uint256"},{"internalType":"address","name":"affiliateFeeRecipient","type":"address"},{"internalType":"address","name":"feeRecipient","type":"address"},{"internalType":"uint256","name":"feePercentage","type":"uint256"},{"internalType":"uint256","name":"burnPercentage","type":"uint256"}],"name":"launchToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"launchedTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_quoteThreshold","type":"uint256"}],"name":"setQuoteThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"lpTokenAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"swapERC20s","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokensLaunchedBy","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"bool","name":"isBurnable","type":"bool"},{"internalType":"bool","name":"isDeflationary","type":"bool"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"autoWithdrawThreshold","type":"uint256"},{"internalType":"uint256","name":"maxTaxSwap","type":"uint256"},{"internalType":"address","name":"affiliateFeeRecipient","type":"address"},{"internalType":"address","name":"feeRecipient","type":"address"},{"internalType":"uint256","name":"feePercentage","type":"uint256"},{"internalType":"uint256","name":"burnPercentage","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum CoinGenie.PayoutCategory","name":"category","type":"uint8"},{"internalType":"address payable","name":"receiver","type":"address"},{"internalType":"uint256","name":"share","type":"uint256"}],"name":"updatePayout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"@neuro_0x","details":"The orchestrator contract for the CoinGenie ecosystem.","kind":"dev","methods":{"constructor":{"params":{"airdropClaimableERC20FactoryAddress":"The address of the AirdropERC20ClaimableFactory contract","erc20FactoryAddress":"The address of the ERC20Factory contract"}},"createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)":{"params":{"airdropAmount":"The amount of tokens available for airdrop","airdropTokenAddress":"The address of the airdrop token","expirationTimestamp":"The expiration timestamp of the airdrop","maxWalletClaimCount":"The maximum number of tokens that can be claimed by a wallet if not in the whitelist","merkleRoot":"The merkle root of the whitelist","tokenOwner":"The address of the token owner"},"returns":{"dropAddress":"The address of the newly deployed airdrop contract"}},"getClaimableAirdropsForAddress(address)":{"params":{"_address":"The address to get the airdrops for"}},"getLaunchedTokensForAddress(address)":{"params":{"_address":"The address to get the tokens for"},"returns":{"tokens":"The array of launched tokens"}},"getPayoutAddress(uint8)":{"params":{"category":"The category to get the payout address for"},"returns":{"_0":"receiver The address to receive the payout"}},"getPayoutShare(uint8)":{"params":{"category":"The category to get the payout share for"},"returns":{"_0":"share The share of the payout"}},"launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256)":{"details":"This function deploys a new token contract and initializes it with provided parameters.","params":{"affiliateFeeRecipient":"The address to receive the affiliate fee","autoWithdrawThreshold":"The threshold for the amount of tokens to swap for ETH","burnPercentage":"The percent in basis points to burn on every tx if this token is deflationary","customConfigProps":"A struct of configuration booleans for the token","feePercentage":"The percent in basis points to use as a tax","feeRecipient":"The address to receive the tax fees","initialSupply":"The initial supply of the token","maxPerWallet":"The maximum amount of tokens allowed to be held by one wallet","maxTaxSwap":"The maximum amount of tokens allowed to be swapped at once by manual or autoswap","name":"The name of the token","symbol":"The symbol of the token","tokenOwner":"The address that will be the owner of the token"},"returns":{"_0":"_tokenAddress The address of the newly deployed token contract"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setQuoteThreshold(uint256)":{"params":{"_quoteThreshold":"The threshold for the amount of tokens to swap for ETH"}},"swapERC20s(address,address,uint256)":{"params":{"amount":"The amount of tokens to swap","tokenAddress":"The address of the token to swap"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updatePayout(uint8,address,uint256)":{"params":{"category":"The category to set the payout address for","receiver":"The address to receive the payout","share":"The share of the payout"}}},"stateVariables":{"UNISWAP_V2_ROUTER":{"details":"The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps"},"_airdropClaimableERC20Factory":{"details":"Stores the address of the AirdropERC20Claimable contract."},"_erc20Factory":{"details":"Stores the address of the ERC20Factory contract."},"_payouts":{"details":"A mapping of payout categories to payouts."},"claimableAirdropCreatedBy":{"details":"A mapping of airdrops launched by a specific owner."},"createdClaimableAirdrops":{"details":"Stores the addresses of all airdrops launched by the contract."},"launchedTokens":{"details":"Stores the addresses of all tokens launched by the contract."},"quoteThreshold":{"details":"The threshold for the amount of tokens to swap for ETH"},"tokensLaunchedBy":{"details":"A mapping of tokens launched by a specific owner."}},"title":"CoinGenie","version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address_fromMemory":{"entryPoint":189,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":116,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_Payout_storage_ptr":{"entryPoint":420,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_address":{"entryPoint":141,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_enum_PayoutCategory":{"entryPoint":471,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":1035,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_CoinGenie":{"entryPoint":593,"id":4119,"parameterSlots":2,"returnSlots":0},"constructor_Ownable":{"entryPoint":1079,"id":23,"parameterSlots":0,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":1047,"id":239,"parameterSlots":0,"returnSlots":0},"convert_address_to_contract_ERC20Factory":{"entryPoint":365,"id":null,"parameterSlots":1,"returnSlots":1},"convert_enum_PayoutCategory_to_enum_PayoutCategory":{"entryPoint":483,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":284,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_ERC20Factory":{"entryPoint":354,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":332,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_CoinGenie":{"entryPoint":229,"id":null,"parameterSlots":0,"returnSlots":2},"copy_struct_to_storage_from_struct_Payout_to_struct_Payout":{"entryPoint":520,"id":null,"parameterSlots":2,"returnSlots":0},"extract_from_storage_value_offsett_address":{"entryPoint":1090,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":76,"id":null,"parameterSlots":2,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_transferOwnership":{"entryPoint":1113,"id":111,"parameterSlots":1,"returnSlots":0},"mapping_index_access_mapping_enum_PayoutCategory_struct_Payout_storage_of_enum_PayoutCategory":{"entryPoint":494,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":432,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":54,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_address_payable":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":1101,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":268,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":376,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_address_payable_to_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_contract_AirdropERC20ClaimableFactory_to_contract_AirdropERC20ClaimableFactory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_contract_ERC20Factory_to_contract_ERC20Factory":{"entryPoint":392,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_rational_by_to_uint256":{"entryPoint":300,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_struct_Payout_to_struct_Payout":{"entryPoint":581,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_assert_enum_PayoutCategory":{"entryPoint":454,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":156,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523462000031576200001f62000018620000e5565b9062000251565b604051612597620004bc823961259790f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160a01b031690565b90565b6001600160a01b038116036200003157565b905051906200008b826200009c565b919060408382031262000031576200009990620000db8185620000ae565b93602001620000ae565b6200010862002a5380380380620000fc8162000074565b928339810190620000bd565b9091565b90600019905b9181191691161790565b6200009962000099620000999290565b90620001406200009962000148926200011c565b82546200010c565b9055565b62000099906200008d906001600160a01b031682565b62000099906200014c565b620000999062000162565b906001600160a01b039062000112565b906200019c6200009962000148926200016d565b825462000178565b62000099604062000074565b634e487b7160e01b600052602160045260246000fd5b60041115620001d157565b620001b0565b906200008b82620001c6565b6200009990620001d7565b90620001fa90620001e3565b600052602052604060002090565b6200008b91906200023e9060209060019062000237816200023087516001600160a01b031690565b9062000188565b0192015190565b906200012c565b906200008b9162000208565b6200029891620002826200028862000290936200026d62000417565b6200028267016345785d8a000060026200012c565b6200016d565b600462000188565b600562000188565b6200008b620002bb73be79b43b1505290dfe04294a433963dbeea736bb6200016d565b620002f0620002e96107d0620002e3620002d4620001a4565b6001600160a01b039095168552565b6200011c565b6020830152565b6200030960036200030f600093620003098584620001ee565b62000245565b620003696200033273633bf832dc39c0025a7aeaa165ec91acf02063d56200016d565b6200035c620002e9611388620002e36200034b620001a4565b6001600160a01b0390951689860152565b62000309600184620001ee565b620004046200038c73bb6712a513c2d7f3e17a40d095a773c5d98574b26200016d565b620003bf620003a56105dc620002e36200034b620001a4565b91620003b2836020830152565b62000309600286620001ee565b620003fd620003e273f14a30c09897d2c7481c5907d01ec58ec09555af6200016d565b620003ec620001a4565b968701906001600160a01b03169052565b6020850152565b80620001ee565b6200009960016200011c565b6200042162000437565b6200008b6200042f6200040b565b60016200012c565b6200008b3362000459565b62000099906200008d565b62000099905462000442565b6200046560006200044d565b906200047381600062000188565b620004aa620004a37f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936200016d565b916200016d565b91620004b560405190565b600090a356fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806310f2b1411461014b5780633ccfd60b146101465780633d9cce421461014157806343584bca1461013c57806344ea3a66146101375780634d9429e714610132578063646eedab1461012d578063715018a6146101285780638da5cb5b146101235780639b1de1ff1461011e578063a7bc6a1714610119578063a82ed9ec14610114578063b56111071461010f578063b579772f1461010a578063d0b516c714610105578063dc8ed63614610100578063f14aade1146100fb578063f2fde38b146100f65763fca928b20361000e57610ea2565b610e71565b610e4a565b610cce565b610cb3565b610c6f565b610c01565b6108f5565b610890565b610777565b610702565b6106ea565b6106bf565b61049f565b61045e565b6102c9565b61029e565b61025f565b610229565b805b0361015957565b600080fd5b9050359061016b82610150565b565b90602082820312610159576101819161015e565b90565b634e487b7160e01b600052603260045260246000fd5b80548210156101bd576101b4600191600052602060002090565b91020190600090565b610184565b610181916008021c5b6001600160a01b031690565b9061018191546101c2565b600860006101ee825490565b8310156102095750610181916102039161019a565b906101d7565b80fd5b610215906101cb565b9052565b60208101929161016b919061020c565b346101595761025061024461023f36600461016d565b6101e2565b60405191829182610219565b0390f35b600091031261015957565b346101595761026f366004610254565b610277611b5d565b604051005b610181916008021c81565b90610181915461027c565b61018160006002610287565b34610159576102ae366004610254565b6102506102b9610292565b6040519182918290815260200190565b34610159576102776102dc36600461016d565b61227a565b610152816101cb565b9050359061016b826102e1565b9190604083820312610159576101819061031181856102ea565b9360200161015e565b610181906101cb906001600160a01b031682565b6101819061031a565b6101819061032e565b9061034a90610337565b600052602052604060002090565b80548210156101bd576101b4600791600052602060002090565b610181906101cb565b6101819054610372565b6101819081565b6101819054610385565b91906103a6600793600094610340565b8054821015610411576103ba929350610358565b506103c48161037b565b916103d16001830161037b565b916103de6002820161037b565b916103eb6003830161038c565b916103f86004820161038c565b91610181600661040a6005850161038c565b930161038c565b8380fd5b949290979695939160e08601986000870161042f9161020c565b6020860161043c9161020c565b604085016104499161020c565b6060840152608083015260a082015260c00152565b346101595761025061047a6104743660046102f7565b90610396565b9361048a97959793919360405190565b97889788610415565b600660006101ee825490565b34610159576102506102446104b536600461016d565b610493565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176104f257604052565b6104ba565b9061016b61050460405190565b92836104d0565b67ffffffffffffffff81116104f257602090601f01601f19160190565b0190565b90826000939282370152565b9092919261054d6105488261050b565b6104f7565b938185526020850190828401116101595761016b9261052c565b9080601f830112156101595781602061018193359101610538565b801515610152565b9050359061016b82610582565b919091606081840312610159576105de6105b160606104f7565b9360006105be828561058a565b9086015260206105d08282860161058a565b90860152604080930161058a565b90830152565b90916101c08284031261015957813567ffffffffffffffff8111610159578361060e918401610567565b92602083013567ffffffffffffffff8111610159578161062f918501610567565b9261063d826040830161015e565b9261064b83606084016102ea565b926106598160808501610597565b926106678260e0830161015e565b9261067683610100840161015e565b9261068581610120850161015e565b926106948261014083016102ea565b926101816106a68461016085016102ea565b936106b581610180860161015e565b936101a00161015e565b34610159576102506102446106d53660046105e4565b9a999099989198979297969396959495611558565b34610159576106fa366004610254565b610277610efd565b3461015957610712366004610254565b610250610244610ebb565b909160c0828403126101595761073383836102ea565b9261074181602085016102ea565b9261074f826040830161015e565b92610181610760846060850161015e565b9361076e816080860161015e565b9360a00161015e565b346101595761025061024461078d36600461071d565b94939093929192611847565b9060208282031261015957610181916102ea565b9060c08061016b936107c76000820151600086019061020c565b6107d96020820151602086019061020c565b6107eb6040820151604086019061020c565b6107fa60608201516060860152565b61080960808201516080860152565b61081860a082015160a0860152565b0151910152565b906105288160e0936107ad565b9061084c61084561083b845190565b8084529260200190565b9260200190565b9060005b81811061085d5750505090565b909192610877610870600192865161081f565b9460200190565b929101610850565b60208082526101819291019061082c565b34610159576102506108ab6108a6366004610799565b612527565b6040519182918261087f565b610181737a250d5630b4cf539739df2c5dacb4c659f2488d610337565b6101816108b7565b61021590610337565b60208101929161016b91906108dc565b3461015957610905366004610254565b6102506109106108d4565b604051918291826108e5565b80548210156101bd576101b4600c91600052602060002090565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801561096c575b602083101461096757565b610936565b91607f169161095c565b805460009392916109936109898361094c565b8085529360200190565b91600181169081156109e557506001146109ac57505050565b6109bf9192939450600052602060002090565b916000925b8184106109d15750500190565b8054848401526020909301926001016109c4565b92949550505060ff1916825215156020020190565b9061018191610976565b9061016b610a1e92610a1560405190565b938480926109fa565b03836104d0565b610181905b60ff1690565b6101819054610a25565b6101819060081c610a2a565b6101819054610a3a565b9190610a60600993600094610340565b805482101561041157610a7492935061091c565b50610a7e8161037b565b91610a8b60018301610a04565b91610a9860028201610a04565b91610aa56003830161038c565b91610ab260048201610a30565b91610abf60048301610a46565b91610acc6005820161038c565b91610ad96006830161038c565b91610ae66007820161038c565b91610af36008830161037b565b91610b006009820161037b565b91610181600b61040a600a850161038c565b60005b838110610b255750506000910152565b8181015183820152602001610b15565b610b56610b5f60209361052893610b4a815190565b80835293849260200190565b95869101610b12565b601f01601f191690565b9a9896949291909d9c9b999795939d6101a08c019060008d01610b8b9161020c565b8b810360208d0152610b9c91610b35565b8a810360408c0152610bad91610b35565b9b60608a01610bba919052565b15156080890152151560a088015260c087015260e08601526101008501526101208401610be69161020c565b6101408301610bf49161020c565b6101608201526101800152565b3461015957610250610c1d610c173660046102f7565b90610a50565b99610c369d9b9d99919998929897939796949660405190565b9d8e9d8e610b69565b909160608284031261015957610181610c5884846102ea565b93610c6681602086016102ea565b9360400161015e565b3461015957610277610c82366004610c3f565b91611f8e565b6004111561015957565b9050359061016b82610c88565b906020828203126101595761018191610c92565b34610159576102506102b9610cc9366004610c9f565b611a08565b3461015957610250610244610ce4366004610c9f565b6119e9565b906101819061018080610d33610d216101a08501610d0f6000890151600088019061020c565b60208801518682036020880152610b35565b60408701518582036040870152610b35565b94610d4360608201516060860152565b60808181015115159085015260a081810151151590850152610d6a60c082015160c0860152565b610d7960e082015160e0860152565b610d8a610100820151610100860152565b610d9e61012082015161012086019061020c565b610db261014082015161014086019061020c565b610818610160820151610160860152565b9061018191610ce9565b90610de3610dd9835190565b8083529160200190565b9081610df56020830284019460200190565b926000915b838310610e0957505050505090565b90919293946020610e2c610e2583856001950387528951610dc3565b9760200190565b9301930191939290610dfa565b602080825261018192910190610dcd565b3461015957610250610e65610e60366004610799565b612414565b60405191829182610e39565b3461015957610277610e84366004610799565b611011565b909160608284031261015957610181610c588484610c92565b3461015957610277610eb5366004610e89565b91611b47565b610181600061037b565b610ecd610f59565b61016b610eeb565b6101cb6101816101819290565b61018190610ed5565b61016b610ef86000610ee2565b61104a565b61016b610ec5565b15610f0c57565b60405162461bcd60e51b815280610f55600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b61016b610f64610ebb565b610f7b610f75336101cb565b6101cb565b916101cb565b14610f05565b61016b90610f8d610f59565b610fed565b15610f9957565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61016b90610ef8611001610f706000610ee2565b61100a836101cb565b1415610f92565b61016b90610f81565b906001600160a01b03905b9181191691161790565b9061103f61018161104692610337565b825461101a565b9055565b611054600061037b565b9061106081600061102f565b61109361108d7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610337565b91610337565b9161109d60405190565b600090a3565b61015281610372565b9050519061016b826110a3565b9060208282031261015957610181916110ac565b9a989694929d9c9b9997959391906101e08c018c80820390600001526110f291610b35565b8b810360208d015261110391610b35565b9c60408b01611110919052565b60608a0161111d9161020c565b8051151560808a01526020810151151560a08a015260400151151560c089015260e0880152610100870152610120860152610140850161115c9161020c565b610160840161116a9161020c565b6101808301526101a08201526101c00161016b9161020c565b6040513d6000823e3d90fd5b916001600160a01b0360089290920291821b911b611025565b91906111b961018161104693610337565b90835461118f565b90815491600160401b8310156104f257826111e491600161016b9501815561019a565b906111a8565b6101816101a06104f7565b90610215906101cb565b634e487b7160e01b600052600060045260246000fd5b61018190516101cb565b9160001960089290920291821b911b611025565b6101816101816101819290565b919061125161018161104693611233565b90835461121f565b61016b91600091611240565b818110611270575050565b8061127e6000600193611259565b01611265565b9190601f811161129357505050565b6112a561016b93600052602060002090565b906020601f8401819004830193106112c7575b6020601f909101040190611265565b90915081906112b8565b906112da815190565b9067ffffffffffffffff82116104f2576112fe826112f8855461094c565b85611284565b602090601f83116001146113395761104692916000918361132e575b5050600019600883021c1916906002021790565b01519050388061131a565b601f1983169161134e85600052602060002090565b9260005b81811061138c57509160029391856001969410611373575b50505002019055565b01516000196008601f8516021c1916905538808061136a565b91936020600181928787015181550195019201611352565b9061016b916112d1565b9060001990611025565b906113c861018161104692611233565b82546113ae565b9060ff90611025565b906113e861018161104692151590565b82546113cf565b9061ff009060081b611025565b9061140c61018161104692151590565b82546113ef565b61016b91906114729061018090600b906114368161143087611215565b9061102f565b61144e60018201611448602088015190565b906113a4565b61146060028201611448604088015190565b61147860038201611472606088015190565b906113b8565b6114a26004820161149561148f6080890151151590565b826113d8565b60a08701511515906113fc565b6114b46005820161147260c088015190565b6114c66006820161147260e088015190565b6114d96007820161147261010088015190565b6114ed600882016114306101208801611215565b611501600982016114306101408801611215565b611514600a820161147261016088015190565b0192015190565b919061152a5761016b91611413565b6111ff565b90815491600160401b8310156104f2578261155291600161016b9501815561091c565b9061151b565b9099969382878c888c99969f9c889e9b988e8e8e8a948e611577600090565b50611582600461037b565b61158b90610337565b9963d5e71353988d61159c30610337565b986115a660405190565b9e8f9d8e6115b5819f60e01b90565b81526004019c6115c49d6110cd565b03815a602094600091f180156116f6576115e6916000916116c8575b50610337565b6115ef90610337565b9b8c9a6115fd8c60086111c1565b611608906009610340565b9b6116138351151590565b6040909301511515936116246111ea565b9c61162f908e6111f5565b60208d015260408c015260608b0152151560808a0152151560a089015260c088015260e087015261010086015261166a9061012086016111f5565b6116789061014085016111f5565b61016083015261018082015261168d9161152f565b7fda509e6642e963726d34ff4d505f1232025d5a4c3937d868bcad7e3e5950d6e66116b782610337565b906116c160405190565b600090a290565b6116e9915060203d81116116ef575b6116e181836104d0565b8101906110b9565b386115e0565b503d6116d7565b611183565b919461173e6117459298979561173760a09661173061016b9a61172660c08a019e60008b019061020c565b602089019061020c565b6040870152565b6060850152565b6080830152565b0152565b61018160e06104f7565b906113c86101816110469290565b61016b91906117d99060c09060069061177d8161143087611215565b6117906001820161143060208801611215565b6117a36002820161143060408801611215565b6117b560038201611472606088015190565b6117c760048201611472608088015190565b6115146005820161147260a088015190565b90611753565b919061152a5761016b91611761565b90815491600160401b8310156104f2578261181191600161016b95018155610358565b906117df565b61174561016b94611840606094989795611839608086019a600087019061020c565b6020850152565b6040830152565b94909192611853600090565b5061185e600561037b565b61186790610337565b95639b1de1ff9661187760405190565b9760e01b88528780611891868a878b8b89600488016116fb565b03815a602094600091f19687156116f657600097611987575b506118c06118b9600698610337565b80986111c1565b61192e6118cb611749565b6118d589826111f5565b6118e283602083016111f5565b6118ef86604083016111f5565b6118fa876060830152565b611905846080830152565b6119108860a0830152565b61191b8560c0830152565b611929610181336007610340565b6117ee565b6119817fe4a84f0f254e5960c762412e401bbc3ea5b577c07be930ce4ea38862ddc5f6529361196e6119686119628b610337565b97610337565b97611233565b9761197860405190565b94859485611817565b0390a490565b6119a091975060203d81116116ef576116e181836104d0565b95386118aa565b634e487b7160e01b600052602160045260246000fd5b600411156119c757565b6119a7565b9061016b826119bd565b610181906119cc565b9061034a906119d6565b6000611a02610181926119fa600090565b5060036119df565b0161037b565b6001611a19610181926119fa600090565b0161038c565b9061016b9291611a2d610f59565b611a8e565b90815260408101929161016b9160200152565b610215906119d6565b60208101929161016b9190611a45565b61018160406104f7565b61016b9190611472906020906001906115148161143087611215565b9061016b91611a68565b9291600390611aa56101816001611a1988866119df565b8111611b1557611ab4826119cc565b611abd866119cc565b11611af25793611aed91611ae861016b9596611ae1611ada611a5e565b96876111f5565b6020860152565b6119df565b611a84565b610f5585611aff60405190565b63699273b360e01b815291829160048301611a4e565b611b246001611a1987856119df565b90610f55611b3160405190565b63dcaf71db60e01b815292839260048401611a32565b9061016b9291611a1f565b610181612710611233565b611b6630610337565b3160006003611b7582826119df565b600101611b819061038c565b82600180611b8f81866119df565b01611b999061038c565b958260029280611ba985896119df565b01611bb39061038c565b9281611bbf89806119df565b01611bc99061038c565b96611bd49082611cf3565b90611bdd611b52565b80611be9818095611d2d565b9c611bf49084611cf3565b90611bfe91611d2d565b95611c099083611cf3565b90611c1391611d2d565b97611c1d91611cf3565b90611c2791611d2d565b9882611c33818a6119df565b01611c3d9061037b565b611c4690610337565b90611c5091612543565b611c5a90876119df565b01611c649061037b565b611c6d90610337565b90611c7791612543565b611c8190846119df565b01611c8b9061037b565b611c9490610337565b90611c9e91612543565b80611ca8916119df565b01611cb29061037b565b611cbb90610337565b9061016b91612543565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715611cee57565b611cc5565b6101819190611cdb565b634e487b7160e01b600052601260045260246000fd5b90611d1d565b9190565b908115611d28570490565b611cfd565b6101819190611d13565b6001600160701b038116610152565b9050519061016b82611d37565b63ffffffff8116610152565b9050519061016b82611d53565b909160608284031261015957610181611d858484611d46565b93611d938160208601611d46565b93604001611d5f565b610181610181610181926001600160701b031690565b9050519061016b82610150565b906020828203126101595761018191611db2565b90815260608101939261016b929091604091611745906020830152565b9050519061016b82610582565b906020828203126101595761018191611df0565b91602061016b9294936117456040820196600083019061020c565b15611e3357565b60405162461bcd60e51b815260206004820152600f60248201526e105c1c1c9bdd985b0819985a5b1959608a1b6044820152606490fd5b67ffffffffffffffff81116104f25760208091020190565b90611e8f61054883611e6a565b918252565b369037565b9061016b611eaf611ea984611e82565b93611e6a565b601f190160208401611e94565b90611ec5825190565b8110156101bd576020809102010190565b9050519061016b826102e1565b906020828203126101595761018191611ed6565b61021590611233565b906105288160209361020c565b90611f1c61084561083b845190565b9060005b818110611f2d5750505090565b909192611f406108706001928651611f00565b929101611f20565b90611f836117459161016b96989795611f76608096611f6c60a08801946000890152565b6020870190611ef7565b8482036040860152611f0d565b96606083019061020c565b916060611fa5611fa0611fbd94610337565b610337565b630902f1ac90611fb460405190565b94859260e01b90565b825260049082905afa9182156116f6576000908193612229575b50611fe4611fea91611d9c565b92611d9c565b916020612019611ffb611fa06108b7565b9461202563ad615dec9161200e60405190565b958694859460e01b90565b84528760048501611dd3565b0381865afa9081156116f6576000916121fb575b5061204a611d19610181600261038c565b101561205557505050565b61207e6020612066611fa086610337565b63095ea7b39061207560405190565b93849260e01b90565b825281600081612092888a60048401611e11565b03925af180156116f6576120ae916000916121cd575b50611e2c565b6120c06120bb6002611233565b611e99565b906120de6000946120d96120d387611233565b85611ebc565b6111f5565b63ad5c46486120f66120ef60405190565b9160e01b90565b8152602081600481875afa80156116f65761212091869161219f575b506120d96120d36001611233565b635c11d7959261212f30610337565b4290823b1561015957869561216761215c93889793889461214f60405190565b9a8b998a98899760e01b90565b875260048701611f48565b03925af180156116f657612179575050565b8161016b92903d10612198575b61219081836104d0565b810190610254565b503d612186565b6121c0915060203d81116121c6575b6121b881836104d0565b810190611ee3565b38612112565b503d6121ae565b6121ee915060203d81116121f4575b6121e681836104d0565b810190611dfd565b386120a8565b503d6121dc565b61221c915060203d8111612222575b61221481836104d0565b810190611dbf565b38612039565b503d61220a565b611fe49350611fea91506122539060603d811161225c575b61224b81836104d0565b810190611d6c565b50935090611fd7565b503d612241565b61016b9061226f610f59565b61016b9060026113b8565b61016b90612263565b9061016b6123a5600b6122946111ea565b946122a76122a18261037b565b876111f5565b6122bd6122b660018301610a04565b6020880152565b6122d36122cc60028301610a04565b6040880152565b6122e96122e26003830161038c565b6060880152565b6123016122f860048301610a30565b15156080880152565b61231961231060048301610a46565b151560a0880152565b61232f6123286005830161038c565b60c0880152565b61234561233e6006830161038c565b60e0880152565b61235c6123546007830161038c565b610100880152565b61237561236b6008830161037b565b61012088016111f5565b61238e6123846009830161037b565b61014088016111f5565b611a1961239d600a830161038c565b610160880152565b610180840152565b61018190612283565b906123bf825490565b6123c881611e82565b926123dc6020850191600052602060002090565b6000915b8383106123ed5750505050565b600c60206001926123fd856123ad565b8152019201920191906123e0565b610181906123b6565b61242b61018191612423606090565b506009610340565b61240b565b9061016b6124b96006612441611749565b9461244e6122a18261037b565b61246661245d6001830161037b565b602088016111f5565b61247e6124756002830161037b565b604088016111f5565b61248d6122e26003830161038c565b6124a361249c6004830161038c565b6080880152565b611a196124b26005830161038c565b60a0880152565b60c0840152565b61018190612430565b906124d2825490565b6124db81611e82565b926124ef6020850191600052602060002090565b6000915b8383106125005750505050565b60076020600192612510856124c0565b8152019201920191906124f3565b610181906124c9565b61253e61018191612536606090565b506007610340565b61251e565b600080809381935af11561255357565b63b12d13eb6000526004601cfdfea26469706673582212206449701fbfbeb4f7dc7ebc50000f265c21ce8c69b5f993adf3a3d62d4411026d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x31 JUMPI PUSH3 0x1F PUSH3 0x18 PUSH3 0xE5 JUMP JUMPDEST SWAP1 PUSH3 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2597 PUSH3 0x4BC DUP3 CODECOPY PUSH2 0x2597 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x6E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x36 JUMP JUMPDEST SWAP1 PUSH3 0x8B PUSH3 0x83 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x4C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH3 0x31 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0x8B DUP3 PUSH3 0x9C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH3 0x31 JUMPI PUSH3 0x99 SWAP1 PUSH3 0xDB DUP2 DUP6 PUSH3 0xAE JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH3 0xAE JUMP JUMPDEST PUSH3 0x108 PUSH3 0x2A53 DUP1 CODESIZE SUB DUP1 PUSH3 0xFC DUP2 PUSH3 0x74 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0xBD JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x99 PUSH3 0x99 PUSH3 0x99 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x140 PUSH3 0x99 PUSH3 0x148 SWAP3 PUSH3 0x11C JUMP JUMPDEST DUP3 SLOAD PUSH3 0x10C JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x8D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x14C JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x162 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x112 JUMP JUMPDEST SWAP1 PUSH3 0x19C PUSH3 0x99 PUSH3 0x148 SWAP3 PUSH3 0x16D JUMP JUMPDEST DUP3 SLOAD PUSH3 0x178 JUMP JUMPDEST PUSH3 0x99 PUSH1 0x40 PUSH3 0x74 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH3 0x1D1 JUMPI JUMP JUMPDEST PUSH3 0x1B0 JUMP JUMPDEST SWAP1 PUSH3 0x8B DUP3 PUSH3 0x1C6 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x1D7 JUMP JUMPDEST SWAP1 PUSH3 0x1FA SWAP1 PUSH3 0x1E3 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH3 0x8B SWAP2 SWAP1 PUSH3 0x23E SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 PUSH3 0x237 DUP2 PUSH3 0x230 DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x188 JUMP JUMPDEST ADD SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x12C JUMP JUMPDEST SWAP1 PUSH3 0x8B SWAP2 PUSH3 0x208 JUMP JUMPDEST PUSH3 0x298 SWAP2 PUSH3 0x282 PUSH3 0x288 PUSH3 0x290 SWAP4 PUSH3 0x26D PUSH3 0x417 JUMP JUMPDEST PUSH3 0x282 PUSH8 0x16345785D8A0000 PUSH1 0x2 PUSH3 0x12C JUMP JUMPDEST PUSH3 0x16D JUMP JUMPDEST PUSH1 0x4 PUSH3 0x188 JUMP JUMPDEST PUSH1 0x5 PUSH3 0x188 JUMP JUMPDEST PUSH3 0x8B PUSH3 0x2BB PUSH20 0xBE79B43B1505290DFE04294A433963DBEEA736BB PUSH3 0x16D JUMP JUMPDEST PUSH3 0x2F0 PUSH3 0x2E9 PUSH2 0x7D0 PUSH3 0x2E3 PUSH3 0x2D4 PUSH3 0x1A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE JUMP JUMPDEST PUSH3 0x11C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH3 0x309 PUSH1 0x3 PUSH3 0x30F PUSH1 0x0 SWAP4 PUSH3 0x309 DUP6 DUP5 PUSH3 0x1EE JUMP JUMPDEST PUSH3 0x245 JUMP JUMPDEST PUSH3 0x369 PUSH3 0x332 PUSH20 0x633BF832DC39C0025A7AEAA165EC91ACF02063D5 PUSH3 0x16D JUMP JUMPDEST PUSH3 0x35C PUSH3 0x2E9 PUSH2 0x1388 PUSH3 0x2E3 PUSH3 0x34B PUSH3 0x1A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP10 DUP7 ADD MSTORE JUMP JUMPDEST PUSH3 0x309 PUSH1 0x1 DUP5 PUSH3 0x1EE JUMP JUMPDEST PUSH3 0x404 PUSH3 0x38C PUSH20 0xBB6712A513C2D7F3E17A40D095A773C5D98574B2 PUSH3 0x16D JUMP JUMPDEST PUSH3 0x3BF PUSH3 0x3A5 PUSH2 0x5DC PUSH3 0x2E3 PUSH3 0x34B PUSH3 0x1A4 JUMP JUMPDEST SWAP2 PUSH3 0x3B2 DUP4 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH3 0x309 PUSH1 0x2 DUP7 PUSH3 0x1EE JUMP JUMPDEST PUSH3 0x3FD PUSH3 0x3E2 PUSH20 0xF14A30C09897D2C7481C5907D01EC58EC09555AF PUSH3 0x16D JUMP JUMPDEST PUSH3 0x3EC PUSH3 0x1A4 JUMP JUMPDEST SWAP7 DUP8 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST DUP1 PUSH3 0x1EE JUMP JUMPDEST PUSH3 0x99 PUSH1 0x1 PUSH3 0x11C JUMP JUMPDEST PUSH3 0x421 PUSH3 0x437 JUMP JUMPDEST PUSH3 0x8B PUSH3 0x42F PUSH3 0x40B JUMP JUMPDEST PUSH1 0x1 PUSH3 0x12C JUMP JUMPDEST PUSH3 0x8B CALLER PUSH3 0x459 JUMP JUMPDEST PUSH3 0x99 SWAP1 PUSH3 0x8D JUMP JUMPDEST PUSH3 0x99 SWAP1 SLOAD PUSH3 0x442 JUMP JUMPDEST PUSH3 0x465 PUSH1 0x0 PUSH3 0x44D JUMP JUMPDEST SWAP1 PUSH3 0x473 DUP2 PUSH1 0x0 PUSH3 0x188 JUMP JUMPDEST PUSH3 0x4AA PUSH3 0x4A3 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x16D JUMP JUMPDEST SWAP2 PUSH3 0x16D JUMP JUMPDEST SWAP2 PUSH3 0x4B5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10F2B141 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x3D9CCE42 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x43584BCA EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x44EA3A66 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x4D9429E7 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x646EEDAB EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x9B1DE1FF EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xA7BC6A17 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xB5611107 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xB579772F EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xD0B516C7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xDC8ED636 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF14AADE1 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI PUSH4 0xFCA928B2 SUB PUSH2 0xE JUMPI PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x159 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x150 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x15E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1B4 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH2 0x181 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP2 SLOAD PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0x1EE DUP3 SLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x209 JUMPI POP PUSH2 0x181 SWAP2 PUSH2 0x203 SWAP2 PUSH2 0x19A JUMP JUMPDEST SWAP1 PUSH2 0x1D7 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH2 0x215 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x16D JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x219 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x159 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x181 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP2 SLOAD PUSH2 0x27C JUMP JUMPDEST PUSH2 0x181 PUSH1 0x0 PUSH1 0x2 PUSH2 0x287 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2B9 PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x277 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x16D JUMP JUMPDEST PUSH2 0x227A JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x1CB JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x2E1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP1 PUSH2 0x311 DUP2 DUP6 PUSH2 0x2EA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x1CB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x31A JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x32E JUMP JUMPDEST SWAP1 PUSH2 0x34A SWAP1 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1B4 PUSH1 0x7 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x181 SWAP1 SLOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x181 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x181 SWAP1 SLOAD PUSH2 0x385 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3A6 PUSH1 0x7 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x340 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x411 JUMPI PUSH2 0x3BA SWAP3 SWAP4 POP PUSH2 0x358 JUMP JUMPDEST POP PUSH2 0x3C4 DUP2 PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0x3D1 PUSH1 0x1 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0x3DE PUSH1 0x2 DUP3 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0x3EB PUSH1 0x3 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0x3F8 PUSH1 0x4 DUP3 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0x181 PUSH1 0x6 PUSH2 0x40A PUSH1 0x5 DUP6 ADD PUSH2 0x38C JUMP JUMPDEST SWAP4 ADD PUSH2 0x38C JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP5 SWAP3 SWAP1 SWAP8 SWAP7 SWAP6 SWAP4 SWAP2 PUSH1 0xE0 DUP7 ADD SWAP9 PUSH1 0x0 DUP8 ADD PUSH2 0x42F SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP7 ADD PUSH2 0x43C SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 DUP6 ADD PUSH2 0x449 SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x47A PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7 JUMP JUMPDEST SWAP1 PUSH2 0x396 JUMP JUMPDEST SWAP4 PUSH2 0x48A SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH2 0x1EE DUP3 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0x504 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x4D0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F2 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x54D PUSH2 0x548 DUP3 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH2 0x159 JUMPI PUSH2 0x16B SWAP3 PUSH2 0x52C JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x159 JUMPI DUP2 PUSH1 0x20 PUSH2 0x181 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x538 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x152 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x582 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x5DE PUSH2 0x5B1 PUSH1 0x60 PUSH2 0x4F7 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH2 0x5BE DUP3 DUP6 PUSH2 0x58A JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH2 0x5D0 DUP3 DUP3 DUP7 ADD PUSH2 0x58A JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 DUP1 SWAP4 ADD PUSH2 0x58A JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1C0 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x159 JUMPI DUP4 PUSH2 0x60E SWAP2 DUP5 ADD PUSH2 0x567 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x159 JUMPI DUP2 PUSH2 0x62F SWAP2 DUP6 ADD PUSH2 0x567 JUMP JUMPDEST SWAP3 PUSH2 0x63D DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x64B DUP4 PUSH1 0x60 DUP5 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP3 PUSH2 0x659 DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x597 JUMP JUMPDEST SWAP3 PUSH2 0x667 DUP3 PUSH1 0xE0 DUP4 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x676 DUP4 PUSH2 0x100 DUP5 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x685 DUP2 PUSH2 0x120 DUP6 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x694 DUP3 PUSH2 0x140 DUP4 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP3 PUSH2 0x181 PUSH2 0x6A6 DUP5 PUSH2 0x160 DUP6 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP4 PUSH2 0x6B5 DUP2 PUSH2 0x180 DUP7 ADD PUSH2 0x15E JUMP JUMPDEST SWAP4 PUSH2 0x1A0 ADD PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E4 JUMP JUMPDEST SWAP11 SWAP10 SWAP1 SWAP10 SWAP9 SWAP2 SWAP9 SWAP8 SWAP3 SWAP8 SWAP7 SWAP4 SWAP7 SWAP6 SWAP5 SWAP6 PUSH2 0x1558 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x6FA CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x277 PUSH2 0xEFD JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x712 CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x244 PUSH2 0xEBB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x733 DUP4 DUP4 PUSH2 0x2EA JUMP JUMPDEST SWAP3 PUSH2 0x741 DUP2 PUSH1 0x20 DUP6 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP3 PUSH2 0x74F DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x181 PUSH2 0x760 DUP5 PUSH1 0x60 DUP6 ADD PUSH2 0x15E JUMP JUMPDEST SWAP4 PUSH2 0x76E DUP2 PUSH1 0x80 DUP7 ADD PUSH2 0x15E JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0x78D CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x1847 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x2EA JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP1 PUSH2 0x16B SWAP4 PUSH2 0x7C7 PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x7D9 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x7EB PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x7FA PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x809 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x818 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x528 DUP2 PUSH1 0xE0 SWAP4 PUSH2 0x7AD JUMP JUMPDEST SWAP1 PUSH2 0x84C PUSH2 0x845 PUSH2 0x83B DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x85D JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x877 PUSH2 0x870 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x81F JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x850 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x181 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x82C JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x8AB PUSH2 0x8A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x181 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH2 0x337 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x215 SWAP1 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x8DC JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x905 CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x910 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x8E5 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1B4 PUSH1 0xC SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x96C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x967 JUMPI JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x95C JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x993 PUSH2 0x989 DUP4 PUSH2 0x94C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x9E5 JUMPI POP PUSH1 0x1 EQ PUSH2 0x9AC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x9BF SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x9D1 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP2 PUSH2 0x976 JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0xA1E SWAP3 PUSH2 0xA15 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x9FA JUMP JUMPDEST SUB DUP4 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x181 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x181 SWAP1 SLOAD PUSH2 0xA25 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH1 0x8 SHR PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x181 SWAP1 SLOAD PUSH2 0xA3A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xA60 PUSH1 0x9 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x340 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x411 JUMPI PUSH2 0xA74 SWAP3 SWAP4 POP PUSH2 0x91C JUMP JUMPDEST POP PUSH2 0xA7E DUP2 PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0xA8B PUSH1 0x1 DUP4 ADD PUSH2 0xA04 JUMP JUMPDEST SWAP2 PUSH2 0xA98 PUSH1 0x2 DUP3 ADD PUSH2 0xA04 JUMP JUMPDEST SWAP2 PUSH2 0xAA5 PUSH1 0x3 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0xAB2 PUSH1 0x4 DUP3 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP2 PUSH2 0xABF PUSH1 0x4 DUP4 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP2 PUSH2 0xACC PUSH1 0x5 DUP3 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0xAD9 PUSH1 0x6 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0xAE6 PUSH1 0x7 DUP3 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0xAF3 PUSH1 0x8 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0xB00 PUSH1 0x9 DUP3 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0x181 PUSH1 0xB PUSH2 0x40A PUSH1 0xA DUP6 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB25 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB15 JUMP JUMPDEST PUSH2 0xB56 PUSH2 0xB5F PUSH1 0x20 SWAP4 PUSH2 0x528 SWAP4 PUSH2 0xB4A DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP11 SWAP9 SWAP7 SWAP5 SWAP3 SWAP2 SWAP1 SWAP14 SWAP13 SWAP12 SWAP10 SWAP8 SWAP6 SWAP4 SWAP14 PUSH2 0x1A0 DUP13 ADD SWAP1 PUSH1 0x0 DUP14 ADD PUSH2 0xB8B SWAP2 PUSH2 0x20C JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0xB9C SWAP2 PUSH2 0xB35 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0xBAD SWAP2 PUSH2 0xB35 JUMP JUMPDEST SWAP12 PUSH1 0x60 DUP11 ADD PUSH2 0xBBA SWAP2 SWAP1 MSTORE JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP10 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD PUSH2 0xBE6 SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x140 DUP4 ADD PUSH2 0xBF4 SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0x180 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0xC1D PUSH2 0xC17 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7 JUMP JUMPDEST SWAP1 PUSH2 0xA50 JUMP JUMPDEST SWAP10 PUSH2 0xC36 SWAP14 SWAP12 SWAP14 SWAP10 SWAP2 SWAP10 SWAP9 SWAP3 SWAP9 SWAP8 SWAP4 SWAP8 SWAP7 SWAP5 SWAP7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP14 DUP15 SWAP14 DUP15 PUSH2 0xB69 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 PUSH2 0xC58 DUP5 DUP5 PUSH2 0x2EA JUMP JUMPDEST SWAP4 PUSH2 0xC66 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x277 PUSH2 0xC82 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3F JUMP JUMPDEST SWAP2 PUSH2 0x1F8E JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x159 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0xC88 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0xC92 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x2B9 PUSH2 0xCC9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x1A08 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0xCE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x19E9 JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP1 PUSH2 0x180 DUP1 PUSH2 0xD33 PUSH2 0xD21 PUSH2 0x1A0 DUP6 ADD PUSH2 0xD0F PUSH1 0x0 DUP10 ADD MLOAD PUSH1 0x0 DUP9 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0xB35 JUMP JUMPDEST SWAP5 PUSH2 0xD43 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0xD6A PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0xD79 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0xD8A PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0xD9E PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x120 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xDB2 PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x818 PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x160 DUP7 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP2 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 PUSH2 0xDE3 PUSH2 0xDD9 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xDF5 PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xE09 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0xE2C PUSH2 0xE25 DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0xDC3 JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x181 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xDCD JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0xE65 PUSH2 0xE60 CALLDATASIZE PUSH1 0x4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xE39 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x277 PUSH2 0xE84 CALLDATASIZE PUSH1 0x4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x1011 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 PUSH2 0xC58 DUP5 DUP5 PUSH2 0xC92 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x277 PUSH2 0xEB5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE89 JUMP JUMPDEST SWAP2 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0x181 PUSH1 0x0 PUSH2 0x37B JUMP JUMPDEST PUSH2 0xECD PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x16B PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x181 PUSH2 0x181 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0xED5 JUMP JUMPDEST PUSH2 0x16B PUSH2 0xEF8 PUSH1 0x0 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST PUSH2 0x16B PUSH2 0xEC5 JUMP JUMPDEST ISZERO PUSH2 0xF0C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xF55 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B PUSH2 0xF64 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xF7B PUSH2 0xF75 CALLER PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST SWAP2 PUSH2 0x1CB JUMP JUMPDEST EQ PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0xF8D PUSH2 0xF59 JUMP JUMPDEST PUSH2 0xFED JUMP JUMPDEST ISZERO PUSH2 0xF99 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0xEF8 PUSH2 0x1001 PUSH2 0xF70 PUSH1 0x0 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x100A DUP4 PUSH2 0x1CB JUMP JUMPDEST EQ ISZERO PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x103F PUSH2 0x181 PUSH2 0x1046 SWAP3 PUSH2 0x337 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x101A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1054 PUSH1 0x0 PUSH2 0x37B JUMP JUMPDEST SWAP1 PUSH2 0x1060 DUP2 PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x1093 PUSH2 0x108D PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x337 JUMP JUMPDEST SWAP2 PUSH2 0x337 JUMP JUMPDEST SWAP2 PUSH2 0x109D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x372 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x10A3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x10AC JUMP JUMPDEST SWAP11 SWAP9 SWAP7 SWAP5 SWAP3 SWAP14 SWAP13 SWAP12 SWAP10 SWAP8 SWAP6 SWAP4 SWAP2 SWAP1 PUSH2 0x1E0 DUP13 ADD DUP13 DUP1 DUP3 SUB SWAP1 PUSH1 0x0 ADD MSTORE PUSH2 0x10F2 SWAP2 PUSH2 0xB35 JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x1103 SWAP2 PUSH2 0xB35 JUMP JUMPDEST SWAP13 PUSH1 0x40 DUP12 ADD PUSH2 0x1110 SWAP2 SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP11 ADD PUSH2 0x111D SWAP2 PUSH2 0x20C JUMP JUMPDEST DUP1 MLOAD ISZERO ISZERO PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x40 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD PUSH2 0x115C SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x160 DUP5 ADD PUSH2 0x116A SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x1C0 ADD PUSH2 0x16B SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x1025 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x11B9 PUSH2 0x181 PUSH2 0x1046 SWAP4 PUSH2 0x337 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x118F JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x11E4 SWAP2 PUSH1 0x1 PUSH2 0x16B SWAP6 ADD DUP2 SSTORE PUSH2 0x19A JUMP JUMPDEST SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1A0 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 PUSH2 0x215 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x181 SWAP1 MLOAD PUSH2 0x1CB JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x181 PUSH2 0x181 SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1251 PUSH2 0x181 PUSH2 0x1046 SWAP4 PUSH2 0x1233 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x121F JUMP JUMPDEST PUSH2 0x16B SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1240 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1270 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x127E PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x1259 JUMP JUMPDEST ADD PUSH2 0x1265 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1293 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x12A5 PUSH2 0x16B SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x12C7 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x1265 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 PUSH2 0x12DA DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F2 JUMPI PUSH2 0x12FE DUP3 PUSH2 0x12F8 DUP6 SLOAD PUSH2 0x94C JUMP JUMPDEST DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1339 JUMPI PUSH2 0x1046 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x132E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x134E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x138C JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x1373 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x136A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x1352 JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP2 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x1025 JUMP JUMPDEST SWAP1 PUSH2 0x13C8 PUSH2 0x181 PUSH2 0x1046 SWAP3 PUSH2 0x1233 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x13AE JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1025 JUMP JUMPDEST SWAP1 PUSH2 0x13E8 PUSH2 0x181 PUSH2 0x1046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x13CF JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x1025 JUMP JUMPDEST SWAP1 PUSH2 0x140C PUSH2 0x181 PUSH2 0x1046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x13EF JUMP JUMPDEST PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1472 SWAP1 PUSH2 0x180 SWAP1 PUSH1 0xB SWAP1 PUSH2 0x1436 DUP2 PUSH2 0x1430 DUP8 PUSH2 0x1215 JUMP JUMPDEST SWAP1 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x144E PUSH1 0x1 DUP3 ADD PUSH2 0x1448 PUSH1 0x20 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x1460 PUSH1 0x2 DUP3 ADD PUSH2 0x1448 PUSH1 0x40 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1478 PUSH1 0x3 DUP3 ADD PUSH2 0x1472 PUSH1 0x60 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x14A2 PUSH1 0x4 DUP3 ADD PUSH2 0x1495 PUSH2 0x148F PUSH1 0x80 DUP10 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x14B4 PUSH1 0x5 DUP3 ADD PUSH2 0x1472 PUSH1 0xC0 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14C6 PUSH1 0x6 DUP3 ADD PUSH2 0x1472 PUSH1 0xE0 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14D9 PUSH1 0x7 DUP3 ADD PUSH2 0x1472 PUSH2 0x100 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14ED PUSH1 0x8 DUP3 ADD PUSH2 0x1430 PUSH2 0x120 DUP9 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1501 PUSH1 0x9 DUP3 ADD PUSH2 0x1430 PUSH2 0x140 DUP9 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1514 PUSH1 0xA DUP3 ADD PUSH2 0x1472 PUSH2 0x160 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST ADD SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x152A JUMPI PUSH2 0x16B SWAP2 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x11FF JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x1552 SWAP2 PUSH1 0x1 PUSH2 0x16B SWAP6 ADD DUP2 SSTORE PUSH2 0x91C JUMP JUMPDEST SWAP1 PUSH2 0x151B JUMP JUMPDEST SWAP1 SWAP10 SWAP7 SWAP4 DUP3 DUP8 DUP13 DUP9 DUP13 SWAP10 SWAP7 SWAP16 SWAP13 DUP9 SWAP15 SWAP12 SWAP9 DUP15 DUP15 DUP15 DUP11 SWAP5 DUP15 PUSH2 0x1577 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1582 PUSH1 0x4 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x158B SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP10 PUSH4 0xD5E71353 SWAP9 DUP14 PUSH2 0x159C ADDRESS PUSH2 0x337 JUMP JUMPDEST SWAP9 PUSH2 0x15A6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP15 DUP16 SWAP14 DUP15 PUSH2 0x15B5 DUP2 SWAP16 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x4 ADD SWAP13 PUSH2 0x15C4 SWAP14 PUSH2 0x10CD JUMP JUMPDEST SUB DUP2 GAS PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 CALL DUP1 ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x15E6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x16C8 JUMPI JUMPDEST POP PUSH2 0x337 JUMP JUMPDEST PUSH2 0x15EF SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP12 DUP13 SWAP11 PUSH2 0x15FD DUP13 PUSH1 0x8 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x1608 SWAP1 PUSH1 0x9 PUSH2 0x340 JUMP JUMPDEST SWAP12 PUSH2 0x1613 DUP4 MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO SWAP4 PUSH2 0x1624 PUSH2 0x11EA JUMP JUMPDEST SWAP13 PUSH2 0x162F SWAP1 DUP15 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x166A SWAP1 PUSH2 0x120 DUP7 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x1678 SWAP1 PUSH2 0x140 DUP6 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x168D SWAP2 PUSH2 0x152F JUMP JUMPDEST PUSH32 0xDA509E6642E963726D34FF4D505F1232025D5A4C3937D868BCAD7E3E5950D6E6 PUSH2 0x16B7 DUP3 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x16C1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x16E9 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x16EF JUMPI JUMPDEST PUSH2 0x16E1 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x10B9 JUMP JUMPDEST CODESIZE PUSH2 0x15E0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x1183 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x173E PUSH2 0x1745 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1737 PUSH1 0xA0 SWAP7 PUSH2 0x1730 PUSH2 0x16B SWAP11 PUSH2 0x1726 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x181 PUSH1 0xE0 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 PUSH2 0x13C8 PUSH2 0x181 PUSH2 0x1046 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x17D9 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x177D DUP2 PUSH2 0x1430 DUP8 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1790 PUSH1 0x1 DUP3 ADD PUSH2 0x1430 PUSH1 0x20 DUP9 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x17A3 PUSH1 0x2 DUP3 ADD PUSH2 0x1430 PUSH1 0x40 DUP9 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x17B5 PUSH1 0x3 DUP3 ADD PUSH2 0x1472 PUSH1 0x60 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17C7 PUSH1 0x4 DUP3 ADD PUSH2 0x1472 PUSH1 0x80 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1514 PUSH1 0x5 DUP3 ADD PUSH2 0x1472 PUSH1 0xA0 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1753 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x152A JUMPI PUSH2 0x16B SWAP2 PUSH2 0x1761 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x1811 SWAP2 PUSH1 0x1 PUSH2 0x16B SWAP6 ADD DUP2 SSTORE PUSH2 0x358 JUMP JUMPDEST SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x1745 PUSH2 0x16B SWAP5 PUSH2 0x1840 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x1839 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST SWAP5 SWAP1 SWAP2 SWAP3 PUSH2 0x1853 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x185E PUSH1 0x5 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1867 SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP6 PUSH4 0x9B1DE1FF SWAP7 PUSH2 0x1877 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 PUSH1 0xE0 SHL DUP9 MSTORE DUP8 DUP1 PUSH2 0x1891 DUP7 DUP11 DUP8 DUP12 DUP12 DUP10 PUSH1 0x4 DUP9 ADD PUSH2 0x16FB JUMP JUMPDEST SUB DUP2 GAS PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 CALL SWAP7 DUP8 ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x1987 JUMPI JUMPDEST POP PUSH2 0x18C0 PUSH2 0x18B9 PUSH1 0x6 SWAP9 PUSH2 0x337 JUMP JUMPDEST DUP1 SWAP9 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x192E PUSH2 0x18CB PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x18D5 DUP10 DUP3 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x18E2 DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x18EF DUP7 PUSH1 0x40 DUP4 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x18FA DUP8 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1905 DUP5 PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1910 DUP9 PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x191B DUP6 PUSH1 0xC0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1929 PUSH2 0x181 CALLER PUSH1 0x7 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x1981 PUSH32 0xE4A84F0F254E5960C762412E401BBC3EA5B577C07BE930CE4EA38862DDC5F652 SWAP4 PUSH2 0x196E PUSH2 0x1968 PUSH2 0x1962 DUP12 PUSH2 0x337 JUMP JUMPDEST SWAP8 PUSH2 0x337 JUMP JUMPDEST SWAP8 PUSH2 0x1233 JUMP JUMPDEST SWAP8 PUSH2 0x1978 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x1817 JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST PUSH2 0x19A0 SWAP2 SWAP8 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x16EF JUMPI PUSH2 0x16E1 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST SWAP6 CODESIZE PUSH2 0x18AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x19C7 JUMPI JUMP JUMPDEST PUSH2 0x19A7 JUMP JUMPDEST SWAP1 PUSH2 0x16B DUP3 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x19CC JUMP JUMPDEST SWAP1 PUSH2 0x34A SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A02 PUSH2 0x181 SWAP3 PUSH2 0x19FA PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1A19 PUSH2 0x181 SWAP3 PUSH2 0x19FA PUSH1 0x0 SWAP1 JUMP JUMPDEST ADD PUSH2 0x38C JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP3 SWAP2 PUSH2 0x1A2D PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x1A8E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x16B SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x215 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x181 PUSH1 0x40 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1472 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1514 DUP2 PUSH2 0x1430 DUP8 PUSH2 0x1215 JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP2 PUSH2 0x1A68 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x3 SWAP1 PUSH2 0x1AA5 PUSH2 0x181 PUSH1 0x1 PUSH2 0x1A19 DUP9 DUP7 PUSH2 0x19DF JUMP JUMPDEST DUP2 GT PUSH2 0x1B15 JUMPI PUSH2 0x1AB4 DUP3 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x1ABD DUP7 PUSH2 0x19CC JUMP JUMPDEST GT PUSH2 0x1AF2 JUMPI SWAP4 PUSH2 0x1AED SWAP2 PUSH2 0x1AE8 PUSH2 0x16B SWAP6 SWAP7 PUSH2 0x1AE1 PUSH2 0x1ADA PUSH2 0x1A5E JUMP JUMPDEST SWAP7 DUP8 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x1A84 JUMP JUMPDEST PUSH2 0xF55 DUP6 PUSH2 0x1AFF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x699273B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1B24 PUSH1 0x1 PUSH2 0x1A19 DUP8 DUP6 PUSH2 0x19DF JUMP JUMPDEST SWAP1 PUSH2 0xF55 PUSH2 0x1B31 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xDCAF71DB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1A32 JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP3 SWAP2 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2710 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x1B66 ADDRESS PUSH2 0x337 JUMP JUMPDEST BALANCE PUSH1 0x0 PUSH1 0x3 PUSH2 0x1B75 DUP3 DUP3 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B81 SWAP1 PUSH2 0x38C JUMP JUMPDEST DUP3 PUSH1 0x1 DUP1 PUSH2 0x1B8F DUP2 DUP7 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1B99 SWAP1 PUSH2 0x38C JUMP JUMPDEST SWAP6 DUP3 PUSH1 0x2 SWAP3 DUP1 PUSH2 0x1BA9 DUP6 DUP10 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1BB3 SWAP1 PUSH2 0x38C JUMP JUMPDEST SWAP3 DUP2 PUSH2 0x1BBF DUP10 DUP1 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1BC9 SWAP1 PUSH2 0x38C JUMP JUMPDEST SWAP7 PUSH2 0x1BD4 SWAP1 DUP3 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 PUSH2 0x1BDD PUSH2 0x1B52 JUMP JUMPDEST DUP1 PUSH2 0x1BE9 DUP2 DUP1 SWAP6 PUSH2 0x1D2D JUMP JUMPDEST SWAP13 PUSH2 0x1BF4 SWAP1 DUP5 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 PUSH2 0x1BFE SWAP2 PUSH2 0x1D2D JUMP JUMPDEST SWAP6 PUSH2 0x1C09 SWAP1 DUP4 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 PUSH2 0x1C13 SWAP2 PUSH2 0x1D2D JUMP JUMPDEST SWAP8 PUSH2 0x1C1D SWAP2 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 PUSH2 0x1C27 SWAP2 PUSH2 0x1D2D JUMP JUMPDEST SWAP9 DUP3 PUSH2 0x1C33 DUP2 DUP11 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1C3D SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1C46 SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x1C50 SWAP2 PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x1C5A SWAP1 DUP8 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1C64 SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1C6D SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x1C77 SWAP2 PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x1C81 SWAP1 DUP5 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1C8B SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1C94 SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x1C9E SWAP2 PUSH2 0x2543 JUMP JUMPDEST DUP1 PUSH2 0x1CA8 SWAP2 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1CB2 SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1CBB SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP2 PUSH2 0x2543 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1CEE JUMPI JUMP JUMPDEST PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x1D1D JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1D28 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND PUSH2 0x152 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x1D37 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x152 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 PUSH2 0x1D85 DUP5 DUP5 PUSH2 0x1D46 JUMP JUMPDEST SWAP4 PUSH2 0x1D93 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x181 PUSH2 0x181 PUSH2 0x181 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x150 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x1DB2 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x16B SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x1745 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x582 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x1DF0 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x16B SWAP3 SWAP5 SWAP4 PUSH2 0x1745 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST ISZERO PUSH2 0x1E33 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105C1C1C9BDD985B0819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F2 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E8F PUSH2 0x548 DUP4 PUSH2 0x1E6A JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0x1EAF PUSH2 0x1EA9 DUP5 PUSH2 0x1E82 JUMP JUMPDEST SWAP4 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1E94 JUMP JUMPDEST SWAP1 PUSH2 0x1EC5 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1BD JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x2E1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x1ED6 JUMP JUMPDEST PUSH2 0x215 SWAP1 PUSH2 0x1233 JUMP JUMPDEST SWAP1 PUSH2 0x528 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x20C JUMP JUMPDEST SWAP1 PUSH2 0x1F1C PUSH2 0x845 PUSH2 0x83B DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F2D JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1F40 PUSH2 0x870 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x1F00 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x1F20 JUMP JUMPDEST SWAP1 PUSH2 0x1F83 PUSH2 0x1745 SWAP2 PUSH2 0x16B SWAP7 SWAP9 SWAP8 SWAP6 PUSH2 0x1F76 PUSH1 0x80 SWAP7 PUSH2 0x1F6C PUSH1 0xA0 DUP9 ADD SWAP5 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1F0D JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST SWAP2 PUSH1 0x60 PUSH2 0x1FA5 PUSH2 0x1FA0 PUSH2 0x1FBD SWAP5 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH4 0x902F1AC SWAP1 PUSH2 0x1FB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 SWAP1 DUP2 SWAP4 PUSH2 0x2229 JUMPI JUMPDEST POP PUSH2 0x1FE4 PUSH2 0x1FEA SWAP2 PUSH2 0x1D9C JUMP JUMPDEST SWAP3 PUSH2 0x1D9C JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2019 PUSH2 0x1FFB PUSH2 0x1FA0 PUSH2 0x8B7 JUMP JUMPDEST SWAP5 PUSH2 0x2025 PUSH4 0xAD615DEC SWAP2 PUSH2 0x200E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE DUP8 PUSH1 0x4 DUP6 ADD PUSH2 0x1DD3 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21FB JUMPI JUMPDEST POP PUSH2 0x204A PUSH2 0x1D19 PUSH2 0x181 PUSH1 0x2 PUSH2 0x38C JUMP JUMPDEST LT ISZERO PUSH2 0x2055 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 PUSH2 0x2066 PUSH2 0x1FA0 DUP7 PUSH2 0x337 JUMP JUMPDEST PUSH4 0x95EA7B3 SWAP1 PUSH2 0x2075 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE DUP2 PUSH1 0x0 DUP2 PUSH2 0x2092 DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH2 0x1E11 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x20AE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x21CD JUMPI JUMPDEST POP PUSH2 0x1E2C JUMP JUMPDEST PUSH2 0x20C0 PUSH2 0x20BB PUSH1 0x2 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x1E99 JUMP JUMPDEST SWAP1 PUSH2 0x20DE PUSH1 0x0 SWAP5 PUSH2 0x20D9 PUSH2 0x20D3 DUP8 PUSH2 0x1233 JUMP JUMPDEST DUP6 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH4 0xAD5C4648 PUSH2 0x20F6 PUSH2 0x20EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x2120 SWAP2 DUP7 SWAP2 PUSH2 0x219F JUMPI JUMPDEST POP PUSH2 0x20D9 PUSH2 0x20D3 PUSH1 0x1 PUSH2 0x1233 JUMP JUMPDEST PUSH4 0x5C11D795 SWAP3 PUSH2 0x212F ADDRESS PUSH2 0x337 JUMP JUMPDEST TIMESTAMP SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x159 JUMPI DUP7 SWAP6 PUSH2 0x2167 PUSH2 0x215C SWAP4 DUP9 SWAP8 SWAP4 DUP9 SWAP5 PUSH2 0x214F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1F48 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x2179 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x16B SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2198 JUMPI JUMPDEST PUSH2 0x2190 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x254 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2186 JUMP JUMPDEST PUSH2 0x21C0 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x21C6 JUMPI JUMPDEST PUSH2 0x21B8 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST CODESIZE PUSH2 0x2112 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21AE JUMP JUMPDEST PUSH2 0x21EE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x21F4 JUMPI JUMPDEST PUSH2 0x21E6 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DFD JUMP JUMPDEST CODESIZE PUSH2 0x20A8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x221C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2222 JUMPI JUMPDEST PUSH2 0x2214 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DBF JUMP JUMPDEST CODESIZE PUSH2 0x2039 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x220A JUMP JUMPDEST PUSH2 0x1FE4 SWAP4 POP PUSH2 0x1FEA SWAP2 POP PUSH2 0x2253 SWAP1 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x225C JUMPI JUMPDEST PUSH2 0x224B DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D6C JUMP JUMPDEST POP SWAP4 POP SWAP1 PUSH2 0x1FD7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0x226F PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH1 0x2 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0x2263 JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0x23A5 PUSH1 0xB PUSH2 0x2294 PUSH2 0x11EA JUMP JUMPDEST SWAP5 PUSH2 0x22A7 PUSH2 0x22A1 DUP3 PUSH2 0x37B JUMP JUMPDEST DUP8 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x22BD PUSH2 0x22B6 PUSH1 0x1 DUP4 ADD PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x22D3 PUSH2 0x22CC PUSH1 0x2 DUP4 ADD PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x22E9 PUSH2 0x22E2 PUSH1 0x3 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2301 PUSH2 0x22F8 PUSH1 0x4 DUP4 ADD PUSH2 0xA30 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2319 PUSH2 0x2310 PUSH1 0x4 DUP4 ADD PUSH2 0xA46 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x232F PUSH2 0x2328 PUSH1 0x5 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2345 PUSH2 0x233E PUSH1 0x6 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x235C PUSH2 0x2354 PUSH1 0x7 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2375 PUSH2 0x236B PUSH1 0x8 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x120 DUP9 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x238E PUSH2 0x2384 PUSH1 0x9 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x140 DUP9 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x1A19 PUSH2 0x239D PUSH1 0xA DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH2 0x160 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x180 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x2283 JUMP JUMPDEST SWAP1 PUSH2 0x23BF DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23C8 DUP2 PUSH2 0x1E82 JUMP JUMPDEST SWAP3 PUSH2 0x23DC PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x23ED JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x23FD DUP6 PUSH2 0x23AD JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x242B PUSH2 0x181 SWAP2 PUSH2 0x2423 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x9 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x240B JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0x24B9 PUSH1 0x6 PUSH2 0x2441 PUSH2 0x1749 JUMP JUMPDEST SWAP5 PUSH2 0x244E PUSH2 0x22A1 DUP3 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x2466 PUSH2 0x245D PUSH1 0x1 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x20 DUP9 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x247E PUSH2 0x2475 PUSH1 0x2 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 DUP9 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x248D PUSH2 0x22E2 PUSH1 0x3 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH2 0x24A3 PUSH2 0x249C PUSH1 0x4 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1A19 PUSH2 0x24B2 PUSH1 0x5 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 PUSH2 0x24D2 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24DB DUP2 PUSH2 0x1E82 JUMP JUMPDEST SWAP3 PUSH2 0x24EF PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2500 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x2510 DUP6 PUSH2 0x24C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x24C9 JUMP JUMPDEST PUSH2 0x253E PUSH2 0x181 SWAP2 PUSH2 0x2536 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x251E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL ISZERO PUSH2 0x2553 JUMPI JUMP JUMPDEST PUSH4 0xB12D13EB PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x49701FBFBE 0xB4 0xF7 0xDC PUSH31 0xBC50000F265C21CE8C69B5F993ADF3A3D62D4411026D64736F6C6343000814 STOP CALLER ","sourceMap":"1022:13785:20:-:0;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1022:13785:20;;;;;;-1:-1:-1;;;;;1022:13785:20;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;1022:13785:20;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;1022:13785:20;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;1022:13785:20;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;-1:-1:-1;;;;;1022:13785:20;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;1022:13785:20;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;1022:13785:20;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1022:13785:20;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;4022:829::-;4177:97;4022:829;4118:49;4134:33;4209:65;4022:829;;;:::i;:::-;2849:9;;;;:::i;:::-;4134:33;:::i;:::-;4118:49;;:::i;4209:65::-;4177:97;;:::i;:::-;4709:135;4352:51;4360:42;4352:51;:::i;:::-;4333:86;;4412:4;4333:86;;;:::i;:::-;-1:-1:-1;;;;;1022:13785:20;;;;;;4333:86;;:::i;:::-;;;;1022:13785;;4333:86;4709:34;4285:8;:134;4294:23;4285:33;;;;;:::i;:::-;:134;:::i;:::-;4429:129;4491:51;4499:42;4491:51;:::i;:::-;4472:86;;4551:4;4472:86;;;:::i;:::-;-1:-1:-1;;;;;1022:13785:20;;;4472:86;;;1022:13785;;4472:86;4429:28;4438:18;4429:28;;:::i;:129::-;4758:86;4632:51;4640:42;4632:51;:::i;:::-;4568:131;4613:86;4692:4;4613:86;;;:::i;:::-;;;;;;;1022:13785;;4613:86;4568:30;4577:20;4568:30;;:::i;:131::-;4758:86;4777:51;4785:42;4777:51;:::i;:::-;4758:86;;:::i;:::-;;;;1022:13785;-1:-1:-1;;;;;1022:13785:20;;;;4758:86;;;;1022:13785;;4758:86;4709:34;;:::i;1676:41:2:-;1716:1;;;:::i;1797:53::-;;;:::i;:::-;1821:22;1831:12;;:::i;:::-;1821:22;;:::i;912:63:0:-;955:12;719:10:8;955:12:0;:::i;1022:13785:20:-;;;;;;;;;;:::i;2426:187:0:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;1022:13785:20;;;;2566:40:0;;;;2426:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":596,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":746,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":7894,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":3135,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_addresst_uint256t_uint256t_uint256t_bytes32":{"entryPoint":1821,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_addresst_uint256":{"entryPoint":759,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_string":{"entryPoint":1336,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":1418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":7677,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_contract_AirdropERC20Claimable_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_contract_CoinGenieERC20_fromMemory":{"entryPoint":4268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_enum_PayoutCategory":{"entryPoint":3218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_enum_PayoutCategoryt_address_payablet_uint256":{"entryPoint":3721,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_string":{"entryPoint":1383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_stringt_uint256t_addresst_struct_TokenConfigPropertiest_uint256t_uint256t_uint256t_addresst_addresst_uint256t_uint256":{"entryPoint":1508,"id":null,"parameterSlots":2,"returnSlots":12},"abi_decode_struct_TokenConfigProperties":{"entryPoint":1431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":7664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7602,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":1945,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address_fromMemory":{"entryPoint":7907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_contract_AirdropERC20Claimable_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_contract_CoinGenieERC20_fromMemory":{"entryPoint":4281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_enum_PayoutCategory":{"entryPoint":3231,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint112_fromMemory":{"entryPoint":7494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint112t_uint112t_uint32_fromMemory":{"entryPoint":7532,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_uint256":{"entryPoint":350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":7615,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint32_fromMemory":{"entryPoint":7519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_address":{"entryPoint":7936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":2554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_ClaimableAirdrop":{"entryPoint":2079,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_struct_LaunchedToken":{"entryPoint":3523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":524,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address_address_uint256_uint256_uint256_bytes32":{"entryPoint":1045,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint256_bytes32":{"entryPoint":5883,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_string_string_uint256_bool_bool_uint256_uint256_uint256_address_address_uint256_uint256":{"entryPoint":2921,"id":null,"parameterSlots":14,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":7697,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256_bytes32":{"entryPoint":6167,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":7949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_ClaimableAirdrop_dyn":{"entryPoint":2092,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_ClaimableAirdrop_memory_ptr_dyn_memory_ptr":{"entryPoint":2175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_LaunchedToken_dyn":{"entryPoint":3641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_LaunchedToken_memory_ptr_dyn_memory_ptr":{"entryPoint":3533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_IUniswapV2Router02":{"entryPoint":2268,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_PayoutCategory":{"entryPoint":6725,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by":{"entryPoint":7927,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":2869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":2422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_string_uint256_address_struct_TokenConfigProperties_uint256_uint256_uint256_address_address_uint256_uint256_address":{"entryPoint":4301,"id":null,"parameterSlots":14,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_245f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_943d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_ClaimableAirdrop":{"entryPoint":1965,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_LaunchedToken":{"entryPoint":3305,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_TokenConfigProperties":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":537,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_IUniswapV2Router02":{"entryPoint":2277,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_enum_PayoutCategory":{"entryPoint":6734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_245f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_943d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_rational_by_array_address_dyn_address_uint256":{"entryPoint":8008,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":6706,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":7635,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":7833,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1271,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_address_dyn":{"entryPoint":7810,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_ClaimableAirdrop_storage_ptr":{"entryPoint":5961,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_LaunchedToken_storage_ptr":{"entryPoint":4586,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_struct_struct_Payout_storage_ptr":{"entryPoint":6750,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":7786,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":1291,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_struct_ClaimableAirdrop_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_address_dyn_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_struct_ClaimableAirdrop_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_struct_ClaimableAirdrop_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":4545,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_struct_ClaimableAirdrop_to_array_struct_ClaimableAirdrop_storage_dyn_ptr":{"entryPoint":6126,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_struct_LaunchedToken_to_array_struct_LaunchedToken_storage_dyn_ptr":{"entryPoint":5423,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_array_struct_ClaimableAirdrop_dyn":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":7443,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":7387,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":4740,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_contract_CoinGenieERC20":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_enum_PayoutCategory":{"entryPoint":6604,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint112":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":4709,"id":null,"parameterSlots":2,"returnSlots":0},"constant_MAX_BPS":{"entryPoint":6994,"id":null,"parameterSlots":0,"returnSlots":1},"constant_UNISWAP_V2_ROUTER":{"entryPoint":2231,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_address":{"entryPoint":823,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_struct_ClaimableAirdrop_storage_dyn_to_array_struct_ClaimableAirdrop_dyn":{"entryPoint":9502,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_array_struct_LaunchedToken_storage_dyn_to_array_struct_LaunchedToken_dyn":{"entryPoint":9227,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_enum_PayoutCategory_to_enum_PayoutCategory":{"entryPoint":6614,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":3810,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":3797,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_ClaimableAirdrop_storage_to_struct_ClaimableAirdrop":{"entryPoint":9408,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_LaunchedToken_storage_to_struct_LaunchedToken":{"entryPoint":9133,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint112_to_uint256":{"entryPoint":7580,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":814,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":794,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":4659,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_struct_ClaimableAirdrop_dyn":{"entryPoint":9417,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_struct_LaunchedToken_dyn":{"entryPoint":9142,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":2564,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":4817,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1324,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2834,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_ClaimableAirdrop_to_struct_ClaimableAirdrop":{"entryPoint":5985,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_LaunchedToken_to_struct_LaunchedToken":{"entryPoint":5139,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_Payout_to_struct_Payout":{"entryPoint":6760,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_UNISWAP_V2_ROUTER":{"entryPoint":2293,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_claimableAirdropCreatedBy":{"entryPoint":1118,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createClaimableAirdrop":{"entryPoint":1911,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createdClaimableAirdrops":{"entryPoint":1183,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getClaimableAirdropsForAddress":{"entryPoint":2192,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getLaunchedTokensForAddress":{"entryPoint":3658,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPayoutAddress":{"entryPoint":3278,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPayoutShare":{"entryPoint":3251,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_launchToken":{"entryPoint":1727,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_launchedTokens":{"entryPoint":553,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":1794,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_quoteThreshold":{"entryPoint":670,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":1770,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setQuoteThreshold":{"entryPoint":713,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_swapERC20s":{"entryPoint":3183,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokensLaunchedBy":{"entryPoint":3073,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":3697,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updatePayout":{"entryPoint":3746,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_withdraw":{"entryPoint":607,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2380,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_address":{"entryPoint":450,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":636,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_1t_bool":{"entryPoint":2618,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":2597,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":901,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1232,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":4170,"id":111,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":3929,"id":54,"parameterSlots":0,"returnSlots":0},"fun_createClaimableAirdrop":{"entryPoint":6215,"id":4303,"parameterSlots":6,"returnSlots":1},"fun_div":{"entryPoint":7469,"id":1827,"parameterSlots":2,"returnSlots":1},"fun_getClaimableAirdropsForAddress":{"entryPoint":9511,"id":4642,"parameterSlots":1,"returnSlots":1},"fun_getLaunchedTokensForAddress":{"entryPoint":9236,"id":4627,"parameterSlots":1,"returnSlots":1},"fun_getPayoutAddress":{"entryPoint":6633,"id":4318,"parameterSlots":1,"returnSlots":1},"fun_getPayoutShare":{"entryPoint":6664,"id":4333,"parameterSlots":1,"returnSlots":1},"fun_launchToken":{"entryPoint":5464,"id":4220,"parameterSlots":12,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_mul":{"entryPoint":7411,"id":1812,"parameterSlots":2,"returnSlots":1},"fun_owner":{"entryPoint":3771,"id":40,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":3837,"id":68,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":3819,"id":null,"parameterSlots":0,"returnSlots":0},"fun_safeTransferETH":{"entryPoint":9539,"id":7296,"parameterSlots":2,"returnSlots":0},"fun_setQuoteThreshold":{"entryPoint":8826,"id":4612,"parameterSlots":1,"returnSlots":0},"fun_setQuoteThreshold_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_swapERC20s":{"entryPoint":8078,"id":4599,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership":{"entryPoint":4113,"id":91,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":4077,"id":null,"parameterSlots":1,"returnSlots":0},"fun_updatePayout":{"entryPoint":6983,"id":4382,"parameterSlots":3,"returnSlots":0},"fun_updatePayout_inner":{"entryPoint":6798,"id":null,"parameterSlots":3,"returnSlots":0},"fun_withdraw":{"entryPoint":7005,"id":4511,"parameterSlots":0,"returnSlots":0},"getter_fun_UNISWAP_V2_ROUTER":{"entryPoint":2260,"id":3933,"parameterSlots":0,"returnSlots":1},"getter_fun_claimableAirdropCreatedBy":{"entryPoint":918,"id":4035,"parameterSlots":2,"returnSlots":7},"getter_fun_createdClaimableAirdrops":{"entryPoint":1171,"id":4028,"parameterSlots":1,"returnSlots":1},"getter_fun_launchedTokens":{"entryPoint":482,"id":4039,"parameterSlots":1,"returnSlots":1},"getter_fun_quoteThreshold":{"entryPoint":658,"id":4009,"parameterSlots":0,"returnSlots":1},"getter_fun_tokensLaunchedBy":{"entryPoint":2640,"id":4046,"parameterSlots":2,"returnSlots":13},"mapping_index_access_mapping_address_array_struct_ClaimableAirdrop_storage_dyn_of_address":{"entryPoint":832,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_enum_PayoutCategory_struct_Payout_storage_of_enum_PayoutCategory":{"entryPoint":6623,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":7868,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_onlyOwner":{"entryPoint":3781,"id":31,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_4344":{"entryPoint":6687,"id":31,"parameterSlots":3,"returnSlots":0},"modifier_onlyOwner_4605":{"entryPoint":8803,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_74":{"entryPoint":3969,"id":31,"parameterSlots":1,"returnSlots":0},"panic_error_0x00":{"entryPoint":4607,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":7365,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7421,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6567,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2358,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":388,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1210,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":4629,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_ClaimableAirdrop":{"entryPoint":9264,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_LaunchedToken":{"entryPoint":8835,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_address":{"entryPoint":471,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":647,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":891,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address_payable":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":2630,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_contract_AirdropERC20ClaimableFactory":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_contract_ERC20Factory":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_bool":{"entryPoint":2608,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":908,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":3845,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_245f":{"entryPoint":3986,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_943d":{"entryPoint":7724,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":4483,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_8_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":410,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_ClaimableAirdrop_dyn":{"entryPoint":856,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_LaunchedToken_dyn":{"entryPoint":2332,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_uint256":{"entryPoint":4697,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_943d1e3eddd033b0757a7ad9dc3dff9f8f150c5b720d6ee708e13ac5fc8e5d07":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":4122,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic20":{"entryPoint":4495,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":4639,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":5038,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":5071,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_1":{"entryPoint":5103,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_address_to_address":{"entryPoint":4520,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_payable_to_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":4143,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":5116,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_t_bool":{"entryPoint":5080,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bytes32_to_bytes32":{"entryPoint":5971,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_string_to_string":{"entryPoint":5028,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_struct_Payout_to_struct_Payout":{"entryPoint":6788,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":5048,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_struct_ClaimableAirdrop_to_struct_ClaimableAirdrop":{"entryPoint":6111,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_struct_LaunchedToken_to_struct_LaunchedToken":{"entryPoint":5403,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":4672,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_enum_PayoutCategory":{"entryPoint":6589,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":737,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":1410,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_contract_CoinGenieERC20":{"entryPoint":4259,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_enum_PayoutCategory":{"entryPoint":3208,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint112":{"entryPoint":7479,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":336,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint32":{"entryPoint":7507,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":4597,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_address":{"entryPoint":7828,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_array_struct_LaunchedToken_dyn":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806310f2b1411461014b5780633ccfd60b146101465780633d9cce421461014157806343584bca1461013c57806344ea3a66146101375780634d9429e714610132578063646eedab1461012d578063715018a6146101285780638da5cb5b146101235780639b1de1ff1461011e578063a7bc6a1714610119578063a82ed9ec14610114578063b56111071461010f578063b579772f1461010a578063d0b516c714610105578063dc8ed63614610100578063f14aade1146100fb578063f2fde38b146100f65763fca928b20361000e57610ea2565b610e71565b610e4a565b610cce565b610cb3565b610c6f565b610c01565b6108f5565b610890565b610777565b610702565b6106ea565b6106bf565b61049f565b61045e565b6102c9565b61029e565b61025f565b610229565b805b0361015957565b600080fd5b9050359061016b82610150565b565b90602082820312610159576101819161015e565b90565b634e487b7160e01b600052603260045260246000fd5b80548210156101bd576101b4600191600052602060002090565b91020190600090565b610184565b610181916008021c5b6001600160a01b031690565b9061018191546101c2565b600860006101ee825490565b8310156102095750610181916102039161019a565b906101d7565b80fd5b610215906101cb565b9052565b60208101929161016b919061020c565b346101595761025061024461023f36600461016d565b6101e2565b60405191829182610219565b0390f35b600091031261015957565b346101595761026f366004610254565b610277611b5d565b604051005b610181916008021c81565b90610181915461027c565b61018160006002610287565b34610159576102ae366004610254565b6102506102b9610292565b6040519182918290815260200190565b34610159576102776102dc36600461016d565b61227a565b610152816101cb565b9050359061016b826102e1565b9190604083820312610159576101819061031181856102ea565b9360200161015e565b610181906101cb906001600160a01b031682565b6101819061031a565b6101819061032e565b9061034a90610337565b600052602052604060002090565b80548210156101bd576101b4600791600052602060002090565b610181906101cb565b6101819054610372565b6101819081565b6101819054610385565b91906103a6600793600094610340565b8054821015610411576103ba929350610358565b506103c48161037b565b916103d16001830161037b565b916103de6002820161037b565b916103eb6003830161038c565b916103f86004820161038c565b91610181600661040a6005850161038c565b930161038c565b8380fd5b949290979695939160e08601986000870161042f9161020c565b6020860161043c9161020c565b604085016104499161020c565b6060840152608083015260a082015260c00152565b346101595761025061047a6104743660046102f7565b90610396565b9361048a97959793919360405190565b97889788610415565b600660006101ee825490565b34610159576102506102446104b536600461016d565b610493565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176104f257604052565b6104ba565b9061016b61050460405190565b92836104d0565b67ffffffffffffffff81116104f257602090601f01601f19160190565b0190565b90826000939282370152565b9092919261054d6105488261050b565b6104f7565b938185526020850190828401116101595761016b9261052c565b9080601f830112156101595781602061018193359101610538565b801515610152565b9050359061016b82610582565b919091606081840312610159576105de6105b160606104f7565b9360006105be828561058a565b9086015260206105d08282860161058a565b90860152604080930161058a565b90830152565b90916101c08284031261015957813567ffffffffffffffff8111610159578361060e918401610567565b92602083013567ffffffffffffffff8111610159578161062f918501610567565b9261063d826040830161015e565b9261064b83606084016102ea565b926106598160808501610597565b926106678260e0830161015e565b9261067683610100840161015e565b9261068581610120850161015e565b926106948261014083016102ea565b926101816106a68461016085016102ea565b936106b581610180860161015e565b936101a00161015e565b34610159576102506102446106d53660046105e4565b9a999099989198979297969396959495611558565b34610159576106fa366004610254565b610277610efd565b3461015957610712366004610254565b610250610244610ebb565b909160c0828403126101595761073383836102ea565b9261074181602085016102ea565b9261074f826040830161015e565b92610181610760846060850161015e565b9361076e816080860161015e565b9360a00161015e565b346101595761025061024461078d36600461071d565b94939093929192611847565b9060208282031261015957610181916102ea565b9060c08061016b936107c76000820151600086019061020c565b6107d96020820151602086019061020c565b6107eb6040820151604086019061020c565b6107fa60608201516060860152565b61080960808201516080860152565b61081860a082015160a0860152565b0151910152565b906105288160e0936107ad565b9061084c61084561083b845190565b8084529260200190565b9260200190565b9060005b81811061085d5750505090565b909192610877610870600192865161081f565b9460200190565b929101610850565b60208082526101819291019061082c565b34610159576102506108ab6108a6366004610799565b612527565b6040519182918261087f565b610181737a250d5630b4cf539739df2c5dacb4c659f2488d610337565b6101816108b7565b61021590610337565b60208101929161016b91906108dc565b3461015957610905366004610254565b6102506109106108d4565b604051918291826108e5565b80548210156101bd576101b4600c91600052602060002090565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801561096c575b602083101461096757565b610936565b91607f169161095c565b805460009392916109936109898361094c565b8085529360200190565b91600181169081156109e557506001146109ac57505050565b6109bf9192939450600052602060002090565b916000925b8184106109d15750500190565b8054848401526020909301926001016109c4565b92949550505060ff1916825215156020020190565b9061018191610976565b9061016b610a1e92610a1560405190565b938480926109fa565b03836104d0565b610181905b60ff1690565b6101819054610a25565b6101819060081c610a2a565b6101819054610a3a565b9190610a60600993600094610340565b805482101561041157610a7492935061091c565b50610a7e8161037b565b91610a8b60018301610a04565b91610a9860028201610a04565b91610aa56003830161038c565b91610ab260048201610a30565b91610abf60048301610a46565b91610acc6005820161038c565b91610ad96006830161038c565b91610ae66007820161038c565b91610af36008830161037b565b91610b006009820161037b565b91610181600b61040a600a850161038c565b60005b838110610b255750506000910152565b8181015183820152602001610b15565b610b56610b5f60209361052893610b4a815190565b80835293849260200190565b95869101610b12565b601f01601f191690565b9a9896949291909d9c9b999795939d6101a08c019060008d01610b8b9161020c565b8b810360208d0152610b9c91610b35565b8a810360408c0152610bad91610b35565b9b60608a01610bba919052565b15156080890152151560a088015260c087015260e08601526101008501526101208401610be69161020c565b6101408301610bf49161020c565b6101608201526101800152565b3461015957610250610c1d610c173660046102f7565b90610a50565b99610c369d9b9d99919998929897939796949660405190565b9d8e9d8e610b69565b909160608284031261015957610181610c5884846102ea565b93610c6681602086016102ea565b9360400161015e565b3461015957610277610c82366004610c3f565b91611f8e565b6004111561015957565b9050359061016b82610c88565b906020828203126101595761018191610c92565b34610159576102506102b9610cc9366004610c9f565b611a08565b3461015957610250610244610ce4366004610c9f565b6119e9565b906101819061018080610d33610d216101a08501610d0f6000890151600088019061020c565b60208801518682036020880152610b35565b60408701518582036040870152610b35565b94610d4360608201516060860152565b60808181015115159085015260a081810151151590850152610d6a60c082015160c0860152565b610d7960e082015160e0860152565b610d8a610100820151610100860152565b610d9e61012082015161012086019061020c565b610db261014082015161014086019061020c565b610818610160820151610160860152565b9061018191610ce9565b90610de3610dd9835190565b8083529160200190565b9081610df56020830284019460200190565b926000915b838310610e0957505050505090565b90919293946020610e2c610e2583856001950387528951610dc3565b9760200190565b9301930191939290610dfa565b602080825261018192910190610dcd565b3461015957610250610e65610e60366004610799565b612414565b60405191829182610e39565b3461015957610277610e84366004610799565b611011565b909160608284031261015957610181610c588484610c92565b3461015957610277610eb5366004610e89565b91611b47565b610181600061037b565b610ecd610f59565b61016b610eeb565b6101cb6101816101819290565b61018190610ed5565b61016b610ef86000610ee2565b61104a565b61016b610ec5565b15610f0c57565b60405162461bcd60e51b815280610f55600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b61016b610f64610ebb565b610f7b610f75336101cb565b6101cb565b916101cb565b14610f05565b61016b90610f8d610f59565b610fed565b15610f9957565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61016b90610ef8611001610f706000610ee2565b61100a836101cb565b1415610f92565b61016b90610f81565b906001600160a01b03905b9181191691161790565b9061103f61018161104692610337565b825461101a565b9055565b611054600061037b565b9061106081600061102f565b61109361108d7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610337565b91610337565b9161109d60405190565b600090a3565b61015281610372565b9050519061016b826110a3565b9060208282031261015957610181916110ac565b9a989694929d9c9b9997959391906101e08c018c80820390600001526110f291610b35565b8b810360208d015261110391610b35565b9c60408b01611110919052565b60608a0161111d9161020c565b8051151560808a01526020810151151560a08a015260400151151560c089015260e0880152610100870152610120860152610140850161115c9161020c565b610160840161116a9161020c565b6101808301526101a08201526101c00161016b9161020c565b6040513d6000823e3d90fd5b916001600160a01b0360089290920291821b911b611025565b91906111b961018161104693610337565b90835461118f565b90815491600160401b8310156104f257826111e491600161016b9501815561019a565b906111a8565b6101816101a06104f7565b90610215906101cb565b634e487b7160e01b600052600060045260246000fd5b61018190516101cb565b9160001960089290920291821b911b611025565b6101816101816101819290565b919061125161018161104693611233565b90835461121f565b61016b91600091611240565b818110611270575050565b8061127e6000600193611259565b01611265565b9190601f811161129357505050565b6112a561016b93600052602060002090565b906020601f8401819004830193106112c7575b6020601f909101040190611265565b90915081906112b8565b906112da815190565b9067ffffffffffffffff82116104f2576112fe826112f8855461094c565b85611284565b602090601f83116001146113395761104692916000918361132e575b5050600019600883021c1916906002021790565b01519050388061131a565b601f1983169161134e85600052602060002090565b9260005b81811061138c57509160029391856001969410611373575b50505002019055565b01516000196008601f8516021c1916905538808061136a565b91936020600181928787015181550195019201611352565b9061016b916112d1565b9060001990611025565b906113c861018161104692611233565b82546113ae565b9060ff90611025565b906113e861018161104692151590565b82546113cf565b9061ff009060081b611025565b9061140c61018161104692151590565b82546113ef565b61016b91906114729061018090600b906114368161143087611215565b9061102f565b61144e60018201611448602088015190565b906113a4565b61146060028201611448604088015190565b61147860038201611472606088015190565b906113b8565b6114a26004820161149561148f6080890151151590565b826113d8565b60a08701511515906113fc565b6114b46005820161147260c088015190565b6114c66006820161147260e088015190565b6114d96007820161147261010088015190565b6114ed600882016114306101208801611215565b611501600982016114306101408801611215565b611514600a820161147261016088015190565b0192015190565b919061152a5761016b91611413565b6111ff565b90815491600160401b8310156104f2578261155291600161016b9501815561091c565b9061151b565b9099969382878c888c99969f9c889e9b988e8e8e8a948e611577600090565b50611582600461037b565b61158b90610337565b9963d5e71353988d61159c30610337565b986115a660405190565b9e8f9d8e6115b5819f60e01b90565b81526004019c6115c49d6110cd565b03815a602094600091f180156116f6576115e6916000916116c8575b50610337565b6115ef90610337565b9b8c9a6115fd8c60086111c1565b611608906009610340565b9b6116138351151590565b6040909301511515936116246111ea565b9c61162f908e6111f5565b60208d015260408c015260608b0152151560808a0152151560a089015260c088015260e087015261010086015261166a9061012086016111f5565b6116789061014085016111f5565b61016083015261018082015261168d9161152f565b7fda509e6642e963726d34ff4d505f1232025d5a4c3937d868bcad7e3e5950d6e66116b782610337565b906116c160405190565b600090a290565b6116e9915060203d81116116ef575b6116e181836104d0565b8101906110b9565b386115e0565b503d6116d7565b611183565b919461173e6117459298979561173760a09661173061016b9a61172660c08a019e60008b019061020c565b602089019061020c565b6040870152565b6060850152565b6080830152565b0152565b61018160e06104f7565b906113c86101816110469290565b61016b91906117d99060c09060069061177d8161143087611215565b6117906001820161143060208801611215565b6117a36002820161143060408801611215565b6117b560038201611472606088015190565b6117c760048201611472608088015190565b6115146005820161147260a088015190565b90611753565b919061152a5761016b91611761565b90815491600160401b8310156104f2578261181191600161016b95018155610358565b906117df565b61174561016b94611840606094989795611839608086019a600087019061020c565b6020850152565b6040830152565b94909192611853600090565b5061185e600561037b565b61186790610337565b95639b1de1ff9661187760405190565b9760e01b88528780611891868a878b8b89600488016116fb565b03815a602094600091f19687156116f657600097611987575b506118c06118b9600698610337565b80986111c1565b61192e6118cb611749565b6118d589826111f5565b6118e283602083016111f5565b6118ef86604083016111f5565b6118fa876060830152565b611905846080830152565b6119108860a0830152565b61191b8560c0830152565b611929610181336007610340565b6117ee565b6119817fe4a84f0f254e5960c762412e401bbc3ea5b577c07be930ce4ea38862ddc5f6529361196e6119686119628b610337565b97610337565b97611233565b9761197860405190565b94859485611817565b0390a490565b6119a091975060203d81116116ef576116e181836104d0565b95386118aa565b634e487b7160e01b600052602160045260246000fd5b600411156119c757565b6119a7565b9061016b826119bd565b610181906119cc565b9061034a906119d6565b6000611a02610181926119fa600090565b5060036119df565b0161037b565b6001611a19610181926119fa600090565b0161038c565b9061016b9291611a2d610f59565b611a8e565b90815260408101929161016b9160200152565b610215906119d6565b60208101929161016b9190611a45565b61018160406104f7565b61016b9190611472906020906001906115148161143087611215565b9061016b91611a68565b9291600390611aa56101816001611a1988866119df565b8111611b1557611ab4826119cc565b611abd866119cc565b11611af25793611aed91611ae861016b9596611ae1611ada611a5e565b96876111f5565b6020860152565b6119df565b611a84565b610f5585611aff60405190565b63699273b360e01b815291829160048301611a4e565b611b246001611a1987856119df565b90610f55611b3160405190565b63dcaf71db60e01b815292839260048401611a32565b9061016b9291611a1f565b610181612710611233565b611b6630610337565b3160006003611b7582826119df565b600101611b819061038c565b82600180611b8f81866119df565b01611b999061038c565b958260029280611ba985896119df565b01611bb39061038c565b9281611bbf89806119df565b01611bc99061038c565b96611bd49082611cf3565b90611bdd611b52565b80611be9818095611d2d565b9c611bf49084611cf3565b90611bfe91611d2d565b95611c099083611cf3565b90611c1391611d2d565b97611c1d91611cf3565b90611c2791611d2d565b9882611c33818a6119df565b01611c3d9061037b565b611c4690610337565b90611c5091612543565b611c5a90876119df565b01611c649061037b565b611c6d90610337565b90611c7791612543565b611c8190846119df565b01611c8b9061037b565b611c9490610337565b90611c9e91612543565b80611ca8916119df565b01611cb29061037b565b611cbb90610337565b9061016b91612543565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715611cee57565b611cc5565b6101819190611cdb565b634e487b7160e01b600052601260045260246000fd5b90611d1d565b9190565b908115611d28570490565b611cfd565b6101819190611d13565b6001600160701b038116610152565b9050519061016b82611d37565b63ffffffff8116610152565b9050519061016b82611d53565b909160608284031261015957610181611d858484611d46565b93611d938160208601611d46565b93604001611d5f565b610181610181610181926001600160701b031690565b9050519061016b82610150565b906020828203126101595761018191611db2565b90815260608101939261016b929091604091611745906020830152565b9050519061016b82610582565b906020828203126101595761018191611df0565b91602061016b9294936117456040820196600083019061020c565b15611e3357565b60405162461bcd60e51b815260206004820152600f60248201526e105c1c1c9bdd985b0819985a5b1959608a1b6044820152606490fd5b67ffffffffffffffff81116104f25760208091020190565b90611e8f61054883611e6a565b918252565b369037565b9061016b611eaf611ea984611e82565b93611e6a565b601f190160208401611e94565b90611ec5825190565b8110156101bd576020809102010190565b9050519061016b826102e1565b906020828203126101595761018191611ed6565b61021590611233565b906105288160209361020c565b90611f1c61084561083b845190565b9060005b818110611f2d5750505090565b909192611f406108706001928651611f00565b929101611f20565b90611f836117459161016b96989795611f76608096611f6c60a08801946000890152565b6020870190611ef7565b8482036040860152611f0d565b96606083019061020c565b916060611fa5611fa0611fbd94610337565b610337565b630902f1ac90611fb460405190565b94859260e01b90565b825260049082905afa9182156116f6576000908193612229575b50611fe4611fea91611d9c565b92611d9c565b916020612019611ffb611fa06108b7565b9461202563ad615dec9161200e60405190565b958694859460e01b90565b84528760048501611dd3565b0381865afa9081156116f6576000916121fb575b5061204a611d19610181600261038c565b101561205557505050565b61207e6020612066611fa086610337565b63095ea7b39061207560405190565b93849260e01b90565b825281600081612092888a60048401611e11565b03925af180156116f6576120ae916000916121cd575b50611e2c565b6120c06120bb6002611233565b611e99565b906120de6000946120d96120d387611233565b85611ebc565b6111f5565b63ad5c46486120f66120ef60405190565b9160e01b90565b8152602081600481875afa80156116f65761212091869161219f575b506120d96120d36001611233565b635c11d7959261212f30610337565b4290823b1561015957869561216761215c93889793889461214f60405190565b9a8b998a98899760e01b90565b875260048701611f48565b03925af180156116f657612179575050565b8161016b92903d10612198575b61219081836104d0565b810190610254565b503d612186565b6121c0915060203d81116121c6575b6121b881836104d0565b810190611ee3565b38612112565b503d6121ae565b6121ee915060203d81116121f4575b6121e681836104d0565b810190611dfd565b386120a8565b503d6121dc565b61221c915060203d8111612222575b61221481836104d0565b810190611dbf565b38612039565b503d61220a565b611fe49350611fea91506122539060603d811161225c575b61224b81836104d0565b810190611d6c565b50935090611fd7565b503d612241565b61016b9061226f610f59565b61016b9060026113b8565b61016b90612263565b9061016b6123a5600b6122946111ea565b946122a76122a18261037b565b876111f5565b6122bd6122b660018301610a04565b6020880152565b6122d36122cc60028301610a04565b6040880152565b6122e96122e26003830161038c565b6060880152565b6123016122f860048301610a30565b15156080880152565b61231961231060048301610a46565b151560a0880152565b61232f6123286005830161038c565b60c0880152565b61234561233e6006830161038c565b60e0880152565b61235c6123546007830161038c565b610100880152565b61237561236b6008830161037b565b61012088016111f5565b61238e6123846009830161037b565b61014088016111f5565b611a1961239d600a830161038c565b610160880152565b610180840152565b61018190612283565b906123bf825490565b6123c881611e82565b926123dc6020850191600052602060002090565b6000915b8383106123ed5750505050565b600c60206001926123fd856123ad565b8152019201920191906123e0565b610181906123b6565b61242b61018191612423606090565b506009610340565b61240b565b9061016b6124b96006612441611749565b9461244e6122a18261037b565b61246661245d6001830161037b565b602088016111f5565b61247e6124756002830161037b565b604088016111f5565b61248d6122e26003830161038c565b6124a361249c6004830161038c565b6080880152565b611a196124b26005830161038c565b60a0880152565b60c0840152565b61018190612430565b906124d2825490565b6124db81611e82565b926124ef6020850191600052602060002090565b6000915b8383106125005750505050565b60076020600192612510856124c0565b8152019201920191906124f3565b610181906124c9565b61253e61018191612536606090565b506007610340565b61251e565b600080809381935af11561255357565b63b12d13eb6000526004601cfdfea26469706673582212206449701fbfbeb4f7dc7ebc50000f265c21ce8c69b5f993adf3a3d62d4411026d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10F2B141 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x3D9CCE42 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x43584BCA EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x44EA3A66 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x4D9429E7 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x646EEDAB EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x9B1DE1FF EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xA7BC6A17 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xB5611107 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xB579772F EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xD0B516C7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xDC8ED636 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF14AADE1 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI PUSH4 0xFCA928B2 SUB PUSH2 0xE JUMPI PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST PUSH2 0xE4A JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH2 0x2C9 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x159 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x150 JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x15E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1B4 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH2 0x181 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP2 SLOAD PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0x1EE DUP3 SLOAD SWAP1 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x209 JUMPI POP PUSH2 0x181 SWAP2 PUSH2 0x203 SWAP2 PUSH2 0x19A JUMP JUMPDEST SWAP1 PUSH2 0x1D7 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH2 0x215 SWAP1 PUSH2 0x1CB JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x20C JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x16D JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x219 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x159 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x181 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP2 SLOAD PUSH2 0x27C JUMP JUMPDEST PUSH2 0x181 PUSH1 0x0 PUSH1 0x2 PUSH2 0x287 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2B9 PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x277 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x16D JUMP JUMPDEST PUSH2 0x227A JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x1CB JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x2E1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP1 PUSH2 0x311 DUP2 DUP6 PUSH2 0x2EA JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x15E JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x1CB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x31A JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x32E JUMP JUMPDEST SWAP1 PUSH2 0x34A SWAP1 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1B4 PUSH1 0x7 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x181 SWAP1 SLOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x181 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x181 SWAP1 SLOAD PUSH2 0x385 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3A6 PUSH1 0x7 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x340 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x411 JUMPI PUSH2 0x3BA SWAP3 SWAP4 POP PUSH2 0x358 JUMP JUMPDEST POP PUSH2 0x3C4 DUP2 PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0x3D1 PUSH1 0x1 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0x3DE PUSH1 0x2 DUP3 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0x3EB PUSH1 0x3 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0x3F8 PUSH1 0x4 DUP3 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0x181 PUSH1 0x6 PUSH2 0x40A PUSH1 0x5 DUP6 ADD PUSH2 0x38C JUMP JUMPDEST SWAP4 ADD PUSH2 0x38C JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP5 SWAP3 SWAP1 SWAP8 SWAP7 SWAP6 SWAP4 SWAP2 PUSH1 0xE0 DUP7 ADD SWAP9 PUSH1 0x0 DUP8 ADD PUSH2 0x42F SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP7 ADD PUSH2 0x43C SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 DUP6 ADD PUSH2 0x449 SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x47A PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7 JUMP JUMPDEST SWAP1 PUSH2 0x396 JUMP JUMPDEST SWAP4 PUSH2 0x48A SWAP8 SWAP6 SWAP8 SWAP4 SWAP2 SWAP4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 PUSH2 0x1EE DUP3 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x16D JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4F2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0x504 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x4D0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F2 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x54D PUSH2 0x548 DUP3 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x4F7 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH2 0x159 JUMPI PUSH2 0x16B SWAP3 PUSH2 0x52C JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x159 JUMPI DUP2 PUSH1 0x20 PUSH2 0x181 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x538 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x152 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x582 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x5DE PUSH2 0x5B1 PUSH1 0x60 PUSH2 0x4F7 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH2 0x5BE DUP3 DUP6 PUSH2 0x58A JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH2 0x5D0 DUP3 DUP3 DUP7 ADD PUSH2 0x58A JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 DUP1 SWAP4 ADD PUSH2 0x58A JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1C0 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x159 JUMPI DUP4 PUSH2 0x60E SWAP2 DUP5 ADD PUSH2 0x567 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x159 JUMPI DUP2 PUSH2 0x62F SWAP2 DUP6 ADD PUSH2 0x567 JUMP JUMPDEST SWAP3 PUSH2 0x63D DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x64B DUP4 PUSH1 0x60 DUP5 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP3 PUSH2 0x659 DUP2 PUSH1 0x80 DUP6 ADD PUSH2 0x597 JUMP JUMPDEST SWAP3 PUSH2 0x667 DUP3 PUSH1 0xE0 DUP4 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x676 DUP4 PUSH2 0x100 DUP5 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x685 DUP2 PUSH2 0x120 DUP6 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x694 DUP3 PUSH2 0x140 DUP4 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP3 PUSH2 0x181 PUSH2 0x6A6 DUP5 PUSH2 0x160 DUP6 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP4 PUSH2 0x6B5 DUP2 PUSH2 0x180 DUP7 ADD PUSH2 0x15E JUMP JUMPDEST SWAP4 PUSH2 0x1A0 ADD PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E4 JUMP JUMPDEST SWAP11 SWAP10 SWAP1 SWAP10 SWAP9 SWAP2 SWAP9 SWAP8 SWAP3 SWAP8 SWAP7 SWAP4 SWAP7 SWAP6 SWAP5 SWAP6 PUSH2 0x1558 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x6FA CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x277 PUSH2 0xEFD JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x712 CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x244 PUSH2 0xEBB JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xC0 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x733 DUP4 DUP4 PUSH2 0x2EA JUMP JUMPDEST SWAP3 PUSH2 0x741 DUP2 PUSH1 0x20 DUP6 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP3 PUSH2 0x74F DUP3 PUSH1 0x40 DUP4 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 PUSH2 0x181 PUSH2 0x760 DUP5 PUSH1 0x60 DUP6 ADD PUSH2 0x15E JUMP JUMPDEST SWAP4 PUSH2 0x76E DUP2 PUSH1 0x80 DUP7 ADD PUSH2 0x15E JUMP JUMPDEST SWAP4 PUSH1 0xA0 ADD PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0x78D CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 PUSH2 0x1847 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x2EA JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP1 PUSH2 0x16B SWAP4 PUSH2 0x7C7 PUSH1 0x0 DUP3 ADD MLOAD PUSH1 0x0 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x7D9 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x7EB PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x7FA PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x809 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x818 PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x528 DUP2 PUSH1 0xE0 SWAP4 PUSH2 0x7AD JUMP JUMPDEST SWAP1 PUSH2 0x84C PUSH2 0x845 PUSH2 0x83B DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x85D JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x877 PUSH2 0x870 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x81F JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x850 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x181 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x82C JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x8AB PUSH2 0x8A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x181 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH2 0x337 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x215 SWAP1 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x8DC JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x905 CALLDATASIZE PUSH1 0x4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x910 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x8E5 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1B4 PUSH1 0xC SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0x96C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x967 JUMPI JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x95C JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0x993 PUSH2 0x989 DUP4 PUSH2 0x94C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x9E5 JUMPI POP PUSH1 0x1 EQ PUSH2 0x9AC JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x9BF SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0x9D1 JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9C4 JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP2 PUSH2 0x976 JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0xA1E SWAP3 PUSH2 0xA15 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0x9FA JUMP JUMPDEST SUB DUP4 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x181 SWAP1 JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x181 SWAP1 SLOAD PUSH2 0xA25 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH1 0x8 SHR PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x181 SWAP1 SLOAD PUSH2 0xA3A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xA60 PUSH1 0x9 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x340 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x411 JUMPI PUSH2 0xA74 SWAP3 SWAP4 POP PUSH2 0x91C JUMP JUMPDEST POP PUSH2 0xA7E DUP2 PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0xA8B PUSH1 0x1 DUP4 ADD PUSH2 0xA04 JUMP JUMPDEST SWAP2 PUSH2 0xA98 PUSH1 0x2 DUP3 ADD PUSH2 0xA04 JUMP JUMPDEST SWAP2 PUSH2 0xAA5 PUSH1 0x3 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0xAB2 PUSH1 0x4 DUP3 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP2 PUSH2 0xABF PUSH1 0x4 DUP4 ADD PUSH2 0xA46 JUMP JUMPDEST SWAP2 PUSH2 0xACC PUSH1 0x5 DUP3 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0xAD9 PUSH1 0x6 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0xAE6 PUSH1 0x7 DUP3 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 PUSH2 0xAF3 PUSH1 0x8 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0xB00 PUSH1 0x9 DUP3 ADD PUSH2 0x37B JUMP JUMPDEST SWAP2 PUSH2 0x181 PUSH1 0xB PUSH2 0x40A PUSH1 0xA DUP6 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xB25 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB15 JUMP JUMPDEST PUSH2 0xB56 PUSH2 0xB5F PUSH1 0x20 SWAP4 PUSH2 0x528 SWAP4 PUSH2 0xB4A DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP11 SWAP9 SWAP7 SWAP5 SWAP3 SWAP2 SWAP1 SWAP14 SWAP13 SWAP12 SWAP10 SWAP8 SWAP6 SWAP4 SWAP14 PUSH2 0x1A0 DUP13 ADD SWAP1 PUSH1 0x0 DUP14 ADD PUSH2 0xB8B SWAP2 PUSH2 0x20C JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0xB9C SWAP2 PUSH2 0xB35 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0xBAD SWAP2 PUSH2 0xB35 JUMP JUMPDEST SWAP12 PUSH1 0x60 DUP11 ADD PUSH2 0xBBA SWAP2 SWAP1 MSTORE JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP10 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD PUSH2 0xBE6 SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x140 DUP4 ADD PUSH2 0xBF4 SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0x180 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0xC1D PUSH2 0xC17 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F7 JUMP JUMPDEST SWAP1 PUSH2 0xA50 JUMP JUMPDEST SWAP10 PUSH2 0xC36 SWAP14 SWAP12 SWAP14 SWAP10 SWAP2 SWAP10 SWAP9 SWAP3 SWAP9 SWAP8 SWAP4 SWAP8 SWAP7 SWAP5 SWAP7 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP14 DUP15 SWAP14 DUP15 PUSH2 0xB69 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 PUSH2 0xC58 DUP5 DUP5 PUSH2 0x2EA JUMP JUMPDEST SWAP4 PUSH2 0xC66 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x2EA JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x15E JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x277 PUSH2 0xC82 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3F JUMP JUMPDEST SWAP2 PUSH2 0x1F8E JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x159 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0xC88 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0xC92 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x2B9 PUSH2 0xCC9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x1A08 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0x244 PUSH2 0xCE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x19E9 JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP1 PUSH2 0x180 DUP1 PUSH2 0xD33 PUSH2 0xD21 PUSH2 0x1A0 DUP6 ADD PUSH2 0xD0F PUSH1 0x0 DUP10 ADD MLOAD PUSH1 0x0 DUP9 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0xB35 JUMP JUMPDEST SWAP5 PUSH2 0xD43 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH2 0xD6A PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0xD79 PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0xD8A PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x100 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0xD9E PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x120 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0xDB2 PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x818 PUSH2 0x160 DUP3 ADD MLOAD PUSH2 0x160 DUP7 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x181 SWAP2 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 PUSH2 0xDE3 PUSH2 0xDD9 DUP4 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xDF5 PUSH1 0x20 DUP4 MUL DUP5 ADD SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xE09 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 PUSH2 0xE2C PUSH2 0xE25 DUP4 DUP6 PUSH1 0x1 SWAP6 SUB DUP8 MSTORE DUP10 MLOAD PUSH2 0xDC3 JUMP JUMPDEST SWAP8 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x181 SWAP3 SWAP2 ADD SWAP1 PUSH2 0xDCD JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x250 PUSH2 0xE65 PUSH2 0xE60 CALLDATASIZE PUSH1 0x4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xE39 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x277 PUSH2 0xE84 CALLDATASIZE PUSH1 0x4 PUSH2 0x799 JUMP JUMPDEST PUSH2 0x1011 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 PUSH2 0xC58 DUP5 DUP5 PUSH2 0xC92 JUMP JUMPDEST CALLVALUE PUSH2 0x159 JUMPI PUSH2 0x277 PUSH2 0xEB5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE89 JUMP JUMPDEST SWAP2 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0x181 PUSH1 0x0 PUSH2 0x37B JUMP JUMPDEST PUSH2 0xECD PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x16B PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x1CB PUSH2 0x181 PUSH2 0x181 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0xED5 JUMP JUMPDEST PUSH2 0x16B PUSH2 0xEF8 PUSH1 0x0 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x104A JUMP JUMPDEST PUSH2 0x16B PUSH2 0xEC5 JUMP JUMPDEST ISZERO PUSH2 0xF0C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xF55 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x16B PUSH2 0xF64 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xF7B PUSH2 0xF75 CALLER PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST SWAP2 PUSH2 0x1CB JUMP JUMPDEST EQ PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0xF8D PUSH2 0xF59 JUMP JUMPDEST PUSH2 0xFED JUMP JUMPDEST ISZERO PUSH2 0xF99 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0xEF8 PUSH2 0x1001 PUSH2 0xF70 PUSH1 0x0 PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x100A DUP4 PUSH2 0x1CB JUMP JUMPDEST EQ ISZERO PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x103F PUSH2 0x181 PUSH2 0x1046 SWAP3 PUSH2 0x337 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x101A JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1054 PUSH1 0x0 PUSH2 0x37B JUMP JUMPDEST SWAP1 PUSH2 0x1060 DUP2 PUSH1 0x0 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x1093 PUSH2 0x108D PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x337 JUMP JUMPDEST SWAP2 PUSH2 0x337 JUMP JUMPDEST SWAP2 PUSH2 0x109D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x152 DUP2 PUSH2 0x372 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x10A3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x10AC JUMP JUMPDEST SWAP11 SWAP9 SWAP7 SWAP5 SWAP3 SWAP14 SWAP13 SWAP12 SWAP10 SWAP8 SWAP6 SWAP4 SWAP2 SWAP1 PUSH2 0x1E0 DUP13 ADD DUP13 DUP1 DUP3 SUB SWAP1 PUSH1 0x0 ADD MSTORE PUSH2 0x10F2 SWAP2 PUSH2 0xB35 JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x1103 SWAP2 PUSH2 0xB35 JUMP JUMPDEST SWAP13 PUSH1 0x40 DUP12 ADD PUSH2 0x1110 SWAP2 SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP11 ADD PUSH2 0x111D SWAP2 PUSH2 0x20C JUMP JUMPDEST DUP1 MLOAD ISZERO ISZERO PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0x40 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD PUSH2 0x115C SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x160 DUP5 ADD PUSH2 0x116A SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x1C0 ADD PUSH2 0x16B SWAP2 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x1025 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x11B9 PUSH2 0x181 PUSH2 0x1046 SWAP4 PUSH2 0x337 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x118F JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x11E4 SWAP2 PUSH1 0x1 PUSH2 0x16B SWAP6 ADD DUP2 SSTORE PUSH2 0x19A JUMP JUMPDEST SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1A0 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 PUSH2 0x215 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x181 SWAP1 MLOAD PUSH2 0x1CB JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x1025 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x181 PUSH2 0x181 SWAP3 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1251 PUSH2 0x181 PUSH2 0x1046 SWAP4 PUSH2 0x1233 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0x121F JUMP JUMPDEST PUSH2 0x16B SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1240 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1270 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x127E PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH2 0x1259 JUMP JUMPDEST ADD PUSH2 0x1265 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1293 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x12A5 PUSH2 0x16B SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH2 0x12C7 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH2 0x1265 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST SWAP1 PUSH2 0x12DA DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F2 JUMPI PUSH2 0x12FE DUP3 PUSH2 0x12F8 DUP6 SLOAD PUSH2 0x94C JUMP JUMPDEST DUP6 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1339 JUMPI PUSH2 0x1046 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x132E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH2 0x134E DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x138C JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH2 0x1373 JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x136A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x1352 JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP2 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x1025 JUMP JUMPDEST SWAP1 PUSH2 0x13C8 PUSH2 0x181 PUSH2 0x1046 SWAP3 PUSH2 0x1233 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x13AE JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x1025 JUMP JUMPDEST SWAP1 PUSH2 0x13E8 PUSH2 0x181 PUSH2 0x1046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x13CF JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH2 0x1025 JUMP JUMPDEST SWAP1 PUSH2 0x140C PUSH2 0x181 PUSH2 0x1046 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x13EF JUMP JUMPDEST PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1472 SWAP1 PUSH2 0x180 SWAP1 PUSH1 0xB SWAP1 PUSH2 0x1436 DUP2 PUSH2 0x1430 DUP8 PUSH2 0x1215 JUMP JUMPDEST SWAP1 PUSH2 0x102F JUMP JUMPDEST PUSH2 0x144E PUSH1 0x1 DUP3 ADD PUSH2 0x1448 PUSH1 0x20 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x1460 PUSH1 0x2 DUP3 ADD PUSH2 0x1448 PUSH1 0x40 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1478 PUSH1 0x3 DUP3 ADD PUSH2 0x1472 PUSH1 0x60 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x14A2 PUSH1 0x4 DUP3 ADD PUSH2 0x1495 PUSH2 0x148F PUSH1 0x80 DUP10 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0xA0 DUP8 ADD MLOAD ISZERO ISZERO SWAP1 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x14B4 PUSH1 0x5 DUP3 ADD PUSH2 0x1472 PUSH1 0xC0 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14C6 PUSH1 0x6 DUP3 ADD PUSH2 0x1472 PUSH1 0xE0 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14D9 PUSH1 0x7 DUP3 ADD PUSH2 0x1472 PUSH2 0x100 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14ED PUSH1 0x8 DUP3 ADD PUSH2 0x1430 PUSH2 0x120 DUP9 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1501 PUSH1 0x9 DUP3 ADD PUSH2 0x1430 PUSH2 0x140 DUP9 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1514 PUSH1 0xA DUP3 ADD PUSH2 0x1472 PUSH2 0x160 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST ADD SWAP3 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x152A JUMPI PUSH2 0x16B SWAP2 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x11FF JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x1552 SWAP2 PUSH1 0x1 PUSH2 0x16B SWAP6 ADD DUP2 SSTORE PUSH2 0x91C JUMP JUMPDEST SWAP1 PUSH2 0x151B JUMP JUMPDEST SWAP1 SWAP10 SWAP7 SWAP4 DUP3 DUP8 DUP13 DUP9 DUP13 SWAP10 SWAP7 SWAP16 SWAP13 DUP9 SWAP15 SWAP12 SWAP9 DUP15 DUP15 DUP15 DUP11 SWAP5 DUP15 PUSH2 0x1577 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1582 PUSH1 0x4 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x158B SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP10 PUSH4 0xD5E71353 SWAP9 DUP14 PUSH2 0x159C ADDRESS PUSH2 0x337 JUMP JUMPDEST SWAP9 PUSH2 0x15A6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP15 DUP16 SWAP14 DUP15 PUSH2 0x15B5 DUP2 SWAP16 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x4 ADD SWAP13 PUSH2 0x15C4 SWAP14 PUSH2 0x10CD JUMP JUMPDEST SUB DUP2 GAS PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 CALL DUP1 ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x15E6 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x16C8 JUMPI JUMPDEST POP PUSH2 0x337 JUMP JUMPDEST PUSH2 0x15EF SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP12 DUP13 SWAP11 PUSH2 0x15FD DUP13 PUSH1 0x8 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x1608 SWAP1 PUSH1 0x9 PUSH2 0x340 JUMP JUMPDEST SWAP12 PUSH2 0x1613 DUP4 MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO SWAP4 PUSH2 0x1624 PUSH2 0x11EA JUMP JUMPDEST SWAP13 PUSH2 0x162F SWAP1 DUP15 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH1 0x60 DUP12 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x166A SWAP1 PUSH2 0x120 DUP7 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x1678 SWAP1 PUSH2 0x140 DUP6 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x168D SWAP2 PUSH2 0x152F JUMP JUMPDEST PUSH32 0xDA509E6642E963726D34FF4D505F1232025D5A4C3937D868BCAD7E3E5950D6E6 PUSH2 0x16B7 DUP3 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x16C1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x16E9 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x16EF JUMPI JUMPDEST PUSH2 0x16E1 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x10B9 JUMP JUMPDEST CODESIZE PUSH2 0x15E0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0x1183 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x173E PUSH2 0x1745 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1737 PUSH1 0xA0 SWAP7 PUSH2 0x1730 PUSH2 0x16B SWAP11 PUSH2 0x1726 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x181 PUSH1 0xE0 PUSH2 0x4F7 JUMP JUMPDEST SWAP1 PUSH2 0x13C8 PUSH2 0x181 PUSH2 0x1046 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x17D9 SWAP1 PUSH1 0xC0 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x177D DUP2 PUSH2 0x1430 DUP8 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1790 PUSH1 0x1 DUP3 ADD PUSH2 0x1430 PUSH1 0x20 DUP9 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x17A3 PUSH1 0x2 DUP3 ADD PUSH2 0x1430 PUSH1 0x40 DUP9 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x17B5 PUSH1 0x3 DUP3 ADD PUSH2 0x1472 PUSH1 0x60 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x17C7 PUSH1 0x4 DUP3 ADD PUSH2 0x1472 PUSH1 0x80 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1514 PUSH1 0x5 DUP3 ADD PUSH2 0x1472 PUSH1 0xA0 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1753 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x152A JUMPI PUSH2 0x16B SWAP2 PUSH2 0x1761 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x4F2 JUMPI DUP3 PUSH2 0x1811 SWAP2 PUSH1 0x1 PUSH2 0x16B SWAP6 ADD DUP2 SSTORE PUSH2 0x358 JUMP JUMPDEST SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x1745 PUSH2 0x16B SWAP5 PUSH2 0x1840 PUSH1 0x60 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x1839 PUSH1 0x80 DUP7 ADD SWAP11 PUSH1 0x0 DUP8 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE JUMP JUMPDEST SWAP5 SWAP1 SWAP2 SWAP3 PUSH2 0x1853 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x185E PUSH1 0x5 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1867 SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP6 PUSH4 0x9B1DE1FF SWAP7 PUSH2 0x1877 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 PUSH1 0xE0 SHL DUP9 MSTORE DUP8 DUP1 PUSH2 0x1891 DUP7 DUP11 DUP8 DUP12 DUP12 DUP10 PUSH1 0x4 DUP9 ADD PUSH2 0x16FB JUMP JUMPDEST SUB DUP2 GAS PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP2 CALL SWAP7 DUP8 ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 SWAP8 PUSH2 0x1987 JUMPI JUMPDEST POP PUSH2 0x18C0 PUSH2 0x18B9 PUSH1 0x6 SWAP9 PUSH2 0x337 JUMP JUMPDEST DUP1 SWAP9 PUSH2 0x11C1 JUMP JUMPDEST PUSH2 0x192E PUSH2 0x18CB PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x18D5 DUP10 DUP3 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x18E2 DUP4 PUSH1 0x20 DUP4 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x18EF DUP7 PUSH1 0x40 DUP4 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x18FA DUP8 PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1905 DUP5 PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1910 DUP9 PUSH1 0xA0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x191B DUP6 PUSH1 0xC0 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1929 PUSH2 0x181 CALLER PUSH1 0x7 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x1981 PUSH32 0xE4A84F0F254E5960C762412E401BBC3EA5B577C07BE930CE4EA38862DDC5F652 SWAP4 PUSH2 0x196E PUSH2 0x1968 PUSH2 0x1962 DUP12 PUSH2 0x337 JUMP JUMPDEST SWAP8 PUSH2 0x337 JUMP JUMPDEST SWAP8 PUSH2 0x1233 JUMP JUMPDEST SWAP8 PUSH2 0x1978 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 DUP6 PUSH2 0x1817 JUMP JUMPDEST SUB SWAP1 LOG4 SWAP1 JUMP JUMPDEST PUSH2 0x19A0 SWAP2 SWAP8 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x16EF JUMPI PUSH2 0x16E1 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST SWAP6 CODESIZE PUSH2 0x18AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x19C7 JUMPI JUMP JUMPDEST PUSH2 0x19A7 JUMP JUMPDEST SWAP1 PUSH2 0x16B DUP3 PUSH2 0x19BD JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x19CC JUMP JUMPDEST SWAP1 PUSH2 0x34A SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A02 PUSH2 0x181 SWAP3 PUSH2 0x19FA PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1A19 PUSH2 0x181 SWAP3 PUSH2 0x19FA PUSH1 0x0 SWAP1 JUMP JUMPDEST ADD PUSH2 0x38C JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP3 SWAP2 PUSH2 0x1A2D PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x1A8E JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x16B SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST PUSH2 0x215 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0x181 PUSH1 0x40 PUSH2 0x4F7 JUMP JUMPDEST PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1472 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1514 DUP2 PUSH2 0x1430 DUP8 PUSH2 0x1215 JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP2 PUSH2 0x1A68 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x3 SWAP1 PUSH2 0x1AA5 PUSH2 0x181 PUSH1 0x1 PUSH2 0x1A19 DUP9 DUP7 PUSH2 0x19DF JUMP JUMPDEST DUP2 GT PUSH2 0x1B15 JUMPI PUSH2 0x1AB4 DUP3 PUSH2 0x19CC JUMP JUMPDEST PUSH2 0x1ABD DUP7 PUSH2 0x19CC JUMP JUMPDEST GT PUSH2 0x1AF2 JUMPI SWAP4 PUSH2 0x1AED SWAP2 PUSH2 0x1AE8 PUSH2 0x16B SWAP6 SWAP7 PUSH2 0x1AE1 PUSH2 0x1ADA PUSH2 0x1A5E JUMP JUMPDEST SWAP7 DUP8 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x1A84 JUMP JUMPDEST PUSH2 0xF55 DUP6 PUSH2 0x1AFF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x699273B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1B24 PUSH1 0x1 PUSH2 0x1A19 DUP8 DUP6 PUSH2 0x19DF JUMP JUMPDEST SWAP1 PUSH2 0xF55 PUSH2 0x1B31 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xDCAF71DB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1A32 JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP3 SWAP2 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2710 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x1B66 ADDRESS PUSH2 0x337 JUMP JUMPDEST BALANCE PUSH1 0x0 PUSH1 0x3 PUSH2 0x1B75 DUP3 DUP3 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B81 SWAP1 PUSH2 0x38C JUMP JUMPDEST DUP3 PUSH1 0x1 DUP1 PUSH2 0x1B8F DUP2 DUP7 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1B99 SWAP1 PUSH2 0x38C JUMP JUMPDEST SWAP6 DUP3 PUSH1 0x2 SWAP3 DUP1 PUSH2 0x1BA9 DUP6 DUP10 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1BB3 SWAP1 PUSH2 0x38C JUMP JUMPDEST SWAP3 DUP2 PUSH2 0x1BBF DUP10 DUP1 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1BC9 SWAP1 PUSH2 0x38C JUMP JUMPDEST SWAP7 PUSH2 0x1BD4 SWAP1 DUP3 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 PUSH2 0x1BDD PUSH2 0x1B52 JUMP JUMPDEST DUP1 PUSH2 0x1BE9 DUP2 DUP1 SWAP6 PUSH2 0x1D2D JUMP JUMPDEST SWAP13 PUSH2 0x1BF4 SWAP1 DUP5 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 PUSH2 0x1BFE SWAP2 PUSH2 0x1D2D JUMP JUMPDEST SWAP6 PUSH2 0x1C09 SWAP1 DUP4 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 PUSH2 0x1C13 SWAP2 PUSH2 0x1D2D JUMP JUMPDEST SWAP8 PUSH2 0x1C1D SWAP2 PUSH2 0x1CF3 JUMP JUMPDEST SWAP1 PUSH2 0x1C27 SWAP2 PUSH2 0x1D2D JUMP JUMPDEST SWAP9 DUP3 PUSH2 0x1C33 DUP2 DUP11 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1C3D SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1C46 SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x1C50 SWAP2 PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x1C5A SWAP1 DUP8 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1C64 SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1C6D SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x1C77 SWAP2 PUSH2 0x2543 JUMP JUMPDEST PUSH2 0x1C81 SWAP1 DUP5 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1C8B SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1C94 SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x1C9E SWAP2 PUSH2 0x2543 JUMP JUMPDEST DUP1 PUSH2 0x1CA8 SWAP2 PUSH2 0x19DF JUMP JUMPDEST ADD PUSH2 0x1CB2 SWAP1 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x1CBB SWAP1 PUSH2 0x337 JUMP JUMPDEST SWAP1 PUSH2 0x16B SWAP2 PUSH2 0x2543 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1CEE JUMPI JUMP JUMPDEST PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x1D1D JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1D28 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND PUSH2 0x152 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x1D37 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x152 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 PUSH2 0x1D85 DUP5 DUP5 PUSH2 0x1D46 JUMP JUMPDEST SWAP4 PUSH2 0x1D93 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x181 PUSH2 0x181 PUSH2 0x181 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x150 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x1DB2 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP4 SWAP3 PUSH2 0x16B SWAP3 SWAP1 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0x1745 SWAP1 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x582 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x1DF0 JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x16B SWAP3 SWAP5 SWAP4 PUSH2 0x1745 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST ISZERO PUSH2 0x1E33 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105C1C1C9BDD985B0819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F2 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1E8F PUSH2 0x548 DUP4 PUSH2 0x1E6A JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0x1EAF PUSH2 0x1EA9 DUP5 PUSH2 0x1E82 JUMP JUMPDEST SWAP4 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x1E94 JUMP JUMPDEST SWAP1 PUSH2 0x1EC5 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1BD JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x16B DUP3 PUSH2 0x2E1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x159 JUMPI PUSH2 0x181 SWAP2 PUSH2 0x1ED6 JUMP JUMPDEST PUSH2 0x215 SWAP1 PUSH2 0x1233 JUMP JUMPDEST SWAP1 PUSH2 0x528 DUP2 PUSH1 0x20 SWAP4 PUSH2 0x20C JUMP JUMPDEST SWAP1 PUSH2 0x1F1C PUSH2 0x845 PUSH2 0x83B DUP5 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F2D JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1F40 PUSH2 0x870 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH2 0x1F00 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x1F20 JUMP JUMPDEST SWAP1 PUSH2 0x1F83 PUSH2 0x1745 SWAP2 PUSH2 0x16B SWAP7 SWAP9 SWAP8 SWAP6 PUSH2 0x1F76 PUSH1 0x80 SWAP7 PUSH2 0x1F6C PUSH1 0xA0 DUP9 ADD SWAP5 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1F0D JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x20C JUMP JUMPDEST SWAP2 PUSH1 0x60 PUSH2 0x1FA5 PUSH2 0x1FA0 PUSH2 0x1FBD SWAP5 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH4 0x902F1AC SWAP1 PUSH2 0x1FB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 SWAP1 DUP2 SWAP4 PUSH2 0x2229 JUMPI JUMPDEST POP PUSH2 0x1FE4 PUSH2 0x1FEA SWAP2 PUSH2 0x1D9C JUMP JUMPDEST SWAP3 PUSH2 0x1D9C JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x2019 PUSH2 0x1FFB PUSH2 0x1FA0 PUSH2 0x8B7 JUMP JUMPDEST SWAP5 PUSH2 0x2025 PUSH4 0xAD615DEC SWAP2 PUSH2 0x200E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE DUP8 PUSH1 0x4 DUP6 ADD PUSH2 0x1DD3 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x21FB JUMPI JUMPDEST POP PUSH2 0x204A PUSH2 0x1D19 PUSH2 0x181 PUSH1 0x2 PUSH2 0x38C JUMP JUMPDEST LT ISZERO PUSH2 0x2055 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 PUSH2 0x2066 PUSH2 0x1FA0 DUP7 PUSH2 0x337 JUMP JUMPDEST PUSH4 0x95EA7B3 SWAP1 PUSH2 0x2075 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE DUP2 PUSH1 0x0 DUP2 PUSH2 0x2092 DUP9 DUP11 PUSH1 0x4 DUP5 ADD PUSH2 0x1E11 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x20AE SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x21CD JUMPI JUMPDEST POP PUSH2 0x1E2C JUMP JUMPDEST PUSH2 0x20C0 PUSH2 0x20BB PUSH1 0x2 PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x1E99 JUMP JUMPDEST SWAP1 PUSH2 0x20DE PUSH1 0x0 SWAP5 PUSH2 0x20D9 PUSH2 0x20D3 DUP8 PUSH2 0x1233 JUMP JUMPDEST DUP6 PUSH2 0x1EBC JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH4 0xAD5C4648 PUSH2 0x20F6 PUSH2 0x20EF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x2120 SWAP2 DUP7 SWAP2 PUSH2 0x219F JUMPI JUMPDEST POP PUSH2 0x20D9 PUSH2 0x20D3 PUSH1 0x1 PUSH2 0x1233 JUMP JUMPDEST PUSH4 0x5C11D795 SWAP3 PUSH2 0x212F ADDRESS PUSH2 0x337 JUMP JUMPDEST TIMESTAMP SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x159 JUMPI DUP7 SWAP6 PUSH2 0x2167 PUSH2 0x215C SWAP4 DUP9 SWAP8 SWAP4 DUP9 SWAP5 PUSH2 0x214F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x1F48 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x16F6 JUMPI PUSH2 0x2179 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x16B SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2198 JUMPI JUMPDEST PUSH2 0x2190 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x254 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2186 JUMP JUMPDEST PUSH2 0x21C0 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x21C6 JUMPI JUMPDEST PUSH2 0x21B8 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST CODESIZE PUSH2 0x2112 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21AE JUMP JUMPDEST PUSH2 0x21EE SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x21F4 JUMPI JUMPDEST PUSH2 0x21E6 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DFD JUMP JUMPDEST CODESIZE PUSH2 0x20A8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x221C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2222 JUMPI JUMPDEST PUSH2 0x2214 DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DBF JUMP JUMPDEST CODESIZE PUSH2 0x2039 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x220A JUMP JUMPDEST PUSH2 0x1FE4 SWAP4 POP PUSH2 0x1FEA SWAP2 POP PUSH2 0x2253 SWAP1 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x225C JUMPI JUMPDEST PUSH2 0x224B DUP2 DUP4 PUSH2 0x4D0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D6C JUMP JUMPDEST POP SWAP4 POP SWAP1 PUSH2 0x1FD7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0x226F PUSH2 0xF59 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH1 0x2 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x16B SWAP1 PUSH2 0x2263 JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0x23A5 PUSH1 0xB PUSH2 0x2294 PUSH2 0x11EA JUMP JUMPDEST SWAP5 PUSH2 0x22A7 PUSH2 0x22A1 DUP3 PUSH2 0x37B JUMP JUMPDEST DUP8 PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x22BD PUSH2 0x22B6 PUSH1 0x1 DUP4 ADD PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x22D3 PUSH2 0x22CC PUSH1 0x2 DUP4 ADD PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x22E9 PUSH2 0x22E2 PUSH1 0x3 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2301 PUSH2 0x22F8 PUSH1 0x4 DUP4 ADD PUSH2 0xA30 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2319 PUSH2 0x2310 PUSH1 0x4 DUP4 ADD PUSH2 0xA46 JUMP JUMPDEST ISZERO ISZERO PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x232F PUSH2 0x2328 PUSH1 0x5 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2345 PUSH2 0x233E PUSH1 0x6 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0xE0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x235C PUSH2 0x2354 PUSH1 0x7 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x2375 PUSH2 0x236B PUSH1 0x8 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x120 DUP9 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x238E PUSH2 0x2384 PUSH1 0x9 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST PUSH2 0x140 DUP9 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x1A19 PUSH2 0x239D PUSH1 0xA DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH2 0x160 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x180 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x2283 JUMP JUMPDEST SWAP1 PUSH2 0x23BF DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23C8 DUP2 PUSH2 0x1E82 JUMP JUMPDEST SWAP3 PUSH2 0x23DC PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x23ED JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x23FD DUP6 PUSH2 0x23AD JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x23B6 JUMP JUMPDEST PUSH2 0x242B PUSH2 0x181 SWAP2 PUSH2 0x2423 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x9 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x240B JUMP JUMPDEST SWAP1 PUSH2 0x16B PUSH2 0x24B9 PUSH1 0x6 PUSH2 0x2441 PUSH2 0x1749 JUMP JUMPDEST SWAP5 PUSH2 0x244E PUSH2 0x22A1 DUP3 PUSH2 0x37B JUMP JUMPDEST PUSH2 0x2466 PUSH2 0x245D PUSH1 0x1 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x20 DUP9 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x247E PUSH2 0x2475 PUSH1 0x2 DUP4 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 DUP9 ADD PUSH2 0x11F5 JUMP JUMPDEST PUSH2 0x248D PUSH2 0x22E2 PUSH1 0x3 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH2 0x24A3 PUSH2 0x249C PUSH1 0x4 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x1A19 PUSH2 0x24B2 PUSH1 0x5 DUP4 ADD PUSH2 0x38C JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x2430 JUMP JUMPDEST SWAP1 PUSH2 0x24D2 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24DB DUP2 PUSH2 0x1E82 JUMP JUMPDEST SWAP3 PUSH2 0x24EF PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2500 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 PUSH1 0x1 SWAP3 PUSH2 0x2510 DUP6 PUSH2 0x24C0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x24F3 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH2 0x24C9 JUMP JUMPDEST PUSH2 0x253E PUSH2 0x181 SWAP2 PUSH2 0x2536 PUSH1 0x60 SWAP1 JUMP JUMPDEST POP PUSH1 0x7 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x251E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL ISZERO PUSH2 0x2553 JUMPI JUMP JUMPDEST PUSH4 0xB12D13EB PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x49701FBFBE 0xB4 0xF7 0xDC PUSH31 0xBC50000F265C21CE8C69B5F993ADF3A3D62D4411026D64736F6C6343000814 STOP CALLER ","sourceMap":"1022:13785:20:-:0;;;;;;;;;-1:-1:-1;1022:13785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1022:13785:20;;;;;;;;;:::i;3596:31::-;;;;;1022:13785;;;3596:31;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;1022:13785;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;1022:13785:20;;;;;;;;;;;;;;:::i;2817:41::-;;;;;:::i;1022:13785::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1022:13785:20;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;3430:85::-;;;;;;;;;:::i;:::-;1022:13785;;3430:85;;;;;;;;;;:::i;:::-;-1:-1:-1;3430:85:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;1022:13785;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;3317:41::-;;;;;1022:13785;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1022:13785:20;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1022:13785:20;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1392:125::-;1455:62;1474:42;1455:62;:::i;1392:125::-;;;:::i;1022:13785::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;3697:71::-;;;;;;;;;:::i;:::-;1022:13785;;3697:71;;;;;;;;;;:::i;:::-;-1:-1:-1;3697:71:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;1022:13785::-;;;;;;;;-1:-1:-1;;1022:13785:20;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1022:13785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;1022:13785:20;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;1201:85:0:-;1273:6;;;:::i;1063:62::-;;;:::i;:::-;1117:1;;:::i;1022:13785:20:-;;;;;;;;;;;:::i;1824:101:0:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;1022:13785:20:-;;;;:::o;:::-;;;-1:-1:-1;;;1022:13785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:0;1414:68;1422:7;;:::i;:::-;:23;;719:10:8;1422:23:0;:::i;1433:12::-;1422:23;:::i;:::-;;;:::i;:::-;;1414:68;:::i;1063:62::-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;1022:13785:20:-;;;;:::o;:::-;;;-1:-1:-1;;;1022:13785:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;1022:13785:20;;;;;;;2074:198:0;2256:8;2074:198;2154:73;2162:22;2174:10;2182:1;2174:10;:::i;2162:22::-;;;;:::i;:::-;;;2154:73;:::i;2074:198::-;;;;:::i;1022:13785:20:-;;-1:-1:-1;;;;;1022:13785:20;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2426:187:0:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;1022:13785:20;;;;2566:40:0;;;;2426:187::o;1022:13785:20:-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1022:13785:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;1022:13785:20;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;1022:13785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1022:13785:20;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1022:13785:20;;;;;;;;;;;;;;;;-1:-1:-1;1022:13785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1022:13785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;1022:13785:20;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;1022:13785:20;;;;;;;;;;;;;;;:::i;:::-;;;:::i;6099:2015::-;;;;;;;;;;;;;;;;;;;;;;;;6569:7;1022:13785;;;6569:7;6647:13;;;;:::i;:::-;:25;;;:::i;:::-;;;;7015:4;7007:13;7015:4;7007:13;:::i;:::-;6647:383;;1022:13785;;;;6647:383;;;;;;;;1022:13785;;;;6647:383;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6629:401;6647:383;-1:-1:-1;6647:383:20;;;6099:2015;6629:401;;:::i;:::-;7067:17;;;:::i;:::-;7160:14;;;:36;:14;;:36;:::i;:::-;7293:28;;:16;:28;:::i;:::-;7537;;;1022:13785;;;;;7537:28;7599:32;;;;1022:13785;;;7340:652;;;:::i;:::-;;;;;;:::i;:::-;;;;1022:13785;7340:652;;;1022:13785;7340:652;;;1022:13785;;;7340:652;;;1022:13785;;;7340:652;;;1022:13785;7340:652;;;1022:13785;7340:652;;;1022:13785;7340:652;;;1022:13785;7340:652;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;1022:13785;7340:652;;;1022:13785;7293:709;;;:::i;:::-;8044:30;;;;:::i;:::-;;;1022:13785;;;;8044:30;;;;6099:2015;:::o;6647:383::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1022:13785::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1022:13785:20;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;8746:1562;;;;;9016:19;1022:13785;;;9016:19;9122:29;;;;:::i;:::-;:52;;;:::i;:::-;;;:176;;1022:13785;;;;9122:176;;1022:13785;;9122:176;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;9122:176:20;;;8746:1562;-1:-1:-1;9377:47:20;9407:16;9377:24;9407:16;;:::i;:::-;9377:47;;;:::i;:::-;9928:60;9568:350;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;1022:13785;;9568:350;;;;;;1022:13785;;9568:350;;;;;;1022:13785;;9568:350;;;;;;1022:13785;;9568:350;9928:42;:37;9954:10;9928:25;:37;:::i;:42::-;:60;:::i;:::-;10030:237;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;1022:13785;;;;10030:237;;;;;;:::i;:::-;;;;8746:1562;:::o;9122:176::-;;;;;;;;;;;;;;;:::i;:::-;;;;;1022:13785;;;;;;;;;;;;;;-1:-1:-1;1022:13785:20;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;10517:142::-;10625:27;:18;:27;10517:142;10591:15;1022:13785;;;10591:15;10625:8;;:18;:::i;:::-;:27;;:::i;10851:129::-;10949:24;:18;:24;10851:129;10923:7;1022:13785;;;10949:18;:24;;:::i;1063:62:0:-;;1117:1;1063:62;;;;:::i;:::-;1117:1;:::i;1022:13785:20:-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;11232:427::-;;;11361:8;:18;11353:32;11361:24;;:18;;;;:::i;11353:32::-;;;11349:114;;11477:35;;;:::i;:::-;;;;:::i;:::-;;11473:104;;11608:44;11587:18;11608:44;;11587:65;11608:44;;;;;:::i;:::-;;;;:::i;:::-;;;;1022:13785;;11608:44;11587:18;:::i;:::-;:65;:::i;11473:104::-;11535:31;;;1022:13785;;;;11535:31;-1:-1:-1;;;11535:31:20;;;;;;;;;:::i;11349:114::-;11427:24;;:18;;;;:::i;:24::-;11408:44;;;1022:13785;;;;11408:44;-1:-1:-1;;;11408:44:20;;;;;;;;;:::i;11232:427::-;;;;;;:::i;1224:41::-;1259:6;;;:::i;11751:1066::-;11816:13;11824:4;11816:13;:::i;:::-;:21;11881:23;11872:8;:33;11881:23;11872:8;:33;:::i;:::-;:39;;;;;:::i;:::-;11949:18;;11940:28;;;;;:::i;:::-;:34;;;;:::i;:::-;12014:20;;;12005:30;;;;;;:::i;:::-;:36;;;;:::i;:::-;12076:34;;;;;;:::i;:::-;:40;;;;:::i;:::-;12152:34;;;;;:::i;:::-;12191:7;;;:::i;:::-;12152:47;;;;;;:::i;:::-;12229:29;;;;;:::i;:::-;:42;;;;:::i;:::-;12303:31;;;;;:::i;:::-;:44;;;;:::i;:::-;12383:35;;;;:::i;:::-;:48;;;;:::i;:::-;12471:33;;;;;;:::i;:::-;:42;;;;:::i;:::-;12442:88;;;:::i;:::-;;;;;:::i;:::-;12569:28;;;;:::i;:::-;:37;;;;:::i;:::-;12540:78;;;:::i;:::-;;;;;:::i;:::-;12657:30;;;;:::i;:::-;:39;;;;:::i;:::-;12628:82;;;:::i;:::-;;;;;:::i;:::-;12749:34;;;;:::i;:::-;:43;;;;:::i;:::-;12720:90;;;:::i;:::-;;;;;:::i;1022:13785::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;3465:96:10:-;3549:5;;3465:96;3549:5;:::i;1022:13785:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;3850:96:10:-;3934:5;;3850:96;3934:5;:::i;1022:13785:20:-;-1:-1:-1;;;;;1022:13785:20;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1022:13785:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1022:13785:20;;;;;;;;;;;;-1:-1:-1;;;1022:13785:20;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;1022:13785:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;12991:835::-;;13132:44;:42;:30;:44;12991:835;13132:30;:::i;:::-;:42;:::i;:::-;;:44;;1022:13785;;;;13132:44;;;;1022:13785;;;;13132:44;;;;;;;;;;;;;;-1:-1:-1;;;;13132:44:20;;12991:835;13092:84;;;;;:::i;:::-;;;:::i;:::-;13209:17;:51;;:23;:17;;:::i;:23::-;;:51;:23;:51;;1022:13785;;;;13209:51;;;;;;1022:13785;;;;13209:51;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;13209:51:20;;;12991:835;13291:14;13275:30;;13291:14;;;:::i;13275:30::-;;;13271:549;;12991:835;;;:::o;13271:549::-;13329:64;;:28;:20;;;:::i;:28::-;;:64;;1022:13785;;;;13329:64;;;;1022:13785;;;;13329:64;;;;;;;;;;;;;:::i;:::-;;;;;;;;;13321:92;13329:64;-1:-1:-1;13329:64:20;;;13271:549;13321:92;;:::i;:::-;13452:16;;13466:1;13452:16;:::i;:::-;;:::i;:::-;13487:1;13482:22;13487:1;13482:22;;;;;:::i;:::-;;;:::i;:::-;;:::i;:::-;13528;:24;;1022:13785;;;;13528:24;;1022:13785;;;;13528:24;;;;;;;;;;;;;;13518:34;13528:24;;;;;13271:549;13523:1;13518:34;;13523:1;13518:34;:::i;:::-;13567:71;13757:4;13749:13;13757:4;13749:13;:::i;:::-;13780:15;13567:242;;;;;;;;;;;;;;;;;1022:13785;;;;13567:242;;;;;;;;1022:13785;;;;13567:242;;;;;;;:::i;:::-;;;;;;;;;;;12991:835;;:::o;13567:242::-;;;;;;-1:-1:-1;13567:242:20;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;13528:24;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;13329:64;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;13209:51;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;13132:44;13092:84;13132:44;;13092:84;13132:44;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;1063:62:0;1117:1;1063:62;;;:::i;:::-;14089:32:20;14008:120;14089:32;;:::i;14008:120::-;;;;:::i;1022:13785::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;14298:159::-;14424:26;14417:33;14298:159;14376:29;1022:13785;;;14376:29;14424:16;;:26;:::i;:::-;14417:33;:::i;1022:13785::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;14601:204::-;14763:35;14756:42;14601:204;14706:34;1022:13785;;;14706:34;14763:25;;:35;:::i;:::-;14756:42;:::i;280:571:25:-;408:437;280:571;;;;;408:437;;;;;280:571::o;408:437::-;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1924600","executionCost":"infinite","totalCost":"infinite"},"external":{"UNISWAP_V2_ROUTER()":"infinite","claimableAirdropCreatedBy(address,uint256)":"infinite","createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)":"infinite","createdClaimableAirdrops(uint256)":"infinite","getClaimableAirdropsForAddress(address)":"infinite","getLaunchedTokensForAddress(address)":"infinite","getPayoutAddress(uint8)":"infinite","getPayoutShare(uint8)":"infinite","launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256)":"infinite","launchedTokens(uint256)":"infinite","owner()":"infinite","quoteThreshold()":"infinite","renounceOwnership()":"infinite","setQuoteThreshold(uint256)":"infinite","swapERC20s(address,address,uint256)":"infinite","tokensLaunchedBy(address,uint256)":"infinite","transferOwnership(address)":"infinite","updatePayout(uint8,address,uint256)":"infinite","withdraw()":"infinite"}},"methodIdentifiers":{"UNISWAP_V2_ROUTER()":"a82ed9ec","claimableAirdropCreatedBy(address,uint256)":"44ea3a66","createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)":"9b1de1ff","createdClaimableAirdrops(uint256)":"4d9429e7","getClaimableAirdropsForAddress(address)":"a7bc6a17","getLaunchedTokensForAddress(address)":"f14aade1","getPayoutAddress(uint8)":"dc8ed636","getPayoutShare(uint8)":"d0b516c7","launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256)":"646eedab","launchedTokens(uint256)":"10f2b141","owner()":"8da5cb5b","quoteThreshold()":"3d9cce42","renounceOwnership()":"715018a6","setQuoteThreshold(uint256)":"43584bca","swapERC20s(address,address,uint256)":"b579772f","tokensLaunchedBy(address,uint256)":"b5611107","transferOwnership(address)":"f2fde38b","updatePayout(uint8,address,uint256)":"fca928b2","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20FactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"airdropClaimableERC20FactoryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum CoinGenie.PayoutCategory\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"InvalidPayoutCategory\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxShare\",\"type\":\"uint256\"}],\"name\":\"ShareToHigh\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"airdropAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"airdropTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"airdropAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxWalletClaimCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"ClaimableAirdropCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"ERC20Launched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNISWAP_V2_ROUTER\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimableAirdropCreatedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"airdropAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"airdropTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"airdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWalletClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"airdropTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"airdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWalletClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"createClaimableAirdrop\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dropAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"createdClaimableAirdrops\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getClaimableAirdropsForAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"airdropAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"airdropTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"airdropAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWalletClaimCount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct CoinGenie.ClaimableAirdrop[]\",\"name\":\"airdrops\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getLaunchedTokensForAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBurnable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeflationary\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"autoWithdrawThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTaxSwap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"affiliateFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct CoinGenie.LaunchedToken[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CoinGenie.PayoutCategory\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"getPayoutAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CoinGenie.PayoutCategory\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"getPayoutShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isBurnable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPausable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeflationary\",\"type\":\"bool\"}],\"internalType\":\"struct Common.TokenConfigProperties\",\"name\":\"customConfigProps\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"autoWithdrawThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTaxSwap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"affiliateFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnPercentage\",\"type\":\"uint256\"}],\"name\":\"launchToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"launchedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quoteThreshold\",\"type\":\"uint256\"}],\"name\":\"setQuoteThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapERC20s\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensLaunchedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isBurnable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeflationary\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"autoWithdrawThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTaxSwap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"affiliateFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnPercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CoinGenie.PayoutCategory\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"updatePayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"@neuro_0x\",\"details\":\"The orchestrator contract for the CoinGenie ecosystem.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"airdropClaimableERC20FactoryAddress\":\"The address of the AirdropERC20ClaimableFactory contract\",\"erc20FactoryAddress\":\"The address of the ERC20Factory contract\"}},\"createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)\":{\"params\":{\"airdropAmount\":\"The amount of tokens available for airdrop\",\"airdropTokenAddress\":\"The address of the airdrop token\",\"expirationTimestamp\":\"The expiration timestamp of the airdrop\",\"maxWalletClaimCount\":\"The maximum number of tokens that can be claimed by a wallet if not in the whitelist\",\"merkleRoot\":\"The merkle root of the whitelist\",\"tokenOwner\":\"The address of the token owner\"},\"returns\":{\"dropAddress\":\"The address of the newly deployed airdrop contract\"}},\"getClaimableAirdropsForAddress(address)\":{\"params\":{\"_address\":\"The address to get the airdrops for\"}},\"getLaunchedTokensForAddress(address)\":{\"params\":{\"_address\":\"The address to get the tokens for\"},\"returns\":{\"tokens\":\"The array of launched tokens\"}},\"getPayoutAddress(uint8)\":{\"params\":{\"category\":\"The category to get the payout address for\"},\"returns\":{\"_0\":\"receiver The address to receive the payout\"}},\"getPayoutShare(uint8)\":{\"params\":{\"category\":\"The category to get the payout share for\"},\"returns\":{\"_0\":\"share The share of the payout\"}},\"launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256)\":{\"details\":\"This function deploys a new token contract and initializes it with provided parameters.\",\"params\":{\"affiliateFeeRecipient\":\"The address to receive the affiliate fee\",\"autoWithdrawThreshold\":\"The threshold for the amount of tokens to swap for ETH\",\"burnPercentage\":\"The percent in basis points to burn on every tx if this token is deflationary\",\"customConfigProps\":\"A struct of configuration booleans for the token\",\"feePercentage\":\"The percent in basis points to use as a tax\",\"feeRecipient\":\"The address to receive the tax fees\",\"initialSupply\":\"The initial supply of the token\",\"maxPerWallet\":\"The maximum amount of tokens allowed to be held by one wallet\",\"maxTaxSwap\":\"The maximum amount of tokens allowed to be swapped at once by manual or autoswap\",\"name\":\"The name of the token\",\"symbol\":\"The symbol of the token\",\"tokenOwner\":\"The address that will be the owner of the token\"},\"returns\":{\"_0\":\"_tokenAddress The address of the newly deployed token contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setQuoteThreshold(uint256)\":{\"params\":{\"_quoteThreshold\":\"The threshold for the amount of tokens to swap for ETH\"}},\"swapERC20s(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to swap\",\"tokenAddress\":\"The address of the token to swap\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePayout(uint8,address,uint256)\":{\"params\":{\"category\":\"The category to set the payout address for\",\"receiver\":\"The address to receive the payout\",\"share\":\"The share of the payout\"}}},\"stateVariables\":{\"UNISWAP_V2_ROUTER\":{\"details\":\"The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps\"},\"_airdropClaimableERC20Factory\":{\"details\":\"Stores the address of the AirdropERC20Claimable contract.\"},\"_erc20Factory\":{\"details\":\"Stores the address of the ERC20Factory contract.\"},\"_payouts\":{\"details\":\"A mapping of payout categories to payouts.\"},\"claimableAirdropCreatedBy\":{\"details\":\"A mapping of airdrops launched by a specific owner.\"},\"createdClaimableAirdrops\":{\"details\":\"Stores the addresses of all airdrops launched by the contract.\"},\"launchedTokens\":{\"details\":\"Stores the addresses of all tokens launched by the contract.\"},\"quoteThreshold\":{\"details\":\"The threshold for the amount of tokens to swap for ETH\"},\"tokensLaunchedBy\":{\"details\":\"A mapping of tokens launched by a specific owner.\"}},\"title\":\"CoinGenie\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Construct the CoinGenie contract.\"},\"createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)\":{\"notice\":\"Launch a new instance of the CoinGenieAirdropClaimable Contract.\"},\"getClaimableAirdropsForAddress(address)\":{\"notice\":\"Get the airdrops created by a specific address.\"},\"getLaunchedTokensForAddress(address)\":{\"notice\":\"Get the launched tokens.\"},\"getPayoutAddress(uint8)\":{\"notice\":\"Get the payout address for a specific category.\"},\"getPayoutShare(uint8)\":{\"notice\":\"Get the payout share for a specific category.\"},\"launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256)\":{\"notice\":\"Launch a new instance of the ERC20.\"},\"setQuoteThreshold(uint256)\":{\"notice\":\"Set the threshold for the amount of tokens to swap for ETH.\"},\"swapERC20s(address,address,uint256)\":{\"notice\":\"Swap ERC20 tokens for ETH.\"},\"updatePayout(uint8,address,uint256)\":{\"notice\":\"Set the payout address for a specific category.\"},\"withdraw()\":{\"notice\":\"Withdraw the contract balance to the payout addresses.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CoinGenie.sol\":\"CoinGenie\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../security/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract unpausable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(!paused(), \\\"ERC20Pausable: token transfer while paused\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Tree proofs.\\n *\\n * The tree and the proofs can be generated using our\\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\\n * You will find a quickstart guide in the readme.\\n *\\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\\n * hashing, or use a hash function other than keccak256 for hashing leaves.\\n * This is because the concatenation of a sorted pair of internal nodes in\\n * the merkle tree could be reinterpreted as a leaf value.\\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\\n * against this attack out of the box.\\n */\\nlibrary MerkleProof {\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {verify}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProofCalldata(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     *\\n     * _Available since v4.4._\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processProof}\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerify(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProof(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {multiProofVerify}\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function multiProofVerifyCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\\n     * respectively.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProof(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proofLen - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            require(proofPos == proofLen, \\\"MerkleProof: invalid multiproof\\\");\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processMultiProof}.\\n     *\\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\\n     *\\n     * _Available since v4.7._\\n     */\\n    function processMultiProofCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        require(leavesLen + proofLen - 1 == totalHashes, \\\"MerkleProof: invalid multiproof\\\");\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            require(proofPos == proofLen, \\\"MerkleProof: invalid multiproof\\\");\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\\n    }\\n\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\"},\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\"},\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"src/AirdropERC20Claimable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\\\";\\nimport { MerkleProof } from \\\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\\\";\\n\\n/**\\n * @title AirdropERC20Claimable\\n * @author @neuro_0x\\n * @dev A contract for airdropping ERC20 tokens to specific recipients based on Merkle proofs.\\n */\\n\\ncontract AirdropERC20Claimable {\\n    error InvalidTransferAmount();\\n    error AirdropExpired();\\n    error AlreadyClaimedMax();\\n    error TransferFailed();\\n    error InvalidAirdropParameters(address tokenOwner, address airdropTokenAddress, uint256 airdropAmount);\\n\\n    /// @dev The address of the token to be airdropped.\\n    address public airdropTokenAddress;\\n\\n    /// @dev The owner of the token to be airdropped.\\n    address public tokenOwner;\\n\\n    /// @dev The quantity of tokens available for airdrop.\\n    uint256 public availableAmount;\\n\\n    /// @dev Expiration timestamp of the airdrop.\\n    uint256 public expirationTimestamp;\\n\\n    /// @dev Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\\n    uint256 public maxWalletClaimCount;\\n\\n    /// @dev Merkle root of the whitelist.\\n    bytes32 public merkleRoot;\\n\\n    /// @dev Mapping from address => total number of tokens a wallet has claimed.\\n    mapping(address claimer => uint256 amount) public totalClaimedByWallet;\\n\\n    /// @dev Emitted when tokens are claimed\\n    event TokensClaimed(address indexed claimer, uint256 quantityClaimed);\\n\\n    /**\\n     * @dev Initializes the contract.\\n     * @param _tokenOwner The owner of the token to be airdropped.\\n     * @param _airdropTokenAddress The address of the token to be airdropped.\\n     * @param _airdropAmount The quantity of tokens available for airdrop.\\n     * @param _expirationTimestamp Expiration timestamp of the airdrop.\\n     * @param _maxWalletClaimCount Maximum number of tokens that can be claimed by a wallet if not in the whitelist.\\n     * @param _merkleRoot Merkle root of the whitelist.\\n     */\\n    constructor(\\n        address _tokenOwner,\\n        address _airdropTokenAddress,\\n        uint256 _airdropAmount,\\n        uint256 _expirationTimestamp,\\n        uint256 _maxWalletClaimCount,\\n        bytes32 _merkleRoot\\n    ) {\\n        if (_tokenOwner == address(0) || _airdropTokenAddress == address(0) || _airdropAmount == 0) {\\n            revert InvalidAirdropParameters(_tokenOwner, _airdropTokenAddress, _airdropAmount);\\n        }\\n\\n        tokenOwner = _tokenOwner;\\n        airdropTokenAddress = _airdropTokenAddress;\\n        availableAmount = _airdropAmount;\\n        expirationTimestamp = _expirationTimestamp;\\n        maxWalletClaimCount = _maxWalletClaimCount;\\n        merkleRoot = _merkleRoot;\\n    }\\n\\n    /**\\n     * @dev Claims tokens from the airdrop.\\n     * @param amount The quantity of tokens to claim.\\n     * @param proofs Claims proofs.\\n     * @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet.\\n     */\\n    function claim(uint256 amount, bytes32[] calldata proofs, uint256 proofMaxQuantityForWallet) external {\\n        // Verify the claim\\n        verifyClaim(msg.sender, amount, proofs, proofMaxQuantityForWallet);\\n        // Transfer the claimed tokens\\n        _transferClaimedTokens(msg.sender, amount);\\n        // Emit the TokensClaimed event\\n        emit TokensClaimed(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Verifies the claim and reverts if the claim is invalid.\\n     * @param claimant The address of the claimer.\\n     * @param amount The quantity of tokens to claim.\\n     * @param proofs Claims proofs.\\n     * @param proofMaxQuantityForWallet The maximum quantity of tokens that can be claimed by a wallet.\\n     */\\n    function verifyClaim(\\n        address claimant,\\n        uint256 amount,\\n        bytes32[] calldata proofs,\\n        uint256 proofMaxQuantityForWallet\\n    )\\n        public\\n        view\\n    {\\n        bool verified;\\n        // Get the proof of the claimer\\n        if (merkleRoot != bytes32(0)) {\\n            verified =\\n                MerkleProof.verify(proofs, merkleRoot, keccak256(abi.encodePacked(claimant, proofMaxQuantityForWallet)));\\n        }\\n\\n        // Check if the wallet has already claimed tokens\\n        uint256 supplyClaimedAlready = totalClaimedByWallet[claimant];\\n\\n        // Check if the claim is valid\\n        if (amount == 0 || amount > availableAmount) {\\n            revert InvalidTransferAmount();\\n        }\\n\\n        // Check if the airdrop has expired\\n        uint256 expTimestamp = expirationTimestamp;\\n        if (expTimestamp != 0 && block.timestamp >= expTimestamp) {\\n            revert AirdropExpired();\\n        }\\n\\n        // Check if the wallet has exceeded the maximum number of tokens that can be claimed\\n        uint256 claimLimitForWallet = verified ? proofMaxQuantityForWallet : maxWalletClaimCount;\\n        if (amount + supplyClaimedAlready > claimLimitForWallet) {\\n            revert AlreadyClaimedMax();\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers the claimed tokens to the recipient.\\n     * @param recipient The recipient of the tokens.\\n     * @param amount The quantity of tokens to claim.\\n     */\\n    function _transferClaimedTokens(address recipient, uint256 amount) private {\\n        // if transfer claimed tokens is called when `to != msg.sender`, it'd use msg.sender's limits.\\n        // behavior would be similar to `msg.sender` mint for itself, then transfer to `_recipient`.\\n        totalClaimedByWallet[msg.sender] += amount;\\n        availableAmount -= amount;\\n\\n        IERC20 airdropToken = IERC20(airdropTokenAddress);\\n        if (!airdropToken.transfer(recipient, amount)) {\\n            revert TransferFailed();\\n        }\\n        require(airdropToken.transferFrom(tokenOwner, recipient, amount), \\\"Transfer failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x860d790cae509e04250b2c8fa8013f08d8004081a36a84a5cbbec3f6ce51c477\",\"license\":\"GPL-3.0\"},\"src/AirdropERC20ClaimableFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport { AirdropERC20Claimable } from \\\"./AirdropERC20Claimable.sol\\\";\\n\\n/**\\n * @title AirdropERC20ClaimableFactory\\n * @author @neuro_0x\\n * @notice A factory library to deploy instances of the AirdropERC20Claimable contract.\\n */\\ncontract AirdropERC20ClaimableFactory {\\n    /**\\n     * @dev Launch a new instance of the CoinGenieAirdropClaimable Contract.\\n     * @param tokenOwner The address of the token owner\\n     * @param airdropTokenAddress The address of the airdrop token\\n     * @param airdropAmount The amount of tokens available for airdrop\\n     * @param expirationTimestamp The expiration timestamp of the airdrop\\n     * @param maxWalletClaimCount The maximum number of tokens that can be claimed by a wallet if not in the whitelist\\n     * @param merkleRoot The merkle root of the whitelist\\n     *\\n     * @return newAirdrop The address of the newly deployed airdrop contract\\n     */\\n    function createClaimableAirdrop(\\n        address tokenOwner,\\n        address airdropTokenAddress,\\n        uint256 airdropAmount,\\n        uint256 expirationTimestamp,\\n        uint256 maxWalletClaimCount,\\n        bytes32 merkleRoot\\n    )\\n        external\\n        returns (AirdropERC20Claimable newAirdrop)\\n    {\\n        AirdropERC20Claimable claimableAirdrop = new AirdropERC20Claimable(\\n            tokenOwner,\\n            airdropTokenAddress,\\n            airdropAmount,\\n            expirationTimestamp,\\n            maxWalletClaimCount,\\n            merkleRoot\\n        );\\n\\n        return claimableAirdrop;\\n    }\\n}\\n\",\"keccak256\":\"0xb2b60f42d71e22e5944417291bb5e6c2311105e82a7ecdad7e4f215d4f4e78fe\",\"license\":\"GPL-3.0\"},\"src/CoinGenie.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\nimport { ReentrancyGuard } from \\\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\\\";\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport { SafeMath } from \\\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\\\";\\n\\nimport { IUniswapV2Pair } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\\\";\\nimport { IUniswapV2Router02 } from \\\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\n\\nimport { ERC20Factory } from \\\"./ERC20Factory.sol\\\";\\nimport { AirdropERC20Claimable } from \\\"./AirdropERC20Claimable.sol\\\";\\nimport { AirdropERC20ClaimableFactory } from \\\"./AirdropERC20ClaimableFactory.sol\\\";\\nimport { Common } from \\\"./lib/Common.sol\\\";\\nimport { SafeTransfer } from \\\"./lib/SafeTransfer.sol\\\";\\n\\n/**\\n * @title CoinGenie\\n * @author @neuro_0x\\n * @dev The orchestrator contract for the CoinGenie ecosystem.\\n */\\ncontract CoinGenie is Ownable, ReentrancyGuard {\\n    using SafeMath for uint256;\\n\\n    error ShareToHigh(uint256 share, uint256 maxShare);\\n\\n    error InvalidPayoutCategory(PayoutCategory category);\\n\\n    uint256 private constant MAX_BPS = 10_000;\\n\\n    /// @dev The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps\\n    IUniswapV2Router02 public constant UNISWAP_V2_ROUTER =\\n        IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\n\\n    struct LaunchedToken {\\n        address tokenAddress;\\n        string name;\\n        string symbol;\\n        uint256 initialSupply;\\n        bool isBurnable;\\n        bool isDeflationary;\\n        uint256 maxPerWallet;\\n        uint256 autoWithdrawThreshold;\\n        uint256 maxTaxSwap;\\n        address affiliateFeeRecipient;\\n        address feeRecipient;\\n        uint256 feePercentage;\\n        uint256 burnPercentage;\\n    }\\n\\n    struct ClaimableAirdrop {\\n        address airdropAddress;\\n        address tokenOwner;\\n        address airdropTokenAddress;\\n        uint256 airdropAmount;\\n        uint256 expirationTimestamp;\\n        uint256 maxWalletClaimCount;\\n        bytes32 merkleRoot;\\n    }\\n\\n    enum PayoutCategory {\\n        Treasury,\\n        Dev,\\n        Legal,\\n        Marketing\\n    }\\n\\n    struct Payout {\\n        address payable receiver;\\n        uint256 share;\\n    }\\n\\n    event ERC20Launched(address indexed newTokenAddress);\\n\\n    event ClaimableAirdropCreated(\\n        address indexed airdropAddress,\\n        address tokenOwner,\\n        address indexed airdropTokenAddress,\\n        uint256 indexed airdropAmount,\\n        uint256 expirationTimestamp,\\n        uint256 maxWalletClaimCount,\\n        bytes32 merkleRoot\\n    );\\n\\n    /// @dev The threshold for the amount of tokens to swap for ETH\\n    uint256 public quoteThreshold = 0.1 ether;\\n\\n    /// @dev A mapping of payout categories to payouts.\\n    mapping(PayoutCategory category => Payout payout) private _payouts;\\n\\n    /// @dev Stores the address of the ERC20Factory contract.\\n    ERC20Factory private _erc20Factory;\\n\\n    /// @dev Stores the address of the AirdropERC20Claimable contract.\\n    AirdropERC20ClaimableFactory private _airdropClaimableERC20Factory;\\n\\n    /// @dev Stores the addresses of all airdrops launched by the contract.\\n    address[] public createdClaimableAirdrops;\\n\\n    /// @dev A mapping of airdrops launched by a specific owner.\\n    mapping(address user => ClaimableAirdrop[] airdrops) public claimableAirdropCreatedBy;\\n\\n    /// @dev Stores the addresses of all tokens launched by the contract.\\n    address[] public launchedTokens;\\n\\n    /// @dev A mapping of tokens launched by a specific owner.\\n    mapping(address user => LaunchedToken[] tokens) public tokensLaunchedBy;\\n\\n    /**\\n     * @notice Construct the CoinGenie contract.\\n     * @param erc20FactoryAddress The address of the ERC20Factory contract\\n     * @param airdropClaimableERC20FactoryAddress The address of the AirdropERC20ClaimableFactory contract\\n     */\\n    constructor(address erc20FactoryAddress, address airdropClaimableERC20FactoryAddress) {\\n        _erc20Factory = ERC20Factory(erc20FactoryAddress);\\n        _airdropClaimableERC20Factory = AirdropERC20ClaimableFactory(airdropClaimableERC20FactoryAddress);\\n\\n        _payouts[PayoutCategory.Treasury] =\\n            Payout({ receiver: payable(0xBe79b43B1505290DFE04294a433963dbeea736BB), share: 2000 });\\n        _payouts[PayoutCategory.Dev] =\\n            Payout({ receiver: payable(0x633Bf832Dc39C0025a7aEaa165ec91ACF02063D5), share: 5000 });\\n        _payouts[PayoutCategory.Legal] =\\n            Payout({ receiver: payable(0xbb6712A513C2d7F3E17A40d095a773c5d98574B2), share: 1500 });\\n        _payouts[PayoutCategory.Marketing] =\\n            Payout({ receiver: payable(0xF14A30C09897d2C7481c5907D01Ec58Ec09555af), share: 1500 });\\n    }\\n\\n    // solhint-disable-next-line no-empty-blocks\\n    receive() external payable { }\\n\\n    /**\\n     * @notice Launch a new instance of the ERC20.\\n     * @dev This function deploys a new token contract and initializes it with provided parameters.\\n     * @param name The name of the token\\n     * @param symbol The symbol of the token\\n     * @param initialSupply The initial supply of the token\\n     * @param tokenOwner The address that will be the owner of the token\\n     * @param customConfigProps A struct of configuration booleans for the token\\n     * @param maxPerWallet The maximum amount of tokens allowed to be held by one wallet\\n     * @param autoWithdrawThreshold The threshold for the amount of tokens to swap for ETH\\n     * @param maxTaxSwap The maximum amount of tokens allowed to be swapped at once by manual or autoswap\\n     * @param affiliateFeeRecipient The address to receive the affiliate fee\\n     * @param feeRecipient The address to receive the tax fees\\n     * @param feePercentage The percent in basis points to use as a tax\\n     * @param burnPercentage The percent in basis points to burn on every tx if this token is deflationary\\n     *\\n     * @return _tokenAddress The address of the newly deployed token contract\\n     */\\n    function launchToken(\\n        string memory name,\\n        string memory symbol,\\n        uint256 initialSupply,\\n        address tokenOwner,\\n        Common.TokenConfigProperties memory customConfigProps,\\n        uint256 maxPerWallet,\\n        uint256 autoWithdrawThreshold,\\n        uint256 maxTaxSwap,\\n        address affiliateFeeRecipient,\\n        address feeRecipient,\\n        uint256 feePercentage,\\n        uint256 burnPercentage\\n    )\\n        external\\n        returns (address)\\n    {\\n        // Deploy the token contract\\n        IERC20 newToken = _erc20Factory.launchToken(\\n            name,\\n            symbol,\\n            initialSupply,\\n            tokenOwner,\\n            customConfigProps,\\n            maxPerWallet,\\n            autoWithdrawThreshold,\\n            maxTaxSwap,\\n            affiliateFeeRecipient,\\n            feeRecipient,\\n            feePercentage,\\n            burnPercentage,\\n            address(this)\\n        );\\n\\n        address newTokenAddress = address(newToken);\\n\\n        // Add the token address to the array of launched tokens\\n        launchedTokens.push(newTokenAddress);\\n        // Add the token address to the mapping of tokens launched by a specific owner\\n        tokensLaunchedBy[tokenOwner].push(\\n            LaunchedToken({\\n                tokenAddress: newTokenAddress,\\n                name: name,\\n                symbol: symbol,\\n                initialSupply: initialSupply,\\n                isBurnable: customConfigProps.isBurnable,\\n                isDeflationary: customConfigProps.isDeflationary,\\n                maxPerWallet: maxPerWallet,\\n                autoWithdrawThreshold: autoWithdrawThreshold,\\n                maxTaxSwap: maxTaxSwap,\\n                affiliateFeeRecipient: affiliateFeeRecipient,\\n                feeRecipient: feeRecipient,\\n                feePercentage: feePercentage,\\n                burnPercentage: burnPercentage\\n            })\\n        );\\n\\n        // Emit the event\\n        emit ERC20Launched(newTokenAddress);\\n\\n        return newTokenAddress;\\n    }\\n\\n    /**\\n     * @notice Launch a new instance of the CoinGenieAirdropClaimable Contract.\\n     * @param tokenOwner The address of the token owner\\n     * @param airdropTokenAddress The address of the airdrop token\\n     * @param airdropAmount The amount of tokens available for airdrop\\n     * @param expirationTimestamp The expiration timestamp of the airdrop\\n     * @param maxWalletClaimCount The maximum number of tokens that can be claimed by a wallet if not in the whitelist\\n     * @param merkleRoot The merkle root of the whitelist\\n     *\\n     * @return dropAddress The address of the newly deployed airdrop contract\\n     */\\n    function createClaimableAirdrop(\\n        address tokenOwner,\\n        address airdropTokenAddress,\\n        uint256 airdropAmount,\\n        uint256 expirationTimestamp,\\n        uint256 maxWalletClaimCount,\\n        bytes32 merkleRoot\\n    )\\n        external\\n        returns (address dropAddress)\\n    {\\n        // Deploy the airdrop contract\\n        AirdropERC20Claimable airdrop = _airdropClaimableERC20Factory.createClaimableAirdrop(\\n            tokenOwner, airdropTokenAddress, airdropAmount, expirationTimestamp, maxWalletClaimCount, merkleRoot\\n        );\\n\\n        // Add the airdrop address to the array of created airdrops\\n        createdClaimableAirdrops.push(address(airdrop));\\n\\n        // Add the airdrop details to the mapping of airdrops created by a specific owner\\n        ClaimableAirdrop memory claimableAirdrop = ClaimableAirdrop({\\n            airdropAddress: address(airdrop),\\n            tokenOwner: tokenOwner,\\n            airdropTokenAddress: airdropTokenAddress,\\n            airdropAmount: airdropAmount,\\n            expirationTimestamp: expirationTimestamp,\\n            maxWalletClaimCount: maxWalletClaimCount,\\n            merkleRoot: merkleRoot\\n        });\\n        claimableAirdropCreatedBy[msg.sender].push(claimableAirdrop);\\n\\n        // Emit the event\\n        emit ClaimableAirdropCreated(\\n            address(airdrop),\\n            tokenOwner,\\n            airdropTokenAddress,\\n            airdropAmount,\\n            expirationTimestamp,\\n            maxWalletClaimCount,\\n            merkleRoot\\n        );\\n\\n        return address(airdrop);\\n    }\\n\\n    /**\\n     * @notice Get the payout address for a specific category.\\n     * @param category The category to get the payout address for\\n     * @return receiver The address to receive the payout\\n     */\\n    function getPayoutAddress(PayoutCategory category) external view returns (address payable) {\\n        return _payouts[category].receiver;\\n    }\\n\\n    /**\\n     * @notice Get the payout share for a specific category.\\n     * @param category The category to get the payout share for\\n     * @return share The share of the payout\\n     */\\n    function getPayoutShare(PayoutCategory category) external view returns (uint256) {\\n        return _payouts[category].share;\\n    }\\n\\n    /**\\n     * @notice Set the payout address for a specific category.\\n     * @param category The category to set the payout address for\\n     * @param receiver The address to receive the payout\\n     * @param share The share of the payout\\n     */\\n    function updatePayout(PayoutCategory category, address payable receiver, uint256 share) external onlyOwner {\\n        if (share > _payouts[category].share) {\\n            revert ShareToHigh(share, _payouts[category].share);\\n        }\\n\\n        if (category > PayoutCategory.Marketing) {\\n            revert InvalidPayoutCategory(category);\\n        }\\n\\n        _payouts[category] = Payout({ receiver: receiver, share: share });\\n    }\\n\\n    /**\\n     * @notice Withdraw the contract balance to the payout addresses.\\n     */\\n    function withdraw() external {\\n        uint256 contractBalance = address(this).balance;\\n\\n        uint256 treasuryShare = _payouts[PayoutCategory.Treasury].share;\\n        uint256 devShare = _payouts[PayoutCategory.Dev].share;\\n        uint256 legalShare = _payouts[PayoutCategory.Legal].share;\\n        uint256 marketingShare = _payouts[PayoutCategory.Marketing].share;\\n\\n        uint256 treasuryAmount = contractBalance.mul(treasuryShare).div(MAX_BPS);\\n        uint256 devAmount = contractBalance.mul(devShare).div(MAX_BPS);\\n        uint256 legalAmount = contractBalance.mul(legalShare).div(MAX_BPS);\\n        uint256 marketingAmount = contractBalance.mul(marketingShare).div(MAX_BPS);\\n\\n        SafeTransfer.safeTransferETH(_payouts[PayoutCategory.Treasury].receiver, treasuryAmount);\\n        SafeTransfer.safeTransferETH(_payouts[PayoutCategory.Dev].receiver, devAmount);\\n        SafeTransfer.safeTransferETH(_payouts[PayoutCategory.Legal].receiver, legalAmount);\\n        SafeTransfer.safeTransferETH(_payouts[PayoutCategory.Marketing].receiver, marketingAmount);\\n    }\\n\\n    /**\\n     * @notice Swap ERC20 tokens for ETH.\\n     * @param tokenAddress The address of the token to swap\\n     * @param amount The amount of tokens to swap\\n     */\\n    function swapERC20s(address tokenAddress, address lpTokenAddress, uint256 amount) external {\\n        (uint256 reserve0, uint256 reserve1,) = IUniswapV2Pair(lpTokenAddress).getReserves();\\n        uint256 quotedAmount = UNISWAP_V2_ROUTER.quote(amount, reserve0, reserve1);\\n\\n        if (quotedAmount >= quoteThreshold) {\\n            require(IERC20(tokenAddress).approve(address(UNISWAP_V2_ROUTER), amount), \\\"Approval failed\\\");\\n\\n            address[] memory path = new address[](2);\\n            path[0] = tokenAddress;\\n            path[1] = UNISWAP_V2_ROUTER.WETH();\\n\\n            UNISWAP_V2_ROUTER.swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n                amount,\\n                0, // accept any amount of ETH\\n                path,\\n                address(this),\\n                block.timestamp\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Set the threshold for the amount of tokens to swap for ETH.\\n     * @param _quoteThreshold The threshold for the amount of tokens to swap for ETH\\n     */\\n    function setQuoteThreshold(uint256 _quoteThreshold) external onlyOwner {\\n        quoteThreshold = _quoteThreshold;\\n    }\\n\\n    /**\\n     * @notice Get the launched tokens.\\n     * @param _address The address to get the tokens for\\n     * @return tokens The array of launched tokens\\n     */\\n    function getLaunchedTokensForAddress(address _address) external view returns (LaunchedToken[] memory tokens) {\\n        return tokensLaunchedBy[_address];\\n    }\\n\\n    /**\\n     * @notice Get the airdrops created by a specific address.\\n     * @param _address The address to get the airdrops for\\n     */\\n    function getClaimableAirdropsForAddress(address _address)\\n        external\\n        view\\n        returns (ClaimableAirdrop[] memory airdrops)\\n    {\\n        return claimableAirdropCreatedBy[_address];\\n    }\\n}\\n\",\"keccak256\":\"0xec2129c1e6fb8a08e31727f47f0523e17b3a8a9272ffc2d0498ef8531affbc00\",\"license\":\"GPL-3.0\"},\"src/CoinGenieERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.20;\\n\\nimport { ERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\\\";\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport { Ownable } from \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\nimport { ERC20Burnable } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport { ERC20Pausable } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\\\";\\nimport { ReentrancyGuard } from \\\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\\\";\\nimport { SafeMath } from \\\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\\\";\\n\\nimport { IUniswapV2Pair } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\\\";\\nimport { IUniswapV2Router02 } from \\\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\nimport { IUniswapV2Factory } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\\\";\\n\\nimport { Common } from \\\"./lib/Common.sol\\\";\\nimport { SafeTransfer } from \\\"./lib/SafeTransfer.sol\\\";\\n\\n/**\\n * @title CoinGenieERC20\\n * @author @neuro_0x\\n * @notice A robust and secure ERC20 token for the Coin Genie ecosystem\\n *\\n * @notice THIS ERC20 SHOULD ONLY BE DEPLOYED FROM THE COINGENIE ERC20 FACTORY\\n */\\ncontract CoinGenieERC20 is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ReentrancyGuard {\\n    using SafeMath for uint256;\\n\\n    /// @dev The max basis points representing 100%\\n    uint256 private constant _MAX_BPS = 10_000;\\n\\n    /// @dev The max tax that can be applied to a transaction. The value is in ether but is handled as 5%.\\n    uint256 private constant _MAX_TAX = 2000; // 20%\\n\\n    /// @dev The minimum amount of eth that must be added to Uniswap when trading is opened.\\n    uint256 private constant _MIN_LIQUIDITY_ETH = 0.5 ether;\\n\\n    /// @dev The minimum amount of erc20 token that must be added to Uniswap when trading is opened.\\n    uint256 private constant _MIN_LIQUIDITY_TOKEN = 1 ether;\\n\\n    /// @dev The amount of $GENIE a person has to hold to get the discount\\n    uint256 public discountFeeRequiredAmount = 1_000_000 ether;\\n\\n    /// @dev The address of the genie token\\n    address public genieToken;\\n\\n    /// @dev number of decimals of the token\\n    uint8 private immutable _tokenDecimals;\\n\\n    /// @dev initial number of tokens which will be minted during initialization\\n    uint256 public immutable initialSupply;\\n\\n    /// @dev max amount of tokens allowed per wallet\\n    uint256 public maxTokenAmountPerAddress;\\n\\n    /// @dev max amount of tokens the contract can accrue before swapping them for ETH\\n    uint256 public maxTaxSwap;\\n\\n    /// @dev max amount of ETH the contract can accrue before withdrawing them to the fee recipient\\n    uint256 public autoWithdrawThreshold;\\n\\n    /// @dev features of the token\\n    Common.TokenConfigProperties public tokenConfig;\\n\\n    /// @dev the address of the fee recipient\\n    address public feeRecipient;\\n\\n    /// @dev address of the affiliate fee recipient\\n    address public immutable affiliateFeeRecipient;\\n\\n    /// @dev address of the royalty fee recipient (Coin Genie)\\n    address public coinGenieTreasury;\\n\\n    /// @dev the fee percentage in basis points\\n    uint256 public feePercentage;\\n\\n    /// @dev the affiliate fee percentage taken on transfers\\n    uint256 public affiliateFeePercentage = 25; // 0.5%;\\n\\n    /// @dev the affiliate fee percentage in basis points\\n    uint256 public burnPercentage;\\n\\n    /// @dev the royalty fee percentage taken on transfers\\n    uint256 public treasuryFeePercentage = 50; // 0.5%;\\n\\n    /// @dev the percent of eth taken when liquidity is open\\n    uint256 public lpEthFeePercentage = 50; // 0.5%;\\n\\n    /// @dev The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps\\n    IUniswapV2Router02 public constant UNISWAP_V2_ROUTER =\\n        IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\n\\n    /// @dev The address of the LP token. The contract uses the LP token to determine if a transfer is a buy or sell\\n    address public uniswapV2Pair;\\n\\n    /// @dev The flag for whether swapping is enabled and trading open\\n    bool public isSwapEnabled;\\n\\n    /// @dev Are we currently swapping tokens for ETH?\\n    bool private _inSwap;\\n\\n    mapping(address feePayer => bool isWhitelisted) private _feeWhitelist;\\n\\n    /// @dev Modifier to prevent swapping tokens for ETH recursively\\n    modifier lockTheSwap() {\\n        _inSwap = true;\\n        _;\\n        _inSwap = false;\\n    }\\n\\n    /// @notice Error thrown when the genie is already set.\\n    error GenieAlreadySet();\\n\\n    /// @notice Error thrown when the provided maximum token amount is invalid.\\n    error InvalidMaxTokenAmount(uint256 maxPerWallet);\\n\\n    /// @notice Error thrown when the new maximum token amount per address is less than or equal to the previous value.\\n    error MaxTokenAmountPerAddrLtPrevious();\\n\\n    /// @notice Error thrown when the destination balance exceeds the maximum allowed amount.\\n    /// @param addr The address whose balance would exceed the limit.\\n    error DestBalanceExceedsMaxAllowed(address addr);\\n\\n    /// @notice Error thrown when burning is not enabled.\\n    error BurningNotEnabled();\\n\\n    /// @notice Error thrown when pausing is not enabled.\\n    error PausingNotEnabled();\\n\\n    /// @notice Error thrown when the token is not deflationary.\\n    error TokenIsNotDeflationary();\\n\\n    /// @notice Error thrown when an invalid tax basis point is provided.\\n    /// @param bps The invalid basis points for tax.\\n    error InvalidTaxBPS(uint256 bps);\\n\\n    /// @notice Error thrown when an invalid deflation basis point is provided.\\n    /// @param bps The invalid basis points for deflation.\\n    error InvalidDeflationBPS(uint256 bps);\\n\\n    /// @notice Error thrown when trading is already open.\\n    error TradingAlreadyOpen();\\n\\n    /// @notice Error thrown when the provided ETH amount is insufficient.\\n    /// @param amount The provided ETH amount.\\n    /// @param minAmount The minimum required ETH amount.\\n    error InsufficientETH(uint256 amount, uint256 minAmount);\\n\\n    /// @notice Error thrown when the provided token amount is insufficient.\\n    /// @param amount The provided token amount.\\n    /// @param minAmount The minimum required token amount.\\n    error InsufficientTokens(uint256 amount, uint256 minAmount);\\n\\n    /// @notice This event is emitted when the trading is opened.\\n    /// @param pair The address of the LP token.\\n    event TradingOpened(address indexed pair);\\n\\n    /// @notice This event is emitted when the maximum number of tokens allowed per wallet has been updated.\\n    /// @param newMaxTokenAmount The new maximum token amount per wallet.\\n    event MaxTokensPerWalletSet(uint256 indexed newMaxTokenAmount);\\n\\n    /// @notice This event is emitted when the fee configuration of the token has been updated.\\n    /// @param _feeRecipient The updated fee recipient address.\\n    /// @param _feePercentage The updated fee percentage.\\n    event FeeConfigUpdated(address indexed _feeRecipient, uint256 indexed _feePercentage);\\n\\n    /// @notice This event is emitted when the burn configuration of the token has been updated.\\n    /// @param _burnPercentage The updated burn percentage.\\n    event BurnConfigUpdated(uint256 indexed _burnPercentage);\\n\\n    /**\\n     * @dev Initializes the contract with the provided parameters\\n     * @param name_ The name of the token\\n     * @param symbol_ The symbol of the token\\n     * @param initialSupplyToSet The initial supply of the token\\n     * @param tokenOwner The owner of the token\\n     * @param customConfigProps Represents the features of the token\\n     * @param maxPerWallet The max amount of tokens per wallet\\n     * @param maxToSwapForTax The max amount of tokens to swap for tax\\n     * @param _affilateFeeRecipient The address of the affiliate fee recipient\\n     * @param _feeRecipient The address of the fee recipient\\n     * @param _feePercentage The fee percentage in basis points\\n     * @param _burnPercentage The burn percentage in basis points\\n     */\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupplyToSet,\\n        address tokenOwner,\\n        Common.TokenConfigProperties memory customConfigProps,\\n        uint256 maxPerWallet,\\n        uint256 maxToSwapForTax,\\n        uint256 _autoWithdrawThreshold,\\n        address _affilateFeeRecipient,\\n        address _feeRecipient,\\n        uint256 _feePercentage,\\n        uint256 _burnPercentage\\n    )\\n        ERC20(name_, symbol_)\\n    {\\n        SafeTransfer.validateAddress(tokenOwner);\\n        initialSupply = initialSupplyToSet;\\n        _tokenDecimals = 18;\\n        affiliateFeeRecipient = _affilateFeeRecipient;\\n\\n        if (_feePercentage > _MAX_TAX) {\\n            revert InvalidTaxBPS(_feePercentage);\\n        }\\n\\n        if (customConfigProps.isDeflationary) {\\n            if (_burnPercentage > _MAX_TAX) {\\n                revert InvalidDeflationBPS(_burnPercentage);\\n            }\\n\\n            burnPercentage = _burnPercentage;\\n        }\\n\\n        tokenConfig = customConfigProps;\\n        maxTokenAmountPerAddress = maxPerWallet;\\n        maxTaxSwap = maxToSwapForTax;\\n        autoWithdrawThreshold = _autoWithdrawThreshold;\\n\\n        SafeTransfer.validateAddress(_feeRecipient);\\n        feeRecipient = _feeRecipient;\\n        feePercentage = _feePercentage;\\n\\n        if (initialSupplyToSet != 0) {\\n            _mint(tokenOwner, initialSupplyToSet);\\n        }\\n\\n        _feeWhitelist[address(this)] = true;\\n        _feeWhitelist[tokenOwner] = true;\\n        _feeWhitelist[feeRecipient] = true;\\n    }\\n\\n    /**\\n     * @dev hook called before any transfer of tokens. This includes minting and burning\\n     * imposed by the ERC20 standard\\n     * @param from - address of the sender\\n     * @param to - address of the recipient\\n     * @param amount - amount of tokens to transfer\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    )\\n        internal\\n        virtual\\n        override(ERC20, ERC20Pausable)\\n    {\\n        super._beforeTokenTransfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @return true if the token is pausable\\n     */\\n    function isPausable() public view returns (bool) {\\n        return tokenConfig.isPausable;\\n    }\\n\\n    /**\\n     * @return true if the token is burnable\\n     */\\n    function isBurnable() public view returns (bool) {\\n        return tokenConfig.isBurnable;\\n    }\\n\\n    /**\\n     * @return true if the feePayer is whitelisted\\n     */\\n    function isWhitelisted(address feePayer) public view returns (bool) {\\n        return _feeWhitelist[feePayer];\\n    }\\n\\n    /**\\n     * @return number of decimals for the token\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return _tokenDecimals;\\n    }\\n\\n    /**\\n     * @return true if the token supports deflation\\n     */\\n    function isDeflationary() public view returns (bool) {\\n        return tokenConfig.isDeflationary;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the address of the coingenie\\n     * @param coinGenieAddress - the address of the coinGenie\\n     */\\n    function setCoinGenieTreasury(address coinGenieAddress) external {\\n        if (coinGenieTreasury != address(0)) {\\n            revert GenieAlreadySet();\\n        }\\n\\n        coinGenieTreasury = coinGenieAddress;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\\n     * @param maxTax - the new max amount of tokens to swap for tax\\n     */\\n    function setMaxTaxSwap(uint256 maxTax) external onlyOwner {\\n        maxTaxSwap = maxTax;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\\n     * @param threshold - the new max amount of tokens to swap for tax\\n     */\\n    function setAutoWithdrawThreshold(uint256 threshold) external onlyOwner {\\n        autoWithdrawThreshold = threshold;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set a max amount of tokens per wallet\\n     * @param newMaxTokenAmount - the new max amount of tokens per wallet\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports max amount of tokens per wallet\\n     */\\n    function setMaxTokenAmountPerAddress(uint256 newMaxTokenAmount) external onlyOwner whenNotPaused {\\n        if (newMaxTokenAmount <= maxTokenAmountPerAddress) {\\n            revert MaxTokenAmountPerAddrLtPrevious();\\n        }\\n\\n        maxTokenAmountPerAddress = newMaxTokenAmount;\\n        emit MaxTokensPerWalletSet(newMaxTokenAmount);\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the tax config\\n     * @param _feeRecipient - the new feeRecipient\\n     * @param _feePercentage - the new feePercentage\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the feePercentage is not greater than the max tax\\n     */\\n    function setTaxConfig(address _feeRecipient, uint256 _feePercentage) external onlyOwner whenNotPaused {\\n        if (_feePercentage > _MAX_TAX) {\\n            revert InvalidTaxBPS(_feePercentage);\\n        }\\n\\n        SafeTransfer.validateAddress(_feeRecipient);\\n        feeRecipient = _feeRecipient;\\n        feePercentage = _feePercentage;\\n        emit FeeConfigUpdated(_feeRecipient, _feePercentage);\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the deflation config\\n     * @param _burnPercentage - the new burnPercentage\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports deflation\\n     * @notice only callable if the burnPercentage is not greater than the max allowed bps\\n     */\\n    function setDeflationConfig(uint256 _burnPercentage) external onlyOwner whenNotPaused {\\n        if (!isDeflationary()) {\\n            revert TokenIsNotDeflationary();\\n        }\\n\\n        if (_burnPercentage > _MAX_TAX) {\\n            revert InvalidDeflationBPS(_burnPercentage);\\n        }\\n\\n        burnPercentage = _burnPercentage;\\n        emit BurnConfigUpdated(_burnPercentage);\\n    }\\n\\n    /**\\n     * @dev Allows to transfer a predefined amount of tokens to a predefined address\\n     * @param to - the address to transfer the tokens to\\n     * @param amount - the amount of tokens to transfer\\n     * @return true if the transfer was successful\\n     *\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\\n     * @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\\n     * @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\\n     * @notice captures the tax during the transfer if tax is enabvled\\n     * @notice burns the deflationary amount during the transfer if deflation is enabled\\n     */\\n    function transfer(address to, uint256 amount) public virtual override whenNotPaused returns (bool) {\\n        address from = msg.sender;\\n\\n        if (isSwapEnabled && !_feeWhitelist[from] && !_feeWhitelist[to]) {\\n            uint256 amountToTransfer = _takeFees(from, to, amount);\\n\\n            return super.transfer(to, amountToTransfer);\\n        }\\n\\n        return super.transfer(to, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to transfer a predefined amount of tokens from a predefined address to a predefined address\\n     * @param from - the address to transfer the tokens from\\n     * @param to - the address to transfer the tokens to\\n     * @param amount - the amount of tokens to transfer\\n     * @return true if the transfer was successful\\n     *\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\\n     * @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\\n     * @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\\n     * @notice captures the tax during the transfer if tax is enabvled\\n     * @notice burns the deflationary amount during the transfer if deflation is enabled\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    )\\n        public\\n        virtual\\n        override\\n        whenNotPaused\\n        returns (bool)\\n    {\\n        if (isSwapEnabled && !_feeWhitelist[from] && !_feeWhitelist[to]) {\\n            uint256 amountToTransfer = _takeFees(from, to, amount);\\n\\n            return super.transferFrom(from, to, amountToTransfer);\\n        }\\n\\n        return super.transferFrom(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to burn a predefined amount of tokens\\n     * @param amount - the amount of tokens to burn\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports burning\\n     */\\n    function burn(uint256 amount) public override onlyOwner whenNotPaused {\\n        if (!isBurnable()) {\\n            revert BurningNotEnabled();\\n        }\\n\\n        super.burn(amount);\\n    }\\n\\n    /**\\n     * @dev Allows to burn a predefined amount of tokens from a predefined address\\n     * @param from - the address to burn the tokens from\\n     * @param amount - the amount of tokens to burn\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports burning\\n     * @notice needs Approval\\n     */\\n    function burnFrom(address from, uint256 amount) public override onlyOwner whenNotPaused {\\n        if (!isBurnable()) {\\n            revert BurningNotEnabled();\\n        }\\n\\n        super.burnFrom(from, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to pause the token\\n     *\\n     * @notice only callable by the owner\\n     */\\n    function pause() external onlyOwner {\\n        if (!isPausable()) {\\n            revert PausingNotEnabled();\\n        }\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Allows to unpause the token\\n     *\\n     * @notice only callable by the owner\\n     */\\n    function unpause() external onlyOwner {\\n        if (!isPausable()) {\\n            revert PausingNotEnabled();\\n        }\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Opens trading for the token by adding liquidity to Uniswap.\\n     * @param amountToLP The amount of tokens to add to Uniswap\\n     *\\n     * Emits a {TradingOpened} event.\\n     *\\n     * Preconditions:\\n     *\\n     * Requirements:\\n     *\\n     * `isSwapEnabled` must be false.\\n     * `amountToLP >= _MIN_LIQUIDITY_TOKEN`\\n     * `msg.value >= _MIN_LIQUIDITY_ETH`\\n     */\\n    function openTrading(uint256 amountToLP) external payable onlyOwner nonReentrant returns (IUniswapV2Pair) {\\n        uint256 value = msg.value;\\n        if (isSwapEnabled) {\\n            revert TradingAlreadyOpen();\\n        }\\n\\n        if (amountToLP < _MIN_LIQUIDITY_TOKEN || balanceOf(owner()) < amountToLP) {\\n            revert InsufficientTokens(amountToLP, _MIN_LIQUIDITY_TOKEN);\\n        }\\n\\n        if (value < _MIN_LIQUIDITY_ETH) {\\n            revert InsufficientETH(value, _MIN_LIQUIDITY_ETH);\\n        }\\n\\n        // Transfer the tokens to the contract\\n        transfer(address(this), amountToLP);\\n\\n        // Get the ETH amount to LP and the ETH amount to treasury\\n        uint256 genieBalance = IERC20(genieToken).balanceOf(address(this));\\n        uint256 ethAmountToTreasury = value.mul(lpEthFeePercentage).div(_MAX_BPS);\\n\\n        // If the genie balance is greater than the required amount, the fee is free\\n        if (genieBalance > discountFeeRequiredAmount) {\\n            ethAmountToTreasury = 0;\\n        }\\n\\n        uint256 ethAmountToLP = value.sub(ethAmountToTreasury);\\n\\n        // Approve the router to spend the tokens\\n        _approve(address(this), address(UNISWAP_V2_ROUTER), totalSupply());\\n\\n        // Create the LP token\\n        uniswapV2Pair =\\n            IUniswapV2Factory(UNISWAP_V2_ROUTER.factory()).createPair(address(this), UNISWAP_V2_ROUTER.WETH());\\n\\n        // Approve the router to spend the LP token\\n        IERC20(uniswapV2Pair).approve(address(UNISWAP_V2_ROUTER), type(uint256).max);\\n\\n        // Add liquidity to Uniswap\\n        UNISWAP_V2_ROUTER.addLiquidityETH{ value: ethAmountToLP }(\\n            address(this), balanceOf(address(this)), 0, 0, owner(), block.timestamp\\n        );\\n\\n        // Enable swapping\\n        isSwapEnabled = true;\\n\\n        // Send fee to the treasury\\n        if (ethAmountToTreasury > 0) {\\n            payable(coinGenieTreasury).transfer(ethAmountToTreasury);\\n        }\\n\\n        emit TradingOpened(uniswapV2Pair);\\n\\n        return IUniswapV2Pair(uniswapV2Pair);\\n    }\\n\\n    /**\\n     * @dev Sets the address of the genie token\\n     * @param genie - the address of the genie token\\n     */\\n    function setGenie(address genie) external onlyOwner {\\n        if (genieToken != address(0)) {\\n            revert GenieAlreadySet();\\n        }\\n\\n        genieToken = genie;\\n    }\\n\\n    /**\\n     * @dev Swaps tokens for ETH if the contract balance is greater than the max amount to swap for tax. Then sends\\n     * the ETH to the tax wallet.\\n     */\\n    function manualSwap() external nonReentrant {\\n        uint256 tokenBalance = balanceOf(address(this));\\n        if (tokenBalance > 0) {\\n            _swapTokensForEth(_min(tokenBalance, maxTaxSwap));\\n        }\\n\\n        // Send ETH to the tax wallet\\n        uint256 ethBalance = address(this).balance;\\n        if (ethBalance > autoWithdrawThreshold) {\\n            payable(owner()).transfer(ethBalance);\\n        }\\n    }\\n\\n    function _takeFees(address from, address to, uint256 amount) private returns (uint256 amountToTransfer) {\\n        (uint256 treasuryAmount, uint256 taxAmount, uint256 affiliateAmount, uint256 deflationAmount) =\\n            _getTransferAmounts(amount);\\n\\n        amountToTransfer = amount - treasuryAmount - taxAmount - affiliateAmount - deflationAmount;\\n\\n        if (\\n            from == uniswapV2Pair && to != address(UNISWAP_V2_ROUTER)\\n                && balanceOf(to) + amountToTransfer > maxTokenAmountPerAddress\\n        ) {\\n            revert DestBalanceExceedsMaxAllowed(to);\\n        }\\n\\n        if (treasuryAmount != 0) {\\n            _transfer(from, coinGenieTreasury, treasuryAmount);\\n        }\\n\\n        if (affiliateAmount != 0) {\\n            _transfer(from, affiliateFeeRecipient, affiliateAmount);\\n        }\\n\\n        if (taxAmount != 0) {\\n            _transfer(from, feeRecipient, taxAmount);\\n        }\\n\\n        if (deflationAmount != 0) {\\n            _burn(from, deflationAmount);\\n        }\\n\\n        uint256 contractTokenBalance = balanceOf(address(this));\\n        // if not in a swap, the receiver is the LP token and the contract token balance is greater than the max tax\\n        // swap, swap tokens for ETH\\n        if (!_inSwap && to == uniswapV2Pair && contractTokenBalance > maxTaxSwap) {\\n            _swapTokensForEth(_min(amountToTransfer, _min(maxTaxSwap, contractTokenBalance)));\\n\\n            // if the contract ETH balance is greater than the auto withdraw threshold, withdraw the ETH to the\\n            // feeRecipient\\n            uint256 contractEthBalance = address(this).balance;\\n            if (contractEthBalance > autoWithdrawThreshold) {\\n                payable(feeRecipient).transfer(contractEthBalance);\\n            }\\n\\n            return amountToTransfer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Gets the amount of tokens to transfer and the amount of tax to capture\\n     * @param amount The amount of tokens to transfer\\n     */\\n    function _getTransferAmounts(uint256 amount)\\n        private\\n        view\\n        returns (uint256 treasuryAmount, uint256 taxAmount, uint256 affiliateAmount, uint256 deflationAmount)\\n    {\\n        treasuryAmount = (amount * treasuryFeePercentage) / _MAX_BPS;\\n        taxAmount = (amount * feePercentage) / _MAX_BPS;\\n        affiliateAmount = (amount * affiliateFeePercentage) / _MAX_BPS;\\n\\n        if (isDeflationary()) {\\n            deflationAmount = (amount * burnPercentage) / _MAX_BPS;\\n        }\\n    }\\n\\n    /**\\n     * @dev Swaps tokens for ETH\\n     * @param tokenAmount The amount of tokens to swap for ETH\\n     */\\n    function _swapTokensForEth(uint256 tokenAmount) private nonReentrant lockTheSwap {\\n        address[] memory path = new address[](2);\\n        path[0] = address(this);\\n        path[1] = UNISWAP_V2_ROUTER.WETH();\\n        _approve(address(this), address(UNISWAP_V2_ROUTER), tokenAmount);\\n        UNISWAP_V2_ROUTER.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n            tokenAmount, 0, path, address(this), block.timestamp\\n        );\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     * @param a The first number.\\n     * @param b The second number.\\n     */\\n    function _min(uint256 a, uint256 b) private pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x41a852e416d2b8b2ac0addbeeb0e132526b8695daea1e8038acf4c0fd71509a0\",\"license\":\"GPL-3.0\"},\"src/ERC20Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\n\\nimport { CoinGenieERC20 } from \\\"./CoinGenieERC20.sol\\\";\\nimport { Common } from \\\"./lib/Common.sol\\\";\\n\\n/**\\n * @title ERC20Factory\\n * @author @neuro_0x\\n * @dev A factory library to deploy instances of the CoinGenieERC20 contract.\\n */\\ncontract ERC20Factory is Ownable {\\n    /// @dev The address of the genie token\\n    address private _genie;\\n\\n    /// @notice Error thrown when the genie is already set.\\n    error GenieAlreadySet();\\n\\n    /**\\n     * @dev Creates a new instance of the CoinGenieERC20 contract\\n     * @param name - the name of the token\\n     * @param symbol - the ticker symbol of the token\\n     * @param initialSupply - the initial supply of the token\\n     * @param tokenOwner - the address that will be the owner of the token\\n     * @param customConfigProps - a struct of configuration booleans for the token\\n     * @param maxPerWallet - the maximum amount of tokens allowed to be held by one wallet\\n     * @param maxTaxSwap - the maximum amount of tokens allowed to be swapped at once by manual or autoswap\\n     * @param autoWithdrawThreshold - the threshold at which the contract will automatically withdraw the tax fees\\n     * @param affilateFeeRecipient - the address to receive the affiliate fee\\n     * @param feeRecipient - the address to receive the tax fees\\n     * @param feePercentage - the percent in basis points to use as a tax\\n     * @param burnPercentage - the percent in basis points to burn on every tx if this token is deflationary\\n     * @param coinGenieTreasury - the address to receive the royalty fee\\n     *\\n     * @return newToken - the CoinGenieERC20 token that was created\\n     */\\n    function launchToken(\\n        string memory name,\\n        string memory symbol,\\n        uint256 initialSupply,\\n        address tokenOwner,\\n        Common.TokenConfigProperties memory customConfigProps,\\n        uint256 maxPerWallet,\\n        uint256 autoWithdrawThreshold,\\n        uint256 maxTaxSwap,\\n        address affilateFeeRecipient,\\n        address feeRecipient,\\n        uint256 feePercentage,\\n        uint256 burnPercentage,\\n        address coinGenieTreasury\\n    )\\n        external\\n        returns (CoinGenieERC20 newToken)\\n    {\\n        CoinGenieERC20 coinGenieERC20 = new CoinGenieERC20(\\n            name,\\n            symbol,\\n            initialSupply,\\n            tokenOwner,\\n            customConfigProps,\\n            maxPerWallet,\\n            maxTaxSwap,\\n            autoWithdrawThreshold,\\n            affilateFeeRecipient,\\n            feeRecipient,\\n            feePercentage,\\n            burnPercentage\\n        );\\n\\n        coinGenieERC20.setCoinGenieTreasury(coinGenieTreasury);\\n        coinGenieERC20.setGenie(_genie);\\n\\n        if (tokenOwner != address(0) && tokenOwner != coinGenieERC20.owner()) {\\n            coinGenieERC20.transferOwnership(tokenOwner);\\n        }\\n\\n        return coinGenieERC20;\\n    }\\n\\n    /**\\n     * @dev Sets the address of the genie token\\n     * @param genie - the address of the genie token\\n     */\\n    function setGenie(address genie) external onlyOwner {\\n        if (_genie != address(0)) {\\n            revert GenieAlreadySet();\\n        }\\n\\n        _genie = genie;\\n    }\\n}\\n\",\"keccak256\":\"0xa4c19907c903a34df75362d370b2fd9c9838a92368b9a5a79503b2c24bc169f6\",\"license\":\"GPL-3.0\"},\"src/lib/Common.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title Common\\n * @dev Common items used across the CoinGenie contracts.\\n */\\nlibrary Common {\\n    /// @dev set of features supported by the token\\n    struct TokenConfigProperties {\\n        bool isBurnable;\\n        bool isPausable;\\n        bool isDeflationary;\\n    }\\n}\\n\",\"keccak256\":\"0x077884f042fbef72e79889fa4eef48f2884522241491c321f7bcaafcefb68af6\",\"license\":\"GPL-3.0\"},\"src/lib/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nlibrary SafeTransfer {\\n    error TransferFailed();\\n\\n    /**\\n     * @dev Sends `amount` (in wei) ETH to `to`.\\n     * @param to The address to send the ETH to.\\n     * @param amount The amount of ETH to send.\\n     */\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Transfer the ETH and check if it succeeded or not.\\n            if iszero(call(gas(), to, amount, 0, 0, 0, 0)) {\\n                // Store the function selector of `ETHTransferFailed()`.\\n                // bytes4(keccak256(bytes(\\\"ETHTransferFailed()\\\"))) = 0xb12d13eb\\n                mstore(0x00, 0xb12d13eb)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Validates that the address is not the zero address using assembly.\\n     * @dev Reverts if the address is the zero address.\\n     * @param addr The address to validate.\\n     */\\n    function validateAddress(address addr) internal pure {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            if iszero(shl(96, addr)) {\\n                // Store the function selector of `ZeroAddress()`.\\n                // bytes4(keccak256(bytes(\\\"ZeroAddress()\\\"))) = 0xd92e233d\\n                mstore(0x00, 0xd92e233d)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n     * @dev Reverts if the ERC20 transfer fails.\\n     * @param tokenAddress The address of the ERC20 token.\\n     * @param from The address to transfer the tokens from.\\n     * @param to The address to transfer the tokens to.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(address tokenAddress, address from, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transferFrom(address,address,uint256)\\\", from, to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n    /// @dev Reverts if the ERC20 transfer fails.\\n    /// @param tokenAddress The address of the ERC20 token.\\n    /// @param to The address to transfer the tokens to.\\n    /// @param amount The amount of tokens to transfer.\\n    function safeTransfer(address tokenAddress, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xcd0139a88ea2bcaa2dc562192f25f6fe7e18dc526081b42f9c1f8ef47a6aefa9\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"src/CoinGenie.sol:CoinGenie","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":231,"contract":"src/CoinGenie.sol:CoinGenie","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":4009,"contract":"src/CoinGenie.sol:CoinGenie","label":"quoteThreshold","offset":0,"slot":"2","type":"t_uint256"},{"astId":4016,"contract":"src/CoinGenie.sol:CoinGenie","label":"_payouts","offset":0,"slot":"3","type":"t_mapping(t_enum(PayoutCategory)3980,t_struct(Payout)3985_storage)"},{"astId":4020,"contract":"src/CoinGenie.sol:CoinGenie","label":"_erc20Factory","offset":0,"slot":"4","type":"t_contract(ERC20Factory)6111"},{"astId":4024,"contract":"src/CoinGenie.sol:CoinGenie","label":"_airdropClaimableERC20Factory","offset":0,"slot":"5","type":"t_contract(AirdropERC20ClaimableFactory)3880"},{"astId":4028,"contract":"src/CoinGenie.sol:CoinGenie","label":"createdClaimableAirdrops","offset":0,"slot":"6","type":"t_array(t_address)dyn_storage"},{"astId":4035,"contract":"src/CoinGenie.sol:CoinGenie","label":"claimableAirdropCreatedBy","offset":0,"slot":"7","type":"t_mapping(t_address,t_array(t_struct(ClaimableAirdrop)3975_storage)dyn_storage)"},{"astId":4039,"contract":"src/CoinGenie.sol:CoinGenie","label":"launchedTokens","offset":0,"slot":"8","type":"t_array(t_address)dyn_storage"},{"astId":4046,"contract":"src/CoinGenie.sol:CoinGenie","label":"tokensLaunchedBy","offset":0,"slot":"9","type":"t_mapping(t_address,t_array(t_struct(LaunchedToken)3960_storage)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_struct(ClaimableAirdrop)3975_storage)dyn_storage":{"base":"t_struct(ClaimableAirdrop)3975_storage","encoding":"dynamic_array","label":"struct CoinGenie.ClaimableAirdrop[]","numberOfBytes":"32"},"t_array(t_struct(LaunchedToken)3960_storage)dyn_storage":{"base":"t_struct(LaunchedToken)3960_storage","encoding":"dynamic_array","label":"struct CoinGenie.LaunchedToken[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(AirdropERC20ClaimableFactory)3880":{"encoding":"inplace","label":"contract AirdropERC20ClaimableFactory","numberOfBytes":"20"},"t_contract(ERC20Factory)6111":{"encoding":"inplace","label":"contract ERC20Factory","numberOfBytes":"20"},"t_enum(PayoutCategory)3980":{"encoding":"inplace","label":"enum CoinGenie.PayoutCategory","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_struct(ClaimableAirdrop)3975_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CoinGenie.ClaimableAirdrop[])","numberOfBytes":"32","value":"t_array(t_struct(ClaimableAirdrop)3975_storage)dyn_storage"},"t_mapping(t_address,t_array(t_struct(LaunchedToken)3960_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CoinGenie.LaunchedToken[])","numberOfBytes":"32","value":"t_array(t_struct(LaunchedToken)3960_storage)dyn_storage"},"t_mapping(t_enum(PayoutCategory)3980,t_struct(Payout)3985_storage)":{"encoding":"mapping","key":"t_enum(PayoutCategory)3980","label":"mapping(enum CoinGenie.PayoutCategory => struct CoinGenie.Payout)","numberOfBytes":"32","value":"t_struct(Payout)3985_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(ClaimableAirdrop)3975_storage":{"encoding":"inplace","label":"struct CoinGenie.ClaimableAirdrop","members":[{"astId":3962,"contract":"src/CoinGenie.sol:CoinGenie","label":"airdropAddress","offset":0,"slot":"0","type":"t_address"},{"astId":3964,"contract":"src/CoinGenie.sol:CoinGenie","label":"tokenOwner","offset":0,"slot":"1","type":"t_address"},{"astId":3966,"contract":"src/CoinGenie.sol:CoinGenie","label":"airdropTokenAddress","offset":0,"slot":"2","type":"t_address"},{"astId":3968,"contract":"src/CoinGenie.sol:CoinGenie","label":"airdropAmount","offset":0,"slot":"3","type":"t_uint256"},{"astId":3970,"contract":"src/CoinGenie.sol:CoinGenie","label":"expirationTimestamp","offset":0,"slot":"4","type":"t_uint256"},{"astId":3972,"contract":"src/CoinGenie.sol:CoinGenie","label":"maxWalletClaimCount","offset":0,"slot":"5","type":"t_uint256"},{"astId":3974,"contract":"src/CoinGenie.sol:CoinGenie","label":"merkleRoot","offset":0,"slot":"6","type":"t_bytes32"}],"numberOfBytes":"224"},"t_struct(LaunchedToken)3960_storage":{"encoding":"inplace","label":"struct CoinGenie.LaunchedToken","members":[{"astId":3935,"contract":"src/CoinGenie.sol:CoinGenie","label":"tokenAddress","offset":0,"slot":"0","type":"t_address"},{"astId":3937,"contract":"src/CoinGenie.sol:CoinGenie","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3939,"contract":"src/CoinGenie.sol:CoinGenie","label":"symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":3941,"contract":"src/CoinGenie.sol:CoinGenie","label":"initialSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":3943,"contract":"src/CoinGenie.sol:CoinGenie","label":"isBurnable","offset":0,"slot":"4","type":"t_bool"},{"astId":3945,"contract":"src/CoinGenie.sol:CoinGenie","label":"isDeflationary","offset":1,"slot":"4","type":"t_bool"},{"astId":3947,"contract":"src/CoinGenie.sol:CoinGenie","label":"maxPerWallet","offset":0,"slot":"5","type":"t_uint256"},{"astId":3949,"contract":"src/CoinGenie.sol:CoinGenie","label":"autoWithdrawThreshold","offset":0,"slot":"6","type":"t_uint256"},{"astId":3951,"contract":"src/CoinGenie.sol:CoinGenie","label":"maxTaxSwap","offset":0,"slot":"7","type":"t_uint256"},{"astId":3953,"contract":"src/CoinGenie.sol:CoinGenie","label":"affiliateFeeRecipient","offset":0,"slot":"8","type":"t_address"},{"astId":3955,"contract":"src/CoinGenie.sol:CoinGenie","label":"feeRecipient","offset":0,"slot":"9","type":"t_address"},{"astId":3957,"contract":"src/CoinGenie.sol:CoinGenie","label":"feePercentage","offset":0,"slot":"10","type":"t_uint256"},{"astId":3959,"contract":"src/CoinGenie.sol:CoinGenie","label":"burnPercentage","offset":0,"slot":"11","type":"t_uint256"}],"numberOfBytes":"384"},"t_struct(Payout)3985_storage":{"encoding":"inplace","label":"struct CoinGenie.Payout","members":[{"astId":3982,"contract":"src/CoinGenie.sol:CoinGenie","label":"receiver","offset":0,"slot":"0","type":"t_address_payable"},{"astId":3984,"contract":"src/CoinGenie.sol:CoinGenie","label":"share","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Construct the CoinGenie contract."},"createClaimableAirdrop(address,address,uint256,uint256,uint256,bytes32)":{"notice":"Launch a new instance of the CoinGenieAirdropClaimable Contract."},"getClaimableAirdropsForAddress(address)":{"notice":"Get the airdrops created by a specific address."},"getLaunchedTokensForAddress(address)":{"notice":"Get the launched tokens."},"getPayoutAddress(uint8)":{"notice":"Get the payout address for a specific category."},"getPayoutShare(uint8)":{"notice":"Get the payout share for a specific category."},"launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256)":{"notice":"Launch a new instance of the ERC20."},"setQuoteThreshold(uint256)":{"notice":"Set the threshold for the amount of tokens to swap for ETH."},"swapERC20s(address,address,uint256)":{"notice":"Swap ERC20 tokens for ETH."},"updatePayout(uint8,address,uint256)":{"notice":"Set the payout address for a specific category."},"withdraw()":{"notice":"Withdraw the contract balance to the payout addresses."}},"version":1}}},"src/CoinGenieERC20.sol":{"CoinGenieERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"initialSupplyToSet","type":"uint256"},{"internalType":"address","name":"tokenOwner","type":"address"},{"components":[{"internalType":"bool","name":"isBurnable","type":"bool"},{"internalType":"bool","name":"isPausable","type":"bool"},{"internalType":"bool","name":"isDeflationary","type":"bool"}],"internalType":"struct Common.TokenConfigProperties","name":"customConfigProps","type":"tuple"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"maxToSwapForTax","type":"uint256"},{"internalType":"uint256","name":"_autoWithdrawThreshold","type":"uint256"},{"internalType":"address","name":"_affilateFeeRecipient","type":"address"},{"internalType":"address","name":"_feeRecipient","type":"address"},{"internalType":"uint256","name":"_feePercentage","type":"uint256"},{"internalType":"uint256","name":"_burnPercentage","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"BurningNotEnabled","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"DestBalanceExceedsMaxAllowed","type":"error"},{"inputs":[],"name":"GenieAlreadySet","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"InsufficientETH","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"InsufficientTokens","type":"error"},{"inputs":[{"internalType":"uint256","name":"bps","type":"uint256"}],"name":"InvalidDeflationBPS","type":"error"},{"inputs":[{"internalType":"uint256","name":"maxPerWallet","type":"uint256"}],"name":"InvalidMaxTokenAmount","type":"error"},{"inputs":[{"internalType":"uint256","name":"bps","type":"uint256"}],"name":"InvalidTaxBPS","type":"error"},{"inputs":[],"name":"MaxTokenAmountPerAddrLtPrevious","type":"error"},{"inputs":[],"name":"PausingNotEnabled","type":"error"},{"inputs":[],"name":"TokenIsNotDeflationary","type":"error"},{"inputs":[],"name":"TradingAlreadyOpen","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_burnPercentage","type":"uint256"}],"name":"BurnConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_feeRecipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"_feePercentage","type":"uint256"}],"name":"FeeConfigUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"newMaxTokenAmount","type":"uint256"}],"name":"MaxTokensPerWalletSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pair","type":"address"}],"name":"TradingOpened","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"UNISWAP_V2_ROUTER","outputs":[{"internalType":"contract IUniswapV2Router02","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"affiliateFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"affiliateFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"autoWithdrawThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"coinGenieTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"discountFeeRequiredAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"genieToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isBurnable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isDeflationary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPausable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSwapEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"feePayer","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lpEthFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manualSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxTaxSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTokenAmountPerAddress","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountToLP","type":"uint256"}],"name":"openTrading","outputs":[{"internalType":"contract IUniswapV2Pair","name":"","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"threshold","type":"uint256"}],"name":"setAutoWithdrawThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"coinGenieAddress","type":"address"}],"name":"setCoinGenieTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_burnPercentage","type":"uint256"}],"name":"setDeflationConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"genie","type":"address"}],"name":"setGenie","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxTax","type":"uint256"}],"name":"setMaxTaxSwap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newMaxTokenAmount","type":"uint256"}],"name":"setMaxTokenAmountPerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"},{"internalType":"uint256","name":"_feePercentage","type":"uint256"}],"name":"setTaxConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenConfig","outputs":[{"internalType":"bool","name":"isBurnable","type":"bool"},{"internalType":"bool","name":"isPausable","type":"bool"},{"internalType":"bool","name":"isDeflationary","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasuryFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapV2Pair","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"@neuro_0x","errors":{"DestBalanceExceedsMaxAllowed(address)":[{"params":{"addr":"The address whose balance would exceed the limit."}}],"InsufficientETH(uint256,uint256)":[{"params":{"amount":"The provided ETH amount.","minAmount":"The minimum required ETH amount."}}],"InsufficientTokens(uint256,uint256)":[{"params":{"amount":"The provided token amount.","minAmount":"The minimum required token amount."}}],"InvalidDeflationBPS(uint256)":[{"params":{"bps":"The invalid basis points for deflation."}}],"InvalidTaxBPS(uint256)":[{"params":{"bps":"The invalid basis points for tax."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"BurnConfigUpdated(uint256)":{"params":{"_burnPercentage":"The updated burn percentage."}},"FeeConfigUpdated(address,uint256)":{"params":{"_feePercentage":"The updated fee percentage.","_feeRecipient":"The updated fee recipient address."}},"MaxTokensPerWalletSet(uint256)":{"params":{"newMaxTokenAmount":"The new maximum token amount per wallet."}},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"TradingOpened(address)":{"params":{"pair":"The address of the LP token."}},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Allows to burn a predefined amount of tokens","params":{"amount":"- the amount of tokens to burn"}},"burnFrom(address,uint256)":{"details":"Allows to burn a predefined amount of tokens from a predefined address","params":{"amount":"- the amount of tokens to burn","from":"- the address to burn the tokens from"}},"constructor":{"details":"Initializes the contract with the provided parameters","params":{"_affilateFeeRecipient":"The address of the affiliate fee recipient","_burnPercentage":"The burn percentage in basis points","_feePercentage":"The fee percentage in basis points","_feeRecipient":"The address of the fee recipient","customConfigProps":"Represents the features of the token","initialSupplyToSet":"The initial supply of the token","maxPerWallet":"The max amount of tokens per wallet","maxToSwapForTax":"The max amount of tokens to swap for tax","name_":"The name of the token","symbol_":"The symbol of the token","tokenOwner":"The owner of the token"}},"decimals()":{"returns":{"_0":"number of decimals for the token"}},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"isBurnable()":{"returns":{"_0":"true if the token is burnable"}},"isDeflationary()":{"returns":{"_0":"true if the token supports deflation"}},"isPausable()":{"returns":{"_0":"true if the token is pausable"}},"isWhitelisted(address)":{"returns":{"_0":"true if the feePayer is whitelisted"}},"manualSwap()":{"details":"Swaps tokens for ETH if the contract balance is greater than the max amount to swap for tax. Then sends the ETH to the tax wallet."},"name()":{"details":"Returns the name of the token."},"openTrading(uint256)":{"details":"Opens trading for the token by adding liquidity to Uniswap.","params":{"amountToLP":"The amount of tokens to add to Uniswap Emits a {TradingOpened} event. Preconditions: Requirements: `isSwapEnabled` must be false. `amountToLP >= _MIN_LIQUIDITY_TOKEN` `msg.value >= _MIN_LIQUIDITY_ETH`"}},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"Allows to pause the token"},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setAutoWithdrawThreshold(uint256)":{"details":"Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH","params":{"threshold":"- the new max amount of tokens to swap for tax"}},"setCoinGenieTreasury(address)":{"details":"Allows the owner to set the address of the coingenie","params":{"coinGenieAddress":"- the address of the coinGenie"}},"setDeflationConfig(uint256)":{"details":"Allows the owner to set the deflation config","params":{"_burnPercentage":"- the new burnPercentage"}},"setGenie(address)":{"details":"Sets the address of the genie token","params":{"genie":"- the address of the genie token"}},"setMaxTaxSwap(uint256)":{"details":"Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH","params":{"maxTax":"- the new max amount of tokens to swap for tax"}},"setMaxTokenAmountPerAddress(uint256)":{"details":"Allows the owner to set a max amount of tokens per wallet","params":{"newMaxTokenAmount":"- the new max amount of tokens per wallet"}},"setTaxConfig(address,uint256)":{"details":"Allows the owner to set the tax config","params":{"_feePercentage":"- the new feePercentage","_feeRecipient":"- the new feeRecipient"}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"Allows to transfer a predefined amount of tokens to a predefined address","params":{"amount":"- the amount of tokens to transfer","to":"- the address to transfer the tokens to"},"returns":{"_0":"true if the transfer was successful"}},"transferFrom(address,address,uint256)":{"details":"Allows to transfer a predefined amount of tokens from a predefined address to a predefined address","params":{"amount":"- the amount of tokens to transfer","from":"- the address to transfer the tokens from","to":"- the address to transfer the tokens to"},"returns":{"_0":"true if the transfer was successful"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{"details":"Allows to unpause the token"}},"stateVariables":{"UNISWAP_V2_ROUTER":{"details":"The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps"},"_MAX_BPS":{"details":"The max basis points representing 100%"},"_MAX_TAX":{"details":"The max tax that can be applied to a transaction. The value is in ether but is handled as 5%."},"_MIN_LIQUIDITY_ETH":{"details":"The minimum amount of eth that must be added to Uniswap when trading is opened."},"_MIN_LIQUIDITY_TOKEN":{"details":"The minimum amount of erc20 token that must be added to Uniswap when trading is opened."},"_inSwap":{"details":"Are we currently swapping tokens for ETH?"},"_tokenDecimals":{"details":"number of decimals of the token"},"affiliateFeePercentage":{"details":"the affiliate fee percentage taken on transfers"},"affiliateFeeRecipient":{"details":"address of the affiliate fee recipient"},"autoWithdrawThreshold":{"details":"max amount of ETH the contract can accrue before withdrawing them to the fee recipient"},"burnPercentage":{"details":"the affiliate fee percentage in basis points"},"coinGenieTreasury":{"details":"address of the royalty fee recipient (Coin Genie)"},"discountFeeRequiredAmount":{"details":"The amount of $GENIE a person has to hold to get the discount"},"feePercentage":{"details":"the fee percentage in basis points"},"feeRecipient":{"details":"the address of the fee recipient"},"genieToken":{"details":"The address of the genie token"},"initialSupply":{"details":"initial number of tokens which will be minted during initialization"},"isSwapEnabled":{"details":"The flag for whether swapping is enabled and trading open"},"lpEthFeePercentage":{"details":"the percent of eth taken when liquidity is open"},"maxTaxSwap":{"details":"max amount of tokens the contract can accrue before swapping them for ETH"},"maxTokenAmountPerAddress":{"details":"max amount of tokens allowed per wallet"},"tokenConfig":{"details":"features of the token"},"treasuryFeePercentage":{"details":"the royalty fee percentage taken on transfers"},"uniswapV2Pair":{"details":"The address of the LP token. The contract uses the LP token to determine if a transfer is a buy or sell"}},"title":"CoinGenieERC20","version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":395,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string_fromMemory":{"entryPoint":256,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":419,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_stringt_uint256t_addresst_struct_TokenConfigPropertiest_uint256t_uint256t_uint256t_addresst_addresst_uint256t_uint256_fromMemory":{"entryPoint":520,"id":null,"parameterSlots":2,"returnSlots":12},"abi_decode_struct_TokenConfigProperties_fromMemory":{"entryPoint":434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral_fc0b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fcb1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_fcb1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":165,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":190,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":2723,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":2057,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_address":{"entryPoint":367,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":2022,"id":null,"parameterSlots":2,"returnSlots":0},"constant_MAX_TAX":{"entryPoint":901,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":1778,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_CoinGenieERC20":{"entryPoint":1257,"id":4998,"parameterSlots":12,"returnSlots":0},"constructor_ERC20":{"entryPoint":2377,"id":330,"parameterSlots":2,"returnSlots":0},"constructor_ERC20Burnable":{"entryPoint":1877,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_ERC20Pausable":{"entryPoint":1847,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_Ownable":{"entryPoint":1824,"id":23,"parameterSlots":2,"returnSlots":0},"constructor_Pausable":{"entryPoint":null,"id":139,"parameterSlots":2,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":1790,"id":239,"parameterSlots":2,"returnSlots":0},"convert_address_to_address":{"entryPoint":1169,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":2593,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":2577,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":831,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint8":{"entryPoint":879,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":1158,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":1136,"id":null,"parameterSlots":1,"returnSlots":1},"copy_arguments_for_constructor_object_CoinGenieERC20":{"entryPoint":766,"id":null,"parameterSlots":0,"returnSlots":12},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":2140,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":219,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_TokenConfigProperties_to_struct_TokenConfigProperties":{"entryPoint":1034,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_ceil":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1911,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_1t_address":{"entryPoint":2403,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":1234,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":3102,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":2681,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":125,"id":null,"parameterSlots":2,"returnSlots":0},"fun__beforeTokenTransfer":{"entryPoint":2962,"id":5020,"parameterSlots":3,"returnSlots":0},"fun_beforeTokenTransfer":{"entryPoint":3071,"id":1030,"parameterSlots":3,"returnSlots":0},"fun_mint":{"entryPoint":2743,"id":689,"parameterSlots":2,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_paused":{"entryPoint":3125,"id":164,"parameterSlots":0,"returnSlots":1},"fun_transferOwnership":{"entryPoint":2477,"id":111,"parameterSlots":1,"returnSlots":0},"fun_validateAddress":{"entryPoint":3137,"id":7304,"parameterSlots":1,"returnSlots":0},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":1208,"id":null,"parameterSlots":2,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2701,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1889,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":103,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":1245,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":3113,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_address":{"entryPoint":2417,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":2689,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_fc0b":{"entryPoint":2604,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fcb1":{"entryPoint":2975,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_16":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_uint256":{"entryPoint":2008,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":2429,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_20_shift_0":{"entryPoint":1120,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_dynamic32":{"entryPoint":1957,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":815,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":914,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_1":{"entryPoint":951,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_2":{"entryPoint":992,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_0t_bool_to_bool":{"entryPoint":924,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_0t_rational_25_by_1_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":1180,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_t_address":{"entryPoint":2449,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":965,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_t_bool":{"entryPoint":1007,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_rational_by_to_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_rational_by_to_uint256":{"entryPoint":847,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_string_to_string":{"entryPoint":2365,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_struct_TokenConfigProperties_to_struct_TokenConfigProperties":{"entryPoint":1108,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":1978,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":379,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":410,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":342,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"zero_value_for_split_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60e06040523462000062576200002e62000018620002fe565b9a999099989198979297969396959495620004e9565b604051612b8b62000c5b823960805181610595015260a0518161063f015260c051818181610a9b015261270d0152612b8b90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200009f57604052565b62000067565b90620000bc620000b460405190565b92836200007d565b565b6001600160401b0381116200009f57602090601f01601f19160190565b60005b838110620000ef5750506000910152565b8181015183820152602001620000de565b90929192620001196200011382620000be565b620000a5565b938185526020850190828401116200006257620000bc92620000db565b9080601f8301121562000062578151620001539260200162000100565b90565b805b036200006257565b90505190620000bc8262000156565b6001600160a01b031690565b6001600160a01b03811662000158565b90505190620000bc826200017b565b80151562000158565b90505190620000bc826200019a565b919091606081840312620000625762000202620001d06060620000a5565b936000620001df8285620001a3565b908601526020620001f382828601620001a3565b908601526040809301620001a3565b90830152565b90916101c082840312620000625781516001600160401b0381116200006257836200023591840162000136565b60208301519093906001600160401b0381116200006257816200025a91850162000136565b926200026a826040830162000160565b926200027a83606084016200018b565b926200028a8160808501620001b2565b926200029a8260e0830162000160565b92620002ab83610100840162000160565b92620002bc81610120850162000160565b92620002cd8261014083016200018b565b9262000153620002e28461016085016200018b565b93620002f381610180860162000160565b936101a00162000160565b62000321620037e6803803806200031581620000a5565b92833981019062000208565b909192939495969798999a9b565b90600019905b9181191691161790565b6200015362000153620001539290565b9062000363620001536200036b926200033f565b82546200032f565b9055565b6200037f62000153620001539290565b60ff1690565b620001536107d06200033f565b9060ff9062000335565b90620003af620001536200036b92151590565b825462000392565b9061ff009060081b62000335565b90620003d8620001536200036b92151590565b8254620003b7565b9062ff00009060101b62000335565b9062000402620001536200036b92151590565b8254620003e0565b620000bc916200044d906040906200042d620004268251151590565b856200039c565b620004466200043f6020830151151590565b85620003c5565b0151151590565b90620003ef565b90620000bc916200040a565b906001600160a01b039062000335565b62000153906200016f906001600160a01b031682565b620001539062000470565b620001539062000486565b90620004b0620001536200036b9262000491565b825462000460565b90620004c49062000491565b600052602052604060002090565b62000153906200016f565b620001539054620004d2565b90620004fd919c9b939a9892999c620006fe565b6200051469d3c21bcecceda100000060076200034f565b62000522601960106200034f565b6200053d6032620005358160126200034f565b60136200034f565b620005488962000c41565b8760a0526200055860126200036f565b60805260c0526200056862000385565b808711620006c957604083015162000651575b5050620005db9493620005b8620005d394620005b0620000bc9b9c95620005a8620005c096600c62000454565b60096200034f565b600a6200034f565b600b6200034f565b620005cb8162000c41565b600d6200049c565b600f6200034f565b620005e760006200033f565b81036200063e575b506200061e6001916200062b836200061e60159362000624836200061e620006173062000491565b88620004b8565b6200039c565b84620004b8565b62000637600d620004dd565b90620004b8565b6200064a908262000ab7565b38620005ef565b81116200069c5793620005b8620005d394620005b0620000bc9b9c95620005a8620005c09662000688620005db9c9b60116200034f565b965050959c9b50509450819596506200057b565b620006c590620006ab60405190565b6305dba32960e51b81529182916004830190815260200190565b0390fd5b620006c587620006d860405190565b6365a0074b60e11b81529182916004830190815260200190565b6200015360016200033f565b906200070a9162000720565b620000bc62000718620006f2565b60066200034f565b906200072c9162000737565b620000bc33620009ad565b620000bc91620007479162000755565b620000bc600060056200039c565b90620000bc9162000949565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156200079a575b60208310146200079457565b62000761565b91607f169162000788565b9160001960089290920291821b911b62000335565b9190620007cf620001536200036b936200033f565b908354620007a5565b620000bc91600091620007ba565b818110620007f2575050565b80620008026000600193620007d8565b01620007e6565b9190601f81116200081957505050565b6200082d620000bc93600052602060002090565b906020601f84018190048301931062000851575b6020601f909101040190620007e6565b909150819062000841565b9062000866815190565b906001600160401b0382116200009f576200088e8262000887855462000777565b8562000809565b602090601f8311600114620008cd576200036b929160009183620008c1575b5050600019600883021c1916906002021790565b015190503880620008ad565b601f19831691620008e385600052602060002090565b9260005b81811062000924575091600293918560019694106200090a575b50505002019055565b01516000196008601f8516021c1916905538808062000901565b91936020600181928787015181550195019201620008e7565b90620000bc916200085c565b906200095b620000bc9260036200093d565b60046200093d565b620001539060081c6200016f565b62000153905462000963565b90610100600160a81b039060081b62000335565b90620009a5620001536200036b9262000491565b82546200097d565b620009b9600562000971565b90620009c781600562000991565b620009fe620009f77f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000491565b9162000491565b9162000a0960405190565b80805b0390a3565b6200016f62000153620001539290565b620001539062000a11565b1562000a3457565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b620001539081565b62000153905462000a79565b634e487b7160e01b600052601160045260246000fd5b9190820180921162000ab157565b62000a8d565b600062000b3f62000b248362000acd8462000a21565b9362000aee6001600160a01b0386166001600160a01b038416141562000a2c565b62000afb87838762000b92565b62000b1e62000b168862000b10600262000a81565b62000aa3565b60026200034f565b620004b8565b62000b388562000b348362000a81565b0190565b906200034f565b62000a0c62000b7a62000b737fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9362000491565b9362000491565b9362000b8560405190565b9182918290815260200190565b90620000bc929162000bff565b1562000ba757565b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b505050620000bc62000c1862000c1462000c35565b1590565b62000b9f565b62000153906200037f565b62000153905462000c1e565b62000153600562000c29565b60601b1562000c4c57565b63d92e233d6000526004601cfdfe6080604052600436101561001257600080fd5b60003560e01c806302252c4d1461033257806306fdde031461032d578063095ea7b31461032857806312d75f131461032357806318160ddd1461031e57806323b872dd14610319578063313ce567146103145780633381e7e21461030f578063351a964d1461030a578063378dc3dc1461030557806339509351146103005780633af32abf146102fb5780633f4ba83a146102f657806342966c68146102f157806346904840146102ec57806349bd5a5e146102e75780634c09f37c146102e257806351bc3c85146102dd5780635c975abb146102d857806362997f8c146102d357806370a08231146102ce578063715018a6146102c957806379cc6790146102c45780638456cb59146102bf57806384c5dd01146102ba578063883356d9146102b55780638da5cb5b146102b05780638e8c10a2146102ab57806395d89b41146102a657806399735fd8146102a1578063a001ecdd1461029c578063a09a160114610297578063a457c2d714610292578063a82ed9ec1461028d578063a9059cbb14610288578063b9d0f1af14610283578063ba9341c01461027e578063c68ff0fe14610279578063d163364914610274578063d1ed0a0f1461026f578063d48e41271461026a578063d8f6785114610265578063dcc79cc814610260578063dd62ed3e1461025b578063e08973ce14610256578063ec57459c14610251578063f01f20df1461024c578063f19c4e3b14610247578063f2fde38b146102425763f69cf7830361033757610c38565b610c20565b610c07565b610bec565b610bc5565b610b9e565b610b76565b610b3b565b610b23565b610b08565b610ae1565b610abf565b610a86565b610a4a565b6109d2565b6109b6565b61098f565b61090f565b6108f4565b6108d9565b6108b2565b61088b565b610870565b610855565b61083a565b61081f565b6107fb565b6107e2565b6107ca565b6107af565b610794565b61076d565b610755565b61073a565b6106fd565b6106d6565b6106b2565b61069a565b61067f565b610663565b61062a565b61060f565b6105d2565b610580565b610564565b610508565b6104d2565b610479565b610403565b61036b565b600080fd5b805b0361033757565b905035906103528261033c565b565b906020828203126103375761036891610345565b90565b346103375761038361037e366004610354565b6113d4565b604051005b0390f35b600091031261033757565b60005b8381106103aa5750506000910152565b818101518382015260200161039a565b6103db6103e46020936103ee936103cf815190565b80835293849260200190565b95869101610397565b601f01601f191690565b0190565b6020808252610368929101906103ba565b346103375761041336600461038c565b61038861041e610f96565b604051918291826103f2565b6001600160a01b031690565b6001600160a01b03811661033e565b9050359061035282610436565b9190604083820312610337576103689061046c8185610445565b93602001610345565b9052565b346103375761038861049561048f366004610452565b90611019565b60405191829182901515815260200190565b610368916008021c6001600160a01b031690565b9061036891546104a7565b610368600060086104bb565b34610337576104e236600461038c565b6103886104ed6104c6565b6040515b918291826001600160a01b03909116815260200190565b346103375761051836600461038c565b610388610523610fbb565b6040515b9182918290815260200190565b90916060828403126103375761036861054d8484610445565b9361055b8160208601610445565b93604001610345565b346103375761038861049561057a366004610534565b91611913565b346103375761059036600461038c565b6040517f000000000000000000000000000000000000000000000000000000000000000060ff168152602090f35b906020828203126103375761036891610445565b34610337576103836105e53660046105be565b6112d5565b610368916008021c5b60ff1690565b9061036891546105ea565b6103686014806105f9565b346103375761061f36600461038c565b610388610495610604565b346103375761063a36600461038c565b6103887f0000000000000000000000000000000000000000000000000000000000000000610523565b3461033757610388610495610679366004610452565b90611051565b34610337576103886104956106953660046105be565b611276565b34610337576106aa36600461038c565b610383611c57565b34610337576103836106c5366004610354565b6119f8565b6103686000600d6104bb565b34610337576106e636600461038c565b6103886104ed6106ca565b610368600060146104bb565b346103375761070d36600461038c565b6103886104ed6106f1565b610368916008021c81565b906103689154610718565b61036860006012610723565b346103375761074a36600461038c565b61038861052361072e565b346103375761076536600461038c565b61038361254e565b346103375761077d36600461038c565b610388610495610e57565b6103686000600a610723565b34610337576107a436600461038c565b610388610523610788565b34610337576103886105236107c53660046105be565b610fdd565b34610337576107da36600461038c565b610383610ca8565b34610337576103836107f5366004610452565b90611b68565b346103375761080b36600461038c565b610383611bb5565b6103686000600b610723565b346103375761082f36600461038c565b610388610523610813565b346103375761084a36600461038c565b61038861049561126c565b346103375761086536600461038c565b6103886104ed610c66565b346103375761088036600461038c565b610388610495611292565b346103375761089b36600461038c565b61038861041e610fa0565b6103686000600e6104bb565b34610337576108c236600461038c565b6103886104ed6108a6565b6103686000600f610723565b34610337576108e936600461038c565b6103886105236108cd565b346103375761090436600461038c565b610388610495611262565b3461033757610388610495610925366004610452565b906110ca565b6103689061042a906001600160a01b031682565b6103689061092b565b6103689061093f565b610368737a250d5630b4cf539739df2c5dacb4c659f2488d610948565b610368610951565b61047590610948565b6020810192916103529190610976565b346103375761099f36600461038c565b6103886109aa61096e565b6040519182918261097f565b34610337576103886104956109cc366004610452565b90611633565b34610337576103836109e5366004610354565b611328565b610368906105f3565b61036890546109ea565b6103689060081c6105f3565b61036890546109fd565b6103689060101c6105f3565b6103689054610a13565b600c610a34816109f3565b916103686000610a4384610a09565b9301610a1f565b3461033757610a5a36600461038c565b610388610a65610a29565b60408051931515845291151560208401521515908201529081906060820190565b3461033757610a9636600461038c565b6103887f00000000000000000000000000000000000000000000000000000000000000006104ed565b6103886109aa610ad0366004610354565b61236a565b61036860006010610723565b3461033757610af136600461038c565b610388610523610ad5565b61036860006009610723565b3461033757610b1836600461038c565b610388610523610afc565b3461033757610383610b36366004610354565b611598565b3461033757610383610b4e3660046105be565b6124a1565b91906040838203126103375761036890610b6d8185610445565b93602001610445565b3461033757610388610523610b8c366004610b53565b90610ff9565b61036860006013610723565b3461033757610bae36600461038c565b610388610523610b92565b61036860006007610723565b3461033757610bd536600461038c565b610388610523610bb9565b61036860006011610723565b3461033757610bfc36600461038c565b610388610523610be0565b3461033757610383610c1a366004610452565b906114e8565b3461033757610383610c333660046105be565b610dbf565b3461033757610383610c4b366004610354565b611348565b6103689060081c61042a565b6103689054610c50565b6103686005610c5c565b610c78610d04565b610352610c96565b61042a6103686103689290565b61036890610c80565b610352610ca36000610c8d565b610dfc565b610352610c70565b15610cb757565b60405162461bcd60e51b815280610d00600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b610352610d0f610c66565b610d28610d1b3361042a565b916001600160a01b031690565b14610cb0565b61035290610d3a610d04565b610d9a565b15610d4657565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61035290610ca3610dae61042a6000610c8d565b6001600160a01b0383161415610d3f565b61035290610d2e565b90610100600160a81b039060081b5b9181191691161790565b90610df1610368610df892610948565b8254610dc8565b9055565b610e066005610c5c565b90610e12816005610de1565b610e45610e3f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610948565b91610948565b91610e4f60405190565b80805b0390a3565b61036860056109f3565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610e97575b6020831014610e9257565b610e61565b91607f1691610e87565b80546000939291610ebe610eb483610e77565b8085529360200190565b9160018116908115610f105750600114610ed757505050565b610eea9192939450600052602060002090565b916000925b818410610efc5750500190565b805484840152602090930192600101610eef565b92949550505060ff1916825215156020020190565b9061036891610ea1565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610f6757604052565b610f2f565b90610352610f8692610f7d60405190565b93848092610f25565b0383610f45565b61036890610f6c565b6103686003610f8d565b6103686004610f8d565b6103689081565b6103689054610faa565b6103686002610fb1565b90610fcf90610948565b600052602052604060002090565b610ff461036891610fec600090565b506000610fc5565b610fb1565b61036891611014610ff49261100c600090565b506001610fc5565b610fc5565b6110249190336111cb565b600190565b634e487b7160e01b600052601160045260246000fd5b9190820180921161104c57565b611029565b611024919061106a33926110658385610ff9565b61103f565b916111cb565b1561107757565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b611024919061106a33926110de8385610ff9565b6110ea82821015611070565b0390565b156110f557565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b1561114d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b9060001990610dd7565b6103686103686103689290565b906111c4610368610df8926111a7565b825461119d565b61120a6111f96111db6000610c8d565b61042a6001600160a01b0382166001600160a01b03861614156110ee565b6001600160a01b0384161415611146565b6112228361121d84611014856001610fc5565b6111b4565b610e526112586112527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610948565b93610948565b9361052760405190565b610368600c610a09565b610368600c6109f3565b61128d61036891611285600090565b506015610fc5565b6109f3565b610368600c610a1f565b6103689061042a565b610368905461129c565b906001600160a01b0390610dd7565b906112ce610368610df892610948565b82546112af565b6112df600e6112a5565b6112ef610d1b61042a6000610c8d565b036112ff5761035290600e6112be565b60405163131d002d60e01b8152600490fd5b6103529061131d610d04565b61035290600a6111b4565b61035290611311565b6103529061133d610d04565b61035290600b6111b4565b61035290611331565b6103529061135d610d04565b6103529061136961141c565b6113766103686009610fb1565b8111156113c2576113888160096111b4565b6113b27faab136b9dbe20468ab36dcd11abd26b3dcea2b259f018136905bf827f37f5514916111a7565b906113bc60405190565b600090a2565b60405163521e96bb60e11b8152600490fd5b61035290611351565b156113e457565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b61035261142e61142a610e57565b1590565b6113dd565b9061035291611440610d04565b906103529161144d61141c565b61145d565b6103686107d06111a7565b90611469610368611452565b81116114c15761147882612b3d565b61148382600d6112be565b61148e81600f6111b4565b610e456114bb7fe42708d93b95810922305119a3271ca42233da9ebe1e1e503f0e887817a32c7a93610948565b916111a7565b610d00906114ce60405190565b6365a0074b60e11b81529182916004830190815260200190565b9061035291611433565b610352906114fe610d04565b6103529061150a61141c565b61151561142a611292565b61158657611524610368611452565b811161155f576115358160116111b4565b6113b27f8c3208fa4fab043d09d9517339346757a58804a46f954585ba21465677820817916111a7565b610d009061156c60405190565b6305dba32960e51b81529182916004830190815260200190565b6040516319b3ca5360e31b8152600490fd5b610352906114f2565b9061036892916115af61141c565b6115ca565b6103689060a01c6105f3565b61036890546115b4565b50336115d660146115c0565b8061161c575b80611605575b6115f15750906103689161163f565b61036892826115ff9261256c565b9061163f565b5061161761142a61128d846015610fc5565b6115e2565b5061162e61142a61128d836015610fc5565b6115dc565b610368919060006115a1565b61102491903361175c565b61175c565b1561165657565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156116b057565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561170857565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6117eb6117d88360006117a361179261177483610c8d565b61042a6001600160a01b0382166001600160a01b038a16141561164f565b6001600160a01b03841614156116a9565b6117ae87838761181b565b6110146117ce886117c2610ff48986610fc5565b6110ea82821015611701565b61121d8784610fc5565b6117e5856103ee83610fb1565b906111b4565b610e526112586112527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610948565b906103529291611885565b1561182d57565b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b50505061035261189661142a610e57565b611826565b906103689392916118aa61141c565b5091906118b760146115c0565b806118fc575b806118e5575b6118d05761036892611920565b6118df8392826103689561256c565b91611920565b506118f761142a61128d836015610fc5565b6118c3565b5061190e61142a61128d856015610fc5565b6118bd565b610368929190600061189b565b61102492919061164a83335b8361197e565b1561193957565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b906119898183610ff9565b6000198103611999575b50505050565b6119ad9361106a916110ea82821015611932565b38808080611993565b610352906119c2610d04565b610352906119ce61141c565b6119d961142a61126c565b6119e65761035290611a01565b604051636cb5913960e01b8152600490fd5b610352906119b6565b6103529033611abd565b611abd565b15611a1757565b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b15611a6d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b600090611b1d611acc83610c8d565b92611aeb6001600160a01b0385166001600160a01b0385161415611a10565b611af685858561181b565b61121d83611b1787611b0b610ff48487610fc5565b6110ea82821015611a66565b92610fc5565b6117eb611b2e846110ea6002610fb1565b60026111b4565b9061035291611b42610d04565b9061035291611b4f61141c565b90611b5b61142a61126c565b6119e65761035291611b72565b9061035291611b35565b6103529190611a0b823361192c565b611b89610d04565b610352611b9761142a611262565b611ba357610352611c2d565b60405163f00085b960e01b8152600490fd5b610352611b81565b611bc561141c565b610352611bed565b9060ff90610dd7565b90611be6610368610df892151590565b8254611bcd565b611bf960016005611bd6565b33611c287f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916104f160405190565b0390a1565b610352611bbd565b611c3d610d04565b610352611c4b61142a611262565b611ba357610352611ca5565b610352611c35565b611c67611cf0565b610352611c7660006005611bd6565b33611c287f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916104f160405190565b610352611c5f565b15611cb457565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b610352611cfb610e57565b611cad565b9061036891611d0d610d04565b90611d1f91611d1a6123cb565b611ebd565b906103526123fd565b610368670de0b6b3a76400006111a7565b9081526040810192916103529160200152565b0152565b6103686706f05b59d3b200006111a7565b905051906103528261033c565b906020828203126103375761036891611d61565b6040513d6000823e3d90fd5b6103686127106111a7565b9050519061035282610436565b906020828203126103375761036891611d99565b80151561033e565b9050519061035282611dba565b906020828203126103375761036891611dc2565b6001600160a01b0390911681526040810192916103529160200152565b909160608284031261033757610368611e198484611d61565b93611e278160208601611d61565b93604001611d61565b610475906111a7565b9194611e87611d4c92989795611e7d60a096611e736103529a611e6c60c08a019e60008b01906001600160a01b03169052565b6020890152565b6040870190611e30565b6060850190611e30565b6001600160a01b03166080830152565b9060ff60a01b9060a01b610dd7565b90611eb6610368610df892151590565b8254611e97565b5034611ec960146115c0565b61235857611ed5611d28565b8083108015612345575b6123225750611eec611d50565b8082106123005750611f3b90611f0b611f0430610948565b9384611633565b506020611f23611f1e611f1e60086112a5565b610948565b6370a0823190611f3260405190565b94859260e01b90565b82526001600160a01b038616600483015260249082905afa9182156121df576000926122d0575b50611f87611f79611f736013610fb1565b83612432565b611f81611d8e565b90612461565b91611f9c611f986103686007610fb1565b9190565b116122b9575b81611fac91612415565b611fb7611f1e610951565b92611fca611fc3610fbb565b85836111cb565b63c45a0155611fe2611fdb60405190565b9160e01b90565b8152602081600481885afa9081156121df5761200a91611f1e9160009161229b575b50610948565b9063c9c653969163ad5c46489061202a61202360405190565b9260e01b90565b82526020826004818a5afa9081156121df5761208794602093600093612275575b5060006120689161205b60405190565b9788958694859360e01b90565b83526001600160a01b03808a1660048501521660248301526044820190565b03925af19182156121df576120df926120aa91600091612247575b5060146112be565b60206120bc611f1e611f1e60146112a5565b63095ea7b3906120d3600080199361205b60405190565b83528c60048401611de3565b03925af19182156121df5760609261221b575b5063f305d7199461212e61210583610fdd565b94600097612139612114610c66565b42908b8061212160405190565b9b8c9a8b998a9860e01b90565b885260048801611e39565b03925af180156121df576121ed575b5061215560016014611ea6565b61215e826111a7565b81116121b6575b505061217160146112a5565b61219b7f57a9f98b233034883786b9c47f1f6fabcf1655e39d3213b7287b926ca387136e91610948565b906121a560405190565b600090a2610368611f1e60146112a5565b818080926121ca611f1e611f1e600e6112a5565b8282156121e4575bf1156121df573880612165565b611d82565b506108fc6121d2565b61220d9060603d8111612214575b6122058183610f45565b810190611e00565b5050612148565b503d6121fb565b61223b9060203d8111612240575b6122338183610f45565b810190611dcf565b6120f2565b503d612229565b612268915060203d811161226e575b6122608183610f45565b810190611da6565b386120a2565b503d612256565b612068919350612293600091863d811161226e576122608183610f45565b93915061204b565b6122b3915060203d811161226e576122608183610f45565b38612004565b9050611fac6122c860006111a7565b919050611fa2565b6122f291925060203d81116122f9575b6122ea8183610f45565b810190611d6e565b9038611f62565b503d6122e0565b90610d0061230d60405190565b62fdf57560e51b815292839260048401611d39565b82610d0061232f60405190565b63c7bcc1b960e01b815292839260048401611d39565b506123516107c5610c66565b8311611edf565b60405163250856ab60e21b8152600490fd5b610368906000611d00565b61036860026111a7565b1561238657565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6103526123d86006610fb1565b6123ec6123e3612375565b9182141561237f565b60066111b4565b61036860016111a7565b6103526123ec6123f3565b9190820391821161104c57565b6103689190612408565b8181029291811591840414171561104c57565b610368919061241f565b634e487b7160e01b600052601260045260246000fd5b811561245c570490565b61243c565b6103689190612452565b61035290612477610d04565b61248160086112a5565b612491610d1b61042a6000610c8d565b036112ff576103529060086112be565b6103529061246b565b6124b26123cb565b6124ba6124c2565b6103526123fd565b6124cb30610948565b6124d481610fdd565b906000916124e1836111a7565b811161252c575b50316124f7610368600b610fb1565b8111612501575050565b81808092612513611f1e611f1e610c66565b828215612523575bf1156121df57565b506108fc61251b565b6125436125489161253d600a610fb1565b90612b2b565b612b22565b386124e8565b6103526124aa565b6103689060a81c6105f3565b6103689054612556565b6125929392918491612592612597612583866127c7565b9482829c8588969b959c612408565b612408565b9485976125a761042a60146112a5565b6001600160a01b03851614806127a7575b80612783575b612752576000956125ce876111a7565b8103612738575b506125df866111a7565b8103612707575b506125f0856111a7565b81036126ed575b50612601846111a7565b81036126dd575b505061261330610948565b9061261d82610fdd565b9061262b61142a6014612562565b90816126c4575b50806126af575b6126435750505050565b6126689192939495506126626125439161265d600a610fb1565b612b2b565b85612b2b565b31612676610368600b610fb1565b811161268157505090565b81808092612695611f1e611f1e600d6112a5565b8282156126a6575bf1156121df5790565b506108fc61269d565b506126bd610368600a610fb1565b8111612639565b90506126d6610d1b61042a60146112a5565b1438612632565b6126e691611abd565b3880612608565b612701906126fb600d6112a5565b8461175c565b386125f7565b612732907f00000000000000000000000000000000000000000000000000000000000000008561175c565b386125e6565b61274c90612746600e6112a5565b8661175c565b386125d5565b610d008561275f60405190565b63f6202a8f60e01b8152918291600483016001600160a01b03909116815260200190565b506127918761106587610fdd565b6127a1611f986103686009610fb1565b116125be565b506127b661042a611f1e610951565b6001600160a01b03861614156125b8565b6000906127dd6127d76012610fb1565b8261241f565b916127f06127e9611d8e565b8094612452565b9361280d84612808612802600f610fb1565b8661241f565b612452565b936128258161280861281f6010610fb1565b8761241f565b9361282e611292565b612836575050565b6103689293506128089061284a6011610fb1565b9061241f565b6124ba9061285c6123cb565b612887565b9060ff60a81b9060a81b610dd7565b90612880610368610df892151590565b8254612861565b61289c9061289760016014612870565b6129f4565b61035260006014612870565b906103526128b560405190565b9283610f45565b67ffffffffffffffff8111610f675760208091020190565b906128e66128e1836128bc565b6128a8565b918252565b369037565b90610352612906612900846128d4565b936128bc565b601f1901602084016128eb565b634e487b7160e01b600052603260045260246000fd5b90612932825190565b811015612943576020809102010190565b612913565b90612968612961612957845190565b8084529260200190565b9260200190565b9060005b8181106129795750505090565b90919261299f61299860019286516001600160a01b0316815260200190565b9460200190565b92910161296c565b906129e2611d4c91610352969897956129d56080966129cb60a08801946000890152565b6020870190611e30565b8482036040860152612948565b6001600160a01b039097166060830152565b612a06612a0160026111a7565b6128f0565b612a0f30610948565b90600092612a3783612a29612a23876111a7565b85612929565b906001600160a01b03169052565b612a42611f1e610951565b63ad5c4648612a53611fdb60405190565b8152602081600481855afa80156121df57612a83918791612b04575b50612a29612a7d60016111a7565b86612929565b612a8e8282866111cb565b63791ac947934290823b15610337578695612acc612ac1938897938894612ab460405190565b9a8b998a98899760e01b90565b8752600487016129a7565b03925af180156121df57612ade575050565b8161035292903d10612afd575b612af58183610f45565b81019061038c565b503d612aeb565b612b1c915060203d811161226e576122608183610f45565b38612a6f565b61035290612850565b9080821015612b38575090565b905090565b60601b15612b4757565b63d92e233d6000526004601cfdfea264697066735822122000f7c3f5e88eef6b6a202c331cbfe0872536155bfbb28517d245c5e1a27e130364736f6c63430008140033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x62 JUMPI PUSH3 0x2E PUSH3 0x18 PUSH3 0x2FE JUMP JUMPDEST SWAP11 SWAP10 SWAP1 SWAP10 SWAP9 SWAP2 SWAP9 SWAP8 SWAP3 SWAP8 SWAP7 SWAP4 SWAP7 SWAP6 SWAP5 SWAP6 PUSH3 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8B PUSH3 0xC5B DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x595 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x63F ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0xA9B ADD MSTORE PUSH2 0x270D ADD MSTORE PUSH2 0x2B8B SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x67 JUMP JUMPDEST SWAP1 PUSH3 0xBC PUSH3 0xB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x7D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x9F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xEF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xDE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH3 0x119 PUSH3 0x113 DUP3 PUSH3 0xBE JUMP JUMPDEST PUSH3 0xA5 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH3 0x62 JUMPI PUSH3 0xBC SWAP3 PUSH3 0xDB JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0x62 JUMPI DUP2 MLOAD PUSH3 0x153 SWAP3 PUSH1 0x20 ADD PUSH3 0x100 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH3 0x62 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x156 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x158 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x17B JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH3 0x158 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH3 0x62 JUMPI PUSH3 0x202 PUSH3 0x1D0 PUSH1 0x60 PUSH3 0xA5 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH3 0x1DF DUP3 DUP6 PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH3 0x1F3 DUP3 DUP3 DUP7 ADD PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 DUP1 SWAP4 ADD PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1C0 DUP3 DUP5 SUB SLT PUSH3 0x62 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x62 JUMPI DUP4 PUSH3 0x235 SWAP2 DUP5 ADD PUSH3 0x136 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x62 JUMPI DUP2 PUSH3 0x25A SWAP2 DUP6 ADD PUSH3 0x136 JUMP JUMPDEST SWAP3 PUSH3 0x26A DUP3 PUSH1 0x40 DUP4 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x27A DUP4 PUSH1 0x60 DUP5 ADD PUSH3 0x18B JUMP JUMPDEST SWAP3 PUSH3 0x28A DUP2 PUSH1 0x80 DUP6 ADD PUSH3 0x1B2 JUMP JUMPDEST SWAP3 PUSH3 0x29A DUP3 PUSH1 0xE0 DUP4 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2AB DUP4 PUSH2 0x100 DUP5 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2BC DUP2 PUSH2 0x120 DUP6 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2CD DUP3 PUSH2 0x140 DUP4 ADD PUSH3 0x18B JUMP JUMPDEST SWAP3 PUSH3 0x153 PUSH3 0x2E2 DUP5 PUSH2 0x160 DUP6 ADD PUSH3 0x18B JUMP JUMPDEST SWAP4 PUSH3 0x2F3 DUP2 PUSH2 0x180 DUP7 ADD PUSH3 0x160 JUMP JUMPDEST SWAP4 PUSH2 0x1A0 ADD PUSH3 0x160 JUMP JUMPDEST PUSH3 0x321 PUSH3 0x37E6 DUP1 CODESIZE SUB DUP1 PUSH3 0x315 DUP2 PUSH3 0xA5 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x208 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x363 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x33F JUMP JUMPDEST DUP3 SLOAD PUSH3 0x32F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x37F PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH2 0x7D0 PUSH3 0x33F JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x3AF PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x392 JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x3D8 PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x3B7 JUMP JUMPDEST SWAP1 PUSH3 0xFF0000 SWAP1 PUSH1 0x10 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x402 PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH3 0x44D SWAP1 PUSH1 0x40 SWAP1 PUSH3 0x42D PUSH3 0x426 DUP3 MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH3 0x39C JUMP JUMPDEST PUSH3 0x446 PUSH3 0x43F PUSH1 0x20 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH3 0x3C5 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x3EF JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x40A JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x335 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x16F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x470 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x486 JUMP JUMPDEST SWAP1 PUSH3 0x4B0 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x491 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x460 JUMP JUMPDEST SWAP1 PUSH3 0x4C4 SWAP1 PUSH3 0x491 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x16F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0x4D2 JUMP JUMPDEST SWAP1 PUSH3 0x4FD SWAP2 SWAP13 SWAP12 SWAP4 SWAP11 SWAP9 SWAP3 SWAP10 SWAP13 PUSH3 0x6FE JUMP JUMPDEST PUSH3 0x514 PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x7 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x522 PUSH1 0x19 PUSH1 0x10 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x53D PUSH1 0x32 PUSH3 0x535 DUP2 PUSH1 0x12 PUSH3 0x34F JUMP JUMPDEST PUSH1 0x13 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x548 DUP10 PUSH3 0xC41 JUMP JUMPDEST DUP8 PUSH1 0xA0 MSTORE PUSH3 0x558 PUSH1 0x12 PUSH3 0x36F JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH1 0xC0 MSTORE PUSH3 0x568 PUSH3 0x385 JUMP JUMPDEST DUP1 DUP8 GT PUSH3 0x6C9 JUMPI PUSH1 0x40 DUP4 ADD MLOAD PUSH3 0x651 JUMPI JUMPDEST POP POP PUSH3 0x5DB SWAP5 SWAP4 PUSH3 0x5B8 PUSH3 0x5D3 SWAP5 PUSH3 0x5B0 PUSH3 0xBC SWAP12 SWAP13 SWAP6 PUSH3 0x5A8 PUSH3 0x5C0 SWAP7 PUSH1 0xC PUSH3 0x454 JUMP JUMPDEST PUSH1 0x9 PUSH3 0x34F JUMP JUMPDEST PUSH1 0xA PUSH3 0x34F JUMP JUMPDEST PUSH1 0xB PUSH3 0x34F JUMP JUMPDEST PUSH3 0x5CB DUP2 PUSH3 0xC41 JUMP JUMPDEST PUSH1 0xD PUSH3 0x49C JUMP JUMPDEST PUSH1 0xF PUSH3 0x34F JUMP JUMPDEST PUSH3 0x5E7 PUSH1 0x0 PUSH3 0x33F JUMP JUMPDEST DUP2 SUB PUSH3 0x63E JUMPI JUMPDEST POP PUSH3 0x61E PUSH1 0x1 SWAP2 PUSH3 0x62B DUP4 PUSH3 0x61E PUSH1 0x15 SWAP4 PUSH3 0x624 DUP4 PUSH3 0x61E PUSH3 0x617 ADDRESS PUSH3 0x491 JUMP JUMPDEST DUP9 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x39C JUMP JUMPDEST DUP5 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x637 PUSH1 0xD PUSH3 0x4DD JUMP JUMPDEST SWAP1 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x64A SWAP1 DUP3 PUSH3 0xAB7 JUMP JUMPDEST CODESIZE PUSH3 0x5EF JUMP JUMPDEST DUP2 GT PUSH3 0x69C JUMPI SWAP4 PUSH3 0x5B8 PUSH3 0x5D3 SWAP5 PUSH3 0x5B0 PUSH3 0xBC SWAP12 SWAP13 SWAP6 PUSH3 0x5A8 PUSH3 0x5C0 SWAP7 PUSH3 0x688 PUSH3 0x5DB SWAP13 SWAP12 PUSH1 0x11 PUSH3 0x34F JUMP JUMPDEST SWAP7 POP POP SWAP6 SWAP13 SWAP12 POP POP SWAP5 POP DUP2 SWAP6 SWAP7 POP PUSH3 0x57B JUMP JUMPDEST PUSH3 0x6C5 SWAP1 PUSH3 0x6AB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5DBA329 PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH3 0x6C5 DUP8 PUSH3 0x6D8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x65A0074B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH1 0x1 PUSH3 0x33F JUMP JUMPDEST SWAP1 PUSH3 0x70A SWAP2 PUSH3 0x720 JUMP JUMPDEST PUSH3 0xBC PUSH3 0x718 PUSH3 0x6F2 JUMP JUMPDEST PUSH1 0x6 PUSH3 0x34F JUMP JUMPDEST SWAP1 PUSH3 0x72C SWAP2 PUSH3 0x737 JUMP JUMPDEST PUSH3 0xBC CALLER PUSH3 0x9AD JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH3 0x747 SWAP2 PUSH3 0x755 JUMP JUMPDEST PUSH3 0xBC PUSH1 0x0 PUSH1 0x5 PUSH3 0x39C JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x949 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH3 0x79A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x794 JUMPI JUMP JUMPDEST PUSH3 0x761 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x788 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH3 0x335 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x7CF PUSH3 0x153 PUSH3 0x36B SWAP4 PUSH3 0x33F JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x7A5 JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x7BA JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x7F2 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH3 0x802 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH3 0x7D8 JUMP JUMPDEST ADD PUSH3 0x7E6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH3 0x819 JUMPI POP POP POP JUMP JUMPDEST PUSH3 0x82D PUSH3 0xBC SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH3 0x851 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH3 0x7E6 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x841 JUMP JUMPDEST SWAP1 PUSH3 0x866 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x9F JUMPI PUSH3 0x88E DUP3 PUSH3 0x887 DUP6 SLOAD PUSH3 0x777 JUMP JUMPDEST DUP6 PUSH3 0x809 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x8CD JUMPI PUSH3 0x36B SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x8C1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x8AD JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH3 0x8E3 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x924 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH3 0x90A JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x901 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH3 0x8E7 JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x85C JUMP JUMPDEST SWAP1 PUSH3 0x95B PUSH3 0xBC SWAP3 PUSH1 0x3 PUSH3 0x93D JUMP JUMPDEST PUSH1 0x4 PUSH3 0x93D JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH1 0x8 SHR PUSH3 0x16F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0x963 JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x9A5 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x491 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x97D JUMP JUMPDEST PUSH3 0x9B9 PUSH1 0x5 PUSH3 0x971 JUMP JUMPDEST SWAP1 PUSH3 0x9C7 DUP2 PUSH1 0x5 PUSH3 0x991 JUMP JUMPDEST PUSH3 0x9FE PUSH3 0x9F7 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP2 PUSH3 0x491 JUMP JUMPDEST SWAP2 PUSH3 0xA09 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH3 0x16F PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0xA11 JUMP JUMPDEST ISZERO PUSH3 0xA34 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x153 SWAP1 DUP2 JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0xA79 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xAB1 JUMPI JUMP JUMPDEST PUSH3 0xA8D JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB3F PUSH3 0xB24 DUP4 PUSH3 0xACD DUP5 PUSH3 0xA21 JUMP JUMPDEST SWAP4 PUSH3 0xAEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH3 0xA2C JUMP JUMPDEST PUSH3 0xAFB DUP8 DUP4 DUP8 PUSH3 0xB92 JUMP JUMPDEST PUSH3 0xB1E PUSH3 0xB16 DUP9 PUSH3 0xB10 PUSH1 0x2 PUSH3 0xA81 JUMP JUMPDEST PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0xB38 DUP6 PUSH3 0xB34 DUP4 PUSH3 0xA81 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x34F JUMP JUMPDEST PUSH3 0xA0C PUSH3 0xB7A PUSH3 0xB73 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP4 PUSH3 0xB85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP3 SWAP2 PUSH3 0xBFF JUMP JUMPDEST ISZERO PUSH3 0xBA7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP PUSH3 0xBC PUSH3 0xC18 PUSH3 0xC14 PUSH3 0xC35 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH3 0xB9F JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x37F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0xC1E JUMP JUMPDEST PUSH3 0x153 PUSH1 0x5 PUSH3 0xC29 JUMP JUMPDEST PUSH1 0x60 SHL ISZERO PUSH3 0xC4C JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2252C4D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x12D75F13 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x3381E7E2 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x351A964D EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x4C09F37C EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x51BC3C85 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x62997F8C EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x84C5DD01 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x883356D9 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8E8C10A2 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x99735FD8 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA09A1601 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xB9D0F1AF EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xBA9341C0 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xC68FF0FE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xD1ED0A0F EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xD48E4127 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xD8F67851 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xDCC79CC8 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE08973CE EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xEC57459C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xF01F20DF EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xF19C4E3B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH4 0xF69CF783 SUB PUSH2 0x337 JUMPI PUSH2 0xC38 JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x337 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x33C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x345 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x337 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3AA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39A JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x3E4 PUSH1 0x20 SWAP4 PUSH2 0x3EE SWAP4 PUSH2 0x3CF DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x368 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3BA JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x41E PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x33E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x436 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP1 PUSH2 0x46C DUP2 DUP6 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x345 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x8 PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 PUSH2 0x54D DUP5 DUP5 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH2 0x55B DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x345 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x534 JUMP JUMPDEST SWAP2 PUSH2 0x1913 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x445 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x14 DUP1 PUSH2 0x5F9 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x604 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x63A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH32 0x0 PUSH2 0x523 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x679 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1051 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x1276 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x6AA CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x1C57 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x6C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xD PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x14 PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x718 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x12 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x74A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x72E JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x765 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x254E JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x77D CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xA PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x7A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x788 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x523 PUSH2 0x7C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0xCA8 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x7F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1B68 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x80B CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xB PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x82F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x813 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x126C JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x865 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0xC66 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x880 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x1292 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x89B CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x41E PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xE PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x8C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xF PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x8E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x8CD JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x904 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x1262 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x925 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x42A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x368 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH2 0x948 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x475 SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x976 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x99F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x9AA PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x97F JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x9CC CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1633 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x9E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x8 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x10 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xA13 JUMP JUMPDEST PUSH1 0xC PUSH2 0xA34 DUP2 PUSH2 0x9F3 JUMP JUMPDEST SWAP2 PUSH2 0x368 PUSH1 0x0 PUSH2 0xA43 DUP5 PUSH2 0xA09 JUMP JUMPDEST SWAP4 ADD PUSH2 0xA1F JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0xA65 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xA96 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH32 0x0 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x388 PUSH2 0x9AA PUSH2 0xAD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x236A JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x10 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xAF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x9 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xB18 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xAFC JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xB36 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1598 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xB4E CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x24A1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP1 PUSH2 0xB6D DUP2 DUP6 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x445 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x523 PUSH2 0xB8C CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST SWAP1 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x13 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBAE CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x7 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x11 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBFC CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xBE0 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC1A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x14E8 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC33 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC4B CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x8 SHR PUSH2 0x42A JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x5 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0xC78 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x42A PUSH2 0x368 PUSH2 0x368 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x352 PUSH2 0xCA3 PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x352 PUSH2 0xC70 JUMP JUMPDEST ISZERO PUSH2 0xCB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xD00 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0xD0F PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xD28 PUSH2 0xD1B CALLER PUSH2 0x42A JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xD3A PUSH2 0xD04 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST ISZERO PUSH2 0xD46 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xCA3 PUSH2 0xDAE PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xD2E JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDF1 PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x948 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDC8 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE06 PUSH1 0x5 PUSH2 0xC5C JUMP JUMPDEST SWAP1 PUSH2 0xE12 DUP2 PUSH1 0x5 PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0xE3F PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0xE4F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x5 PUSH2 0x9F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xE97 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE92 JUMPI JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE87 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xEBE PUSH2 0xEB4 DUP4 PUSH2 0xE77 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xF10 JUMPI POP PUSH1 0x1 EQ PUSH2 0xED7 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xEEA SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xEFC JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xEEF JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 PUSH2 0xEA1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0xF86 SWAP3 PUSH2 0xF7D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xF25 JUMP JUMPDEST SUB DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x368 PUSH1 0x3 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x368 PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x368 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x2 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0xFCF SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xFF4 PUSH2 0x368 SWAP2 PUSH2 0xFEC PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH2 0x1014 PUSH2 0xFF4 SWAP3 PUSH2 0x100C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 CALLER PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x106A CALLER SWAP3 PUSH2 0x1065 DUP4 DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST SWAP2 PUSH2 0x11CB JUMP JUMPDEST ISZERO PUSH2 0x1077 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x106A CALLER SWAP3 PUSH2 0x10DE DUP4 DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1070 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x114D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x368 PUSH2 0x368 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11C4 PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x11A7 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x119D JUMP JUMPDEST PUSH2 0x120A PUSH2 0x11F9 PUSH2 0x11DB PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x1222 DUP4 PUSH2 0x121D DUP5 PUSH2 0x1014 DUP6 PUSH1 0x1 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x1258 PUSH2 0x1252 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP4 PUSH2 0x527 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x128D PUSH2 0x368 SWAP2 PUSH2 0x1285 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x129C JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x12CE PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x948 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x12DF PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x12EF PUSH2 0xD1B PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH2 0x352 SWAP1 PUSH1 0xE PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131D002D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x131D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH1 0xA PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x133D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH1 0xB PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x135D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1369 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1376 PUSH2 0x368 PUSH1 0x9 PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x13C2 JUMPI PUSH2 0x1388 DUP2 PUSH1 0x9 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0xAAB136B9DBE20468AB36DCD11ABD26B3DCEA2B259F018136905BF827F37F5514 SWAP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 PUSH2 0x13BC PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x521E96BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1351 JUMP JUMPDEST ISZERO PUSH2 0x13E4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x142E PUSH2 0x142A PUSH2 0xE57 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x13DD JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1440 PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x144D PUSH2 0x141C JUMP JUMPDEST PUSH2 0x145D JUMP JUMPDEST PUSH2 0x368 PUSH2 0x7D0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 PUSH2 0x1469 PUSH2 0x368 PUSH2 0x1452 JUMP JUMPDEST DUP2 GT PUSH2 0x14C1 JUMPI PUSH2 0x1478 DUP3 PUSH2 0x2B3D JUMP JUMPDEST PUSH2 0x1483 DUP3 PUSH1 0xD PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH1 0xF PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x14BB PUSH32 0xE42708D93B95810922305119A3271CA42233DA9EBE1E1E503F0E887817A32C7A SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xD00 SWAP1 PUSH2 0x14CE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x65A0074B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x14FE PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x150A PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1515 PUSH2 0x142A PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x1586 JUMPI PUSH2 0x1524 PUSH2 0x368 PUSH2 0x1452 JUMP JUMPDEST DUP2 GT PUSH2 0x155F JUMPI PUSH2 0x1535 DUP2 PUSH1 0x11 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0x8C3208FA4FAB043D09D9517339346757A58804A46F954585BA21465677820817 SWAP2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xD00 SWAP1 PUSH2 0x156C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5DBA329 PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19B3CA53 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP3 SWAP2 PUSH2 0x15AF PUSH2 0x141C JUMP JUMPDEST PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0xA0 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x15B4 JUMP JUMPDEST POP CALLER PUSH2 0x15D6 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH2 0x161C JUMPI JUMPDEST DUP1 PUSH2 0x1605 JUMPI JUMPDEST PUSH2 0x15F1 JUMPI POP SWAP1 PUSH2 0x368 SWAP2 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x368 SWAP3 DUP3 PUSH2 0x15FF SWAP3 PUSH2 0x256C JUMP JUMPDEST SWAP1 PUSH2 0x163F JUMP JUMPDEST POP PUSH2 0x1617 PUSH2 0x142A PUSH2 0x128D DUP5 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST POP PUSH2 0x162E PUSH2 0x142A PUSH2 0x128D DUP4 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 CALLER PUSH2 0x175C JUMP JUMPDEST PUSH2 0x175C JUMP JUMPDEST ISZERO PUSH2 0x1656 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1708 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x17EB PUSH2 0x17D8 DUP4 PUSH1 0x0 PUSH2 0x17A3 PUSH2 0x1792 PUSH2 0x1774 DUP4 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ ISZERO PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x17AE DUP8 DUP4 DUP8 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x1014 PUSH2 0x17CE DUP9 PUSH2 0x17C2 PUSH2 0xFF4 DUP10 DUP7 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x121D DUP8 DUP5 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x17E5 DUP6 PUSH2 0x3EE DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x1258 PUSH2 0x1252 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP3 SWAP2 PUSH2 0x1885 JUMP JUMPDEST ISZERO PUSH2 0x182D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x352 PUSH2 0x1896 PUSH2 0x142A PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x1826 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP4 SWAP3 SWAP2 PUSH2 0x18AA PUSH2 0x141C JUMP JUMPDEST POP SWAP2 SWAP1 PUSH2 0x18B7 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH2 0x18FC JUMPI JUMPDEST DUP1 PUSH2 0x18E5 JUMPI JUMPDEST PUSH2 0x18D0 JUMPI PUSH2 0x368 SWAP3 PUSH2 0x1920 JUMP JUMPDEST PUSH2 0x18DF DUP4 SWAP3 DUP3 PUSH2 0x368 SWAP6 PUSH2 0x256C JUMP JUMPDEST SWAP2 PUSH2 0x1920 JUMP JUMPDEST POP PUSH2 0x18F7 PUSH2 0x142A PUSH2 0x128D DUP4 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x18C3 JUMP JUMPDEST POP PUSH2 0x190E PUSH2 0x142A PUSH2 0x128D DUP6 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x368 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1024 SWAP3 SWAP2 SWAP1 PUSH2 0x164A DUP4 CALLER JUMPDEST DUP4 PUSH2 0x197E JUMP JUMPDEST ISZERO PUSH2 0x1939 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1989 DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 SUB PUSH2 0x1999 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x19AD SWAP4 PUSH2 0x106A SWAP2 PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1932 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19C2 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19CE PUSH2 0x141C JUMP JUMPDEST PUSH2 0x19D9 PUSH2 0x142A PUSH2 0x126C JUMP JUMPDEST PUSH2 0x19E6 JUMPI PUSH2 0x352 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CB59139 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x352 SWAP1 CALLER PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST ISZERO PUSH2 0x1A17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A6D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x1B1D PUSH2 0x1ACC DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP3 PUSH2 0x1AEB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ ISZERO PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1AF6 DUP6 DUP6 DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x121D DUP4 PUSH2 0x1B17 DUP8 PUSH2 0x1B0B PUSH2 0xFF4 DUP5 DUP8 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1A66 JUMP JUMPDEST SWAP3 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x17EB PUSH2 0x1B2E DUP5 PUSH2 0x10EA PUSH1 0x2 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B42 PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B4F PUSH2 0x141C JUMP JUMPDEST SWAP1 PUSH2 0x1B5B PUSH2 0x142A PUSH2 0x126C JUMP JUMPDEST PUSH2 0x19E6 JUMPI PUSH2 0x352 SWAP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1A0B DUP3 CALLER PUSH2 0x192C JUMP JUMPDEST PUSH2 0x1B89 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1B97 PUSH2 0x142A PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH2 0x352 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF00085B9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x1BC5 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1BED JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x1BE6 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x1BF9 PUSH1 0x1 PUSH1 0x5 PUSH2 0x1BD6 JUMP JUMPDEST CALLER PUSH2 0x1C28 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x4F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x1C3D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C4B PUSH2 0x142A PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH2 0x352 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1C67 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C76 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1BD6 JUMP JUMPDEST CALLER PUSH2 0x1C28 PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x4F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C5F JUMP JUMPDEST ISZERO PUSH2 0x1CB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x1CFB PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 PUSH2 0x1D0D PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x1D1F SWAP2 PUSH2 0x1D1A PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x1EBD JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x368 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x368 PUSH8 0x6F05B59D3B20000 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x368 PUSH2 0x2710 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x436 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1D99 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x33E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 PUSH2 0x1E19 DUP5 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP4 PUSH2 0x1E27 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x475 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1E87 PUSH2 0x1D4C SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1E7D PUSH1 0xA0 SWAP7 PUSH2 0x1E73 PUSH2 0x352 SWAP11 PUSH2 0x1E6C PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x1EB6 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1E97 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1EC9 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x2358 JUMPI PUSH2 0x1ED5 PUSH2 0x1D28 JUMP JUMPDEST DUP1 DUP4 LT DUP1 ISZERO PUSH2 0x2345 JUMPI JUMPDEST PUSH2 0x2322 JUMPI POP PUSH2 0x1EEC PUSH2 0x1D50 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0x2300 JUMPI POP PUSH2 0x1F3B SWAP1 PUSH2 0x1F0B PUSH2 0x1F04 ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x1633 JUMP JUMPDEST POP PUSH1 0x20 PUSH2 0x1F23 PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0x8 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F32 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH1 0x0 SWAP3 PUSH2 0x22D0 JUMPI JUMPDEST POP PUSH2 0x1F87 PUSH2 0x1F79 PUSH2 0x1F73 PUSH1 0x13 PUSH2 0xFB1 JUMP JUMPDEST DUP4 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x1F81 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 PUSH2 0x2461 JUMP JUMPDEST SWAP2 PUSH2 0x1F9C PUSH2 0x1F98 PUSH2 0x368 PUSH1 0x7 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST GT PUSH2 0x22B9 JUMPI JUMPDEST DUP2 PUSH2 0x1FAC SWAP2 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x1FB7 PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST SWAP3 PUSH2 0x1FCA PUSH2 0x1FC3 PUSH2 0xFBB JUMP JUMPDEST DUP6 DUP4 PUSH2 0x11CB JUMP JUMPDEST PUSH4 0xC45A0155 PUSH2 0x1FE2 PUSH2 0x1FDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x200A SWAP2 PUSH2 0x1F1E SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x229B JUMPI JUMPDEST POP PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH4 0xC9C65396 SWAP2 PUSH4 0xAD5C4648 SWAP1 PUSH2 0x202A PUSH2 0x2023 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2087 SWAP5 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0x2275 JUMPI JUMPDEST POP PUSH1 0x0 PUSH2 0x2068 SWAP2 PUSH2 0x205B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x4 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x20DF SWAP3 PUSH2 0x20AA SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2247 JUMPI JUMPDEST POP PUSH1 0x14 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x20 PUSH2 0x20BC PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH4 0x95EA7B3 SWAP1 PUSH2 0x20D3 PUSH1 0x0 DUP1 NOT SWAP4 PUSH2 0x205B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP4 MSTORE DUP13 PUSH1 0x4 DUP5 ADD PUSH2 0x1DE3 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH1 0x60 SWAP3 PUSH2 0x221B JUMPI JUMPDEST POP PUSH4 0xF305D719 SWAP5 PUSH2 0x212E PUSH2 0x2105 DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP8 PUSH2 0x2139 PUSH2 0x2114 PUSH2 0xC66 JUMP JUMPDEST TIMESTAMP SWAP1 DUP12 DUP1 PUSH2 0x2121 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP12 DUP13 SWAP11 DUP12 SWAP10 DUP11 SWAP9 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP9 MSTORE PUSH1 0x4 DUP9 ADD PUSH2 0x1E39 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x21ED JUMPI JUMPDEST POP PUSH2 0x2155 PUSH1 0x1 PUSH1 0x14 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x215E DUP3 PUSH2 0x11A7 JUMP JUMPDEST DUP2 GT PUSH2 0x21B6 JUMPI JUMPDEST POP POP PUSH2 0x2171 PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x219B PUSH32 0x57A9F98B233034883786B9C47F1F6FABCF1655E39D3213B7287B926CA387136E SWAP2 PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x21A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 PUSH2 0x368 PUSH2 0x1F1E PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x21CA PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x21E4 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI CODESIZE DUP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x220D SWAP1 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x2214 JUMPI JUMPDEST PUSH2 0x2205 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E00 JUMP JUMPDEST POP POP PUSH2 0x2148 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x223B SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2240 JUMPI JUMPDEST PUSH2 0x2233 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH2 0x20F2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x2268 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI JUMPDEST PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST CODESIZE PUSH2 0x20A2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2256 JUMP JUMPDEST PUSH2 0x2068 SWAP2 SWAP4 POP PUSH2 0x2293 PUSH1 0x0 SWAP2 DUP7 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP4 SWAP2 POP PUSH2 0x204B JUMP JUMPDEST PUSH2 0x22B3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST CODESIZE PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FAC PUSH2 0x22C8 PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x22F2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x22F9 JUMPI JUMPDEST PUSH2 0x22EA DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D6E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1F62 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x22E0 JUMP JUMPDEST SWAP1 PUSH2 0xD00 PUSH2 0x230D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xFDF575 PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1D39 JUMP JUMPDEST DUP3 PUSH2 0xD00 PUSH2 0x232F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC7BCC1B9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1D39 JUMP JUMPDEST POP PUSH2 0x2351 PUSH2 0x7C5 PUSH2 0xC66 JUMP JUMPDEST DUP4 GT PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x250856AB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x0 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x2 PUSH2 0x11A7 JUMP JUMPDEST ISZERO PUSH2 0x2386 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x23D8 PUSH1 0x6 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x23EC PUSH2 0x23E3 PUSH2 0x2375 JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x237F JUMP JUMPDEST PUSH1 0x6 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x23EC PUSH2 0x23F3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x245C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x243C JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x2477 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x2481 PUSH1 0x8 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x2491 PUSH2 0xD1B PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH2 0x352 SWAP1 PUSH1 0x8 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x246B JUMP JUMPDEST PUSH2 0x24B2 PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x24BA PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x24CB ADDRESS PUSH2 0x948 JUMP JUMPDEST PUSH2 0x24D4 DUP2 PUSH2 0xFDD JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x24E1 DUP4 PUSH2 0x11A7 JUMP JUMPDEST DUP2 GT PUSH2 0x252C JUMPI JUMPDEST POP BALANCE PUSH2 0x24F7 PUSH2 0x368 PUSH1 0xB PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2501 JUMPI POP POP JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x2513 PUSH2 0x1F1E PUSH2 0x1F1E PUSH2 0xC66 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x2523 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x251B JUMP JUMPDEST PUSH2 0x2543 PUSH2 0x2548 SWAP2 PUSH2 0x253D PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x2B2B JUMP JUMPDEST PUSH2 0x2B22 JUMP JUMPDEST CODESIZE PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0xA8 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2592 SWAP4 SWAP3 SWAP2 DUP5 SWAP2 PUSH2 0x2592 PUSH2 0x2597 PUSH2 0x2583 DUP7 PUSH2 0x27C7 JUMP JUMPDEST SWAP5 DUP3 DUP3 SWAP13 DUP6 DUP9 SWAP7 SWAP12 SWAP6 SWAP13 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x2408 JUMP JUMPDEST SWAP5 DUP6 SWAP8 PUSH2 0x25A7 PUSH2 0x42A PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 PUSH2 0x27A7 JUMPI JUMPDEST DUP1 PUSH2 0x2783 JUMPI JUMPDEST PUSH2 0x2752 JUMPI PUSH1 0x0 SWAP6 PUSH2 0x25CE DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x2738 JUMPI JUMPDEST POP PUSH2 0x25DF DUP7 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x2707 JUMPI JUMPDEST POP PUSH2 0x25F0 DUP6 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x26ED JUMPI JUMPDEST POP PUSH2 0x2601 DUP5 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x26DD JUMPI JUMPDEST POP POP PUSH2 0x2613 ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x261D DUP3 PUSH2 0xFDD JUMP JUMPDEST SWAP1 PUSH2 0x262B PUSH2 0x142A PUSH1 0x14 PUSH2 0x2562 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x26C4 JUMPI JUMPDEST POP DUP1 PUSH2 0x26AF JUMPI JUMPDEST PUSH2 0x2643 JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x2668 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 POP PUSH2 0x2662 PUSH2 0x2543 SWAP2 PUSH2 0x265D PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2B2B JUMP JUMPDEST DUP6 PUSH2 0x2B2B JUMP JUMPDEST BALANCE PUSH2 0x2676 PUSH2 0x368 PUSH1 0xB PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2681 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x2695 PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0xD PUSH2 0x12A5 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x26A6 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI SWAP1 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x269D JUMP JUMPDEST POP PUSH2 0x26BD PUSH2 0x368 PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2639 JUMP JUMPDEST SWAP1 POP PUSH2 0x26D6 PUSH2 0xD1B PUSH2 0x42A PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST EQ CODESIZE PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x26E6 SWAP2 PUSH2 0x1ABD JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2608 JUMP JUMPDEST PUSH2 0x2701 SWAP1 PUSH2 0x26FB PUSH1 0xD PUSH2 0x12A5 JUMP JUMPDEST DUP5 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0x2732 SWAP1 PUSH32 0x0 DUP6 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x274C SWAP1 PUSH2 0x2746 PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST DUP7 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0xD00 DUP6 PUSH2 0x275F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xF6202A8F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x2791 DUP8 PUSH2 0x1065 DUP8 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x27A1 PUSH2 0x1F98 PUSH2 0x368 PUSH1 0x9 PUSH2 0xFB1 JUMP JUMPDEST GT PUSH2 0x25BE JUMP JUMPDEST POP PUSH2 0x27B6 PUSH2 0x42A PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x27DD PUSH2 0x27D7 PUSH1 0x12 PUSH2 0xFB1 JUMP JUMPDEST DUP3 PUSH2 0x241F JUMP JUMPDEST SWAP2 PUSH2 0x27F0 PUSH2 0x27E9 PUSH2 0x1D8E JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x2452 JUMP JUMPDEST SWAP4 PUSH2 0x280D DUP5 PUSH2 0x2808 PUSH2 0x2802 PUSH1 0xF PUSH2 0xFB1 JUMP JUMPDEST DUP7 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x2452 JUMP JUMPDEST SWAP4 PUSH2 0x2825 DUP2 PUSH2 0x2808 PUSH2 0x281F PUSH1 0x10 PUSH2 0xFB1 JUMP JUMPDEST DUP8 PUSH2 0x241F JUMP JUMPDEST SWAP4 PUSH2 0x282E PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x2836 JUMPI POP POP JUMP JUMPDEST PUSH2 0x368 SWAP3 SWAP4 POP PUSH2 0x2808 SWAP1 PUSH2 0x284A PUSH1 0x11 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x24BA SWAP1 PUSH2 0x285C PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x2887 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x2880 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x289C SWAP1 PUSH2 0x2897 PUSH1 0x1 PUSH1 0x14 PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x29F4 JUMP JUMPDEST PUSH2 0x352 PUSH1 0x0 PUSH1 0x14 PUSH2 0x2870 JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x28B5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF67 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28E6 PUSH2 0x28E1 DUP4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x28A8 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x2906 PUSH2 0x2900 DUP5 PUSH2 0x28D4 JUMP JUMPDEST SWAP4 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x28EB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x2932 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x2913 JUMP JUMPDEST SWAP1 PUSH2 0x2968 PUSH2 0x2961 PUSH2 0x2957 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2979 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x299F PUSH2 0x2998 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x296C JUMP JUMPDEST SWAP1 PUSH2 0x29E2 PUSH2 0x1D4C SWAP2 PUSH2 0x352 SWAP7 SWAP9 SWAP8 SWAP6 PUSH2 0x29D5 PUSH1 0x80 SWAP7 PUSH2 0x29CB PUSH1 0xA0 DUP9 ADD SWAP5 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2A06 PUSH2 0x2A01 PUSH1 0x2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x2A0F ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2A37 DUP4 PUSH2 0x2A29 PUSH2 0x2A23 DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP6 PUSH2 0x2929 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2A42 PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST PUSH4 0xAD5C4648 PUSH2 0x2A53 PUSH2 0x1FDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2A83 SWAP2 DUP8 SWAP2 PUSH2 0x2B04 JUMPI JUMPDEST POP PUSH2 0x2A29 PUSH2 0x2A7D PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST DUP7 PUSH2 0x2929 JUMP JUMPDEST PUSH2 0x2A8E DUP3 DUP3 DUP7 PUSH2 0x11CB JUMP JUMPDEST PUSH4 0x791AC947 SWAP4 TIMESTAMP SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x337 JUMPI DUP7 SWAP6 PUSH2 0x2ACC PUSH2 0x2AC1 SWAP4 DUP9 SWAP8 SWAP4 DUP9 SWAP5 PUSH2 0x2AB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x29A7 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2ADE JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x352 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2AFD JUMPI JUMPDEST PUSH2 0x2AF5 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x38C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x2B1C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST CODESIZE PUSH2 0x2A6F JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x2850 JUMP JUMPDEST SWAP1 DUP1 DUP3 LT ISZERO PUSH2 0x2B38 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL ISZERO PUSH2 0x2B47 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xF7 0xC3 CREATE2 0xE8 DUP15 0xEF PUSH12 0x6A202C331CBFE0872536155B 0xFB 0xB2 DUP6 OR 0xD2 GASLIMIT 0xC5 0xE1 LOG2 PUSH31 0x130364736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"1314:23659:21:-:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1314:23659:21;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;1314:23659:21;;;;;;;;-1:-1:-1;;1314:23659:21;;;:::o;:::-;;;;;;;;-1:-1:-1;;1314:23659:21;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1314:23659:21;;:::o;:::-;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1314:23659:21;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;1650:40;1686:4;;;:::i;:::-;;;;;1314:23659;1686:4;;;;;;1314:23659;;;;1686:4;;;;:::i;:::-;;;;;;;;;;;;;;1314:23659;;;;1686:4;;;;:::i;:::-;;;;;;;;;;;;;;1314:23659;;;;1686:4;;;;:::i;:::-;;;;;;;;;;;1314:23659;;;;1686:4;;;:::i;:::-;;;;;;;1314:23659;;;;1686:4;;;:::i;:::-;;;1314:23659;;;;1686:4;;;:::i;:::-;;;;;:::i;:::-;;-1:-1:-1;;;;;1314:23659:21;1686:4;1314:23659;1686:4;;;;;-1:-1:-1;;;;;1314:23659:21;1686:4;1314:23659;1686:4;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;8079:1541::-;;;;;;;;;;;;;:::i;:::-;2140:15;;;;:::i;:::-;3375:2;;;;:::i;:::-;3700;3585;;;;;:::i;:::-;3700;;:::i;:::-;8595:10;;;:::i;:::-;8616:34;;;8660:19;8677:2;8660:19;:::i;:::-;;;8689:45;;8766:8;;:::i;:::-;8749:25;;;8745:92;;8851:32;;;1686:4;8847:217;;8079:1541;9074:31;;9350:30;9074:31;;9164:28;9312;9074:31;9115:39;9579:34;9074:31;;;;9202:46;9074:31;;;:::i;:::-;9115:39;;:::i;:::-;9164:28;;:::i;:::-;9202:46;;:::i;:::-;9288:13;;;:::i;:::-;9312:28;;:::i;:::-;9350:30;;:::i;:::-;9395:23;9417:1;9395:23;:::i;:::-;;;9391:91;;8079:1541;9523:4;9579:27;9523:4;9492:13;9537:32;9492:13;9537:25;9492:13;9514:4;9492:35;9514:4;9492:28;9506:13;9514:4;9506:13;:::i;:::-;9492:28;;:::i;:::-;:35;:::i;:::-;9537:25;;:::i;:32::-;9593:12;;;:::i;:::-;9579:27;;:::i;9391:91::-;9452:18;;;;:::i;:::-;9391:91;;;8847:217;8903:26;;8899:108;;9021:32;9164:28;9312;9021:32;9115:39;9579:34;9021:32;;;9074:31;9202:46;9021:32;;9350:30;9021:32;;;;:::i;:::-;8847:217;;;;;;;;;;;;;;;;8899:108;8956:36;;;1314:23659;;;;8956:36;-1:-1:-1;;;8956:36:21;;;;;;;;1686:4;;;;;;1314:23659;8956:36;;;;8745:92;8797:29;;;1314:23659;;;;8797:29;-1:-1:-1;;;8797:29:21;;;;;;;;1686:4;;;;;;1314:23659;1676:41:2;1716:1;;;:::i;1797:53::-;;;;;:::i;:::-;1821:22;1831:12;;:::i;:::-;1821:22;;:::i;912:63:0:-;;;;;:::i;:::-;955:12;719:10:8;955:12:0;:::i;850:432:6:-;;;972:46:1;;;:::i;:::-;996:15;1006:5;996:15;;:::i;419:717:5:-;;;;;:::i;1314:23659:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;1314:23659:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1314:23659:21;;;;;;;;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1314:23659:21;;;;;;;;;;;;;;;;-1:-1:-1;1314:23659:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1314:23659:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1980:113:3:-;;2046:13;2069:17;1980:113;2046:13;;:::i;:::-;2069:17;;:::i;1314:23659:21:-;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1314:23659:21;1686:4;;1314:23659;1686:4;1314:23659;;;;;;;:::i;:::-;;;;:::i;2426:187:0:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;1314:23659:21;;;;2566:40:0;;;;;;;2426:187::o;1314:23659:21:-;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;;;8956:36;1314:23659;;;;1686:4;1314:23659;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;8520:535:3:-;8622:1;8899:28;:18;8614:10;;;;:::i;:::-;8603:21;8595:65;-1:-1:-1;;;;;1314:23659:21;;-1:-1:-1;;;;;1314:23659:21;;8603:21:3;;8595:65;:::i;:::-;8713:6;;;;;:::i;:::-;8731:22;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;8899:18;:::i;:::-;:28;;;;;:::i;:::-;1314:23659:21;;;8899:28:3;;;:::i;:::-;8952:37;;;;;;:::i;:::-;;;:::i;:::-;;;1314:23659:21;;;;8952:37:3;;;;;1686:4:21;;;;;;1314:23659;9907:239;;10132:6;9907:239;;10132:6;:::i;1314:23659::-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;8956:36;1046:234:6;;;;1209:64;1217:9;1218:8;;:::i;:::-;1217:9;;1314:23659:21;1217:9:6;1209:64;:::i;1314:23659:21:-;;;;1686:4;1314:23659;;;;;:::i;1615:84:1:-;1685:7;;;:::i;1055:462:25:-;1174:337;;;;;1055:462::o;1174:337::-;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":908,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1093,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":7577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":2899,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_uint256":{"entryPoint":1332,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_uint256":{"entryPoint":1106,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool_fromMemory":{"entryPoint":7631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":7618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":1470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address_fromMemory":{"entryPoint":7590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":7534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256t_uint256_fromMemory":{"entryPoint":7680,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_string_storage":{"entryPoint":3877,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":7651,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_rational_by_rational_by_address_uint256":{"entryPoint":7737,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":10568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_bool_bool":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_IUniswapV2Pair":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_contract_IUniswapV2Router02":{"entryPoint":2422,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_rational_by":{"entryPoint":7728,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":1010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":954,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":3745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0557":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0d1d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_149b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_245f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_2488":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_3b66":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_4107":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6857":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_b167":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_baec":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c953":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f8b4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fcb1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_IUniswapV2Router02":{"entryPoint":2431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_0557":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_149b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_245f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_3b66":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_6857":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_b167":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_fcb1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_rational_by_array_address_dyn_address_uint256":{"entryPoint":10663,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256":{"entryPoint":7481,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":10480,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":10408,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_array_address_dyn":{"entryPoint":10452,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":10428,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_array_address_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":4159,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":9298,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":9247,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":9224,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":1066,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_ENTERED":{"entryPoint":9077,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_BPS":{"entryPoint":7566,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MAX_TAX":{"entryPoint":5202,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MIN_LIQUIDITY_ETH":{"entryPoint":7504,"id":null,"parameterSlots":0,"returnSlots":1},"constant_MIN_LIQUIDITY_TOKEN":{"entryPoint":7464,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":9203,"id":null,"parameterSlots":0,"returnSlots":1},"constant_UNISWAP_V2_ROUTER":{"entryPoint":2385,"id":null,"parameterSlots":0,"returnSlots":1},"convert_address_to_contract_IUniswapV2Router02":{"entryPoint":2376,"id":null,"parameterSlots":1,"returnSlots":1},"convert_array_string_storage_to_string":{"entryPoint":3981,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":3213,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":3200,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_contract_IUniswapV2Router02":{"entryPoint":2367,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":2347,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_uint256":{"entryPoint":4519,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":3948,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":919,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_UNISWAP_V2_ROUTER":{"entryPoint":2447,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_affiliateFeePercentage":{"entryPoint":2785,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_affiliateFeeRecipient":{"entryPoint":2694,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allowance":{"entryPoint":2934,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_approve":{"entryPoint":1145,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_autoWithdrawThreshold":{"entryPoint":2079,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":1967,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burn":{"entryPoint":1714,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burnFrom":{"entryPoint":2018,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burnPercentage":{"entryPoint":3052,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_coinGenieTreasury":{"entryPoint":2226,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_decimals":{"entryPoint":1408,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_decreaseAllowance":{"entryPoint":2319,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_discountFeeRequiredAmount":{"entryPoint":3013,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_feePercentage":{"entryPoint":2265,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_feeRecipient":{"entryPoint":1750,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_genieToken":{"entryPoint":1234,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_increaseAllowance":{"entryPoint":1635,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_initialSupply":{"entryPoint":1578,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isBurnable":{"entryPoint":2106,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isDeflationary":{"entryPoint":2160,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isPausable":{"entryPoint":2292,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isSwapEnabled":{"entryPoint":1551,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isWhitelisted":{"entryPoint":1663,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lpEthFeePercentage":{"entryPoint":2974,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_manualSwap":{"entryPoint":1877,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxTaxSwap":{"entryPoint":1940,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_maxTokenAmountPerAddress":{"entryPoint":2824,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":1027,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_openTrading":{"entryPoint":2751,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":2133,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pause":{"entryPoint":2043,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":1901,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":1994,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setAutoWithdrawThreshold":{"entryPoint":3128,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setCoinGenieTreasury":{"entryPoint":1490,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setDeflationConfig":{"entryPoint":2851,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setGenie":{"entryPoint":2875,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMaxTaxSwap":{"entryPoint":2514,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMaxTokenAmountPerAddress":{"entryPoint":875,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setTaxConfig":{"entryPoint":3079,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":2187,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenConfig":{"entryPoint":2634,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1288,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transfer":{"entryPoint":2486,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":1380,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":3104,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_treasuryFeePercentage":{"entryPoint":1850,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uniswapV2Pair":{"entryPoint":1789,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unpause":{"entryPoint":1690,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3703,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_dynamict_address":{"entryPoint":1191,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_bool":{"entryPoint":1514,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":1816,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offset_0t_bool":{"entryPoint":2538,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_1t_address":{"entryPoint":3152,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_1t_bool":{"entryPoint":2557,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_20t_bool":{"entryPoint":5556,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_21t_bool":{"entryPoint":9558,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":4764,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":2579,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":4010,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3909,"id":null,"parameterSlots":2,"returnSlots":0},"fun__approve":{"entryPoint":4555,"id":806,"parameterSlots":3,"returnSlots":0},"fun__beforeTokenTransfer":{"entryPoint":6171,"id":5020,"parameterSlots":3,"returnSlots":0},"fun__burn":{"entryPoint":6845,"id":761,"parameterSlots":2,"returnSlots":0},"fun__pause":{"entryPoint":7213,"id":203,"parameterSlots":0,"returnSlots":0},"fun__transfer":{"entryPoint":5980,"id":632,"parameterSlots":3,"returnSlots":0},"fun__transferOwnership":{"entryPoint":3580,"id":111,"parameterSlots":1,"returnSlots":0},"fun__unpause":{"entryPoint":7333,"id":219,"parameterSlots":0,"returnSlots":0},"fun__unpause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_allowance":{"entryPoint":4089,"id":427,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":4121,"id":452,"parameterSlots":2,"returnSlots":1},"fun_balanceOf":{"entryPoint":4061,"id":384,"parameterSlots":1,"returnSlots":1},"fun_beforeTokenTransfer":{"entryPoint":6277,"id":1030,"parameterSlots":3,"returnSlots":0},"fun_burn":{"entryPoint":6657,"id":972,"parameterSlots":1,"returnSlots":0},"fun_burnFrom":{"entryPoint":7026,"id":993,"parameterSlots":2,"returnSlots":0},"fun_burnFrom_5383":{"entryPoint":7016,"id":5383,"parameterSlots":2,"returnSlots":0},"fun_burnFrom_inner":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"fun_burn_5354":{"entryPoint":6648,"id":5354,"parameterSlots":1,"returnSlots":0},"fun_burn_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":3332,"id":54,"parameterSlots":0,"returnSlots":0},"fun_decimals":{"entryPoint":null,"id":5063,"parameterSlots":0,"returnSlots":1},"fun_decreaseAllowance":{"entryPoint":4298,"id":555,"parameterSlots":2,"returnSlots":1},"fun_div":{"entryPoint":9313,"id":1827,"parameterSlots":2,"returnSlots":1},"fun_getTransferAmounts":{"entryPoint":10183,"id":5896,"parameterSlots":1,"returnSlots":4},"fun_increaseAllowance":{"entryPoint":4177,"id":514,"parameterSlots":2,"returnSlots":1},"fun_isBurnable":{"entryPoint":4716,"id":5040,"parameterSlots":0,"returnSlots":1},"fun_isDeflationary":{"entryPoint":4754,"id":5073,"parameterSlots":0,"returnSlots":1},"fun_isPausable":{"entryPoint":4706,"id":5030,"parameterSlots":0,"returnSlots":1},"fun_isWhitelisted":{"entryPoint":4726,"id":5053,"parameterSlots":1,"returnSlots":1},"fun_manualSwap":{"entryPoint":9550,"id":5684,"parameterSlots":0,"returnSlots":0},"fun_manualSwap_inner":{"entryPoint":9410,"id":null,"parameterSlots":0,"returnSlots":0},"fun_min":{"entryPoint":11051,"id":5979,"parameterSlots":2,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_mul":{"entryPoint":9266,"id":1812,"parameterSlots":2,"returnSlots":1},"fun_name":{"entryPoint":3990,"id":340,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":9213,"id":273,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":9163,"id":265,"parameterSlots":0,"returnSlots":0},"fun_openTrading":{"entryPoint":9066,"id":5610,"parameterSlots":1,"returnSlots":1},"fun_openTrading_inner":{"entryPoint":7869,"id":null,"parameterSlots":2,"returnSlots":1},"fun_owner":{"entryPoint":3174,"id":40,"parameterSlots":0,"returnSlots":1},"fun_pause":{"entryPoint":7093,"id":5401,"parameterSlots":0,"returnSlots":0},"fun_pause_5401_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_pause_inner":{"entryPoint":7149,"id":null,"parameterSlots":0,"returnSlots":0},"fun_paused":{"entryPoint":3671,"id":164,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":3240,"id":68,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":3222,"id":null,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":5148,"id":176,"parameterSlots":0,"returnSlots":0},"fun_requirePaused":{"entryPoint":7408,"id":187,"parameterSlots":0,"returnSlots":0},"fun_setAutoWithdrawThreshold":{"entryPoint":4936,"id":5121,"parameterSlots":1,"returnSlots":0},"fun_setAutoWithdrawThreshold_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setCoinGenieTreasury":{"entryPoint":4821,"id":5095,"parameterSlots":1,"returnSlots":0},"fun_setDeflationConfig":{"entryPoint":5528,"id":5225,"parameterSlots":1,"returnSlots":0},"fun_setDeflationConfig_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setGenie":{"entryPoint":9377,"id":5634,"parameterSlots":1,"returnSlots":0},"fun_setGenie_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setMaxTaxSwap":{"entryPoint":4904,"id":5108,"parameterSlots":1,"returnSlots":0},"fun_setMaxTaxSwap_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setMaxTokenAmountPerAddress":{"entryPoint":5076,"id":5148,"parameterSlots":1,"returnSlots":0},"fun_setMaxTokenAmountPerAddress_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setTaxConfig":{"entryPoint":5352,"id":5189,"parameterSlots":2,"returnSlots":0},"fun_setTaxConfig_inner":{"entryPoint":5213,"id":null,"parameterSlots":2,"returnSlots":0},"fun_spendAllowance":{"entryPoint":6526,"id":849,"parameterSlots":3,"returnSlots":0},"fun_sub":{"entryPoint":9237,"id":1797,"parameterSlots":2,"returnSlots":1},"fun_swapTokensForEth":{"entryPoint":11042,"id":5961,"parameterSlots":1,"returnSlots":0},"fun_swapTokensForEth_inner":{"entryPoint":10740,"id":null,"parameterSlots":1,"returnSlots":0},"fun_symbol":{"entryPoint":4000,"id":350,"parameterSlots":0,"returnSlots":1},"fun_takeFees":{"entryPoint":9580,"id":5841,"parameterSlots":3,"returnSlots":1},"fun_totalSupply":{"entryPoint":4027,"id":370,"parameterSlots":0,"returnSlots":1},"fun_transfer":{"entryPoint":5695,"id":409,"parameterSlots":2,"returnSlots":1},"fun_transferFrom":{"entryPoint":6432,"id":485,"parameterSlots":3,"returnSlots":1},"fun_transferFrom_5328":{"entryPoint":6419,"id":5328,"parameterSlots":3,"returnSlots":1},"fun_transferFrom_inner":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"fun_transferOwnership":{"entryPoint":3519,"id":91,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":3482,"id":null,"parameterSlots":1,"returnSlots":0},"fun_transfer_5277":{"entryPoint":5683,"id":5277,"parameterSlots":2,"returnSlots":1},"fun_transfer_inner":{"entryPoint":5578,"id":null,"parameterSlots":3,"returnSlots":1},"fun_unpause":{"entryPoint":7255,"id":5419,"parameterSlots":0,"returnSlots":0},"fun_unpause_inner":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"fun_validateAddress":{"entryPoint":11069,"id":7304,"parameterSlots":1,"returnSlots":0},"getter_fun_UNISWAP_V2_ROUTER":{"entryPoint":2414,"id":4759,"parameterSlots":0,"returnSlots":1},"getter_fun_affiliateFeePercentage":{"entryPoint":2773,"id":4741,"parameterSlots":0,"returnSlots":1},"getter_fun_affiliateFeeRecipient":{"entryPoint":null,"id":4731,"parameterSlots":0,"returnSlots":1},"getter_fun_autoWithdrawThreshold":{"entryPoint":2067,"id":4721,"parameterSlots":0,"returnSlots":1},"getter_fun_burnPercentage":{"entryPoint":3040,"id":4744,"parameterSlots":0,"returnSlots":1},"getter_fun_coinGenieTreasury":{"entryPoint":2214,"id":4734,"parameterSlots":0,"returnSlots":1},"getter_fun_discountFeeRequiredAmount":{"entryPoint":3001,"id":4703,"parameterSlots":0,"returnSlots":1},"getter_fun_feePercentage":{"entryPoint":2253,"id":4737,"parameterSlots":0,"returnSlots":1},"getter_fun_feeRecipient":{"entryPoint":1738,"id":4728,"parameterSlots":0,"returnSlots":1},"getter_fun_genieToken":{"entryPoint":1222,"id":4706,"parameterSlots":0,"returnSlots":1},"getter_fun_initialSupply":{"entryPoint":null,"id":4712,"parameterSlots":0,"returnSlots":1},"getter_fun_isSwapEnabled":{"entryPoint":1540,"id":4765,"parameterSlots":0,"returnSlots":1},"getter_fun_lpEthFeePercentage":{"entryPoint":2962,"id":4752,"parameterSlots":0,"returnSlots":1},"getter_fun_maxTaxSwap":{"entryPoint":1928,"id":4718,"parameterSlots":0,"returnSlots":1},"getter_fun_maxTokenAmountPerAddress":{"entryPoint":2812,"id":4715,"parameterSlots":0,"returnSlots":1},"getter_fun_tokenConfig":{"entryPoint":2601,"id":4725,"parameterSlots":0,"returnSlots":3},"getter_fun_treasuryFeePercentage":{"entryPoint":1838,"id":4748,"parameterSlots":0,"returnSlots":1},"getter_fun_uniswapV2Pair":{"entryPoint":1777,"id":4762,"parameterSlots":0,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":4037,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":10537,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_lockTheSwap":{"entryPoint":10375,"id":4785,"parameterSlots":1,"returnSlots":0},"modifier_nonReentrant":{"entryPoint":9386,"id":250,"parameterSlots":0,"returnSlots":0},"modifier_nonReentrant_5427":{"entryPoint":null,"id":250,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant_5902":{"entryPoint":10320,"id":250,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":3184,"id":31,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_5101":{"entryPoint":4881,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_5114":{"entryPoint":4913,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_5127":{"entryPoint":4945,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_5156":{"entryPoint":5171,"id":31,"parameterSlots":2,"returnSlots":0},"modifier_onlyOwner_5195":{"entryPoint":5362,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_5335":{"entryPoint":6582,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_5363":{"entryPoint":6965,"id":31,"parameterSlots":2,"returnSlots":0},"modifier_onlyOwner_5387":{"entryPoint":7041,"id":31,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_5405":{"entryPoint":7221,"id":31,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_5425":{"entryPoint":7424,"id":31,"parameterSlots":2,"returnSlots":1},"modifier_onlyOwner_5616":{"entryPoint":9323,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_74":{"entryPoint":3374,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_whenNotPaused":{"entryPoint":5537,"id":147,"parameterSlots":3,"returnSlots":1},"modifier_whenNotPaused_191":{"entryPoint":7101,"id":147,"parameterSlots":0,"returnSlots":0},"modifier_whenNotPaused_5129":{"entryPoint":null,"id":147,"parameterSlots":1,"returnSlots":0},"modifier_whenNotPaused_5158":{"entryPoint":null,"id":147,"parameterSlots":2,"returnSlots":0},"modifier_whenNotPaused_5197":{"entryPoint":null,"id":147,"parameterSlots":1,"returnSlots":0},"modifier_whenNotPaused_5288":{"entryPoint":6299,"id":147,"parameterSlots":4,"returnSlots":1},"modifier_whenNotPaused_5337":{"entryPoint":null,"id":147,"parameterSlots":1,"returnSlots":0},"modifier_whenNotPaused_5365":{"entryPoint":null,"id":147,"parameterSlots":2,"returnSlots":0},"modifier_whenPaused":{"entryPoint":7263,"id":155,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":4137,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9276,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3681,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10515,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3887,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_dynamic_address":{"entryPoint":1211,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_bool":{"entryPoint":1529,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":1827,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_0_bool":{"entryPoint":2547,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_1_bool":{"entryPoint":2569,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_2_bool":{"entryPoint":2591,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":4773,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_bool":{"entryPoint":9570,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_address":{"entryPoint":3164,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_t_bool":{"entryPoint":5568,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":4017,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":5801,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0d1d":{"entryPoint":7341,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_149b":{"entryPoint":6758,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_245f":{"entryPoint":3391,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2488":{"entryPoint":4422,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3b66":{"entryPoint":6450,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4107":{"entryPoint":5889,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6857":{"entryPoint":5085,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9924":{"entryPoint":3248,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b167":{"entryPoint":6672,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_baec":{"entryPoint":5711,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c953":{"entryPoint":4334,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ebf7":{"entryPoint":9087,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f8b4":{"entryPoint":4208,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fcb1":{"entryPoint":6182,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":823,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":7554,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_168":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_168_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_16_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_224_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_8_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_20_shift":{"entryPoint":4783,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":4509,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":7117,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_1":{"entryPoint":3528,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_20":{"entryPoint":7831,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_21":{"entryPoint":10337,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offset_0t_bool_to_bool":{"entryPoint":7126,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":4798,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_t_address":{"entryPoint":3553,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":7846,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_t_bool":{"entryPoint":10352,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":4532,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":1078,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":7610,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":828,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_add_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"wrapping_sub_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_memory_chunk_address":{"entryPoint":10475,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_string":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"4709":[{"length":32,"start":1429}],"4712":[{"length":32,"start":1599}],"4731":[{"length":32,"start":2715},{"length":32,"start":9997}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2252C4D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x12D75F13 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x3381E7E2 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x351A964D EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x4C09F37C EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x51BC3C85 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x62997F8C EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x84C5DD01 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x883356D9 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8E8C10A2 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x99735FD8 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA09A1601 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xB9D0F1AF EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xBA9341C0 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xC68FF0FE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xD1ED0A0F EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xD48E4127 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xD8F67851 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xDCC79CC8 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE08973CE EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xEC57459C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xF01F20DF EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xF19C4E3B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH4 0xF69CF783 SUB PUSH2 0x337 JUMPI PUSH2 0xC38 JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x337 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x33C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x345 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x337 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3AA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39A JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x3E4 PUSH1 0x20 SWAP4 PUSH2 0x3EE SWAP4 PUSH2 0x3CF DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x368 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3BA JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x41E PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x33E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x436 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP1 PUSH2 0x46C DUP2 DUP6 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x345 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x8 PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 PUSH2 0x54D DUP5 DUP5 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH2 0x55B DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x345 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x534 JUMP JUMPDEST SWAP2 PUSH2 0x1913 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x445 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x14 DUP1 PUSH2 0x5F9 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x604 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x63A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH32 0x0 PUSH2 0x523 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x679 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1051 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x1276 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x6AA CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x1C57 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x6C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xD PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x14 PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x718 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x12 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x74A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x72E JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x765 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x254E JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x77D CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xA PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x7A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x788 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x523 PUSH2 0x7C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0xCA8 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x7F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1B68 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x80B CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xB PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x82F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x813 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x126C JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x865 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0xC66 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x880 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x1292 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x89B CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x41E PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xE PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x8C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xF PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x8E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x8CD JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x904 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x1262 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x925 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x42A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x368 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH2 0x948 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x475 SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x976 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x99F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x9AA PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x97F JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x9CC CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1633 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x9E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x8 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x10 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xA13 JUMP JUMPDEST PUSH1 0xC PUSH2 0xA34 DUP2 PUSH2 0x9F3 JUMP JUMPDEST SWAP2 PUSH2 0x368 PUSH1 0x0 PUSH2 0xA43 DUP5 PUSH2 0xA09 JUMP JUMPDEST SWAP4 ADD PUSH2 0xA1F JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0xA65 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xA96 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH32 0x0 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x388 PUSH2 0x9AA PUSH2 0xAD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x236A JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x10 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xAF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x9 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xB18 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xAFC JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xB36 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1598 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xB4E CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x24A1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP1 PUSH2 0xB6D DUP2 DUP6 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x445 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x523 PUSH2 0xB8C CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST SWAP1 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x13 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBAE CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x7 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x11 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBFC CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xBE0 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC1A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x14E8 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC33 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC4B CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x8 SHR PUSH2 0x42A JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x5 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0xC78 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x42A PUSH2 0x368 PUSH2 0x368 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x352 PUSH2 0xCA3 PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x352 PUSH2 0xC70 JUMP JUMPDEST ISZERO PUSH2 0xCB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xD00 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0xD0F PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xD28 PUSH2 0xD1B CALLER PUSH2 0x42A JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xD3A PUSH2 0xD04 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST ISZERO PUSH2 0xD46 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xCA3 PUSH2 0xDAE PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xD2E JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDF1 PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x948 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDC8 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE06 PUSH1 0x5 PUSH2 0xC5C JUMP JUMPDEST SWAP1 PUSH2 0xE12 DUP2 PUSH1 0x5 PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0xE3F PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0xE4F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x5 PUSH2 0x9F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xE97 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE92 JUMPI JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE87 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xEBE PUSH2 0xEB4 DUP4 PUSH2 0xE77 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xF10 JUMPI POP PUSH1 0x1 EQ PUSH2 0xED7 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xEEA SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xEFC JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xEEF JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 PUSH2 0xEA1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0xF86 SWAP3 PUSH2 0xF7D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xF25 JUMP JUMPDEST SUB DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x368 PUSH1 0x3 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x368 PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x368 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x2 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0xFCF SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xFF4 PUSH2 0x368 SWAP2 PUSH2 0xFEC PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH2 0x1014 PUSH2 0xFF4 SWAP3 PUSH2 0x100C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 CALLER PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x106A CALLER SWAP3 PUSH2 0x1065 DUP4 DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST SWAP2 PUSH2 0x11CB JUMP JUMPDEST ISZERO PUSH2 0x1077 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x106A CALLER SWAP3 PUSH2 0x10DE DUP4 DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1070 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x114D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x368 PUSH2 0x368 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11C4 PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x11A7 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x119D JUMP JUMPDEST PUSH2 0x120A PUSH2 0x11F9 PUSH2 0x11DB PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x1222 DUP4 PUSH2 0x121D DUP5 PUSH2 0x1014 DUP6 PUSH1 0x1 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x1258 PUSH2 0x1252 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP4 PUSH2 0x527 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x128D PUSH2 0x368 SWAP2 PUSH2 0x1285 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x129C JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x12CE PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x948 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x12DF PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x12EF PUSH2 0xD1B PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH2 0x352 SWAP1 PUSH1 0xE PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131D002D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x131D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH1 0xA PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x133D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH1 0xB PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x135D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1369 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1376 PUSH2 0x368 PUSH1 0x9 PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x13C2 JUMPI PUSH2 0x1388 DUP2 PUSH1 0x9 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0xAAB136B9DBE20468AB36DCD11ABD26B3DCEA2B259F018136905BF827F37F5514 SWAP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 PUSH2 0x13BC PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x521E96BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1351 JUMP JUMPDEST ISZERO PUSH2 0x13E4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x142E PUSH2 0x142A PUSH2 0xE57 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x13DD JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1440 PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x144D PUSH2 0x141C JUMP JUMPDEST PUSH2 0x145D JUMP JUMPDEST PUSH2 0x368 PUSH2 0x7D0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 PUSH2 0x1469 PUSH2 0x368 PUSH2 0x1452 JUMP JUMPDEST DUP2 GT PUSH2 0x14C1 JUMPI PUSH2 0x1478 DUP3 PUSH2 0x2B3D JUMP JUMPDEST PUSH2 0x1483 DUP3 PUSH1 0xD PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH1 0xF PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x14BB PUSH32 0xE42708D93B95810922305119A3271CA42233DA9EBE1E1E503F0E887817A32C7A SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xD00 SWAP1 PUSH2 0x14CE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x65A0074B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x14FE PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x150A PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1515 PUSH2 0x142A PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x1586 JUMPI PUSH2 0x1524 PUSH2 0x368 PUSH2 0x1452 JUMP JUMPDEST DUP2 GT PUSH2 0x155F JUMPI PUSH2 0x1535 DUP2 PUSH1 0x11 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0x8C3208FA4FAB043D09D9517339346757A58804A46F954585BA21465677820817 SWAP2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xD00 SWAP1 PUSH2 0x156C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5DBA329 PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19B3CA53 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP3 SWAP2 PUSH2 0x15AF PUSH2 0x141C JUMP JUMPDEST PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0xA0 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x15B4 JUMP JUMPDEST POP CALLER PUSH2 0x15D6 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH2 0x161C JUMPI JUMPDEST DUP1 PUSH2 0x1605 JUMPI JUMPDEST PUSH2 0x15F1 JUMPI POP SWAP1 PUSH2 0x368 SWAP2 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x368 SWAP3 DUP3 PUSH2 0x15FF SWAP3 PUSH2 0x256C JUMP JUMPDEST SWAP1 PUSH2 0x163F JUMP JUMPDEST POP PUSH2 0x1617 PUSH2 0x142A PUSH2 0x128D DUP5 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST POP PUSH2 0x162E PUSH2 0x142A PUSH2 0x128D DUP4 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 CALLER PUSH2 0x175C JUMP JUMPDEST PUSH2 0x175C JUMP JUMPDEST ISZERO PUSH2 0x1656 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1708 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x17EB PUSH2 0x17D8 DUP4 PUSH1 0x0 PUSH2 0x17A3 PUSH2 0x1792 PUSH2 0x1774 DUP4 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ ISZERO PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x17AE DUP8 DUP4 DUP8 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x1014 PUSH2 0x17CE DUP9 PUSH2 0x17C2 PUSH2 0xFF4 DUP10 DUP7 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x121D DUP8 DUP5 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x17E5 DUP6 PUSH2 0x3EE DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x1258 PUSH2 0x1252 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP3 SWAP2 PUSH2 0x1885 JUMP JUMPDEST ISZERO PUSH2 0x182D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x352 PUSH2 0x1896 PUSH2 0x142A PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x1826 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP4 SWAP3 SWAP2 PUSH2 0x18AA PUSH2 0x141C JUMP JUMPDEST POP SWAP2 SWAP1 PUSH2 0x18B7 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH2 0x18FC JUMPI JUMPDEST DUP1 PUSH2 0x18E5 JUMPI JUMPDEST PUSH2 0x18D0 JUMPI PUSH2 0x368 SWAP3 PUSH2 0x1920 JUMP JUMPDEST PUSH2 0x18DF DUP4 SWAP3 DUP3 PUSH2 0x368 SWAP6 PUSH2 0x256C JUMP JUMPDEST SWAP2 PUSH2 0x1920 JUMP JUMPDEST POP PUSH2 0x18F7 PUSH2 0x142A PUSH2 0x128D DUP4 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x18C3 JUMP JUMPDEST POP PUSH2 0x190E PUSH2 0x142A PUSH2 0x128D DUP6 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x368 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1024 SWAP3 SWAP2 SWAP1 PUSH2 0x164A DUP4 CALLER JUMPDEST DUP4 PUSH2 0x197E JUMP JUMPDEST ISZERO PUSH2 0x1939 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1989 DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 SUB PUSH2 0x1999 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x19AD SWAP4 PUSH2 0x106A SWAP2 PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1932 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19C2 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19CE PUSH2 0x141C JUMP JUMPDEST PUSH2 0x19D9 PUSH2 0x142A PUSH2 0x126C JUMP JUMPDEST PUSH2 0x19E6 JUMPI PUSH2 0x352 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CB59139 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x352 SWAP1 CALLER PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST ISZERO PUSH2 0x1A17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A6D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x1B1D PUSH2 0x1ACC DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP3 PUSH2 0x1AEB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ ISZERO PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1AF6 DUP6 DUP6 DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x121D DUP4 PUSH2 0x1B17 DUP8 PUSH2 0x1B0B PUSH2 0xFF4 DUP5 DUP8 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1A66 JUMP JUMPDEST SWAP3 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x17EB PUSH2 0x1B2E DUP5 PUSH2 0x10EA PUSH1 0x2 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B42 PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B4F PUSH2 0x141C JUMP JUMPDEST SWAP1 PUSH2 0x1B5B PUSH2 0x142A PUSH2 0x126C JUMP JUMPDEST PUSH2 0x19E6 JUMPI PUSH2 0x352 SWAP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1A0B DUP3 CALLER PUSH2 0x192C JUMP JUMPDEST PUSH2 0x1B89 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1B97 PUSH2 0x142A PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH2 0x352 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF00085B9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x1BC5 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1BED JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x1BE6 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x1BF9 PUSH1 0x1 PUSH1 0x5 PUSH2 0x1BD6 JUMP JUMPDEST CALLER PUSH2 0x1C28 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x4F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x1C3D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C4B PUSH2 0x142A PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH2 0x352 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1C67 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C76 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1BD6 JUMP JUMPDEST CALLER PUSH2 0x1C28 PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x4F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C5F JUMP JUMPDEST ISZERO PUSH2 0x1CB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x1CFB PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 PUSH2 0x1D0D PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x1D1F SWAP2 PUSH2 0x1D1A PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x1EBD JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x368 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x368 PUSH8 0x6F05B59D3B20000 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x368 PUSH2 0x2710 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x436 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1D99 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x33E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 PUSH2 0x1E19 DUP5 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP4 PUSH2 0x1E27 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x475 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1E87 PUSH2 0x1D4C SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1E7D PUSH1 0xA0 SWAP7 PUSH2 0x1E73 PUSH2 0x352 SWAP11 PUSH2 0x1E6C PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x1EB6 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1E97 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1EC9 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x2358 JUMPI PUSH2 0x1ED5 PUSH2 0x1D28 JUMP JUMPDEST DUP1 DUP4 LT DUP1 ISZERO PUSH2 0x2345 JUMPI JUMPDEST PUSH2 0x2322 JUMPI POP PUSH2 0x1EEC PUSH2 0x1D50 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0x2300 JUMPI POP PUSH2 0x1F3B SWAP1 PUSH2 0x1F0B PUSH2 0x1F04 ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x1633 JUMP JUMPDEST POP PUSH1 0x20 PUSH2 0x1F23 PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0x8 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F32 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH1 0x0 SWAP3 PUSH2 0x22D0 JUMPI JUMPDEST POP PUSH2 0x1F87 PUSH2 0x1F79 PUSH2 0x1F73 PUSH1 0x13 PUSH2 0xFB1 JUMP JUMPDEST DUP4 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x1F81 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 PUSH2 0x2461 JUMP JUMPDEST SWAP2 PUSH2 0x1F9C PUSH2 0x1F98 PUSH2 0x368 PUSH1 0x7 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST GT PUSH2 0x22B9 JUMPI JUMPDEST DUP2 PUSH2 0x1FAC SWAP2 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x1FB7 PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST SWAP3 PUSH2 0x1FCA PUSH2 0x1FC3 PUSH2 0xFBB JUMP JUMPDEST DUP6 DUP4 PUSH2 0x11CB JUMP JUMPDEST PUSH4 0xC45A0155 PUSH2 0x1FE2 PUSH2 0x1FDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x200A SWAP2 PUSH2 0x1F1E SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x229B JUMPI JUMPDEST POP PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH4 0xC9C65396 SWAP2 PUSH4 0xAD5C4648 SWAP1 PUSH2 0x202A PUSH2 0x2023 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2087 SWAP5 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0x2275 JUMPI JUMPDEST POP PUSH1 0x0 PUSH2 0x2068 SWAP2 PUSH2 0x205B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x4 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x20DF SWAP3 PUSH2 0x20AA SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2247 JUMPI JUMPDEST POP PUSH1 0x14 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x20 PUSH2 0x20BC PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH4 0x95EA7B3 SWAP1 PUSH2 0x20D3 PUSH1 0x0 DUP1 NOT SWAP4 PUSH2 0x205B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP4 MSTORE DUP13 PUSH1 0x4 DUP5 ADD PUSH2 0x1DE3 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH1 0x60 SWAP3 PUSH2 0x221B JUMPI JUMPDEST POP PUSH4 0xF305D719 SWAP5 PUSH2 0x212E PUSH2 0x2105 DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP8 PUSH2 0x2139 PUSH2 0x2114 PUSH2 0xC66 JUMP JUMPDEST TIMESTAMP SWAP1 DUP12 DUP1 PUSH2 0x2121 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP12 DUP13 SWAP11 DUP12 SWAP10 DUP11 SWAP9 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP9 MSTORE PUSH1 0x4 DUP9 ADD PUSH2 0x1E39 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x21ED JUMPI JUMPDEST POP PUSH2 0x2155 PUSH1 0x1 PUSH1 0x14 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x215E DUP3 PUSH2 0x11A7 JUMP JUMPDEST DUP2 GT PUSH2 0x21B6 JUMPI JUMPDEST POP POP PUSH2 0x2171 PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x219B PUSH32 0x57A9F98B233034883786B9C47F1F6FABCF1655E39D3213B7287B926CA387136E SWAP2 PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x21A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 PUSH2 0x368 PUSH2 0x1F1E PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x21CA PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x21E4 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI CODESIZE DUP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x220D SWAP1 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x2214 JUMPI JUMPDEST PUSH2 0x2205 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E00 JUMP JUMPDEST POP POP PUSH2 0x2148 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x223B SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2240 JUMPI JUMPDEST PUSH2 0x2233 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH2 0x20F2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x2268 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI JUMPDEST PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST CODESIZE PUSH2 0x20A2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2256 JUMP JUMPDEST PUSH2 0x2068 SWAP2 SWAP4 POP PUSH2 0x2293 PUSH1 0x0 SWAP2 DUP7 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP4 SWAP2 POP PUSH2 0x204B JUMP JUMPDEST PUSH2 0x22B3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST CODESIZE PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FAC PUSH2 0x22C8 PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x22F2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x22F9 JUMPI JUMPDEST PUSH2 0x22EA DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D6E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1F62 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x22E0 JUMP JUMPDEST SWAP1 PUSH2 0xD00 PUSH2 0x230D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xFDF575 PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1D39 JUMP JUMPDEST DUP3 PUSH2 0xD00 PUSH2 0x232F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC7BCC1B9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1D39 JUMP JUMPDEST POP PUSH2 0x2351 PUSH2 0x7C5 PUSH2 0xC66 JUMP JUMPDEST DUP4 GT PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x250856AB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x0 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x2 PUSH2 0x11A7 JUMP JUMPDEST ISZERO PUSH2 0x2386 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x23D8 PUSH1 0x6 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x23EC PUSH2 0x23E3 PUSH2 0x2375 JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x237F JUMP JUMPDEST PUSH1 0x6 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x23EC PUSH2 0x23F3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x245C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x243C JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x2477 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x2481 PUSH1 0x8 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x2491 PUSH2 0xD1B PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH2 0x352 SWAP1 PUSH1 0x8 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x246B JUMP JUMPDEST PUSH2 0x24B2 PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x24BA PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x24CB ADDRESS PUSH2 0x948 JUMP JUMPDEST PUSH2 0x24D4 DUP2 PUSH2 0xFDD JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x24E1 DUP4 PUSH2 0x11A7 JUMP JUMPDEST DUP2 GT PUSH2 0x252C JUMPI JUMPDEST POP BALANCE PUSH2 0x24F7 PUSH2 0x368 PUSH1 0xB PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2501 JUMPI POP POP JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x2513 PUSH2 0x1F1E PUSH2 0x1F1E PUSH2 0xC66 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x2523 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x251B JUMP JUMPDEST PUSH2 0x2543 PUSH2 0x2548 SWAP2 PUSH2 0x253D PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x2B2B JUMP JUMPDEST PUSH2 0x2B22 JUMP JUMPDEST CODESIZE PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0xA8 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2592 SWAP4 SWAP3 SWAP2 DUP5 SWAP2 PUSH2 0x2592 PUSH2 0x2597 PUSH2 0x2583 DUP7 PUSH2 0x27C7 JUMP JUMPDEST SWAP5 DUP3 DUP3 SWAP13 DUP6 DUP9 SWAP7 SWAP12 SWAP6 SWAP13 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x2408 JUMP JUMPDEST SWAP5 DUP6 SWAP8 PUSH2 0x25A7 PUSH2 0x42A PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 PUSH2 0x27A7 JUMPI JUMPDEST DUP1 PUSH2 0x2783 JUMPI JUMPDEST PUSH2 0x2752 JUMPI PUSH1 0x0 SWAP6 PUSH2 0x25CE DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x2738 JUMPI JUMPDEST POP PUSH2 0x25DF DUP7 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x2707 JUMPI JUMPDEST POP PUSH2 0x25F0 DUP6 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x26ED JUMPI JUMPDEST POP PUSH2 0x2601 DUP5 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x26DD JUMPI JUMPDEST POP POP PUSH2 0x2613 ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x261D DUP3 PUSH2 0xFDD JUMP JUMPDEST SWAP1 PUSH2 0x262B PUSH2 0x142A PUSH1 0x14 PUSH2 0x2562 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x26C4 JUMPI JUMPDEST POP DUP1 PUSH2 0x26AF JUMPI JUMPDEST PUSH2 0x2643 JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x2668 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 POP PUSH2 0x2662 PUSH2 0x2543 SWAP2 PUSH2 0x265D PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2B2B JUMP JUMPDEST DUP6 PUSH2 0x2B2B JUMP JUMPDEST BALANCE PUSH2 0x2676 PUSH2 0x368 PUSH1 0xB PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2681 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x2695 PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0xD PUSH2 0x12A5 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x26A6 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI SWAP1 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x269D JUMP JUMPDEST POP PUSH2 0x26BD PUSH2 0x368 PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2639 JUMP JUMPDEST SWAP1 POP PUSH2 0x26D6 PUSH2 0xD1B PUSH2 0x42A PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST EQ CODESIZE PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x26E6 SWAP2 PUSH2 0x1ABD JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2608 JUMP JUMPDEST PUSH2 0x2701 SWAP1 PUSH2 0x26FB PUSH1 0xD PUSH2 0x12A5 JUMP JUMPDEST DUP5 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0x2732 SWAP1 PUSH32 0x0 DUP6 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x274C SWAP1 PUSH2 0x2746 PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST DUP7 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0xD00 DUP6 PUSH2 0x275F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xF6202A8F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x2791 DUP8 PUSH2 0x1065 DUP8 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x27A1 PUSH2 0x1F98 PUSH2 0x368 PUSH1 0x9 PUSH2 0xFB1 JUMP JUMPDEST GT PUSH2 0x25BE JUMP JUMPDEST POP PUSH2 0x27B6 PUSH2 0x42A PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x27DD PUSH2 0x27D7 PUSH1 0x12 PUSH2 0xFB1 JUMP JUMPDEST DUP3 PUSH2 0x241F JUMP JUMPDEST SWAP2 PUSH2 0x27F0 PUSH2 0x27E9 PUSH2 0x1D8E JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x2452 JUMP JUMPDEST SWAP4 PUSH2 0x280D DUP5 PUSH2 0x2808 PUSH2 0x2802 PUSH1 0xF PUSH2 0xFB1 JUMP JUMPDEST DUP7 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x2452 JUMP JUMPDEST SWAP4 PUSH2 0x2825 DUP2 PUSH2 0x2808 PUSH2 0x281F PUSH1 0x10 PUSH2 0xFB1 JUMP JUMPDEST DUP8 PUSH2 0x241F JUMP JUMPDEST SWAP4 PUSH2 0x282E PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x2836 JUMPI POP POP JUMP JUMPDEST PUSH2 0x368 SWAP3 SWAP4 POP PUSH2 0x2808 SWAP1 PUSH2 0x284A PUSH1 0x11 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x24BA SWAP1 PUSH2 0x285C PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x2887 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x2880 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x289C SWAP1 PUSH2 0x2897 PUSH1 0x1 PUSH1 0x14 PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x29F4 JUMP JUMPDEST PUSH2 0x352 PUSH1 0x0 PUSH1 0x14 PUSH2 0x2870 JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x28B5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF67 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28E6 PUSH2 0x28E1 DUP4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x28A8 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x2906 PUSH2 0x2900 DUP5 PUSH2 0x28D4 JUMP JUMPDEST SWAP4 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x28EB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x2932 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x2913 JUMP JUMPDEST SWAP1 PUSH2 0x2968 PUSH2 0x2961 PUSH2 0x2957 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2979 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x299F PUSH2 0x2998 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x296C JUMP JUMPDEST SWAP1 PUSH2 0x29E2 PUSH2 0x1D4C SWAP2 PUSH2 0x352 SWAP7 SWAP9 SWAP8 SWAP6 PUSH2 0x29D5 PUSH1 0x80 SWAP7 PUSH2 0x29CB PUSH1 0xA0 DUP9 ADD SWAP5 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2A06 PUSH2 0x2A01 PUSH1 0x2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x2A0F ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2A37 DUP4 PUSH2 0x2A29 PUSH2 0x2A23 DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP6 PUSH2 0x2929 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2A42 PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST PUSH4 0xAD5C4648 PUSH2 0x2A53 PUSH2 0x1FDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2A83 SWAP2 DUP8 SWAP2 PUSH2 0x2B04 JUMPI JUMPDEST POP PUSH2 0x2A29 PUSH2 0x2A7D PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST DUP7 PUSH2 0x2929 JUMP JUMPDEST PUSH2 0x2A8E DUP3 DUP3 DUP7 PUSH2 0x11CB JUMP JUMPDEST PUSH4 0x791AC947 SWAP4 TIMESTAMP SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x337 JUMPI DUP7 SWAP6 PUSH2 0x2ACC PUSH2 0x2AC1 SWAP4 DUP9 SWAP8 SWAP4 DUP9 SWAP5 PUSH2 0x2AB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x29A7 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2ADE JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x352 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2AFD JUMPI JUMPDEST PUSH2 0x2AF5 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x38C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x2B1C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST CODESIZE PUSH2 0x2A6F JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x2850 JUMP JUMPDEST SWAP1 DUP1 DUP3 LT ISZERO PUSH2 0x2B38 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL ISZERO PUSH2 0x2B47 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xF7 0xC3 CREATE2 0xE8 DUP15 0xEF PUSH12 0x6A202C331CBFE0872536155B 0xFB 0xB2 DUP6 OR 0xD2 GASLIMIT 0xC5 0xE1 LOG2 PUSH31 0x130364736F6C63430008140033000000000000000000000000000000000000 ","sourceMap":"1314:23659:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;1314:23659:21;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1314:23659:21;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1314:23659:21;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1314:23659:21;;:::o;:::-;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;:::i;2206:25::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;10810:14;1314:23659;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;4193:25::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;2409:38;1314:23659;2409:38;1314:23659;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;2950:27::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;4087:28::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;3546:41::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;2640:25::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;2772:36::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;3152:32::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;3239:28::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;:::i;:::-;;;;:::i;3838:125::-;3901:62;3920:42;3901:62;:::i;3838:125::-;;;:::i;1314:23659::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;2850:47::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3036:46;1314:23659;3036:46;1314:23659;;;;;;;:::i;:::-;;:::i;3335:42::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;2507:39::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;3664:38::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;2097:58::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;3451:29::-;;;;;:::i;1314:23659::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;1201:85:0:-;1273:6;;;:::i;1063:62::-;;;:::i;:::-;1117:1;;:::i;1314:23659:21:-;;;;;;;;;;;:::i;1824:101:0:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;1314:23659:21:-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:0;1414:68;1422:7;;:::i;:::-;:23;;719:10:8;1433:12:0;640:96:8;1422:23:0;;-1:-1:-1;;;;;1314:23659:21;;;1422:23:0;;1414:68;:::i;1063:62::-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;1314:23659:21:-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;2074:198:0;2256:8;2074:198;2154:73;2162:22;2174:10;2182:1;2174:10;:::i;2162:22::-;-1:-1:-1;;;;;1314:23659:21;;2162:22:0;;2154:73;:::i;2074:198::-;;;;:::i;1314:23659:21:-;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2426:187:0:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;1314:23659:21;;;;2566:40:0;;;;;;;2426:187::o;1615:84:1:-;1685:7;;;:::i;1314:23659:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1314:23659:21;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;2158:98:3:-;2237:12;2244:5;2237:12;:::i;2369:102::-;2450:14;2457:7;2450:14;:::i;1314:23659:21:-;;;;;;;;;;:::i;3255:106:3:-;3342:12;;;:::i;1314:23659:21:-;;;;;:::i;:::-;;;;;;;;;:::o;3419:125:3:-;3519:18;;3419:125;3493:7;1314:23659:21;;;3493:7:3;3519:9;;:18;:::i;:::-;;:::i;3987:149::-;4102:27;3987:149;4102:18;:27;3987:149;4076:7;1314:23659:21;;;4076:7:3;4102:11;;:18;:::i;:::-;:27;:::i;4444:197::-;4606:6;;;719:10:8;4606:6:3;:::i;:::-;4630:4;4444:197;:::o;1314:23659:21:-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;5854:234:3:-;6021:38;;;;719:10:8;6021:25:3;;;;;:::i;:::-;:38;:::i;:::-;;;:::i;1314:23659:21:-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;6575:427:3;6928:34;;;;719:10:8;6749:25:3;;;;;:::i;:::-;6784:85;6792:35;;;;6784:85;:::i;:::-;1314:23659:21;;;;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;-1:-1:-1;;1314:23659:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;10457:340:3:-;10628:68;10636:21;10567:10;10575:1;10567:10;:::i;:::-;10550:68;-1:-1:-1;;;;;1314:23659:21;;-1:-1:-1;;;;;1314:23659:21;;10558:19:3;;10550:68;:::i;10636:21::-;-1:-1:-1;;;;;1314:23659:21;;10636:21:3;;10628:68;:::i;:::-;10707:36;:11;:27;:11;:18;:11;;:18;:::i;:27::-;:36;:::i;:::-;10758:32;;;;;;:::i;:::-;;;:::i;:::-;;;1314:23659:21;;;;10213:95;10279:22;:11;:22;:::i;10375:95::-;10441:22;:11;:22;:::i;10543:115::-;10628:23;;10543:115;10605:4;1314:23659;;;10605:4;10628:13;;:23;:::i;:::-;;:::i;10905:103::-;10975:26;:11;:26;:::i;1314:23659::-;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;:::i;:::-;;;;:::i;11157:214::-;11236:17;;;:::i;:::-;:31;;11257:10;11265:1;11257:10;:::i;11236:31::-;;11232:86;;11328:36;;;;:::i;11232:86::-;1314:23659;;-1:-1:-1;;;11290:17:21;;;;1314:23659;1063:62:0;1117:1;1063:62;;;:::i;:::-;11643:19:21;11575:94;11643:19;;:::i;11575:94::-;;;;:::i;1063:62:0:-;1117:1;1063:62;;;:::i;:::-;11958:33:21;11876:122;11958:33;;:::i;11876:122::-;;;;:::i;1063:62:0:-;1117:1;1063:62;;;:::i;:::-;1268:1:1;1204:72;;;:::i;:::-;12463:45:21;12484:24;;;:::i;12463:45::-;;;;12459:116;;12585:44;;;;:::i;:::-;12644:40;;;;:::i;:::-;;;1314:23659;;;;12644:40;;;;12352:339::o;12459:116::-;1314:23659;;-1:-1:-1;;;12531:33:21;;;;1314:23659;12352:339;;;;:::i;1314:23659::-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;1767:106:1;1828:38;1836:9;1837:8;;:::i;:::-;1836:9;;1314:23659:21;1836:9:1;1828:38;:::i;1063:62:0:-;;1117:1;1063:62;;;:::i;:::-;1204:72:1;1268:1;1204:72;;;:::i;:::-;1268:1;:::i;1650:40:21:-;1686:4;;;:::i;13055:404::-;;13171:25;13188:8;;:::i;13171:25::-;;;13167:92;;13298:13;;;:::i;:::-;13322:28;;;;:::i;:::-;13360:30;;;;:::i;:::-;13405:47;;;;;:::i;:::-;;;:::i;13167:92::-;13219:29;;;1314:23659;;;;13219:29;-1:-1:-1;;;13219:29:21;;;;;;;;1314:23659;;;;;;;13055:404;;;;;:::i;1063:62:0:-;1117:1;1063:62;;;:::i;:::-;1268:1:1;1204:72;;;:::i;:::-;13950:17:21;13951:16;;:::i;13950:17::-;13946:79;;14039:26;14057:8;;:::i;14039:26::-;;;14035:100;;14145:32;;;;:::i;:::-;14192:34;;;;:::i;14035:100::-;14088:36;;;1314:23659;;;;14088:36;-1:-1:-1;;;14088:36:21;;;;;;;;1314:23659;;;;;;;13946:79;1314:23659;;-1:-1:-1;;;13990:24:21;;;;1314:23659;13850:383;;;;:::i;1204:72:1:-;;1268:1;1204:72;;;;:::i;:::-;1268:1;:::i;1314:23659:21:-;;;;;;;;;;;;:::i;15033:397::-;15157:10;;15182:13;;;:::i;:::-;:37;;;15033:397;15182:59;;;15033:397;15178:202;;15397:26;;;;;:::i;15178:202::-;15333:36;15284:27;;;;;:::i;:::-;15333:36;;:::i;15182:59::-;15224:13;15223:18;15224:17;;:13;;:17;:::i;15223:18::-;15182:59;;:37;15200:13;15199:20;15200:19;;:13;;:19;:::i;15199:20::-;15182:37;;15033:397;15126:4;;15033:397;1314:23659;15126:4;:::i;3740:189:3:-;3894:6;;;719:10:8;3894:6:3;:::i;3851:12::-;3894:6;:::i;1314:23659:21:-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;7456:788:3;8114:23;:13;7568:1;;7622:64;7630:16;7560:10;;;:::i;:::-;7544:68;-1:-1:-1;;;;;1314:23659:21;;-1:-1:-1;;;;;1314:23659:21;;7552:18:3;;7544:68;:::i;7630:16::-;-1:-1:-1;;;;;1314:23659:21;;7630:16:3;;7622:64;:::i;:::-;7728:6;;;;;:::i;:::-;7899:38;7917:20;7768:15;;;;;;:::i;:::-;7793:72;7801:21;;;;7793:72;:::i;7917:20::-;7899:15;;;;:::i;8114:13::-;:23;;;;;:::i;:::-;;;:::i;:::-;8163:26;;;;;;:::i;9907:239:21:-;;10132:6;9907:239;;10132:6;:::i;1314:23659::-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;1046:234:6;;;;1209:64;1217:9;1218:8;;:::i;1217:9::-;1209:64;:::i;1204:72:1:-;;1268:1;1204:72;;;;;:::i;:::-;-1:-1:-1;16317:473:21;;16522:13;;;:::i;:::-;:37;;;16317:473;16522:59;;;16317:473;16518:212;;16747:36;;;:::i;16518:212::-;16624:27;;;;16673:46;16624:27;;:::i;:::-;16673:46;;:::i;16522:59::-;16564:13;16563:18;16564:17;;:13;;:17;:::i;16563:18::-;16522:59;;:37;16540:13;16539:20;16540:19;;:13;;:19;:::i;16539:20::-;16522:37;;16317:473;16498:4;;16317:473;;1314:23659;16498:4;:::i;5203:256:3:-;5424:6;;;5203:256;5387:6;5424;719:10:8;5334:12:3;5387:6;;:::i;1314:23659:21:-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;;;;11078:411:3;;11205:25;;;;:::i;:::-;-1:-1:-1;;11244:37:3;;11240:243;;11078:411;;;;;:::o;11240:243::-;11432:25;;;;11297:68;11305:26;;;;11297:68;:::i;11432:25::-;11240:243;;;;;;1063:62:0;1117:1;1063:62;;;:::i;:::-;1268:1:1;1204:72;;;:::i;:::-;17169:13:21;17170:12;;:::i;17169:13::-;17165:70;;17256:6;;;:::i;17165:70::-;1314:23659;;-1:-1:-1;;;17205:19:21;;;;1314:23659;17085:185;;;;:::i;578:89:5:-;653:6;;719:10:8;653:6:5;:::i;639:12::-;653:6;:::i;1314:23659:21:-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;9375:659:3;9477:1;9469:10;9746:44;9469:10;;;:::i;:::-;9458:21;9450:67;-1:-1:-1;;;;;1314:23659:21;;-1:-1:-1;;;;;1314:23659:21;;9458:21:3;;9450:67;:::i;:::-;9570:6;;;;;:::i;:::-;9746:18;9613;9767:23;9613:18;;;;;;:::i;:::-;9641:71;9649:24;;;;9641:71;:::i;9767:23::-;9746:18;;:::i;:44::-;9883:22;;;;;;:::i;:::-;;;:::i;1063:62:0:-;;1117:1;1063:62;;;:::i;:::-;1204:72:1;1268:1;1204:72;;;:::i;:::-;17678:213:21;17780:13;17781:12;;:::i;17780:13::-;17776:70;;17877:6;;;:::i;17678:213::-;;;;;:::i;973:161:5:-;1120:6;;973:161;1088:6;973:161;719:10:8;1074:12:5;640:96:8;1063:62:0;;;:::i;:::-;1117:1;18050:13:21;18051:12;;:::i;18050:13::-;18046:70;;;;:::i;:::-;1314:23659;;-1:-1:-1;;;18086:19:21;;;;1314:23659;18000:140;;;:::i;1204:72:1:-;;;:::i;:::-;1268:1;;:::i;1314:23659:21:-;;;;;;;;;;;;;;;;;;;;:::i;2186:115:1:-;2245:14;2255:4;2245:14;;:::i;:::-;719:10:8;2274:20:1;;;;1314:23659:21;;;;2274:20:1;;;;2186:115::o;:::-;;;:::i;1063:62:0:-;;;:::i;:::-;1117:1;18303:13:21;18304:12;;:::i;18303:13::-;18299:70;;;;:::i;18251:144::-;;;:::i;1454:66:1:-;;;:::i;:::-;1512:1;2491:15;2501:5;2491:15;;:::i;:::-;719:10:8;2521:22:1;;;;1314:23659:21;;;;2433:117:1;;;:::i;1314:23659:21:-;;;;:::o;:::-;;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;-1:-1:-1;;;1314:23659:21;;;;;;;1945:106:1;2003:41;2011:8;;:::i;:::-;2003:41;:::i;1063:62:0:-;;1117:1;1063:62;;;:::i;:::-;2227:103:2;2292:1;2227:103;;;:::i;:::-;2292:1;:::i;:::-;;;;:::i;1960:55:21:-;2008:7;;;:::i;:::-;1314:23659;;;2008:7;;;;;;;;;1314:23659;;2008:7;;1314:23659;;1797:55;1843:9;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1314:23659;;1843:9;;;;;;;1494:42;1530:6;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1314:23659;;;1530:6;1314:23659;1530:6;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1314:23659:21;;;;;1530:6;;;;;;;;2008:7;1314:23659;;1530:6;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;1530:6;;;;1314:23659;;1530:6;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1314:23659:21;1530:6;;;1314:23659;;1530:6;;-1:-1:-1;;;1530:6:21;;;;;;;;;;;1314:23659;;;;1530:6;;;;:::i;18785:2024::-;18917:9;;18940:13;;;:::i;:::-;18936:71;;19034:20;;:::i;:::-;19021:33;;;:68;;;;18785:2024;19017:158;;19197:18;;;:::i;:::-;19189:26;;;19185:106;;19365:4;19484:43;19365:4;19348:35;19357:13;19365:4;19357:13;:::i;:::-;19348:35;;;:::i;:::-;;19484:43;:28;:18;19491:10;;;:::i;:::-;19484:18;:::i;:28::-;;:43;;1314:23659;;;;19484:43;;;;1843:9;;;;19484:43;;;-1:-1:-1;;;;;1314:23659:21;;19484:43;;;1314:23659;;;19484:43;;;;;;;;;-1:-1:-1;19484:43:21;;;18785:2024;19577:18;19567:43;:29;19577:18;;;:::i;:::-;19567:29;;:::i;:::-;19601:8;;:::i;:::-;19567:43;;:::i;:::-;19725:25;19710:40;;19725:25;;;:::i;19710:40::-;;1314:23659;;19710:40;;19706:94;;18785:2024;19834:30;;;;:::i;:::-;19949:26;19957:17;;:::i;19949:26::-;19977:13;;;;:::i;:::-;;;;:::i;:::-;20079:25;:27;;1314:23659;;;;20079:27;;1843:9;;;;20079:27;;;;;;;;;;;;;;;20061:57;20079:27;20061:46;20079:27;-1:-1:-1;20079:27:21;;;18785:2024;20061:46;;:::i;:57::-;;;20134:22;;:24;;;1314:23659;;;;20134:24;;1843:9;;;;20134:24;;;;;;;;;;;;;;;20061:98;20134:24;20061:98;20134:24;-1:-1:-1;20134:24:21;;;18785:2024;20061:98;;;;;1314:23659;;;;20061:98;;;;;;;;1843:9;;;;20061:98;;;-1:-1:-1;;;;;1314:23659:21;;;20061:98;;;1314:23659;;1530:6;;;1314:23659;1530:6;;;;1314:23659;20061:98;;;;;;;;;;20222:76;20061:98;20033:126;20061:98;-1:-1:-1;20061:98:21;;;18785:2024;20033:126;;;:::i;:::-;20222:76;:29;:21;20229:13;;;:::i;20222:29::-;;1314:23659;20222:76;;1314:23659;;20222:76;;1314:23659;;;;20222:76;;;;;;;;:::i;:::-;;;;;;;;;;20345:152;20222:76;;;18785:2024;20345:33;;20431:24;20345:152;20431:24;;;:::i;:::-;20457:1;;20463:7;20345:152;20463:7;;:::i;:::-;20472:15;20345:152;;;;1314:23659;;;;20345:152;;;;;;;;1843:9;;;;20345:152;;;;;;;:::i;:::-;;;;;;;;;;;18785:2024;20551:4;20535:20;20551:4;20535:20;;:::i;:::-;20606:23;;;:::i;:::-;;;20602:110;;18785:2024;20741:13;;;;;:::i;:::-;20727:28;;;;:::i;:::-;;;1314:23659;;;;20727:28;;;;20773:29;20788:13;;;:::i;20602:110::-;20653:17;;;;20645:35;:26;20653:17;;;:::i;20645:35::-;:56;;;;;20602:110;20645:56;;;;20602:110;;;;20645:56;;:::i;:::-;;;;;20345:152;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;20222:76;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;20061:98;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;20134:24;20061:98;20134:24;;;;20061:98;20134:24;;;;;;;;;;;:::i;:::-;;;;;;20079:27;;;;;;;;;;;;;;:::i;:::-;;;;19706:94;19788:1;;19834:30;19766:23;19788:1;19766:23;:::i;:::-;19706:94;;;;;19484:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;19185:106;19238:42;;;1314:23659;;;;19238:42;-1:-1:-1;;;19238:42:21;;;;;;;;;:::i;19017:158::-;19112:52;;;1314:23659;;;;19112:52;-1:-1:-1;;;19112:52:21;;;;;;;;;:::i;19021:68::-;19068:7;19058:18;19068:7;;:::i;19058:18::-;:31;-1:-1:-1;19021:68:21;;18936:71;1314:23659;;-1:-1:-1;;;18976:20:21;;;;1314:23659;18785:2024;18875:14;;1314:23659;18875:14;:::i;1723:37:2:-;1759:1;;;:::i;:::-;;;;:::o;:::-;1314:23659:21;;-1:-1:-1;;;1759:1:2;;;;;;;;;;;1314:23659:21;1759:1:2;1314:23659:21;;;1759:1:2;1314:23659:21;;;2336:287:2;2598:18;2468:7;;;:::i;:::-;2460:63;2479:8;;:::i;:::-;2468:19;;;;2460:63;:::i;:::-;2598:18;;:::i;1676:41::-;1716:1;;;:::i;2629:209::-;2809:22;2819:12;;:::i;1314:23659:21:-;;;;;;;;;;:::o;3122:96:10:-;3206:5;;3122:96;3206:5;:::i;1314:23659:21:-;;;;;;;;;;;;;;;;:::o;3465:96:10:-;3549:5;;3465:96;3549:5;:::i;1314:23659:21:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;3850:96:10:-;3934:5;;3850:96;3934:5;:::i;1063:62:0:-;1117:1;1063:62;;;:::i;:::-;20998:10:21;;;:::i;:::-;:24;;21012:10;21020:1;21012:10;:::i;20998:24::-;;20994:79;;21083:18;;;;:::i;20932:176::-;;;;:::i;2227:103:2:-;;;:::i;:::-;2292:1;;:::i;:::-;;;:::i;21280:415:21:-;21367:13;21375:4;21367:13;:::i;:::-;21357:24;;;:::i;:::-;21410:1;;21395:16;;;;:::i;:::-;;;21391:96;;21280:415;21556:21;;21591:34;21604:21;;;:::i;21591:34::-;;;21587:102;;21280:415;;:::o;21587:102::-;21649:7;;;;21641:25;:16;21649:7;;:::i;21641:25::-;:37;;;;;21587:102;21641:37;;;;21280:415::o;21641:37::-;;;;;21391:96;21445:30;;21464:10;;;;:::i;:::-;21445:30;;:::i;:::-;;:::i;:::-;21391:96;;;21280:415;;;:::i;1314:23659::-;;;;;;;;;;;;:::i;21701:1801::-;21980:23;;21701:1801;;21980:23;;:35;:71;21923:27;;;:::i;:::-;21980:23;;;;;;;;;;;:::i;:::-;:35;:::i;:71::-;21961:90;;22087:13;22079:21;22087:13;;;:::i;22079:21::-;-1:-1:-1;;;;;1314:23659:21;;22079:21;:57;;;21701:1801;22079:136;;;21701:1801;22062:228;;22322:1;22304:19;;;;:::i;:::-;;;22300:100;;21701:1801;22414:20;;;;:::i;:::-;;;22410:106;;21701:1801;22530:14;;;;:::i;:::-;;;22526:85;;21701:1801;22625:20;;;;:::i;:::-;;;22621:79;;21701:1801;22759:4;;22751:13;22759:4;22751:13;:::i;:::-;22741:24;;;;:::i;:::-;22934:7;22933:8;22934:7;;;:::i;22933:8::-;:31;;;;21701:1801;22933:68;;;;21701:1801;22929:567;;21701:1801;;;;:::o;22929:567::-;23035:62;23063:10;;;;;;23058:38;23035:62;23063:10;;;;:::i;:::-;23058:38;:::i;:::-;23035:62;;:::i;:::-;23282:21;23321:42;23342:21;;;:::i;23321:42::-;;;23317:131;;23462:23;;;:::o;23317:131::-;23391:12;;;;23383:30;:21;23391:12;;;:::i;23383:30::-;:50;;;;;23317:131;23383:50;;;;23462:23;:::o;23383:50::-;;;;;22933:68;22991:10;22968:33;22991:10;;;:::i;22968:33::-;;;22933:68;;:31;22951:13;;22945:19;;22951:13;;;:::i;22945:19::-;;22933:31;;;22621:79;22673:15;;;:::i;:::-;22621:79;;;;22526:85;22590:9;22576:12;;;;:::i;:::-;22590:9;;:::i;:::-;22526:85;;;22410:106;22489:15;22466:21;;22489:15;;:::i;:::-;22410:106;;;22300:100;22374:14;22355:17;;;;:::i;:::-;22374:14;;:::i;:::-;22300:100;;;22062:228;22247:32;;;1314:23659;;;;22247:32;-1:-1:-1;;;22247:32:21;;;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;22079:136;22156:13;:32;:13;;;;:::i;:32::-;:59;;22191:24;;;:::i;22156:59::-;;22079:136;;:57;22118:17;22104:32;22110:26;22118:17;;:::i;22104:32::-;-1:-1:-1;;;;;1314:23659:21;;22104:32;;22079:57;;23661:505;1314:23659;23886:21;23877:30;23886:21;;;:::i;:::-;23877:30;;:::i;:::-;23911:8;23876:43;23911:8;;:::i;:::-;23876:43;;;:::i;:::-;23951:13;23941:35;23951:13;23942:22;23951:13;;;:::i;:::-;23942:22;;:::i;:::-;23941:35;:::i;:::-;24014:22;24004:44;24014:22;24005:31;24014:22;;;:::i;:::-;24005:31;;:::i;24004:44::-;24063:16;;;:::i;:::-;24059:101;;23661:505;;:::o;24059:101::-;24113:36;24123:14;;;24114:23;24123:14;;;;:::i;:::-;24114:23;;:::i;2227:103:2:-;2292:1;2227:103;;;:::i;:::-;2292:1;:::i;1314:23659:21:-;;-1:-1:-1;;;1314:23659:21;;;;;;;;;;;;;;;;;;;:::i;4452:90::-;4509:1;4452:90;4485:14;4495:4;4485:14;;:::i;:::-;4509:1;:::i;:::-;4520:15;4530:5;4520:15;;:::i;1314:23659::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;1314:23659:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1314:23659:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1314:23659:21;;;;;;;;24284:443;24399:16;;24413:1;24399:16;:::i;:::-;;:::i;:::-;24435:13;24443:4;24435:13;:::i;:::-;24430:1;;24425:23;;;;;;;:::i;:::-;;;:::i;:::-;1314:23659;-1:-1:-1;;;;;1314:23659:21;;;;24425:23;24468:22;:17;;:::i;:22::-;;:24;;1314:23659;;;;24468:24;;;;;;;;;;;;;;24458:34;24468:24;;;;;24284:443;24463:1;24458:34;;24463:1;24458:34;:::i;:::-;;;:::i;:::-;24554:11;;;;;:::i;:::-;24576:68;24695:15;;24576:144;;;;;;;;;;;;;;;;;1314:23659;;;;24576:144;;;;;;;;1843:9;;;;24576:144;;;;;;;:::i;:::-;;;;;;;;;;;24284:443;;:::o;24576:144::-;;;;;;-1:-1:-1;24576:144:21;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;24468:24;;;;;;;;;;;;;;:::i;:::-;;;;24284:443;;;;:::i;24867:104::-;;24951:5;;;:13;;;;24867:104;:::o;24951:13::-;;;24867:104;:::o;1055:462:25:-;1174:337;;;;;1055:462::o;1174:337::-;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"2229400","executionCost":"infinite","totalCost":"infinite"},"external":{"UNISWAP_V2_ROUTER()":"infinite","affiliateFeePercentage()":"infinite","affiliateFeeRecipient()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","autoWithdrawThreshold()":"infinite","balanceOf(address)":"infinite","burn(uint256)":"infinite","burnFrom(address,uint256)":"infinite","burnPercentage()":"infinite","coinGenieTreasury()":"infinite","decimals()":"infinite","decreaseAllowance(address,uint256)":"infinite","discountFeeRequiredAmount()":"infinite","feePercentage()":"infinite","feeRecipient()":"infinite","genieToken()":"infinite","increaseAllowance(address,uint256)":"infinite","initialSupply()":"infinite","isBurnable()":"infinite","isDeflationary()":"infinite","isPausable()":"infinite","isSwapEnabled()":"infinite","isWhitelisted(address)":"infinite","lpEthFeePercentage()":"infinite","manualSwap()":"infinite","maxTaxSwap()":"infinite","maxTokenAmountPerAddress()":"infinite","name()":"infinite","openTrading(uint256)":"infinite","owner()":"infinite","pause()":"infinite","paused()":"infinite","renounceOwnership()":"infinite","setAutoWithdrawThreshold(uint256)":"infinite","setCoinGenieTreasury(address)":"infinite","setDeflationConfig(uint256)":"infinite","setGenie(address)":"infinite","setMaxTaxSwap(uint256)":"infinite","setMaxTokenAmountPerAddress(uint256)":"infinite","setTaxConfig(address,uint256)":"infinite","symbol()":"infinite","tokenConfig()":"infinite","totalSupply()":"infinite","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","treasuryFeePercentage()":"infinite","uniswapV2Pair()":"infinite","unpause()":"infinite"},"internal":{"_beforeTokenTransfer(address,address,uint256)":"infinite","_getTransferAmounts(uint256)":"infinite","_min(uint256,uint256)":"46","_swapTokensForEth(uint256)":"infinite","_takeFees(address,address,uint256)":"infinite"}},"methodIdentifiers":{"UNISWAP_V2_ROUTER()":"a82ed9ec","affiliateFeePercentage()":"d1ed0a0f","affiliateFeeRecipient()":"c68ff0fe","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","autoWithdrawThreshold()":"84c5dd01","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","burnPercentage()":"f01f20df","coinGenieTreasury()":"99735fd8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","discountFeeRequiredAmount()":"ec57459c","feePercentage()":"a001ecdd","feeRecipient()":"46904840","genieToken()":"12d75f13","increaseAllowance(address,uint256)":"39509351","initialSupply()":"378dc3dc","isBurnable()":"883356d9","isDeflationary()":"8e8c10a2","isPausable()":"a09a1601","isSwapEnabled()":"351a964d","isWhitelisted(address)":"3af32abf","lpEthFeePercentage()":"e08973ce","manualSwap()":"51bc3c85","maxTaxSwap()":"62997f8c","maxTokenAmountPerAddress()":"d48e4127","name()":"06fdde03","openTrading(uint256)":"d1633649","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","renounceOwnership()":"715018a6","setAutoWithdrawThreshold(uint256)":"f69cf783","setCoinGenieTreasury(address)":"3381e7e2","setDeflationConfig(uint256)":"d8f67851","setGenie(address)":"dcc79cc8","setMaxTaxSwap(uint256)":"b9d0f1af","setMaxTokenAmountPerAddress(uint256)":"02252c4d","setTaxConfig(address,uint256)":"f19c4e3b","symbol()":"95d89b41","tokenConfig()":"ba9341c0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","treasuryFeePercentage()":"4c09f37c","uniswapV2Pair()":"49bd5a5e","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupplyToSet\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isBurnable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPausable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeflationary\",\"type\":\"bool\"}],\"internalType\":\"struct Common.TokenConfigProperties\",\"name\":\"customConfigProps\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxToSwapForTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_autoWithdrawThreshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_affilateFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnPercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BurningNotEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"DestBalanceExceedsMaxAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GenieAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"InsufficientETH\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"InsufficientTokens\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"InvalidDeflationBPS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"}],\"name\":\"InvalidMaxTokenAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"InvalidTaxBPS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxTokenAmountPerAddrLtPrevious\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PausingNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenIsNotDeflationary\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradingAlreadyOpen\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_burnPercentage\",\"type\":\"uint256\"}],\"name\":\"BurnConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"name\":\"FeeConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMaxTokenAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTokensPerWalletSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"TradingOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNISWAP_V2_ROUTER\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"affiliateFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"affiliateFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoWithdrawThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coinGenieTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"discountFeeRequiredAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"genieToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBurnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeflationary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPausable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSwapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feePayer\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpEthFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenAmountPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToLP\",\"type\":\"uint256\"}],\"name\":\"openTrading\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setAutoWithdrawThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"coinGenieAddress\",\"type\":\"address\"}],\"name\":\"setCoinGenieTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnPercentage\",\"type\":\"uint256\"}],\"name\":\"setDeflationConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"genie\",\"type\":\"address\"}],\"name\":\"setGenie\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTax\",\"type\":\"uint256\"}],\"name\":\"setMaxTaxSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxTokenAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTokenAmountPerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"name\":\"setTaxConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenConfig\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isBurnable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPausable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeflationary\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@neuro_0x\",\"errors\":{\"DestBalanceExceedsMaxAllowed(address)\":[{\"params\":{\"addr\":\"The address whose balance would exceed the limit.\"}}],\"InsufficientETH(uint256,uint256)\":[{\"params\":{\"amount\":\"The provided ETH amount.\",\"minAmount\":\"The minimum required ETH amount.\"}}],\"InsufficientTokens(uint256,uint256)\":[{\"params\":{\"amount\":\"The provided token amount.\",\"minAmount\":\"The minimum required token amount.\"}}],\"InvalidDeflationBPS(uint256)\":[{\"params\":{\"bps\":\"The invalid basis points for deflation.\"}}],\"InvalidTaxBPS(uint256)\":[{\"params\":{\"bps\":\"The invalid basis points for tax.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"BurnConfigUpdated(uint256)\":{\"params\":{\"_burnPercentage\":\"The updated burn percentage.\"}},\"FeeConfigUpdated(address,uint256)\":{\"params\":{\"_feePercentage\":\"The updated fee percentage.\",\"_feeRecipient\":\"The updated fee recipient address.\"}},\"MaxTokensPerWalletSet(uint256)\":{\"params\":{\"newMaxTokenAmount\":\"The new maximum token amount per wallet.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TradingOpened(address)\":{\"params\":{\"pair\":\"The address of the LP token.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Allows to burn a predefined amount of tokens\",\"params\":{\"amount\":\"- the amount of tokens to burn\"}},\"burnFrom(address,uint256)\":{\"details\":\"Allows to burn a predefined amount of tokens from a predefined address\",\"params\":{\"amount\":\"- the amount of tokens to burn\",\"from\":\"- the address to burn the tokens from\"}},\"constructor\":{\"details\":\"Initializes the contract with the provided parameters\",\"params\":{\"_affilateFeeRecipient\":\"The address of the affiliate fee recipient\",\"_burnPercentage\":\"The burn percentage in basis points\",\"_feePercentage\":\"The fee percentage in basis points\",\"_feeRecipient\":\"The address of the fee recipient\",\"customConfigProps\":\"Represents the features of the token\",\"initialSupplyToSet\":\"The initial supply of the token\",\"maxPerWallet\":\"The max amount of tokens per wallet\",\"maxToSwapForTax\":\"The max amount of tokens to swap for tax\",\"name_\":\"The name of the token\",\"symbol_\":\"The symbol of the token\",\"tokenOwner\":\"The owner of the token\"}},\"decimals()\":{\"returns\":{\"_0\":\"number of decimals for the token\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isBurnable()\":{\"returns\":{\"_0\":\"true if the token is burnable\"}},\"isDeflationary()\":{\"returns\":{\"_0\":\"true if the token supports deflation\"}},\"isPausable()\":{\"returns\":{\"_0\":\"true if the token is pausable\"}},\"isWhitelisted(address)\":{\"returns\":{\"_0\":\"true if the feePayer is whitelisted\"}},\"manualSwap()\":{\"details\":\"Swaps tokens for ETH if the contract balance is greater than the max amount to swap for tax. Then sends the ETH to the tax wallet.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"openTrading(uint256)\":{\"details\":\"Opens trading for the token by adding liquidity to Uniswap.\",\"params\":{\"amountToLP\":\"The amount of tokens to add to Uniswap Emits a {TradingOpened} event. Preconditions: Requirements: `isSwapEnabled` must be false. `amountToLP >= _MIN_LIQUIDITY_TOKEN` `msg.value >= _MIN_LIQUIDITY_ETH`\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Allows to pause the token\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAutoWithdrawThreshold(uint256)\":{\"details\":\"Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\",\"params\":{\"threshold\":\"- the new max amount of tokens to swap for tax\"}},\"setCoinGenieTreasury(address)\":{\"details\":\"Allows the owner to set the address of the coingenie\",\"params\":{\"coinGenieAddress\":\"- the address of the coinGenie\"}},\"setDeflationConfig(uint256)\":{\"details\":\"Allows the owner to set the deflation config\",\"params\":{\"_burnPercentage\":\"- the new burnPercentage\"}},\"setGenie(address)\":{\"details\":\"Sets the address of the genie token\",\"params\":{\"genie\":\"- the address of the genie token\"}},\"setMaxTaxSwap(uint256)\":{\"details\":\"Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\",\"params\":{\"maxTax\":\"- the new max amount of tokens to swap for tax\"}},\"setMaxTokenAmountPerAddress(uint256)\":{\"details\":\"Allows the owner to set a max amount of tokens per wallet\",\"params\":{\"newMaxTokenAmount\":\"- the new max amount of tokens per wallet\"}},\"setTaxConfig(address,uint256)\":{\"details\":\"Allows the owner to set the tax config\",\"params\":{\"_feePercentage\":\"- the new feePercentage\",\"_feeRecipient\":\"- the new feeRecipient\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Allows to transfer a predefined amount of tokens to a predefined address\",\"params\":{\"amount\":\"- the amount of tokens to transfer\",\"to\":\"- the address to transfer the tokens to\"},\"returns\":{\"_0\":\"true if the transfer was successful\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Allows to transfer a predefined amount of tokens from a predefined address to a predefined address\",\"params\":{\"amount\":\"- the amount of tokens to transfer\",\"from\":\"- the address to transfer the tokens from\",\"to\":\"- the address to transfer the tokens to\"},\"returns\":{\"_0\":\"true if the transfer was successful\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Allows to unpause the token\"}},\"stateVariables\":{\"UNISWAP_V2_ROUTER\":{\"details\":\"The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps\"},\"_MAX_BPS\":{\"details\":\"The max basis points representing 100%\"},\"_MAX_TAX\":{\"details\":\"The max tax that can be applied to a transaction. The value is in ether but is handled as 5%.\"},\"_MIN_LIQUIDITY_ETH\":{\"details\":\"The minimum amount of eth that must be added to Uniswap when trading is opened.\"},\"_MIN_LIQUIDITY_TOKEN\":{\"details\":\"The minimum amount of erc20 token that must be added to Uniswap when trading is opened.\"},\"_inSwap\":{\"details\":\"Are we currently swapping tokens for ETH?\"},\"_tokenDecimals\":{\"details\":\"number of decimals of the token\"},\"affiliateFeePercentage\":{\"details\":\"the affiliate fee percentage taken on transfers\"},\"affiliateFeeRecipient\":{\"details\":\"address of the affiliate fee recipient\"},\"autoWithdrawThreshold\":{\"details\":\"max amount of ETH the contract can accrue before withdrawing them to the fee recipient\"},\"burnPercentage\":{\"details\":\"the affiliate fee percentage in basis points\"},\"coinGenieTreasury\":{\"details\":\"address of the royalty fee recipient (Coin Genie)\"},\"discountFeeRequiredAmount\":{\"details\":\"The amount of $GENIE a person has to hold to get the discount\"},\"feePercentage\":{\"details\":\"the fee percentage in basis points\"},\"feeRecipient\":{\"details\":\"the address of the fee recipient\"},\"genieToken\":{\"details\":\"The address of the genie token\"},\"initialSupply\":{\"details\":\"initial number of tokens which will be minted during initialization\"},\"isSwapEnabled\":{\"details\":\"The flag for whether swapping is enabled and trading open\"},\"lpEthFeePercentage\":{\"details\":\"the percent of eth taken when liquidity is open\"},\"maxTaxSwap\":{\"details\":\"max amount of tokens the contract can accrue before swapping them for ETH\"},\"maxTokenAmountPerAddress\":{\"details\":\"max amount of tokens allowed per wallet\"},\"tokenConfig\":{\"details\":\"features of the token\"},\"treasuryFeePercentage\":{\"details\":\"the royalty fee percentage taken on transfers\"},\"uniswapV2Pair\":{\"details\":\"The address of the LP token. The contract uses the LP token to determine if a transfer is a buy or sell\"}},\"title\":\"CoinGenieERC20\",\"version\":1},\"userdoc\":{\"errors\":{\"BurningNotEnabled()\":[{\"notice\":\"Error thrown when burning is not enabled.\"}],\"DestBalanceExceedsMaxAllowed(address)\":[{\"notice\":\"Error thrown when the destination balance exceeds the maximum allowed amount.\"}],\"GenieAlreadySet()\":[{\"notice\":\"Error thrown when the genie is already set.\"}],\"InsufficientETH(uint256,uint256)\":[{\"notice\":\"Error thrown when the provided ETH amount is insufficient.\"}],\"InsufficientTokens(uint256,uint256)\":[{\"notice\":\"Error thrown when the provided token amount is insufficient.\"}],\"InvalidDeflationBPS(uint256)\":[{\"notice\":\"Error thrown when an invalid deflation basis point is provided.\"}],\"InvalidMaxTokenAmount(uint256)\":[{\"notice\":\"Error thrown when the provided maximum token amount is invalid.\"}],\"InvalidTaxBPS(uint256)\":[{\"notice\":\"Error thrown when an invalid tax basis point is provided.\"}],\"MaxTokenAmountPerAddrLtPrevious()\":[{\"notice\":\"Error thrown when the new maximum token amount per address is less than or equal to the previous value.\"}],\"PausingNotEnabled()\":[{\"notice\":\"Error thrown when pausing is not enabled.\"}],\"TokenIsNotDeflationary()\":[{\"notice\":\"Error thrown when the token is not deflationary.\"}],\"TradingAlreadyOpen()\":[{\"notice\":\"Error thrown when trading is already open.\"}]},\"events\":{\"BurnConfigUpdated(uint256)\":{\"notice\":\"This event is emitted when the burn configuration of the token has been updated.\"},\"FeeConfigUpdated(address,uint256)\":{\"notice\":\"This event is emitted when the fee configuration of the token has been updated.\"},\"MaxTokensPerWalletSet(uint256)\":{\"notice\":\"This event is emitted when the maximum number of tokens allowed per wallet has been updated.\"},\"TradingOpened(address)\":{\"notice\":\"This event is emitted when the trading is opened.\"}},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"only callable by the owneronly callable if the token is not pausedonly callable if the token supports burning\"},\"burnFrom(address,uint256)\":{\"notice\":\"only callable by the owneronly callable if the token is not pausedonly callable if the token supports burningneeds Approval\"},\"pause()\":{\"notice\":\"only callable by the owner\"},\"setDeflationConfig(uint256)\":{\"notice\":\"only callable by the owneronly callable if the token is not pausedonly callable if the token supports deflationonly callable if the burnPercentage is not greater than the max allowed bps\"},\"setMaxTokenAmountPerAddress(uint256)\":{\"notice\":\"only callable by the owneronly callable if the token is not pausedonly callable if the token supports max amount of tokens per wallet\"},\"setTaxConfig(address,uint256)\":{\"notice\":\"only callable by the owneronly callable if the token is not pausedonly callable if the feePercentage is not greater than the max tax\"},\"transfer(address,uint256)\":{\"notice\":\"only callable if the token is not pausedonly callable if the balance of the receiver is lower than the max amount of tokens per walletchecks if blacklisting is enabled and if the sender and receiver are not blacklistedchecks if whitelisting is enabled and if the sender and receiver are whitelistedcaptures the tax during the transfer if tax is enabvledburns the deflationary amount during the transfer if deflation is enabled\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"only callable if the token is not pausedonly callable if the balance of the receiver is lower than the max amount of tokens per walletchecks if blacklisting is enabled and if the sender and receiver are not blacklistedchecks if whitelisting is enabled and if the sender and receiver are whitelistedcaptures the tax during the transfer if tax is enabvledburns the deflationary amount during the transfer if deflation is enabled\"},\"unpause()\":{\"notice\":\"only callable by the owner\"}},\"notice\":\"A robust and secure ERC20 token for the Coin Genie ecosystemTHIS ERC20 SHOULD ONLY BE DEPLOYED FROM THE COINGENIE ERC20 FACTORY\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CoinGenieERC20.sol\":\"CoinGenieERC20\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../security/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract unpausable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(!paused(), \\\"ERC20Pausable: token transfer while paused\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\"},\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\"},\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"src/CoinGenieERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.20;\\n\\nimport { ERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\\\";\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport { Ownable } from \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\nimport { ERC20Burnable } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport { ERC20Pausable } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\\\";\\nimport { ReentrancyGuard } from \\\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\\\";\\nimport { SafeMath } from \\\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\\\";\\n\\nimport { IUniswapV2Pair } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\\\";\\nimport { IUniswapV2Router02 } from \\\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\nimport { IUniswapV2Factory } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\\\";\\n\\nimport { Common } from \\\"./lib/Common.sol\\\";\\nimport { SafeTransfer } from \\\"./lib/SafeTransfer.sol\\\";\\n\\n/**\\n * @title CoinGenieERC20\\n * @author @neuro_0x\\n * @notice A robust and secure ERC20 token for the Coin Genie ecosystem\\n *\\n * @notice THIS ERC20 SHOULD ONLY BE DEPLOYED FROM THE COINGENIE ERC20 FACTORY\\n */\\ncontract CoinGenieERC20 is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ReentrancyGuard {\\n    using SafeMath for uint256;\\n\\n    /// @dev The max basis points representing 100%\\n    uint256 private constant _MAX_BPS = 10_000;\\n\\n    /// @dev The max tax that can be applied to a transaction. The value is in ether but is handled as 5%.\\n    uint256 private constant _MAX_TAX = 2000; // 20%\\n\\n    /// @dev The minimum amount of eth that must be added to Uniswap when trading is opened.\\n    uint256 private constant _MIN_LIQUIDITY_ETH = 0.5 ether;\\n\\n    /// @dev The minimum amount of erc20 token that must be added to Uniswap when trading is opened.\\n    uint256 private constant _MIN_LIQUIDITY_TOKEN = 1 ether;\\n\\n    /// @dev The amount of $GENIE a person has to hold to get the discount\\n    uint256 public discountFeeRequiredAmount = 1_000_000 ether;\\n\\n    /// @dev The address of the genie token\\n    address public genieToken;\\n\\n    /// @dev number of decimals of the token\\n    uint8 private immutable _tokenDecimals;\\n\\n    /// @dev initial number of tokens which will be minted during initialization\\n    uint256 public immutable initialSupply;\\n\\n    /// @dev max amount of tokens allowed per wallet\\n    uint256 public maxTokenAmountPerAddress;\\n\\n    /// @dev max amount of tokens the contract can accrue before swapping them for ETH\\n    uint256 public maxTaxSwap;\\n\\n    /// @dev max amount of ETH the contract can accrue before withdrawing them to the fee recipient\\n    uint256 public autoWithdrawThreshold;\\n\\n    /// @dev features of the token\\n    Common.TokenConfigProperties public tokenConfig;\\n\\n    /// @dev the address of the fee recipient\\n    address public feeRecipient;\\n\\n    /// @dev address of the affiliate fee recipient\\n    address public immutable affiliateFeeRecipient;\\n\\n    /// @dev address of the royalty fee recipient (Coin Genie)\\n    address public coinGenieTreasury;\\n\\n    /// @dev the fee percentage in basis points\\n    uint256 public feePercentage;\\n\\n    /// @dev the affiliate fee percentage taken on transfers\\n    uint256 public affiliateFeePercentage = 25; // 0.5%;\\n\\n    /// @dev the affiliate fee percentage in basis points\\n    uint256 public burnPercentage;\\n\\n    /// @dev the royalty fee percentage taken on transfers\\n    uint256 public treasuryFeePercentage = 50; // 0.5%;\\n\\n    /// @dev the percent of eth taken when liquidity is open\\n    uint256 public lpEthFeePercentage = 50; // 0.5%;\\n\\n    /// @dev The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps\\n    IUniswapV2Router02 public constant UNISWAP_V2_ROUTER =\\n        IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\n\\n    /// @dev The address of the LP token. The contract uses the LP token to determine if a transfer is a buy or sell\\n    address public uniswapV2Pair;\\n\\n    /// @dev The flag for whether swapping is enabled and trading open\\n    bool public isSwapEnabled;\\n\\n    /// @dev Are we currently swapping tokens for ETH?\\n    bool private _inSwap;\\n\\n    mapping(address feePayer => bool isWhitelisted) private _feeWhitelist;\\n\\n    /// @dev Modifier to prevent swapping tokens for ETH recursively\\n    modifier lockTheSwap() {\\n        _inSwap = true;\\n        _;\\n        _inSwap = false;\\n    }\\n\\n    /// @notice Error thrown when the genie is already set.\\n    error GenieAlreadySet();\\n\\n    /// @notice Error thrown when the provided maximum token amount is invalid.\\n    error InvalidMaxTokenAmount(uint256 maxPerWallet);\\n\\n    /// @notice Error thrown when the new maximum token amount per address is less than or equal to the previous value.\\n    error MaxTokenAmountPerAddrLtPrevious();\\n\\n    /// @notice Error thrown when the destination balance exceeds the maximum allowed amount.\\n    /// @param addr The address whose balance would exceed the limit.\\n    error DestBalanceExceedsMaxAllowed(address addr);\\n\\n    /// @notice Error thrown when burning is not enabled.\\n    error BurningNotEnabled();\\n\\n    /// @notice Error thrown when pausing is not enabled.\\n    error PausingNotEnabled();\\n\\n    /// @notice Error thrown when the token is not deflationary.\\n    error TokenIsNotDeflationary();\\n\\n    /// @notice Error thrown when an invalid tax basis point is provided.\\n    /// @param bps The invalid basis points for tax.\\n    error InvalidTaxBPS(uint256 bps);\\n\\n    /// @notice Error thrown when an invalid deflation basis point is provided.\\n    /// @param bps The invalid basis points for deflation.\\n    error InvalidDeflationBPS(uint256 bps);\\n\\n    /// @notice Error thrown when trading is already open.\\n    error TradingAlreadyOpen();\\n\\n    /// @notice Error thrown when the provided ETH amount is insufficient.\\n    /// @param amount The provided ETH amount.\\n    /// @param minAmount The minimum required ETH amount.\\n    error InsufficientETH(uint256 amount, uint256 minAmount);\\n\\n    /// @notice Error thrown when the provided token amount is insufficient.\\n    /// @param amount The provided token amount.\\n    /// @param minAmount The minimum required token amount.\\n    error InsufficientTokens(uint256 amount, uint256 minAmount);\\n\\n    /// @notice This event is emitted when the trading is opened.\\n    /// @param pair The address of the LP token.\\n    event TradingOpened(address indexed pair);\\n\\n    /// @notice This event is emitted when the maximum number of tokens allowed per wallet has been updated.\\n    /// @param newMaxTokenAmount The new maximum token amount per wallet.\\n    event MaxTokensPerWalletSet(uint256 indexed newMaxTokenAmount);\\n\\n    /// @notice This event is emitted when the fee configuration of the token has been updated.\\n    /// @param _feeRecipient The updated fee recipient address.\\n    /// @param _feePercentage The updated fee percentage.\\n    event FeeConfigUpdated(address indexed _feeRecipient, uint256 indexed _feePercentage);\\n\\n    /// @notice This event is emitted when the burn configuration of the token has been updated.\\n    /// @param _burnPercentage The updated burn percentage.\\n    event BurnConfigUpdated(uint256 indexed _burnPercentage);\\n\\n    /**\\n     * @dev Initializes the contract with the provided parameters\\n     * @param name_ The name of the token\\n     * @param symbol_ The symbol of the token\\n     * @param initialSupplyToSet The initial supply of the token\\n     * @param tokenOwner The owner of the token\\n     * @param customConfigProps Represents the features of the token\\n     * @param maxPerWallet The max amount of tokens per wallet\\n     * @param maxToSwapForTax The max amount of tokens to swap for tax\\n     * @param _affilateFeeRecipient The address of the affiliate fee recipient\\n     * @param _feeRecipient The address of the fee recipient\\n     * @param _feePercentage The fee percentage in basis points\\n     * @param _burnPercentage The burn percentage in basis points\\n     */\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupplyToSet,\\n        address tokenOwner,\\n        Common.TokenConfigProperties memory customConfigProps,\\n        uint256 maxPerWallet,\\n        uint256 maxToSwapForTax,\\n        uint256 _autoWithdrawThreshold,\\n        address _affilateFeeRecipient,\\n        address _feeRecipient,\\n        uint256 _feePercentage,\\n        uint256 _burnPercentage\\n    )\\n        ERC20(name_, symbol_)\\n    {\\n        SafeTransfer.validateAddress(tokenOwner);\\n        initialSupply = initialSupplyToSet;\\n        _tokenDecimals = 18;\\n        affiliateFeeRecipient = _affilateFeeRecipient;\\n\\n        if (_feePercentage > _MAX_TAX) {\\n            revert InvalidTaxBPS(_feePercentage);\\n        }\\n\\n        if (customConfigProps.isDeflationary) {\\n            if (_burnPercentage > _MAX_TAX) {\\n                revert InvalidDeflationBPS(_burnPercentage);\\n            }\\n\\n            burnPercentage = _burnPercentage;\\n        }\\n\\n        tokenConfig = customConfigProps;\\n        maxTokenAmountPerAddress = maxPerWallet;\\n        maxTaxSwap = maxToSwapForTax;\\n        autoWithdrawThreshold = _autoWithdrawThreshold;\\n\\n        SafeTransfer.validateAddress(_feeRecipient);\\n        feeRecipient = _feeRecipient;\\n        feePercentage = _feePercentage;\\n\\n        if (initialSupplyToSet != 0) {\\n            _mint(tokenOwner, initialSupplyToSet);\\n        }\\n\\n        _feeWhitelist[address(this)] = true;\\n        _feeWhitelist[tokenOwner] = true;\\n        _feeWhitelist[feeRecipient] = true;\\n    }\\n\\n    /**\\n     * @dev hook called before any transfer of tokens. This includes minting and burning\\n     * imposed by the ERC20 standard\\n     * @param from - address of the sender\\n     * @param to - address of the recipient\\n     * @param amount - amount of tokens to transfer\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    )\\n        internal\\n        virtual\\n        override(ERC20, ERC20Pausable)\\n    {\\n        super._beforeTokenTransfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @return true if the token is pausable\\n     */\\n    function isPausable() public view returns (bool) {\\n        return tokenConfig.isPausable;\\n    }\\n\\n    /**\\n     * @return true if the token is burnable\\n     */\\n    function isBurnable() public view returns (bool) {\\n        return tokenConfig.isBurnable;\\n    }\\n\\n    /**\\n     * @return true if the feePayer is whitelisted\\n     */\\n    function isWhitelisted(address feePayer) public view returns (bool) {\\n        return _feeWhitelist[feePayer];\\n    }\\n\\n    /**\\n     * @return number of decimals for the token\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return _tokenDecimals;\\n    }\\n\\n    /**\\n     * @return true if the token supports deflation\\n     */\\n    function isDeflationary() public view returns (bool) {\\n        return tokenConfig.isDeflationary;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the address of the coingenie\\n     * @param coinGenieAddress - the address of the coinGenie\\n     */\\n    function setCoinGenieTreasury(address coinGenieAddress) external {\\n        if (coinGenieTreasury != address(0)) {\\n            revert GenieAlreadySet();\\n        }\\n\\n        coinGenieTreasury = coinGenieAddress;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\\n     * @param maxTax - the new max amount of tokens to swap for tax\\n     */\\n    function setMaxTaxSwap(uint256 maxTax) external onlyOwner {\\n        maxTaxSwap = maxTax;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\\n     * @param threshold - the new max amount of tokens to swap for tax\\n     */\\n    function setAutoWithdrawThreshold(uint256 threshold) external onlyOwner {\\n        autoWithdrawThreshold = threshold;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set a max amount of tokens per wallet\\n     * @param newMaxTokenAmount - the new max amount of tokens per wallet\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports max amount of tokens per wallet\\n     */\\n    function setMaxTokenAmountPerAddress(uint256 newMaxTokenAmount) external onlyOwner whenNotPaused {\\n        if (newMaxTokenAmount <= maxTokenAmountPerAddress) {\\n            revert MaxTokenAmountPerAddrLtPrevious();\\n        }\\n\\n        maxTokenAmountPerAddress = newMaxTokenAmount;\\n        emit MaxTokensPerWalletSet(newMaxTokenAmount);\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the tax config\\n     * @param _feeRecipient - the new feeRecipient\\n     * @param _feePercentage - the new feePercentage\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the feePercentage is not greater than the max tax\\n     */\\n    function setTaxConfig(address _feeRecipient, uint256 _feePercentage) external onlyOwner whenNotPaused {\\n        if (_feePercentage > _MAX_TAX) {\\n            revert InvalidTaxBPS(_feePercentage);\\n        }\\n\\n        SafeTransfer.validateAddress(_feeRecipient);\\n        feeRecipient = _feeRecipient;\\n        feePercentage = _feePercentage;\\n        emit FeeConfigUpdated(_feeRecipient, _feePercentage);\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the deflation config\\n     * @param _burnPercentage - the new burnPercentage\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports deflation\\n     * @notice only callable if the burnPercentage is not greater than the max allowed bps\\n     */\\n    function setDeflationConfig(uint256 _burnPercentage) external onlyOwner whenNotPaused {\\n        if (!isDeflationary()) {\\n            revert TokenIsNotDeflationary();\\n        }\\n\\n        if (_burnPercentage > _MAX_TAX) {\\n            revert InvalidDeflationBPS(_burnPercentage);\\n        }\\n\\n        burnPercentage = _burnPercentage;\\n        emit BurnConfigUpdated(_burnPercentage);\\n    }\\n\\n    /**\\n     * @dev Allows to transfer a predefined amount of tokens to a predefined address\\n     * @param to - the address to transfer the tokens to\\n     * @param amount - the amount of tokens to transfer\\n     * @return true if the transfer was successful\\n     *\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\\n     * @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\\n     * @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\\n     * @notice captures the tax during the transfer if tax is enabvled\\n     * @notice burns the deflationary amount during the transfer if deflation is enabled\\n     */\\n    function transfer(address to, uint256 amount) public virtual override whenNotPaused returns (bool) {\\n        address from = msg.sender;\\n\\n        if (isSwapEnabled && !_feeWhitelist[from] && !_feeWhitelist[to]) {\\n            uint256 amountToTransfer = _takeFees(from, to, amount);\\n\\n            return super.transfer(to, amountToTransfer);\\n        }\\n\\n        return super.transfer(to, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to transfer a predefined amount of tokens from a predefined address to a predefined address\\n     * @param from - the address to transfer the tokens from\\n     * @param to - the address to transfer the tokens to\\n     * @param amount - the amount of tokens to transfer\\n     * @return true if the transfer was successful\\n     *\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\\n     * @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\\n     * @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\\n     * @notice captures the tax during the transfer if tax is enabvled\\n     * @notice burns the deflationary amount during the transfer if deflation is enabled\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    )\\n        public\\n        virtual\\n        override\\n        whenNotPaused\\n        returns (bool)\\n    {\\n        if (isSwapEnabled && !_feeWhitelist[from] && !_feeWhitelist[to]) {\\n            uint256 amountToTransfer = _takeFees(from, to, amount);\\n\\n            return super.transferFrom(from, to, amountToTransfer);\\n        }\\n\\n        return super.transferFrom(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to burn a predefined amount of tokens\\n     * @param amount - the amount of tokens to burn\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports burning\\n     */\\n    function burn(uint256 amount) public override onlyOwner whenNotPaused {\\n        if (!isBurnable()) {\\n            revert BurningNotEnabled();\\n        }\\n\\n        super.burn(amount);\\n    }\\n\\n    /**\\n     * @dev Allows to burn a predefined amount of tokens from a predefined address\\n     * @param from - the address to burn the tokens from\\n     * @param amount - the amount of tokens to burn\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports burning\\n     * @notice needs Approval\\n     */\\n    function burnFrom(address from, uint256 amount) public override onlyOwner whenNotPaused {\\n        if (!isBurnable()) {\\n            revert BurningNotEnabled();\\n        }\\n\\n        super.burnFrom(from, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to pause the token\\n     *\\n     * @notice only callable by the owner\\n     */\\n    function pause() external onlyOwner {\\n        if (!isPausable()) {\\n            revert PausingNotEnabled();\\n        }\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Allows to unpause the token\\n     *\\n     * @notice only callable by the owner\\n     */\\n    function unpause() external onlyOwner {\\n        if (!isPausable()) {\\n            revert PausingNotEnabled();\\n        }\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Opens trading for the token by adding liquidity to Uniswap.\\n     * @param amountToLP The amount of tokens to add to Uniswap\\n     *\\n     * Emits a {TradingOpened} event.\\n     *\\n     * Preconditions:\\n     *\\n     * Requirements:\\n     *\\n     * `isSwapEnabled` must be false.\\n     * `amountToLP >= _MIN_LIQUIDITY_TOKEN`\\n     * `msg.value >= _MIN_LIQUIDITY_ETH`\\n     */\\n    function openTrading(uint256 amountToLP) external payable onlyOwner nonReentrant returns (IUniswapV2Pair) {\\n        uint256 value = msg.value;\\n        if (isSwapEnabled) {\\n            revert TradingAlreadyOpen();\\n        }\\n\\n        if (amountToLP < _MIN_LIQUIDITY_TOKEN || balanceOf(owner()) < amountToLP) {\\n            revert InsufficientTokens(amountToLP, _MIN_LIQUIDITY_TOKEN);\\n        }\\n\\n        if (value < _MIN_LIQUIDITY_ETH) {\\n            revert InsufficientETH(value, _MIN_LIQUIDITY_ETH);\\n        }\\n\\n        // Transfer the tokens to the contract\\n        transfer(address(this), amountToLP);\\n\\n        // Get the ETH amount to LP and the ETH amount to treasury\\n        uint256 genieBalance = IERC20(genieToken).balanceOf(address(this));\\n        uint256 ethAmountToTreasury = value.mul(lpEthFeePercentage).div(_MAX_BPS);\\n\\n        // If the genie balance is greater than the required amount, the fee is free\\n        if (genieBalance > discountFeeRequiredAmount) {\\n            ethAmountToTreasury = 0;\\n        }\\n\\n        uint256 ethAmountToLP = value.sub(ethAmountToTreasury);\\n\\n        // Approve the router to spend the tokens\\n        _approve(address(this), address(UNISWAP_V2_ROUTER), totalSupply());\\n\\n        // Create the LP token\\n        uniswapV2Pair =\\n            IUniswapV2Factory(UNISWAP_V2_ROUTER.factory()).createPair(address(this), UNISWAP_V2_ROUTER.WETH());\\n\\n        // Approve the router to spend the LP token\\n        IERC20(uniswapV2Pair).approve(address(UNISWAP_V2_ROUTER), type(uint256).max);\\n\\n        // Add liquidity to Uniswap\\n        UNISWAP_V2_ROUTER.addLiquidityETH{ value: ethAmountToLP }(\\n            address(this), balanceOf(address(this)), 0, 0, owner(), block.timestamp\\n        );\\n\\n        // Enable swapping\\n        isSwapEnabled = true;\\n\\n        // Send fee to the treasury\\n        if (ethAmountToTreasury > 0) {\\n            payable(coinGenieTreasury).transfer(ethAmountToTreasury);\\n        }\\n\\n        emit TradingOpened(uniswapV2Pair);\\n\\n        return IUniswapV2Pair(uniswapV2Pair);\\n    }\\n\\n    /**\\n     * @dev Sets the address of the genie token\\n     * @param genie - the address of the genie token\\n     */\\n    function setGenie(address genie) external onlyOwner {\\n        if (genieToken != address(0)) {\\n            revert GenieAlreadySet();\\n        }\\n\\n        genieToken = genie;\\n    }\\n\\n    /**\\n     * @dev Swaps tokens for ETH if the contract balance is greater than the max amount to swap for tax. Then sends\\n     * the ETH to the tax wallet.\\n     */\\n    function manualSwap() external nonReentrant {\\n        uint256 tokenBalance = balanceOf(address(this));\\n        if (tokenBalance > 0) {\\n            _swapTokensForEth(_min(tokenBalance, maxTaxSwap));\\n        }\\n\\n        // Send ETH to the tax wallet\\n        uint256 ethBalance = address(this).balance;\\n        if (ethBalance > autoWithdrawThreshold) {\\n            payable(owner()).transfer(ethBalance);\\n        }\\n    }\\n\\n    function _takeFees(address from, address to, uint256 amount) private returns (uint256 amountToTransfer) {\\n        (uint256 treasuryAmount, uint256 taxAmount, uint256 affiliateAmount, uint256 deflationAmount) =\\n            _getTransferAmounts(amount);\\n\\n        amountToTransfer = amount - treasuryAmount - taxAmount - affiliateAmount - deflationAmount;\\n\\n        if (\\n            from == uniswapV2Pair && to != address(UNISWAP_V2_ROUTER)\\n                && balanceOf(to) + amountToTransfer > maxTokenAmountPerAddress\\n        ) {\\n            revert DestBalanceExceedsMaxAllowed(to);\\n        }\\n\\n        if (treasuryAmount != 0) {\\n            _transfer(from, coinGenieTreasury, treasuryAmount);\\n        }\\n\\n        if (affiliateAmount != 0) {\\n            _transfer(from, affiliateFeeRecipient, affiliateAmount);\\n        }\\n\\n        if (taxAmount != 0) {\\n            _transfer(from, feeRecipient, taxAmount);\\n        }\\n\\n        if (deflationAmount != 0) {\\n            _burn(from, deflationAmount);\\n        }\\n\\n        uint256 contractTokenBalance = balanceOf(address(this));\\n        // if not in a swap, the receiver is the LP token and the contract token balance is greater than the max tax\\n        // swap, swap tokens for ETH\\n        if (!_inSwap && to == uniswapV2Pair && contractTokenBalance > maxTaxSwap) {\\n            _swapTokensForEth(_min(amountToTransfer, _min(maxTaxSwap, contractTokenBalance)));\\n\\n            // if the contract ETH balance is greater than the auto withdraw threshold, withdraw the ETH to the\\n            // feeRecipient\\n            uint256 contractEthBalance = address(this).balance;\\n            if (contractEthBalance > autoWithdrawThreshold) {\\n                payable(feeRecipient).transfer(contractEthBalance);\\n            }\\n\\n            return amountToTransfer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Gets the amount of tokens to transfer and the amount of tax to capture\\n     * @param amount The amount of tokens to transfer\\n     */\\n    function _getTransferAmounts(uint256 amount)\\n        private\\n        view\\n        returns (uint256 treasuryAmount, uint256 taxAmount, uint256 affiliateAmount, uint256 deflationAmount)\\n    {\\n        treasuryAmount = (amount * treasuryFeePercentage) / _MAX_BPS;\\n        taxAmount = (amount * feePercentage) / _MAX_BPS;\\n        affiliateAmount = (amount * affiliateFeePercentage) / _MAX_BPS;\\n\\n        if (isDeflationary()) {\\n            deflationAmount = (amount * burnPercentage) / _MAX_BPS;\\n        }\\n    }\\n\\n    /**\\n     * @dev Swaps tokens for ETH\\n     * @param tokenAmount The amount of tokens to swap for ETH\\n     */\\n    function _swapTokensForEth(uint256 tokenAmount) private nonReentrant lockTheSwap {\\n        address[] memory path = new address[](2);\\n        path[0] = address(this);\\n        path[1] = UNISWAP_V2_ROUTER.WETH();\\n        _approve(address(this), address(UNISWAP_V2_ROUTER), tokenAmount);\\n        UNISWAP_V2_ROUTER.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n            tokenAmount, 0, path, address(this), block.timestamp\\n        );\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     * @param a The first number.\\n     * @param b The second number.\\n     */\\n    function _min(uint256 a, uint256 b) private pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x41a852e416d2b8b2ac0addbeeb0e132526b8695daea1e8038acf4c0fd71509a0\",\"license\":\"GPL-3.0\"},\"src/lib/Common.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title Common\\n * @dev Common items used across the CoinGenie contracts.\\n */\\nlibrary Common {\\n    /// @dev set of features supported by the token\\n    struct TokenConfigProperties {\\n        bool isBurnable;\\n        bool isPausable;\\n        bool isDeflationary;\\n    }\\n}\\n\",\"keccak256\":\"0x077884f042fbef72e79889fa4eef48f2884522241491c321f7bcaafcefb68af6\",\"license\":\"GPL-3.0\"},\"src/lib/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nlibrary SafeTransfer {\\n    error TransferFailed();\\n\\n    /**\\n     * @dev Sends `amount` (in wei) ETH to `to`.\\n     * @param to The address to send the ETH to.\\n     * @param amount The amount of ETH to send.\\n     */\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Transfer the ETH and check if it succeeded or not.\\n            if iszero(call(gas(), to, amount, 0, 0, 0, 0)) {\\n                // Store the function selector of `ETHTransferFailed()`.\\n                // bytes4(keccak256(bytes(\\\"ETHTransferFailed()\\\"))) = 0xb12d13eb\\n                mstore(0x00, 0xb12d13eb)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Validates that the address is not the zero address using assembly.\\n     * @dev Reverts if the address is the zero address.\\n     * @param addr The address to validate.\\n     */\\n    function validateAddress(address addr) internal pure {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            if iszero(shl(96, addr)) {\\n                // Store the function selector of `ZeroAddress()`.\\n                // bytes4(keccak256(bytes(\\\"ZeroAddress()\\\"))) = 0xd92e233d\\n                mstore(0x00, 0xd92e233d)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n     * @dev Reverts if the ERC20 transfer fails.\\n     * @param tokenAddress The address of the ERC20 token.\\n     * @param from The address to transfer the tokens from.\\n     * @param to The address to transfer the tokens to.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(address tokenAddress, address from, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transferFrom(address,address,uint256)\\\", from, to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n    /// @dev Reverts if the ERC20 transfer fails.\\n    /// @param tokenAddress The address of the ERC20 token.\\n    /// @param to The address to transfer the tokens to.\\n    /// @param amount The amount of tokens to transfer.\\n    function safeTransfer(address tokenAddress, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xcd0139a88ea2bcaa2dc562192f25f6fe7e18dc526081b42f9c1f8ef47a6aefa9\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":301,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":307,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":309,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":311,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":313,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":130,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_paused","offset":0,"slot":"5","type":"t_bool"},{"astId":7,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_owner","offset":1,"slot":"5","type":"t_address"},{"astId":231,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_status","offset":0,"slot":"6","type":"t_uint256"},{"astId":4703,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"discountFeeRequiredAmount","offset":0,"slot":"7","type":"t_uint256"},{"astId":4706,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"genieToken","offset":0,"slot":"8","type":"t_address"},{"astId":4715,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"maxTokenAmountPerAddress","offset":0,"slot":"9","type":"t_uint256"},{"astId":4718,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"maxTaxSwap","offset":0,"slot":"10","type":"t_uint256"},{"astId":4721,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"autoWithdrawThreshold","offset":0,"slot":"11","type":"t_uint256"},{"astId":4725,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"tokenConfig","offset":0,"slot":"12","type":"t_struct(TokenConfigProperties)7281_storage"},{"astId":4728,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"feeRecipient","offset":0,"slot":"13","type":"t_address"},{"astId":4734,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"coinGenieTreasury","offset":0,"slot":"14","type":"t_address"},{"astId":4737,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"feePercentage","offset":0,"slot":"15","type":"t_uint256"},{"astId":4741,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"affiliateFeePercentage","offset":0,"slot":"16","type":"t_uint256"},{"astId":4744,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"burnPercentage","offset":0,"slot":"17","type":"t_uint256"},{"astId":4748,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"treasuryFeePercentage","offset":0,"slot":"18","type":"t_uint256"},{"astId":4752,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"lpEthFeePercentage","offset":0,"slot":"19","type":"t_uint256"},{"astId":4762,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"uniswapV2Pair","offset":0,"slot":"20","type":"t_address"},{"astId":4765,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"isSwapEnabled","offset":20,"slot":"20","type":"t_bool"},{"astId":4768,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_inSwap","offset":21,"slot":"20","type":"t_bool"},{"astId":4772,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"_feeWhitelist","offset":0,"slot":"21","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TokenConfigProperties)7281_storage":{"encoding":"inplace","label":"struct Common.TokenConfigProperties","members":[{"astId":7276,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"isBurnable","offset":0,"slot":"0","type":"t_bool"},{"astId":7278,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"isPausable","offset":1,"slot":"0","type":"t_bool"},{"astId":7280,"contract":"src/CoinGenieERC20.sol:CoinGenieERC20","label":"isDeflationary","offset":2,"slot":"0","type":"t_bool"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"errors":{"BurningNotEnabled()":[{"notice":"Error thrown when burning is not enabled."}],"DestBalanceExceedsMaxAllowed(address)":[{"notice":"Error thrown when the destination balance exceeds the maximum allowed amount."}],"GenieAlreadySet()":[{"notice":"Error thrown when the genie is already set."}],"InsufficientETH(uint256,uint256)":[{"notice":"Error thrown when the provided ETH amount is insufficient."}],"InsufficientTokens(uint256,uint256)":[{"notice":"Error thrown when the provided token amount is insufficient."}],"InvalidDeflationBPS(uint256)":[{"notice":"Error thrown when an invalid deflation basis point is provided."}],"InvalidMaxTokenAmount(uint256)":[{"notice":"Error thrown when the provided maximum token amount is invalid."}],"InvalidTaxBPS(uint256)":[{"notice":"Error thrown when an invalid tax basis point is provided."}],"MaxTokenAmountPerAddrLtPrevious()":[{"notice":"Error thrown when the new maximum token amount per address is less than or equal to the previous value."}],"PausingNotEnabled()":[{"notice":"Error thrown when pausing is not enabled."}],"TokenIsNotDeflationary()":[{"notice":"Error thrown when the token is not deflationary."}],"TradingAlreadyOpen()":[{"notice":"Error thrown when trading is already open."}]},"events":{"BurnConfigUpdated(uint256)":{"notice":"This event is emitted when the burn configuration of the token has been updated."},"FeeConfigUpdated(address,uint256)":{"notice":"This event is emitted when the fee configuration of the token has been updated."},"MaxTokensPerWalletSet(uint256)":{"notice":"This event is emitted when the maximum number of tokens allowed per wallet has been updated."},"TradingOpened(address)":{"notice":"This event is emitted when the trading is opened."}},"kind":"user","methods":{"burn(uint256)":{"notice":"only callable by the owneronly callable if the token is not pausedonly callable if the token supports burning"},"burnFrom(address,uint256)":{"notice":"only callable by the owneronly callable if the token is not pausedonly callable if the token supports burningneeds Approval"},"pause()":{"notice":"only callable by the owner"},"setDeflationConfig(uint256)":{"notice":"only callable by the owneronly callable if the token is not pausedonly callable if the token supports deflationonly callable if the burnPercentage is not greater than the max allowed bps"},"setMaxTokenAmountPerAddress(uint256)":{"notice":"only callable by the owneronly callable if the token is not pausedonly callable if the token supports max amount of tokens per wallet"},"setTaxConfig(address,uint256)":{"notice":"only callable by the owneronly callable if the token is not pausedonly callable if the feePercentage is not greater than the max tax"},"transfer(address,uint256)":{"notice":"only callable if the token is not pausedonly callable if the balance of the receiver is lower than the max amount of tokens per walletchecks if blacklisting is enabled and if the sender and receiver are not blacklistedchecks if whitelisting is enabled and if the sender and receiver are whitelistedcaptures the tax during the transfer if tax is enabvledburns the deflationary amount during the transfer if deflation is enabled"},"transferFrom(address,address,uint256)":{"notice":"only callable if the token is not pausedonly callable if the balance of the receiver is lower than the max amount of tokens per walletchecks if blacklisting is enabled and if the sender and receiver are not blacklistedchecks if whitelisting is enabled and if the sender and receiver are whitelistedcaptures the tax during the transfer if tax is enabvledburns the deflationary amount during the transfer if deflation is enabled"},"unpause()":{"notice":"only callable by the owner"}},"notice":"A robust and secure ERC20 token for the Coin Genie ecosystemTHIS ERC20 SHOULD ONLY BE DEPLOYED FROM THE COINGENIE ERC20 FACTORY","version":1}}},"src/ERC20Factory.sol":{"ERC20Factory":{"abi":[{"inputs":[],"name":"GenieAlreadySet","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"tokenOwner","type":"address"},{"components":[{"internalType":"bool","name":"isBurnable","type":"bool"},{"internalType":"bool","name":"isPausable","type":"bool"},{"internalType":"bool","name":"isDeflationary","type":"bool"}],"internalType":"struct Common.TokenConfigProperties","name":"customConfigProps","type":"tuple"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"uint256","name":"autoWithdrawThreshold","type":"uint256"},{"internalType":"uint256","name":"maxTaxSwap","type":"uint256"},{"internalType":"address","name":"affilateFeeRecipient","type":"address"},{"internalType":"address","name":"feeRecipient","type":"address"},{"internalType":"uint256","name":"feePercentage","type":"uint256"},{"internalType":"uint256","name":"burnPercentage","type":"uint256"},{"internalType":"address","name":"coinGenieTreasury","type":"address"}],"name":"launchToken","outputs":[{"internalType":"contract CoinGenieERC20","name":"newToken","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"genie","type":"address"}],"name":"setGenie","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"@neuro_0x","details":"A factory library to deploy instances of the CoinGenieERC20 contract.","kind":"dev","methods":{"launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256,address)":{"details":"Creates a new instance of the CoinGenieERC20 contract","params":{"affilateFeeRecipient":"- the address to receive the affiliate fee","autoWithdrawThreshold":"- the threshold at which the contract will automatically withdraw the tax fees","burnPercentage":"- the percent in basis points to burn on every tx if this token is deflationary","coinGenieTreasury":"- the address to receive the royalty fee","customConfigProps":"- a struct of configuration booleans for the token","feePercentage":"- the percent in basis points to use as a tax","feeRecipient":"- the address to receive the tax fees","initialSupply":"- the initial supply of the token","maxPerWallet":"- the maximum amount of tokens allowed to be held by one wallet","maxTaxSwap":"- the maximum amount of tokens allowed to be swapped at once by manual or autoswap","name":"- the name of the token","symbol":"- the ticker symbol of the token","tokenOwner":"- the address that will be the owner of the token"},"returns":{"newToken":"- the CoinGenieERC20 token that was created"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setGenie(address)":{"details":"Sets the address of the genie token","params":{"genie":"- the address of the genie token"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"_genie":{"details":"The address of the genie token"}},"title":"ERC20Factory","version":1},"evm":{"bytecode":{"functionDebugData":{"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constructor_ERC20Factory":{"entryPoint":43,"id":null,"parameterSlots":0,"returnSlots":0},"constructor_Ownable":{"entryPoint":55,"id":23,"parameterSlots":0,"returnSlots":0},"convert_address_to_address":{"entryPoint":132,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":121,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":99,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":66,"id":null,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_transferOwnership":{"entryPoint":195,"id":111,"parameterSlots":1,"returnSlots":0},"identity":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":87,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":143,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346200002657620000146200002b565b6040516142bf6200012682396142bf90f35b600080fd5b6200003562000037565b565b6200003533620000c3565b62000054905b6001600160a01b031690565b90565b62000054905462000042565b620000549062000048906001600160a01b031682565b620000549062000063565b620000549062000079565b90620000a362000054620000bf9262000084565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b620000cf600062000057565b90620000dd8160006200008f565b620001146200010d7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000084565b9162000084565b916200011f60405190565b600090a356fe608060405260043610156200001357600080fd5b60003560e01c8063715018a6146200006c5780638da5cb5b1462000066578063d5e713531462000060578063dcc79cc8146200005a5763f2fde38b03620000725762000437565b6200041a565b620003c5565b620000be565b62000083565b600080fd5b60009103126200007257565b3462000072576200009636600462000077565b620000a0620004bc565b604051005b0390f35b6001600160a01b031690565b90565b9052565b565b346200007257620000d136600462000077565b620000a5620000df6200046b565b604051918291826001600160a01b03909116815260200190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176200013257604052565b620000f9565b90620000bc6200014760405190565b92836200010f565b67ffffffffffffffff81116200013257602090601f01601f19160190565b0190565b90826000939282370152565b909291926200019662000190826200014f565b62000138565b938185526020850190828401116200007257620000bc9262000171565b9080601f830112156200007257816020620000b5933591016200017d565b805b036200007257565b90503590620000bc82620001d1565b6001600160a01b038116620001d3565b90503590620000bc82620001ea565b801515620001d3565b90503590620000bc8262000209565b9190916060818403126200007257620002716200023f606062000138565b9360006200024e828562000212565b908601526020620002628282860162000212565b90860152604080930162000212565b90830152565b6101e0818303126200007257803567ffffffffffffffff8111620000725782620002a3918301620001b3565b92602082013567ffffffffffffffff8111620000725783620002c7918401620001b3565b92620002d78160408501620001db565b92620002e78260608301620001fa565b92620002f7836080840162000221565b92620003078160e08501620001db565b9262000318826101008301620001db565b9262000329836101208401620001db565b926200033a816101408501620001fa565b926200034b826101608301620001fa565b92620000b562000360846101808501620001db565b9362000371816101a08601620001db565b936101c001620001fa565b620000b590620000a9906001600160a01b031682565b620000b5906200037c565b620000b59062000392565b620000b8906200039d565b602081019291620000bc9190620003a8565b346200007257620000a5620003f6620003e036600462000277565b9b9a909a999199989298979397969496620007cb565b60405191829182620003b3565b906020828203126200007257620000b591620001fa565b346200007257620000a06200043136600462000403565b62000a98565b346200007257620000a06200044e36600462000403565b620005e9565b620000b590620000a9565b620000b5905462000454565b620000b560006200045f565b620004816200051c565b620000bc620004a6565b620000a9620000b5620000b59290565b620000b5906200048b565b620000bc620004b660006200049b565b62000628565b620000bc62000477565b15620004ce57565b60405162461bcd60e51b81528062000518600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b620000bc6200052a6200046b565b620005466200053933620000a9565b916001600160a01b031690565b14620004c6565b620000bc906200055c6200051c565b620005be565b156200056a57565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b620000bc90620004b6620005d7620000a960006200049b565b6001600160a01b038316141562000562565b620000bc906200054d565b9062000608620000b562000624926200039d565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b6200063460006200045f565b9062000642816000620005f4565b62000679620006727f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936200039d565b916200039d565b916200068460405190565b600090a3565b60005b8381106200069e5750506000910152565b81810151838201526020016200068d565b620006d4620006de6020936200016d93620006c8815190565b80835293849260200190565b958691016200068a565b601f01601f191690565b9997959391909c9b9a989694929c6101c08b018b810360008d01526200070e91620006af565b8a810360208c01526200072191620006af565b9b60408a016200072f919052565b6001600160a01b031660608901528051151560808901526020810151151560a089015260400151151560c088015260e08701526101008601526101208501526001600160a01b03166101408401526001600160a01b03166101608301526101808201526101a00152565b6040513d6000823e3d90fd5b90505190620000bc82620001ea565b906020828203126200007257620000b591620007a5565b97939a96919995929a98949098620007e1600090565b506040519a6137e68c01908c821067ffffffffffffffff83111762000132578c9b6200081a9b8f938e6137e69062000aa49039620006e8565b03906000f09182156200097c5762000832836200039d565b90633381e7e2823b15620000725762000860600091620008776200085560405190565b948593849360e01b90565b83526001600160a01b031660048301526024820190565b038183865af180156200097c5762000a2a575b5063dcc79cc86200089c60016200045f565b90823b15620000725762000860600091620008ba6200085560405190565b038183865af180156200097c5762000a10575b50600091620008e0620000a9846200049b565b6001600160a01b03821614158062000982575b620008ff575b50505090565b63f2fde38b90823b1562000072576200093092620008608580946200092360405190565b9687958694859360e01b90565b03925af180156200097c5762000948575b80620008f9565b816200096c92903d1062000974575b6200096381836200010f565b81019062000077565b388062000941565b503d62000957565b62000799565b50638da5cb5b6200099d6200099660405190565b9160e01b90565b8152602081600481865afa80156200097c57620009c9918591620009db575b506001600160a01b031690565b6001600160a01b0382161415620008f3565b62000a01915060203d811162000a08575b620009f881836200010f565b810190620007b4565b38620009bc565b503d620009ec565b62000a239060006200096381836200010f565b38620008cd565b62000a3d9060006200096381836200010f565b386200088a565b620000bc9062000a536200051c565b62000a5f60016200045f565b62000a7362000539620000a960006200049b565b0362000a8657620000bc906001620005f4565b60405163131d002d60e01b8152600490fd5b620000bc9062000a4456fe60e06040523462000062576200002e62000018620002fe565b9a999099989198979297969396959495620004e9565b604051612b8b62000c5b823960805181610595015260a0518161063f015260c051818181610a9b015261270d0152612b8b90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200009f57604052565b62000067565b90620000bc620000b460405190565b92836200007d565b565b6001600160401b0381116200009f57602090601f01601f19160190565b60005b838110620000ef5750506000910152565b8181015183820152602001620000de565b90929192620001196200011382620000be565b620000a5565b938185526020850190828401116200006257620000bc92620000db565b9080601f8301121562000062578151620001539260200162000100565b90565b805b036200006257565b90505190620000bc8262000156565b6001600160a01b031690565b6001600160a01b03811662000158565b90505190620000bc826200017b565b80151562000158565b90505190620000bc826200019a565b919091606081840312620000625762000202620001d06060620000a5565b936000620001df8285620001a3565b908601526020620001f382828601620001a3565b908601526040809301620001a3565b90830152565b90916101c082840312620000625781516001600160401b0381116200006257836200023591840162000136565b60208301519093906001600160401b0381116200006257816200025a91850162000136565b926200026a826040830162000160565b926200027a83606084016200018b565b926200028a8160808501620001b2565b926200029a8260e0830162000160565b92620002ab83610100840162000160565b92620002bc81610120850162000160565b92620002cd8261014083016200018b565b9262000153620002e28461016085016200018b565b93620002f381610180860162000160565b936101a00162000160565b62000321620037e6803803806200031581620000a5565b92833981019062000208565b909192939495969798999a9b565b90600019905b9181191691161790565b6200015362000153620001539290565b9062000363620001536200036b926200033f565b82546200032f565b9055565b6200037f62000153620001539290565b60ff1690565b620001536107d06200033f565b9060ff9062000335565b90620003af620001536200036b92151590565b825462000392565b9061ff009060081b62000335565b90620003d8620001536200036b92151590565b8254620003b7565b9062ff00009060101b62000335565b9062000402620001536200036b92151590565b8254620003e0565b620000bc916200044d906040906200042d620004268251151590565b856200039c565b620004466200043f6020830151151590565b85620003c5565b0151151590565b90620003ef565b90620000bc916200040a565b906001600160a01b039062000335565b62000153906200016f906001600160a01b031682565b620001539062000470565b620001539062000486565b90620004b0620001536200036b9262000491565b825462000460565b90620004c49062000491565b600052602052604060002090565b62000153906200016f565b620001539054620004d2565b90620004fd919c9b939a9892999c620006fe565b6200051469d3c21bcecceda100000060076200034f565b62000522601960106200034f565b6200053d6032620005358160126200034f565b60136200034f565b620005488962000c41565b8760a0526200055860126200036f565b60805260c0526200056862000385565b808711620006c957604083015162000651575b5050620005db9493620005b8620005d394620005b0620000bc9b9c95620005a8620005c096600c62000454565b60096200034f565b600a6200034f565b600b6200034f565b620005cb8162000c41565b600d6200049c565b600f6200034f565b620005e760006200033f565b81036200063e575b506200061e6001916200062b836200061e60159362000624836200061e620006173062000491565b88620004b8565b6200039c565b84620004b8565b62000637600d620004dd565b90620004b8565b6200064a908262000ab7565b38620005ef565b81116200069c5793620005b8620005d394620005b0620000bc9b9c95620005a8620005c09662000688620005db9c9b60116200034f565b965050959c9b50509450819596506200057b565b620006c590620006ab60405190565b6305dba32960e51b81529182916004830190815260200190565b0390fd5b620006c587620006d860405190565b6365a0074b60e11b81529182916004830190815260200190565b6200015360016200033f565b906200070a9162000720565b620000bc62000718620006f2565b60066200034f565b906200072c9162000737565b620000bc33620009ad565b620000bc91620007479162000755565b620000bc600060056200039c565b90620000bc9162000949565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156200079a575b60208310146200079457565b62000761565b91607f169162000788565b9160001960089290920291821b911b62000335565b9190620007cf620001536200036b936200033f565b908354620007a5565b620000bc91600091620007ba565b818110620007f2575050565b80620008026000600193620007d8565b01620007e6565b9190601f81116200081957505050565b6200082d620000bc93600052602060002090565b906020601f84018190048301931062000851575b6020601f909101040190620007e6565b909150819062000841565b9062000866815190565b906001600160401b0382116200009f576200088e8262000887855462000777565b8562000809565b602090601f8311600114620008cd576200036b929160009183620008c1575b5050600019600883021c1916906002021790565b015190503880620008ad565b601f19831691620008e385600052602060002090565b9260005b81811062000924575091600293918560019694106200090a575b50505002019055565b01516000196008601f8516021c1916905538808062000901565b91936020600181928787015181550195019201620008e7565b90620000bc916200085c565b906200095b620000bc9260036200093d565b60046200093d565b620001539060081c6200016f565b62000153905462000963565b90610100600160a81b039060081b62000335565b90620009a5620001536200036b9262000491565b82546200097d565b620009b9600562000971565b90620009c781600562000991565b620009fe620009f77f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000491565b9162000491565b9162000a0960405190565b80805b0390a3565b6200016f62000153620001539290565b620001539062000a11565b1562000a3457565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b620001539081565b62000153905462000a79565b634e487b7160e01b600052601160045260246000fd5b9190820180921162000ab157565b62000a8d565b600062000b3f62000b248362000acd8462000a21565b9362000aee6001600160a01b0386166001600160a01b038416141562000a2c565b62000afb87838762000b92565b62000b1e62000b168862000b10600262000a81565b62000aa3565b60026200034f565b620004b8565b62000b388562000b348362000a81565b0190565b906200034f565b62000a0c62000b7a62000b737fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9362000491565b9362000491565b9362000b8560405190565b9182918290815260200190565b90620000bc929162000bff565b1562000ba757565b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b505050620000bc62000c1862000c1462000c35565b1590565b62000b9f565b62000153906200037f565b62000153905462000c1e565b62000153600562000c29565b60601b1562000c4c57565b63d92e233d6000526004601cfdfe6080604052600436101561001257600080fd5b60003560e01c806302252c4d1461033257806306fdde031461032d578063095ea7b31461032857806312d75f131461032357806318160ddd1461031e57806323b872dd14610319578063313ce567146103145780633381e7e21461030f578063351a964d1461030a578063378dc3dc1461030557806339509351146103005780633af32abf146102fb5780633f4ba83a146102f657806342966c68146102f157806346904840146102ec57806349bd5a5e146102e75780634c09f37c146102e257806351bc3c85146102dd5780635c975abb146102d857806362997f8c146102d357806370a08231146102ce578063715018a6146102c957806379cc6790146102c45780638456cb59146102bf57806384c5dd01146102ba578063883356d9146102b55780638da5cb5b146102b05780638e8c10a2146102ab57806395d89b41146102a657806399735fd8146102a1578063a001ecdd1461029c578063a09a160114610297578063a457c2d714610292578063a82ed9ec1461028d578063a9059cbb14610288578063b9d0f1af14610283578063ba9341c01461027e578063c68ff0fe14610279578063d163364914610274578063d1ed0a0f1461026f578063d48e41271461026a578063d8f6785114610265578063dcc79cc814610260578063dd62ed3e1461025b578063e08973ce14610256578063ec57459c14610251578063f01f20df1461024c578063f19c4e3b14610247578063f2fde38b146102425763f69cf7830361033757610c38565b610c20565b610c07565b610bec565b610bc5565b610b9e565b610b76565b610b3b565b610b23565b610b08565b610ae1565b610abf565b610a86565b610a4a565b6109d2565b6109b6565b61098f565b61090f565b6108f4565b6108d9565b6108b2565b61088b565b610870565b610855565b61083a565b61081f565b6107fb565b6107e2565b6107ca565b6107af565b610794565b61076d565b610755565b61073a565b6106fd565b6106d6565b6106b2565b61069a565b61067f565b610663565b61062a565b61060f565b6105d2565b610580565b610564565b610508565b6104d2565b610479565b610403565b61036b565b600080fd5b805b0361033757565b905035906103528261033c565b565b906020828203126103375761036891610345565b90565b346103375761038361037e366004610354565b6113d4565b604051005b0390f35b600091031261033757565b60005b8381106103aa5750506000910152565b818101518382015260200161039a565b6103db6103e46020936103ee936103cf815190565b80835293849260200190565b95869101610397565b601f01601f191690565b0190565b6020808252610368929101906103ba565b346103375761041336600461038c565b61038861041e610f96565b604051918291826103f2565b6001600160a01b031690565b6001600160a01b03811661033e565b9050359061035282610436565b9190604083820312610337576103689061046c8185610445565b93602001610345565b9052565b346103375761038861049561048f366004610452565b90611019565b60405191829182901515815260200190565b610368916008021c6001600160a01b031690565b9061036891546104a7565b610368600060086104bb565b34610337576104e236600461038c565b6103886104ed6104c6565b6040515b918291826001600160a01b03909116815260200190565b346103375761051836600461038c565b610388610523610fbb565b6040515b9182918290815260200190565b90916060828403126103375761036861054d8484610445565b9361055b8160208601610445565b93604001610345565b346103375761038861049561057a366004610534565b91611913565b346103375761059036600461038c565b6040517f000000000000000000000000000000000000000000000000000000000000000060ff168152602090f35b906020828203126103375761036891610445565b34610337576103836105e53660046105be565b6112d5565b610368916008021c5b60ff1690565b9061036891546105ea565b6103686014806105f9565b346103375761061f36600461038c565b610388610495610604565b346103375761063a36600461038c565b6103887f0000000000000000000000000000000000000000000000000000000000000000610523565b3461033757610388610495610679366004610452565b90611051565b34610337576103886104956106953660046105be565b611276565b34610337576106aa36600461038c565b610383611c57565b34610337576103836106c5366004610354565b6119f8565b6103686000600d6104bb565b34610337576106e636600461038c565b6103886104ed6106ca565b610368600060146104bb565b346103375761070d36600461038c565b6103886104ed6106f1565b610368916008021c81565b906103689154610718565b61036860006012610723565b346103375761074a36600461038c565b61038861052361072e565b346103375761076536600461038c565b61038361254e565b346103375761077d36600461038c565b610388610495610e57565b6103686000600a610723565b34610337576107a436600461038c565b610388610523610788565b34610337576103886105236107c53660046105be565b610fdd565b34610337576107da36600461038c565b610383610ca8565b34610337576103836107f5366004610452565b90611b68565b346103375761080b36600461038c565b610383611bb5565b6103686000600b610723565b346103375761082f36600461038c565b610388610523610813565b346103375761084a36600461038c565b61038861049561126c565b346103375761086536600461038c565b6103886104ed610c66565b346103375761088036600461038c565b610388610495611292565b346103375761089b36600461038c565b61038861041e610fa0565b6103686000600e6104bb565b34610337576108c236600461038c565b6103886104ed6108a6565b6103686000600f610723565b34610337576108e936600461038c565b6103886105236108cd565b346103375761090436600461038c565b610388610495611262565b3461033757610388610495610925366004610452565b906110ca565b6103689061042a906001600160a01b031682565b6103689061092b565b6103689061093f565b610368737a250d5630b4cf539739df2c5dacb4c659f2488d610948565b610368610951565b61047590610948565b6020810192916103529190610976565b346103375761099f36600461038c565b6103886109aa61096e565b6040519182918261097f565b34610337576103886104956109cc366004610452565b90611633565b34610337576103836109e5366004610354565b611328565b610368906105f3565b61036890546109ea565b6103689060081c6105f3565b61036890546109fd565b6103689060101c6105f3565b6103689054610a13565b600c610a34816109f3565b916103686000610a4384610a09565b9301610a1f565b3461033757610a5a36600461038c565b610388610a65610a29565b60408051931515845291151560208401521515908201529081906060820190565b3461033757610a9636600461038c565b6103887f00000000000000000000000000000000000000000000000000000000000000006104ed565b6103886109aa610ad0366004610354565b61236a565b61036860006010610723565b3461033757610af136600461038c565b610388610523610ad5565b61036860006009610723565b3461033757610b1836600461038c565b610388610523610afc565b3461033757610383610b36366004610354565b611598565b3461033757610383610b4e3660046105be565b6124a1565b91906040838203126103375761036890610b6d8185610445565b93602001610445565b3461033757610388610523610b8c366004610b53565b90610ff9565b61036860006013610723565b3461033757610bae36600461038c565b610388610523610b92565b61036860006007610723565b3461033757610bd536600461038c565b610388610523610bb9565b61036860006011610723565b3461033757610bfc36600461038c565b610388610523610be0565b3461033757610383610c1a366004610452565b906114e8565b3461033757610383610c333660046105be565b610dbf565b3461033757610383610c4b366004610354565b611348565b6103689060081c61042a565b6103689054610c50565b6103686005610c5c565b610c78610d04565b610352610c96565b61042a6103686103689290565b61036890610c80565b610352610ca36000610c8d565b610dfc565b610352610c70565b15610cb757565b60405162461bcd60e51b815280610d00600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b610352610d0f610c66565b610d28610d1b3361042a565b916001600160a01b031690565b14610cb0565b61035290610d3a610d04565b610d9a565b15610d4657565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61035290610ca3610dae61042a6000610c8d565b6001600160a01b0383161415610d3f565b61035290610d2e565b90610100600160a81b039060081b5b9181191691161790565b90610df1610368610df892610948565b8254610dc8565b9055565b610e066005610c5c565b90610e12816005610de1565b610e45610e3f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610948565b91610948565b91610e4f60405190565b80805b0390a3565b61036860056109f3565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610e97575b6020831014610e9257565b610e61565b91607f1691610e87565b80546000939291610ebe610eb483610e77565b8085529360200190565b9160018116908115610f105750600114610ed757505050565b610eea9192939450600052602060002090565b916000925b818410610efc5750500190565b805484840152602090930192600101610eef565b92949550505060ff1916825215156020020190565b9061036891610ea1565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610f6757604052565b610f2f565b90610352610f8692610f7d60405190565b93848092610f25565b0383610f45565b61036890610f6c565b6103686003610f8d565b6103686004610f8d565b6103689081565b6103689054610faa565b6103686002610fb1565b90610fcf90610948565b600052602052604060002090565b610ff461036891610fec600090565b506000610fc5565b610fb1565b61036891611014610ff49261100c600090565b506001610fc5565b610fc5565b6110249190336111cb565b600190565b634e487b7160e01b600052601160045260246000fd5b9190820180921161104c57565b611029565b611024919061106a33926110658385610ff9565b61103f565b916111cb565b1561107757565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b611024919061106a33926110de8385610ff9565b6110ea82821015611070565b0390565b156110f557565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b1561114d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b9060001990610dd7565b6103686103686103689290565b906111c4610368610df8926111a7565b825461119d565b61120a6111f96111db6000610c8d565b61042a6001600160a01b0382166001600160a01b03861614156110ee565b6001600160a01b0384161415611146565b6112228361121d84611014856001610fc5565b6111b4565b610e526112586112527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610948565b93610948565b9361052760405190565b610368600c610a09565b610368600c6109f3565b61128d61036891611285600090565b506015610fc5565b6109f3565b610368600c610a1f565b6103689061042a565b610368905461129c565b906001600160a01b0390610dd7565b906112ce610368610df892610948565b82546112af565b6112df600e6112a5565b6112ef610d1b61042a6000610c8d565b036112ff5761035290600e6112be565b60405163131d002d60e01b8152600490fd5b6103529061131d610d04565b61035290600a6111b4565b61035290611311565b6103529061133d610d04565b61035290600b6111b4565b61035290611331565b6103529061135d610d04565b6103529061136961141c565b6113766103686009610fb1565b8111156113c2576113888160096111b4565b6113b27faab136b9dbe20468ab36dcd11abd26b3dcea2b259f018136905bf827f37f5514916111a7565b906113bc60405190565b600090a2565b60405163521e96bb60e11b8152600490fd5b61035290611351565b156113e457565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b61035261142e61142a610e57565b1590565b6113dd565b9061035291611440610d04565b906103529161144d61141c565b61145d565b6103686107d06111a7565b90611469610368611452565b81116114c15761147882612b3d565b61148382600d6112be565b61148e81600f6111b4565b610e456114bb7fe42708d93b95810922305119a3271ca42233da9ebe1e1e503f0e887817a32c7a93610948565b916111a7565b610d00906114ce60405190565b6365a0074b60e11b81529182916004830190815260200190565b9061035291611433565b610352906114fe610d04565b6103529061150a61141c565b61151561142a611292565b61158657611524610368611452565b811161155f576115358160116111b4565b6113b27f8c3208fa4fab043d09d9517339346757a58804a46f954585ba21465677820817916111a7565b610d009061156c60405190565b6305dba32960e51b81529182916004830190815260200190565b6040516319b3ca5360e31b8152600490fd5b610352906114f2565b9061036892916115af61141c565b6115ca565b6103689060a01c6105f3565b61036890546115b4565b50336115d660146115c0565b8061161c575b80611605575b6115f15750906103689161163f565b61036892826115ff9261256c565b9061163f565b5061161761142a61128d846015610fc5565b6115e2565b5061162e61142a61128d836015610fc5565b6115dc565b610368919060006115a1565b61102491903361175c565b61175c565b1561165657565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156116b057565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561170857565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6117eb6117d88360006117a361179261177483610c8d565b61042a6001600160a01b0382166001600160a01b038a16141561164f565b6001600160a01b03841614156116a9565b6117ae87838761181b565b6110146117ce886117c2610ff48986610fc5565b6110ea82821015611701565b61121d8784610fc5565b6117e5856103ee83610fb1565b906111b4565b610e526112586112527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610948565b906103529291611885565b1561182d57565b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b50505061035261189661142a610e57565b611826565b906103689392916118aa61141c565b5091906118b760146115c0565b806118fc575b806118e5575b6118d05761036892611920565b6118df8392826103689561256c565b91611920565b506118f761142a61128d836015610fc5565b6118c3565b5061190e61142a61128d856015610fc5565b6118bd565b610368929190600061189b565b61102492919061164a83335b8361197e565b1561193957565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b906119898183610ff9565b6000198103611999575b50505050565b6119ad9361106a916110ea82821015611932565b38808080611993565b610352906119c2610d04565b610352906119ce61141c565b6119d961142a61126c565b6119e65761035290611a01565b604051636cb5913960e01b8152600490fd5b610352906119b6565b6103529033611abd565b611abd565b15611a1757565b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b15611a6d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b600090611b1d611acc83610c8d565b92611aeb6001600160a01b0385166001600160a01b0385161415611a10565b611af685858561181b565b61121d83611b1787611b0b610ff48487610fc5565b6110ea82821015611a66565b92610fc5565b6117eb611b2e846110ea6002610fb1565b60026111b4565b9061035291611b42610d04565b9061035291611b4f61141c565b90611b5b61142a61126c565b6119e65761035291611b72565b9061035291611b35565b6103529190611a0b823361192c565b611b89610d04565b610352611b9761142a611262565b611ba357610352611c2d565b60405163f00085b960e01b8152600490fd5b610352611b81565b611bc561141c565b610352611bed565b9060ff90610dd7565b90611be6610368610df892151590565b8254611bcd565b611bf960016005611bd6565b33611c287f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916104f160405190565b0390a1565b610352611bbd565b611c3d610d04565b610352611c4b61142a611262565b611ba357610352611ca5565b610352611c35565b611c67611cf0565b610352611c7660006005611bd6565b33611c287f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916104f160405190565b610352611c5f565b15611cb457565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b610352611cfb610e57565b611cad565b9061036891611d0d610d04565b90611d1f91611d1a6123cb565b611ebd565b906103526123fd565b610368670de0b6b3a76400006111a7565b9081526040810192916103529160200152565b0152565b6103686706f05b59d3b200006111a7565b905051906103528261033c565b906020828203126103375761036891611d61565b6040513d6000823e3d90fd5b6103686127106111a7565b9050519061035282610436565b906020828203126103375761036891611d99565b80151561033e565b9050519061035282611dba565b906020828203126103375761036891611dc2565b6001600160a01b0390911681526040810192916103529160200152565b909160608284031261033757610368611e198484611d61565b93611e278160208601611d61565b93604001611d61565b610475906111a7565b9194611e87611d4c92989795611e7d60a096611e736103529a611e6c60c08a019e60008b01906001600160a01b03169052565b6020890152565b6040870190611e30565b6060850190611e30565b6001600160a01b03166080830152565b9060ff60a01b9060a01b610dd7565b90611eb6610368610df892151590565b8254611e97565b5034611ec960146115c0565b61235857611ed5611d28565b8083108015612345575b6123225750611eec611d50565b8082106123005750611f3b90611f0b611f0430610948565b9384611633565b506020611f23611f1e611f1e60086112a5565b610948565b6370a0823190611f3260405190565b94859260e01b90565b82526001600160a01b038616600483015260249082905afa9182156121df576000926122d0575b50611f87611f79611f736013610fb1565b83612432565b611f81611d8e565b90612461565b91611f9c611f986103686007610fb1565b9190565b116122b9575b81611fac91612415565b611fb7611f1e610951565b92611fca611fc3610fbb565b85836111cb565b63c45a0155611fe2611fdb60405190565b9160e01b90565b8152602081600481885afa9081156121df5761200a91611f1e9160009161229b575b50610948565b9063c9c653969163ad5c46489061202a61202360405190565b9260e01b90565b82526020826004818a5afa9081156121df5761208794602093600093612275575b5060006120689161205b60405190565b9788958694859360e01b90565b83526001600160a01b03808a1660048501521660248301526044820190565b03925af19182156121df576120df926120aa91600091612247575b5060146112be565b60206120bc611f1e611f1e60146112a5565b63095ea7b3906120d3600080199361205b60405190565b83528c60048401611de3565b03925af19182156121df5760609261221b575b5063f305d7199461212e61210583610fdd565b94600097612139612114610c66565b42908b8061212160405190565b9b8c9a8b998a9860e01b90565b885260048801611e39565b03925af180156121df576121ed575b5061215560016014611ea6565b61215e826111a7565b81116121b6575b505061217160146112a5565b61219b7f57a9f98b233034883786b9c47f1f6fabcf1655e39d3213b7287b926ca387136e91610948565b906121a560405190565b600090a2610368611f1e60146112a5565b818080926121ca611f1e611f1e600e6112a5565b8282156121e4575bf1156121df573880612165565b611d82565b506108fc6121d2565b61220d9060603d8111612214575b6122058183610f45565b810190611e00565b5050612148565b503d6121fb565b61223b9060203d8111612240575b6122338183610f45565b810190611dcf565b6120f2565b503d612229565b612268915060203d811161226e575b6122608183610f45565b810190611da6565b386120a2565b503d612256565b612068919350612293600091863d811161226e576122608183610f45565b93915061204b565b6122b3915060203d811161226e576122608183610f45565b38612004565b9050611fac6122c860006111a7565b919050611fa2565b6122f291925060203d81116122f9575b6122ea8183610f45565b810190611d6e565b9038611f62565b503d6122e0565b90610d0061230d60405190565b62fdf57560e51b815292839260048401611d39565b82610d0061232f60405190565b63c7bcc1b960e01b815292839260048401611d39565b506123516107c5610c66565b8311611edf565b60405163250856ab60e21b8152600490fd5b610368906000611d00565b61036860026111a7565b1561238657565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6103526123d86006610fb1565b6123ec6123e3612375565b9182141561237f565b60066111b4565b61036860016111a7565b6103526123ec6123f3565b9190820391821161104c57565b6103689190612408565b8181029291811591840414171561104c57565b610368919061241f565b634e487b7160e01b600052601260045260246000fd5b811561245c570490565b61243c565b6103689190612452565b61035290612477610d04565b61248160086112a5565b612491610d1b61042a6000610c8d565b036112ff576103529060086112be565b6103529061246b565b6124b26123cb565b6124ba6124c2565b6103526123fd565b6124cb30610948565b6124d481610fdd565b906000916124e1836111a7565b811161252c575b50316124f7610368600b610fb1565b8111612501575050565b81808092612513611f1e611f1e610c66565b828215612523575bf1156121df57565b506108fc61251b565b6125436125489161253d600a610fb1565b90612b2b565b612b22565b386124e8565b6103526124aa565b6103689060a81c6105f3565b6103689054612556565b6125929392918491612592612597612583866127c7565b9482829c8588969b959c612408565b612408565b9485976125a761042a60146112a5565b6001600160a01b03851614806127a7575b80612783575b612752576000956125ce876111a7565b8103612738575b506125df866111a7565b8103612707575b506125f0856111a7565b81036126ed575b50612601846111a7565b81036126dd575b505061261330610948565b9061261d82610fdd565b9061262b61142a6014612562565b90816126c4575b50806126af575b6126435750505050565b6126689192939495506126626125439161265d600a610fb1565b612b2b565b85612b2b565b31612676610368600b610fb1565b811161268157505090565b81808092612695611f1e611f1e600d6112a5565b8282156126a6575bf1156121df5790565b506108fc61269d565b506126bd610368600a610fb1565b8111612639565b90506126d6610d1b61042a60146112a5565b1438612632565b6126e691611abd565b3880612608565b612701906126fb600d6112a5565b8461175c565b386125f7565b612732907f00000000000000000000000000000000000000000000000000000000000000008561175c565b386125e6565b61274c90612746600e6112a5565b8661175c565b386125d5565b610d008561275f60405190565b63f6202a8f60e01b8152918291600483016001600160a01b03909116815260200190565b506127918761106587610fdd565b6127a1611f986103686009610fb1565b116125be565b506127b661042a611f1e610951565b6001600160a01b03861614156125b8565b6000906127dd6127d76012610fb1565b8261241f565b916127f06127e9611d8e565b8094612452565b9361280d84612808612802600f610fb1565b8661241f565b612452565b936128258161280861281f6010610fb1565b8761241f565b9361282e611292565b612836575050565b6103689293506128089061284a6011610fb1565b9061241f565b6124ba9061285c6123cb565b612887565b9060ff60a81b9060a81b610dd7565b90612880610368610df892151590565b8254612861565b61289c9061289760016014612870565b6129f4565b61035260006014612870565b906103526128b560405190565b9283610f45565b67ffffffffffffffff8111610f675760208091020190565b906128e66128e1836128bc565b6128a8565b918252565b369037565b90610352612906612900846128d4565b936128bc565b601f1901602084016128eb565b634e487b7160e01b600052603260045260246000fd5b90612932825190565b811015612943576020809102010190565b612913565b90612968612961612957845190565b8084529260200190565b9260200190565b9060005b8181106129795750505090565b90919261299f61299860019286516001600160a01b0316815260200190565b9460200190565b92910161296c565b906129e2611d4c91610352969897956129d56080966129cb60a08801946000890152565b6020870190611e30565b8482036040860152612948565b6001600160a01b039097166060830152565b612a06612a0160026111a7565b6128f0565b612a0f30610948565b90600092612a3783612a29612a23876111a7565b85612929565b906001600160a01b03169052565b612a42611f1e610951565b63ad5c4648612a53611fdb60405190565b8152602081600481855afa80156121df57612a83918791612b04575b50612a29612a7d60016111a7565b86612929565b612a8e8282866111cb565b63791ac947934290823b15610337578695612acc612ac1938897938894612ab460405190565b9a8b998a98899760e01b90565b8752600487016129a7565b03925af180156121df57612ade575050565b8161035292903d10612afd575b612af58183610f45565b81019061038c565b503d612aeb565b612b1c915060203d811161226e576122608183610f45565b38612a6f565b61035290612850565b9080821015612b38575090565b905090565b60601b15612b4757565b63d92e233d6000526004601cfdfea264697066735822122000f7c3f5e88eef6b6a202c331cbfe0872536155bfbb28517d245c5e1a27e130364736f6c63430008140033a26469706673582212209e06be738688f0c3cccff410faffefeb67d9ea7061090915166d7876e2c5314d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x26 JUMPI PUSH3 0x14 PUSH3 0x2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42BF PUSH3 0x126 DUP3 CODECOPY PUSH2 0x42BF SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35 PUSH3 0x37 JUMP JUMPDEST JUMP JUMPDEST PUSH3 0x35 CALLER PUSH3 0xC3 JUMP JUMPDEST PUSH3 0x54 SWAP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH3 0x54 SWAP1 SLOAD PUSH3 0x42 JUMP JUMPDEST PUSH3 0x54 SWAP1 PUSH3 0x48 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x54 SWAP1 PUSH3 0x63 JUMP JUMPDEST PUSH3 0x54 SWAP1 PUSH3 0x79 JUMP JUMPDEST SWAP1 PUSH3 0xA3 PUSH3 0x54 PUSH3 0xBF SWAP3 PUSH3 0x84 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0xCF PUSH1 0x0 PUSH3 0x57 JUMP JUMPDEST SWAP1 PUSH3 0xDD DUP2 PUSH1 0x0 PUSH3 0x8F JUMP JUMPDEST PUSH3 0x114 PUSH3 0x10D PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x84 JUMP JUMPDEST SWAP2 PUSH3 0x84 JUMP JUMPDEST SWAP2 PUSH3 0x11F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH3 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x66 JUMPI DUP1 PUSH4 0xD5E71353 EQ PUSH3 0x60 JUMPI DUP1 PUSH4 0xDCC79CC8 EQ PUSH3 0x5A JUMPI PUSH4 0xF2FDE38B SUB PUSH3 0x72 JUMPI PUSH3 0x437 JUMP JUMPDEST PUSH3 0x41A JUMP JUMPDEST PUSH3 0x3C5 JUMP JUMPDEST PUSH3 0xBE JUMP JUMPDEST PUSH3 0x83 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH3 0x72 JUMPI JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0x96 CALLDATASIZE PUSH1 0x4 PUSH3 0x77 JUMP JUMPDEST PUSH3 0xA0 PUSH3 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0xD1 CALLDATASIZE PUSH1 0x4 PUSH3 0x77 JUMP JUMPDEST PUSH3 0xA5 PUSH3 0xDF PUSH3 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x132 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0xF9 JUMP JUMPDEST SWAP1 PUSH3 0xBC PUSH3 0x147 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x10F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x132 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH3 0x196 PUSH3 0x190 DUP3 PUSH3 0x14F JUMP JUMPDEST PUSH3 0x138 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH3 0x72 JUMPI PUSH3 0xBC SWAP3 PUSH3 0x171 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0x72 JUMPI DUP2 PUSH1 0x20 PUSH3 0xB5 SWAP4 CALLDATALOAD SWAP2 ADD PUSH3 0x17D JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH3 0x72 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x1D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1D3 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x1EA JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH3 0x1D3 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x209 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH3 0x72 JUMPI PUSH3 0x271 PUSH3 0x23F PUSH1 0x60 PUSH3 0x138 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH3 0x24E DUP3 DUP6 PUSH3 0x212 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH3 0x262 DUP3 DUP3 DUP7 ADD PUSH3 0x212 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 DUP1 SWAP4 ADD PUSH3 0x212 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP2 DUP4 SUB SLT PUSH3 0x72 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x72 JUMPI DUP3 PUSH3 0x2A3 SWAP2 DUP4 ADD PUSH3 0x1B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x72 JUMPI DUP4 PUSH3 0x2C7 SWAP2 DUP5 ADD PUSH3 0x1B3 JUMP JUMPDEST SWAP3 PUSH3 0x2D7 DUP2 PUSH1 0x40 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH3 0x2E7 DUP3 PUSH1 0x60 DUP4 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP3 PUSH3 0x2F7 DUP4 PUSH1 0x80 DUP5 ADD PUSH3 0x221 JUMP JUMPDEST SWAP3 PUSH3 0x307 DUP2 PUSH1 0xE0 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH3 0x318 DUP3 PUSH2 0x100 DUP4 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH3 0x329 DUP4 PUSH2 0x120 DUP5 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH3 0x33A DUP2 PUSH2 0x140 DUP6 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP3 PUSH3 0x34B DUP3 PUSH2 0x160 DUP4 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP3 PUSH3 0xB5 PUSH3 0x360 DUP5 PUSH2 0x180 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP4 PUSH3 0x371 DUP2 PUSH2 0x1A0 DUP7 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP4 PUSH2 0x1C0 ADD PUSH3 0x1FA JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x37C JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x392 JUMP JUMPDEST PUSH3 0xB8 SWAP1 PUSH3 0x39D JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH3 0xBC SWAP2 SWAP1 PUSH3 0x3A8 JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0xA5 PUSH3 0x3F6 PUSH3 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH3 0x277 JUMP JUMPDEST SWAP12 SWAP11 SWAP1 SWAP11 SWAP10 SWAP2 SWAP10 SWAP9 SWAP3 SWAP9 SWAP8 SWAP4 SWAP8 SWAP7 SWAP5 SWAP7 PUSH3 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x3B3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH3 0x72 JUMPI PUSH3 0xB5 SWAP2 PUSH3 0x1FA JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0xA0 PUSH3 0x431 CALLDATASIZE PUSH1 0x4 PUSH3 0x403 JUMP JUMPDEST PUSH3 0xA98 JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0xA0 PUSH3 0x44E CALLDATASIZE PUSH1 0x4 PUSH3 0x403 JUMP JUMPDEST PUSH3 0x5E9 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 JUMP JUMPDEST PUSH3 0xB5 SWAP1 SLOAD PUSH3 0x454 JUMP JUMPDEST PUSH3 0xB5 PUSH1 0x0 PUSH3 0x45F JUMP JUMPDEST PUSH3 0x481 PUSH3 0x51C JUMP JUMPDEST PUSH3 0xBC PUSH3 0x4A6 JUMP JUMPDEST PUSH3 0xA9 PUSH3 0xB5 PUSH3 0xB5 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x48B JUMP JUMPDEST PUSH3 0xBC PUSH3 0x4B6 PUSH1 0x0 PUSH3 0x49B JUMP JUMPDEST PUSH3 0x628 JUMP JUMPDEST PUSH3 0xBC PUSH3 0x477 JUMP JUMPDEST ISZERO PUSH3 0x4CE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH3 0x518 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH3 0xBC PUSH3 0x52A PUSH3 0x46B JUMP JUMPDEST PUSH3 0x546 PUSH3 0x539 CALLER PUSH3 0xA9 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH3 0x4C6 JUMP JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0x55C PUSH3 0x51C JUMP JUMPDEST PUSH3 0x5BE JUMP JUMPDEST ISZERO PUSH3 0x56A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0x4B6 PUSH3 0x5D7 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x49B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH3 0x562 JUMP JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0x54D JUMP JUMPDEST SWAP1 PUSH3 0x608 PUSH3 0xB5 PUSH3 0x624 SWAP3 PUSH3 0x39D JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x634 PUSH1 0x0 PUSH3 0x45F JUMP JUMPDEST SWAP1 PUSH3 0x642 DUP2 PUSH1 0x0 PUSH3 0x5F4 JUMP JUMPDEST PUSH3 0x679 PUSH3 0x672 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x39D JUMP JUMPDEST SWAP2 PUSH3 0x39D JUMP JUMPDEST SWAP2 PUSH3 0x684 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x69E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x68D JUMP JUMPDEST PUSH3 0x6D4 PUSH3 0x6DE PUSH1 0x20 SWAP4 PUSH3 0x16D SWAP4 PUSH3 0x6C8 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH3 0x68A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP10 SWAP8 SWAP6 SWAP4 SWAP2 SWAP1 SWAP13 SWAP12 SWAP11 SWAP9 SWAP7 SWAP5 SWAP3 SWAP13 PUSH2 0x1C0 DUP12 ADD DUP12 DUP2 SUB PUSH1 0x0 DUP14 ADD MSTORE PUSH3 0x70E SWAP2 PUSH3 0x6AF JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH3 0x721 SWAP2 PUSH3 0x6AF JUMP JUMPDEST SWAP12 PUSH1 0x40 DUP11 ADD PUSH3 0x72F SWAP2 SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP10 ADD MSTORE DUP1 MLOAD ISZERO ISZERO PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x40 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x1EA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH3 0x72 JUMPI PUSH3 0xB5 SWAP2 PUSH3 0x7A5 JUMP JUMPDEST SWAP8 SWAP4 SWAP11 SWAP7 SWAP2 SWAP10 SWAP6 SWAP3 SWAP11 SWAP9 SWAP5 SWAP1 SWAP9 PUSH3 0x7E1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP11 PUSH2 0x37E6 DUP13 ADD SWAP1 DUP13 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH3 0x132 JUMPI DUP13 SWAP12 PUSH3 0x81A SWAP12 DUP16 SWAP4 DUP15 PUSH2 0x37E6 SWAP1 PUSH3 0xAA4 SWAP1 CODECOPY PUSH3 0x6E8 JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE SWAP2 DUP3 ISZERO PUSH3 0x97C JUMPI PUSH3 0x832 DUP4 PUSH3 0x39D JUMP JUMPDEST SWAP1 PUSH4 0x3381E7E2 DUP3 EXTCODESIZE ISZERO PUSH3 0x72 JUMPI PUSH3 0x860 PUSH1 0x0 SWAP2 PUSH3 0x877 PUSH3 0x855 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL DUP1 ISZERO PUSH3 0x97C JUMPI PUSH3 0xA2A JUMPI JUMPDEST POP PUSH4 0xDCC79CC8 PUSH3 0x89C PUSH1 0x1 PUSH3 0x45F JUMP JUMPDEST SWAP1 DUP3 EXTCODESIZE ISZERO PUSH3 0x72 JUMPI PUSH3 0x860 PUSH1 0x0 SWAP2 PUSH3 0x8BA PUSH3 0x855 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL DUP1 ISZERO PUSH3 0x97C JUMPI PUSH3 0xA10 JUMPI JUMPDEST POP PUSH1 0x0 SWAP2 PUSH3 0x8E0 PUSH3 0xA9 DUP5 PUSH3 0x49B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO DUP1 PUSH3 0x982 JUMPI JUMPDEST PUSH3 0x8FF JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH4 0xF2FDE38B SWAP1 DUP3 EXTCODESIZE ISZERO PUSH3 0x72 JUMPI PUSH3 0x930 SWAP3 PUSH3 0x860 DUP6 DUP1 SWAP5 PUSH3 0x923 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0x97C JUMPI PUSH3 0x948 JUMPI JUMPDEST DUP1 PUSH3 0x8F9 JUMP JUMPDEST DUP2 PUSH3 0x96C SWAP3 SWAP1 RETURNDATASIZE LT PUSH3 0x974 JUMPI JUMPDEST PUSH3 0x963 DUP2 DUP4 PUSH3 0x10F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x77 JUMP JUMPDEST CODESIZE DUP1 PUSH3 0x941 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x957 JUMP JUMPDEST PUSH3 0x799 JUMP JUMPDEST POP PUSH4 0x8DA5CB5B PUSH3 0x99D PUSH3 0x996 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH3 0x97C JUMPI PUSH3 0x9C9 SWAP2 DUP6 SWAP2 PUSH3 0x9DB JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH3 0x8F3 JUMP JUMPDEST PUSH3 0xA01 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH3 0xA08 JUMPI JUMPDEST PUSH3 0x9F8 DUP2 DUP4 PUSH3 0x10F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x7B4 JUMP JUMPDEST CODESIZE PUSH3 0x9BC JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x9EC JUMP JUMPDEST PUSH3 0xA23 SWAP1 PUSH1 0x0 PUSH3 0x963 DUP2 DUP4 PUSH3 0x10F JUMP JUMPDEST CODESIZE PUSH3 0x8CD JUMP JUMPDEST PUSH3 0xA3D SWAP1 PUSH1 0x0 PUSH3 0x963 DUP2 DUP4 PUSH3 0x10F JUMP JUMPDEST CODESIZE PUSH3 0x88A JUMP JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0xA53 PUSH3 0x51C JUMP JUMPDEST PUSH3 0xA5F PUSH1 0x1 PUSH3 0x45F JUMP JUMPDEST PUSH3 0xA73 PUSH3 0x539 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x49B JUMP JUMPDEST SUB PUSH3 0xA86 JUMPI PUSH3 0xBC SWAP1 PUSH1 0x1 PUSH3 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131D002D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0xA44 JUMP INVALID PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x62 JUMPI PUSH3 0x2E PUSH3 0x18 PUSH3 0x2FE JUMP JUMPDEST SWAP11 SWAP10 SWAP1 SWAP10 SWAP9 SWAP2 SWAP9 SWAP8 SWAP3 SWAP8 SWAP7 SWAP4 SWAP7 SWAP6 SWAP5 SWAP6 PUSH3 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8B PUSH3 0xC5B DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x595 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x63F ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0xA9B ADD MSTORE PUSH2 0x270D ADD MSTORE PUSH2 0x2B8B SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x67 JUMP JUMPDEST SWAP1 PUSH3 0xBC PUSH3 0xB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x7D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x9F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xEF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xDE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH3 0x119 PUSH3 0x113 DUP3 PUSH3 0xBE JUMP JUMPDEST PUSH3 0xA5 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH3 0x62 JUMPI PUSH3 0xBC SWAP3 PUSH3 0xDB JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0x62 JUMPI DUP2 MLOAD PUSH3 0x153 SWAP3 PUSH1 0x20 ADD PUSH3 0x100 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH3 0x62 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x156 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x158 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x17B JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH3 0x158 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH3 0x62 JUMPI PUSH3 0x202 PUSH3 0x1D0 PUSH1 0x60 PUSH3 0xA5 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH3 0x1DF DUP3 DUP6 PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH3 0x1F3 DUP3 DUP3 DUP7 ADD PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 DUP1 SWAP4 ADD PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1C0 DUP3 DUP5 SUB SLT PUSH3 0x62 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x62 JUMPI DUP4 PUSH3 0x235 SWAP2 DUP5 ADD PUSH3 0x136 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x62 JUMPI DUP2 PUSH3 0x25A SWAP2 DUP6 ADD PUSH3 0x136 JUMP JUMPDEST SWAP3 PUSH3 0x26A DUP3 PUSH1 0x40 DUP4 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x27A DUP4 PUSH1 0x60 DUP5 ADD PUSH3 0x18B JUMP JUMPDEST SWAP3 PUSH3 0x28A DUP2 PUSH1 0x80 DUP6 ADD PUSH3 0x1B2 JUMP JUMPDEST SWAP3 PUSH3 0x29A DUP3 PUSH1 0xE0 DUP4 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2AB DUP4 PUSH2 0x100 DUP5 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2BC DUP2 PUSH2 0x120 DUP6 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2CD DUP3 PUSH2 0x140 DUP4 ADD PUSH3 0x18B JUMP JUMPDEST SWAP3 PUSH3 0x153 PUSH3 0x2E2 DUP5 PUSH2 0x160 DUP6 ADD PUSH3 0x18B JUMP JUMPDEST SWAP4 PUSH3 0x2F3 DUP2 PUSH2 0x180 DUP7 ADD PUSH3 0x160 JUMP JUMPDEST SWAP4 PUSH2 0x1A0 ADD PUSH3 0x160 JUMP JUMPDEST PUSH3 0x321 PUSH3 0x37E6 DUP1 CODESIZE SUB DUP1 PUSH3 0x315 DUP2 PUSH3 0xA5 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x208 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x363 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x33F JUMP JUMPDEST DUP3 SLOAD PUSH3 0x32F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x37F PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH2 0x7D0 PUSH3 0x33F JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x3AF PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x392 JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x3D8 PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x3B7 JUMP JUMPDEST SWAP1 PUSH3 0xFF0000 SWAP1 PUSH1 0x10 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x402 PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH3 0x44D SWAP1 PUSH1 0x40 SWAP1 PUSH3 0x42D PUSH3 0x426 DUP3 MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH3 0x39C JUMP JUMPDEST PUSH3 0x446 PUSH3 0x43F PUSH1 0x20 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH3 0x3C5 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x3EF JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x40A JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x335 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x16F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x470 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x486 JUMP JUMPDEST SWAP1 PUSH3 0x4B0 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x491 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x460 JUMP JUMPDEST SWAP1 PUSH3 0x4C4 SWAP1 PUSH3 0x491 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x16F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0x4D2 JUMP JUMPDEST SWAP1 PUSH3 0x4FD SWAP2 SWAP13 SWAP12 SWAP4 SWAP11 SWAP9 SWAP3 SWAP10 SWAP13 PUSH3 0x6FE JUMP JUMPDEST PUSH3 0x514 PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x7 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x522 PUSH1 0x19 PUSH1 0x10 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x53D PUSH1 0x32 PUSH3 0x535 DUP2 PUSH1 0x12 PUSH3 0x34F JUMP JUMPDEST PUSH1 0x13 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x548 DUP10 PUSH3 0xC41 JUMP JUMPDEST DUP8 PUSH1 0xA0 MSTORE PUSH3 0x558 PUSH1 0x12 PUSH3 0x36F JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH1 0xC0 MSTORE PUSH3 0x568 PUSH3 0x385 JUMP JUMPDEST DUP1 DUP8 GT PUSH3 0x6C9 JUMPI PUSH1 0x40 DUP4 ADD MLOAD PUSH3 0x651 JUMPI JUMPDEST POP POP PUSH3 0x5DB SWAP5 SWAP4 PUSH3 0x5B8 PUSH3 0x5D3 SWAP5 PUSH3 0x5B0 PUSH3 0xBC SWAP12 SWAP13 SWAP6 PUSH3 0x5A8 PUSH3 0x5C0 SWAP7 PUSH1 0xC PUSH3 0x454 JUMP JUMPDEST PUSH1 0x9 PUSH3 0x34F JUMP JUMPDEST PUSH1 0xA PUSH3 0x34F JUMP JUMPDEST PUSH1 0xB PUSH3 0x34F JUMP JUMPDEST PUSH3 0x5CB DUP2 PUSH3 0xC41 JUMP JUMPDEST PUSH1 0xD PUSH3 0x49C JUMP JUMPDEST PUSH1 0xF PUSH3 0x34F JUMP JUMPDEST PUSH3 0x5E7 PUSH1 0x0 PUSH3 0x33F JUMP JUMPDEST DUP2 SUB PUSH3 0x63E JUMPI JUMPDEST POP PUSH3 0x61E PUSH1 0x1 SWAP2 PUSH3 0x62B DUP4 PUSH3 0x61E PUSH1 0x15 SWAP4 PUSH3 0x624 DUP4 PUSH3 0x61E PUSH3 0x617 ADDRESS PUSH3 0x491 JUMP JUMPDEST DUP9 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x39C JUMP JUMPDEST DUP5 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x637 PUSH1 0xD PUSH3 0x4DD JUMP JUMPDEST SWAP1 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x64A SWAP1 DUP3 PUSH3 0xAB7 JUMP JUMPDEST CODESIZE PUSH3 0x5EF JUMP JUMPDEST DUP2 GT PUSH3 0x69C JUMPI SWAP4 PUSH3 0x5B8 PUSH3 0x5D3 SWAP5 PUSH3 0x5B0 PUSH3 0xBC SWAP12 SWAP13 SWAP6 PUSH3 0x5A8 PUSH3 0x5C0 SWAP7 PUSH3 0x688 PUSH3 0x5DB SWAP13 SWAP12 PUSH1 0x11 PUSH3 0x34F JUMP JUMPDEST SWAP7 POP POP SWAP6 SWAP13 SWAP12 POP POP SWAP5 POP DUP2 SWAP6 SWAP7 POP PUSH3 0x57B JUMP JUMPDEST PUSH3 0x6C5 SWAP1 PUSH3 0x6AB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5DBA329 PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH3 0x6C5 DUP8 PUSH3 0x6D8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x65A0074B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH1 0x1 PUSH3 0x33F JUMP JUMPDEST SWAP1 PUSH3 0x70A SWAP2 PUSH3 0x720 JUMP JUMPDEST PUSH3 0xBC PUSH3 0x718 PUSH3 0x6F2 JUMP JUMPDEST PUSH1 0x6 PUSH3 0x34F JUMP JUMPDEST SWAP1 PUSH3 0x72C SWAP2 PUSH3 0x737 JUMP JUMPDEST PUSH3 0xBC CALLER PUSH3 0x9AD JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH3 0x747 SWAP2 PUSH3 0x755 JUMP JUMPDEST PUSH3 0xBC PUSH1 0x0 PUSH1 0x5 PUSH3 0x39C JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x949 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH3 0x79A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x794 JUMPI JUMP JUMPDEST PUSH3 0x761 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x788 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH3 0x335 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x7CF PUSH3 0x153 PUSH3 0x36B SWAP4 PUSH3 0x33F JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x7A5 JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x7BA JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x7F2 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH3 0x802 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH3 0x7D8 JUMP JUMPDEST ADD PUSH3 0x7E6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH3 0x819 JUMPI POP POP POP JUMP JUMPDEST PUSH3 0x82D PUSH3 0xBC SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH3 0x851 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH3 0x7E6 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x841 JUMP JUMPDEST SWAP1 PUSH3 0x866 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x9F JUMPI PUSH3 0x88E DUP3 PUSH3 0x887 DUP6 SLOAD PUSH3 0x777 JUMP JUMPDEST DUP6 PUSH3 0x809 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x8CD JUMPI PUSH3 0x36B SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x8C1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x8AD JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH3 0x8E3 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x924 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH3 0x90A JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x901 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH3 0x8E7 JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x85C JUMP JUMPDEST SWAP1 PUSH3 0x95B PUSH3 0xBC SWAP3 PUSH1 0x3 PUSH3 0x93D JUMP JUMPDEST PUSH1 0x4 PUSH3 0x93D JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH1 0x8 SHR PUSH3 0x16F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0x963 JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x9A5 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x491 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x97D JUMP JUMPDEST PUSH3 0x9B9 PUSH1 0x5 PUSH3 0x971 JUMP JUMPDEST SWAP1 PUSH3 0x9C7 DUP2 PUSH1 0x5 PUSH3 0x991 JUMP JUMPDEST PUSH3 0x9FE PUSH3 0x9F7 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP2 PUSH3 0x491 JUMP JUMPDEST SWAP2 PUSH3 0xA09 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH3 0x16F PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0xA11 JUMP JUMPDEST ISZERO PUSH3 0xA34 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x153 SWAP1 DUP2 JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0xA79 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xAB1 JUMPI JUMP JUMPDEST PUSH3 0xA8D JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB3F PUSH3 0xB24 DUP4 PUSH3 0xACD DUP5 PUSH3 0xA21 JUMP JUMPDEST SWAP4 PUSH3 0xAEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH3 0xA2C JUMP JUMPDEST PUSH3 0xAFB DUP8 DUP4 DUP8 PUSH3 0xB92 JUMP JUMPDEST PUSH3 0xB1E PUSH3 0xB16 DUP9 PUSH3 0xB10 PUSH1 0x2 PUSH3 0xA81 JUMP JUMPDEST PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0xB38 DUP6 PUSH3 0xB34 DUP4 PUSH3 0xA81 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x34F JUMP JUMPDEST PUSH3 0xA0C PUSH3 0xB7A PUSH3 0xB73 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP4 PUSH3 0xB85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP3 SWAP2 PUSH3 0xBFF JUMP JUMPDEST ISZERO PUSH3 0xBA7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP PUSH3 0xBC PUSH3 0xC18 PUSH3 0xC14 PUSH3 0xC35 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH3 0xB9F JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x37F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0xC1E JUMP JUMPDEST PUSH3 0x153 PUSH1 0x5 PUSH3 0xC29 JUMP JUMPDEST PUSH1 0x60 SHL ISZERO PUSH3 0xC4C JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2252C4D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x12D75F13 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x3381E7E2 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x351A964D EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x4C09F37C EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x51BC3C85 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x62997F8C EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x84C5DD01 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x883356D9 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8E8C10A2 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x99735FD8 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA09A1601 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xB9D0F1AF EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xBA9341C0 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xC68FF0FE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xD1ED0A0F EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xD48E4127 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xD8F67851 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xDCC79CC8 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE08973CE EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xEC57459C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xF01F20DF EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xF19C4E3B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH4 0xF69CF783 SUB PUSH2 0x337 JUMPI PUSH2 0xC38 JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x337 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x33C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x345 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x337 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3AA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39A JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x3E4 PUSH1 0x20 SWAP4 PUSH2 0x3EE SWAP4 PUSH2 0x3CF DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x368 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3BA JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x41E PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x33E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x436 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP1 PUSH2 0x46C DUP2 DUP6 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x345 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x8 PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 PUSH2 0x54D DUP5 DUP5 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH2 0x55B DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x345 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x534 JUMP JUMPDEST SWAP2 PUSH2 0x1913 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x445 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x14 DUP1 PUSH2 0x5F9 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x604 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x63A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH32 0x0 PUSH2 0x523 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x679 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1051 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x1276 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x6AA CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x1C57 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x6C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xD PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x14 PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x718 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x12 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x74A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x72E JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x765 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x254E JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x77D CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xA PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x7A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x788 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x523 PUSH2 0x7C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0xCA8 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x7F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1B68 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x80B CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xB PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x82F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x813 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x126C JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x865 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0xC66 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x880 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x1292 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x89B CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x41E PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xE PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x8C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xF PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x8E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x8CD JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x904 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x1262 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x925 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x42A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x368 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH2 0x948 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x475 SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x976 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x99F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x9AA PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x97F JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x9CC CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1633 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x9E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x8 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x10 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xA13 JUMP JUMPDEST PUSH1 0xC PUSH2 0xA34 DUP2 PUSH2 0x9F3 JUMP JUMPDEST SWAP2 PUSH2 0x368 PUSH1 0x0 PUSH2 0xA43 DUP5 PUSH2 0xA09 JUMP JUMPDEST SWAP4 ADD PUSH2 0xA1F JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0xA65 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xA96 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH32 0x0 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x388 PUSH2 0x9AA PUSH2 0xAD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x236A JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x10 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xAF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x9 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xB18 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xAFC JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xB36 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1598 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xB4E CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x24A1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP1 PUSH2 0xB6D DUP2 DUP6 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x445 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x523 PUSH2 0xB8C CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST SWAP1 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x13 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBAE CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x7 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x11 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBFC CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xBE0 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC1A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x14E8 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC33 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC4B CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x8 SHR PUSH2 0x42A JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x5 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0xC78 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x42A PUSH2 0x368 PUSH2 0x368 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x352 PUSH2 0xCA3 PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x352 PUSH2 0xC70 JUMP JUMPDEST ISZERO PUSH2 0xCB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xD00 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0xD0F PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xD28 PUSH2 0xD1B CALLER PUSH2 0x42A JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xD3A PUSH2 0xD04 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST ISZERO PUSH2 0xD46 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xCA3 PUSH2 0xDAE PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xD2E JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDF1 PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x948 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDC8 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE06 PUSH1 0x5 PUSH2 0xC5C JUMP JUMPDEST SWAP1 PUSH2 0xE12 DUP2 PUSH1 0x5 PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0xE3F PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0xE4F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x5 PUSH2 0x9F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xE97 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE92 JUMPI JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE87 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xEBE PUSH2 0xEB4 DUP4 PUSH2 0xE77 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xF10 JUMPI POP PUSH1 0x1 EQ PUSH2 0xED7 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xEEA SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xEFC JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xEEF JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 PUSH2 0xEA1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0xF86 SWAP3 PUSH2 0xF7D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xF25 JUMP JUMPDEST SUB DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x368 PUSH1 0x3 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x368 PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x368 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x2 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0xFCF SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xFF4 PUSH2 0x368 SWAP2 PUSH2 0xFEC PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH2 0x1014 PUSH2 0xFF4 SWAP3 PUSH2 0x100C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 CALLER PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x106A CALLER SWAP3 PUSH2 0x1065 DUP4 DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST SWAP2 PUSH2 0x11CB JUMP JUMPDEST ISZERO PUSH2 0x1077 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x106A CALLER SWAP3 PUSH2 0x10DE DUP4 DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1070 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x114D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x368 PUSH2 0x368 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11C4 PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x11A7 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x119D JUMP JUMPDEST PUSH2 0x120A PUSH2 0x11F9 PUSH2 0x11DB PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x1222 DUP4 PUSH2 0x121D DUP5 PUSH2 0x1014 DUP6 PUSH1 0x1 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x1258 PUSH2 0x1252 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP4 PUSH2 0x527 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x128D PUSH2 0x368 SWAP2 PUSH2 0x1285 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x129C JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x12CE PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x948 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x12DF PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x12EF PUSH2 0xD1B PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH2 0x352 SWAP1 PUSH1 0xE PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131D002D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x131D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH1 0xA PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x133D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH1 0xB PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x135D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1369 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1376 PUSH2 0x368 PUSH1 0x9 PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x13C2 JUMPI PUSH2 0x1388 DUP2 PUSH1 0x9 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0xAAB136B9DBE20468AB36DCD11ABD26B3DCEA2B259F018136905BF827F37F5514 SWAP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 PUSH2 0x13BC PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x521E96BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1351 JUMP JUMPDEST ISZERO PUSH2 0x13E4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x142E PUSH2 0x142A PUSH2 0xE57 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x13DD JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1440 PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x144D PUSH2 0x141C JUMP JUMPDEST PUSH2 0x145D JUMP JUMPDEST PUSH2 0x368 PUSH2 0x7D0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 PUSH2 0x1469 PUSH2 0x368 PUSH2 0x1452 JUMP JUMPDEST DUP2 GT PUSH2 0x14C1 JUMPI PUSH2 0x1478 DUP3 PUSH2 0x2B3D JUMP JUMPDEST PUSH2 0x1483 DUP3 PUSH1 0xD PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH1 0xF PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x14BB PUSH32 0xE42708D93B95810922305119A3271CA42233DA9EBE1E1E503F0E887817A32C7A SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xD00 SWAP1 PUSH2 0x14CE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x65A0074B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x14FE PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x150A PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1515 PUSH2 0x142A PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x1586 JUMPI PUSH2 0x1524 PUSH2 0x368 PUSH2 0x1452 JUMP JUMPDEST DUP2 GT PUSH2 0x155F JUMPI PUSH2 0x1535 DUP2 PUSH1 0x11 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0x8C3208FA4FAB043D09D9517339346757A58804A46F954585BA21465677820817 SWAP2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xD00 SWAP1 PUSH2 0x156C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5DBA329 PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19B3CA53 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP3 SWAP2 PUSH2 0x15AF PUSH2 0x141C JUMP JUMPDEST PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0xA0 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x15B4 JUMP JUMPDEST POP CALLER PUSH2 0x15D6 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH2 0x161C JUMPI JUMPDEST DUP1 PUSH2 0x1605 JUMPI JUMPDEST PUSH2 0x15F1 JUMPI POP SWAP1 PUSH2 0x368 SWAP2 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x368 SWAP3 DUP3 PUSH2 0x15FF SWAP3 PUSH2 0x256C JUMP JUMPDEST SWAP1 PUSH2 0x163F JUMP JUMPDEST POP PUSH2 0x1617 PUSH2 0x142A PUSH2 0x128D DUP5 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST POP PUSH2 0x162E PUSH2 0x142A PUSH2 0x128D DUP4 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 CALLER PUSH2 0x175C JUMP JUMPDEST PUSH2 0x175C JUMP JUMPDEST ISZERO PUSH2 0x1656 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1708 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x17EB PUSH2 0x17D8 DUP4 PUSH1 0x0 PUSH2 0x17A3 PUSH2 0x1792 PUSH2 0x1774 DUP4 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ ISZERO PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x17AE DUP8 DUP4 DUP8 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x1014 PUSH2 0x17CE DUP9 PUSH2 0x17C2 PUSH2 0xFF4 DUP10 DUP7 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x121D DUP8 DUP5 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x17E5 DUP6 PUSH2 0x3EE DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x1258 PUSH2 0x1252 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP3 SWAP2 PUSH2 0x1885 JUMP JUMPDEST ISZERO PUSH2 0x182D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x352 PUSH2 0x1896 PUSH2 0x142A PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x1826 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP4 SWAP3 SWAP2 PUSH2 0x18AA PUSH2 0x141C JUMP JUMPDEST POP SWAP2 SWAP1 PUSH2 0x18B7 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH2 0x18FC JUMPI JUMPDEST DUP1 PUSH2 0x18E5 JUMPI JUMPDEST PUSH2 0x18D0 JUMPI PUSH2 0x368 SWAP3 PUSH2 0x1920 JUMP JUMPDEST PUSH2 0x18DF DUP4 SWAP3 DUP3 PUSH2 0x368 SWAP6 PUSH2 0x256C JUMP JUMPDEST SWAP2 PUSH2 0x1920 JUMP JUMPDEST POP PUSH2 0x18F7 PUSH2 0x142A PUSH2 0x128D DUP4 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x18C3 JUMP JUMPDEST POP PUSH2 0x190E PUSH2 0x142A PUSH2 0x128D DUP6 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x368 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1024 SWAP3 SWAP2 SWAP1 PUSH2 0x164A DUP4 CALLER JUMPDEST DUP4 PUSH2 0x197E JUMP JUMPDEST ISZERO PUSH2 0x1939 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1989 DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 SUB PUSH2 0x1999 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x19AD SWAP4 PUSH2 0x106A SWAP2 PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1932 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19C2 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19CE PUSH2 0x141C JUMP JUMPDEST PUSH2 0x19D9 PUSH2 0x142A PUSH2 0x126C JUMP JUMPDEST PUSH2 0x19E6 JUMPI PUSH2 0x352 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CB59139 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x352 SWAP1 CALLER PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST ISZERO PUSH2 0x1A17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A6D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x1B1D PUSH2 0x1ACC DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP3 PUSH2 0x1AEB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ ISZERO PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1AF6 DUP6 DUP6 DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x121D DUP4 PUSH2 0x1B17 DUP8 PUSH2 0x1B0B PUSH2 0xFF4 DUP5 DUP8 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1A66 JUMP JUMPDEST SWAP3 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x17EB PUSH2 0x1B2E DUP5 PUSH2 0x10EA PUSH1 0x2 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B42 PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B4F PUSH2 0x141C JUMP JUMPDEST SWAP1 PUSH2 0x1B5B PUSH2 0x142A PUSH2 0x126C JUMP JUMPDEST PUSH2 0x19E6 JUMPI PUSH2 0x352 SWAP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1A0B DUP3 CALLER PUSH2 0x192C JUMP JUMPDEST PUSH2 0x1B89 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1B97 PUSH2 0x142A PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH2 0x352 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF00085B9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x1BC5 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1BED JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x1BE6 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x1BF9 PUSH1 0x1 PUSH1 0x5 PUSH2 0x1BD6 JUMP JUMPDEST CALLER PUSH2 0x1C28 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x4F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x1C3D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C4B PUSH2 0x142A PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH2 0x352 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1C67 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C76 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1BD6 JUMP JUMPDEST CALLER PUSH2 0x1C28 PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x4F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C5F JUMP JUMPDEST ISZERO PUSH2 0x1CB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x1CFB PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 PUSH2 0x1D0D PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x1D1F SWAP2 PUSH2 0x1D1A PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x1EBD JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x368 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x368 PUSH8 0x6F05B59D3B20000 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x368 PUSH2 0x2710 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x436 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1D99 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x33E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 PUSH2 0x1E19 DUP5 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP4 PUSH2 0x1E27 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x475 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1E87 PUSH2 0x1D4C SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1E7D PUSH1 0xA0 SWAP7 PUSH2 0x1E73 PUSH2 0x352 SWAP11 PUSH2 0x1E6C PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x1EB6 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1E97 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1EC9 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x2358 JUMPI PUSH2 0x1ED5 PUSH2 0x1D28 JUMP JUMPDEST DUP1 DUP4 LT DUP1 ISZERO PUSH2 0x2345 JUMPI JUMPDEST PUSH2 0x2322 JUMPI POP PUSH2 0x1EEC PUSH2 0x1D50 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0x2300 JUMPI POP PUSH2 0x1F3B SWAP1 PUSH2 0x1F0B PUSH2 0x1F04 ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x1633 JUMP JUMPDEST POP PUSH1 0x20 PUSH2 0x1F23 PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0x8 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F32 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH1 0x0 SWAP3 PUSH2 0x22D0 JUMPI JUMPDEST POP PUSH2 0x1F87 PUSH2 0x1F79 PUSH2 0x1F73 PUSH1 0x13 PUSH2 0xFB1 JUMP JUMPDEST DUP4 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x1F81 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 PUSH2 0x2461 JUMP JUMPDEST SWAP2 PUSH2 0x1F9C PUSH2 0x1F98 PUSH2 0x368 PUSH1 0x7 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST GT PUSH2 0x22B9 JUMPI JUMPDEST DUP2 PUSH2 0x1FAC SWAP2 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x1FB7 PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST SWAP3 PUSH2 0x1FCA PUSH2 0x1FC3 PUSH2 0xFBB JUMP JUMPDEST DUP6 DUP4 PUSH2 0x11CB JUMP JUMPDEST PUSH4 0xC45A0155 PUSH2 0x1FE2 PUSH2 0x1FDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x200A SWAP2 PUSH2 0x1F1E SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x229B JUMPI JUMPDEST POP PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH4 0xC9C65396 SWAP2 PUSH4 0xAD5C4648 SWAP1 PUSH2 0x202A PUSH2 0x2023 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2087 SWAP5 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0x2275 JUMPI JUMPDEST POP PUSH1 0x0 PUSH2 0x2068 SWAP2 PUSH2 0x205B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x4 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x20DF SWAP3 PUSH2 0x20AA SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2247 JUMPI JUMPDEST POP PUSH1 0x14 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x20 PUSH2 0x20BC PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH4 0x95EA7B3 SWAP1 PUSH2 0x20D3 PUSH1 0x0 DUP1 NOT SWAP4 PUSH2 0x205B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP4 MSTORE DUP13 PUSH1 0x4 DUP5 ADD PUSH2 0x1DE3 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH1 0x60 SWAP3 PUSH2 0x221B JUMPI JUMPDEST POP PUSH4 0xF305D719 SWAP5 PUSH2 0x212E PUSH2 0x2105 DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP8 PUSH2 0x2139 PUSH2 0x2114 PUSH2 0xC66 JUMP JUMPDEST TIMESTAMP SWAP1 DUP12 DUP1 PUSH2 0x2121 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP12 DUP13 SWAP11 DUP12 SWAP10 DUP11 SWAP9 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP9 MSTORE PUSH1 0x4 DUP9 ADD PUSH2 0x1E39 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x21ED JUMPI JUMPDEST POP PUSH2 0x2155 PUSH1 0x1 PUSH1 0x14 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x215E DUP3 PUSH2 0x11A7 JUMP JUMPDEST DUP2 GT PUSH2 0x21B6 JUMPI JUMPDEST POP POP PUSH2 0x2171 PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x219B PUSH32 0x57A9F98B233034883786B9C47F1F6FABCF1655E39D3213B7287B926CA387136E SWAP2 PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x21A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 PUSH2 0x368 PUSH2 0x1F1E PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x21CA PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x21E4 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI CODESIZE DUP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x220D SWAP1 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x2214 JUMPI JUMPDEST PUSH2 0x2205 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E00 JUMP JUMPDEST POP POP PUSH2 0x2148 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x223B SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2240 JUMPI JUMPDEST PUSH2 0x2233 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH2 0x20F2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x2268 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI JUMPDEST PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST CODESIZE PUSH2 0x20A2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2256 JUMP JUMPDEST PUSH2 0x2068 SWAP2 SWAP4 POP PUSH2 0x2293 PUSH1 0x0 SWAP2 DUP7 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP4 SWAP2 POP PUSH2 0x204B JUMP JUMPDEST PUSH2 0x22B3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST CODESIZE PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FAC PUSH2 0x22C8 PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x22F2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x22F9 JUMPI JUMPDEST PUSH2 0x22EA DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D6E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1F62 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x22E0 JUMP JUMPDEST SWAP1 PUSH2 0xD00 PUSH2 0x230D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xFDF575 PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1D39 JUMP JUMPDEST DUP3 PUSH2 0xD00 PUSH2 0x232F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC7BCC1B9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1D39 JUMP JUMPDEST POP PUSH2 0x2351 PUSH2 0x7C5 PUSH2 0xC66 JUMP JUMPDEST DUP4 GT PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x250856AB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x0 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x2 PUSH2 0x11A7 JUMP JUMPDEST ISZERO PUSH2 0x2386 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x23D8 PUSH1 0x6 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x23EC PUSH2 0x23E3 PUSH2 0x2375 JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x237F JUMP JUMPDEST PUSH1 0x6 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x23EC PUSH2 0x23F3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x245C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x243C JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x2477 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x2481 PUSH1 0x8 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x2491 PUSH2 0xD1B PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH2 0x352 SWAP1 PUSH1 0x8 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x246B JUMP JUMPDEST PUSH2 0x24B2 PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x24BA PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x24CB ADDRESS PUSH2 0x948 JUMP JUMPDEST PUSH2 0x24D4 DUP2 PUSH2 0xFDD JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x24E1 DUP4 PUSH2 0x11A7 JUMP JUMPDEST DUP2 GT PUSH2 0x252C JUMPI JUMPDEST POP BALANCE PUSH2 0x24F7 PUSH2 0x368 PUSH1 0xB PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2501 JUMPI POP POP JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x2513 PUSH2 0x1F1E PUSH2 0x1F1E PUSH2 0xC66 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x2523 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x251B JUMP JUMPDEST PUSH2 0x2543 PUSH2 0x2548 SWAP2 PUSH2 0x253D PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x2B2B JUMP JUMPDEST PUSH2 0x2B22 JUMP JUMPDEST CODESIZE PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0xA8 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2592 SWAP4 SWAP3 SWAP2 DUP5 SWAP2 PUSH2 0x2592 PUSH2 0x2597 PUSH2 0x2583 DUP7 PUSH2 0x27C7 JUMP JUMPDEST SWAP5 DUP3 DUP3 SWAP13 DUP6 DUP9 SWAP7 SWAP12 SWAP6 SWAP13 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x2408 JUMP JUMPDEST SWAP5 DUP6 SWAP8 PUSH2 0x25A7 PUSH2 0x42A PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 PUSH2 0x27A7 JUMPI JUMPDEST DUP1 PUSH2 0x2783 JUMPI JUMPDEST PUSH2 0x2752 JUMPI PUSH1 0x0 SWAP6 PUSH2 0x25CE DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x2738 JUMPI JUMPDEST POP PUSH2 0x25DF DUP7 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x2707 JUMPI JUMPDEST POP PUSH2 0x25F0 DUP6 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x26ED JUMPI JUMPDEST POP PUSH2 0x2601 DUP5 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x26DD JUMPI JUMPDEST POP POP PUSH2 0x2613 ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x261D DUP3 PUSH2 0xFDD JUMP JUMPDEST SWAP1 PUSH2 0x262B PUSH2 0x142A PUSH1 0x14 PUSH2 0x2562 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x26C4 JUMPI JUMPDEST POP DUP1 PUSH2 0x26AF JUMPI JUMPDEST PUSH2 0x2643 JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x2668 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 POP PUSH2 0x2662 PUSH2 0x2543 SWAP2 PUSH2 0x265D PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2B2B JUMP JUMPDEST DUP6 PUSH2 0x2B2B JUMP JUMPDEST BALANCE PUSH2 0x2676 PUSH2 0x368 PUSH1 0xB PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2681 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x2695 PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0xD PUSH2 0x12A5 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x26A6 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI SWAP1 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x269D JUMP JUMPDEST POP PUSH2 0x26BD PUSH2 0x368 PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2639 JUMP JUMPDEST SWAP1 POP PUSH2 0x26D6 PUSH2 0xD1B PUSH2 0x42A PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST EQ CODESIZE PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x26E6 SWAP2 PUSH2 0x1ABD JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2608 JUMP JUMPDEST PUSH2 0x2701 SWAP1 PUSH2 0x26FB PUSH1 0xD PUSH2 0x12A5 JUMP JUMPDEST DUP5 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0x2732 SWAP1 PUSH32 0x0 DUP6 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x274C SWAP1 PUSH2 0x2746 PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST DUP7 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0xD00 DUP6 PUSH2 0x275F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xF6202A8F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x2791 DUP8 PUSH2 0x1065 DUP8 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x27A1 PUSH2 0x1F98 PUSH2 0x368 PUSH1 0x9 PUSH2 0xFB1 JUMP JUMPDEST GT PUSH2 0x25BE JUMP JUMPDEST POP PUSH2 0x27B6 PUSH2 0x42A PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x27DD PUSH2 0x27D7 PUSH1 0x12 PUSH2 0xFB1 JUMP JUMPDEST DUP3 PUSH2 0x241F JUMP JUMPDEST SWAP2 PUSH2 0x27F0 PUSH2 0x27E9 PUSH2 0x1D8E JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x2452 JUMP JUMPDEST SWAP4 PUSH2 0x280D DUP5 PUSH2 0x2808 PUSH2 0x2802 PUSH1 0xF PUSH2 0xFB1 JUMP JUMPDEST DUP7 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x2452 JUMP JUMPDEST SWAP4 PUSH2 0x2825 DUP2 PUSH2 0x2808 PUSH2 0x281F PUSH1 0x10 PUSH2 0xFB1 JUMP JUMPDEST DUP8 PUSH2 0x241F JUMP JUMPDEST SWAP4 PUSH2 0x282E PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x2836 JUMPI POP POP JUMP JUMPDEST PUSH2 0x368 SWAP3 SWAP4 POP PUSH2 0x2808 SWAP1 PUSH2 0x284A PUSH1 0x11 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x24BA SWAP1 PUSH2 0x285C PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x2887 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x2880 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x289C SWAP1 PUSH2 0x2897 PUSH1 0x1 PUSH1 0x14 PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x29F4 JUMP JUMPDEST PUSH2 0x352 PUSH1 0x0 PUSH1 0x14 PUSH2 0x2870 JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x28B5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF67 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28E6 PUSH2 0x28E1 DUP4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x28A8 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x2906 PUSH2 0x2900 DUP5 PUSH2 0x28D4 JUMP JUMPDEST SWAP4 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x28EB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x2932 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x2913 JUMP JUMPDEST SWAP1 PUSH2 0x2968 PUSH2 0x2961 PUSH2 0x2957 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2979 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x299F PUSH2 0x2998 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x296C JUMP JUMPDEST SWAP1 PUSH2 0x29E2 PUSH2 0x1D4C SWAP2 PUSH2 0x352 SWAP7 SWAP9 SWAP8 SWAP6 PUSH2 0x29D5 PUSH1 0x80 SWAP7 PUSH2 0x29CB PUSH1 0xA0 DUP9 ADD SWAP5 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2A06 PUSH2 0x2A01 PUSH1 0x2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x2A0F ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2A37 DUP4 PUSH2 0x2A29 PUSH2 0x2A23 DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP6 PUSH2 0x2929 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2A42 PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST PUSH4 0xAD5C4648 PUSH2 0x2A53 PUSH2 0x1FDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2A83 SWAP2 DUP8 SWAP2 PUSH2 0x2B04 JUMPI JUMPDEST POP PUSH2 0x2A29 PUSH2 0x2A7D PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST DUP7 PUSH2 0x2929 JUMP JUMPDEST PUSH2 0x2A8E DUP3 DUP3 DUP7 PUSH2 0x11CB JUMP JUMPDEST PUSH4 0x791AC947 SWAP4 TIMESTAMP SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x337 JUMPI DUP7 SWAP6 PUSH2 0x2ACC PUSH2 0x2AC1 SWAP4 DUP9 SWAP8 SWAP4 DUP9 SWAP5 PUSH2 0x2AB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x29A7 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2ADE JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x352 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2AFD JUMPI JUMPDEST PUSH2 0x2AF5 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x38C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x2B1C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST CODESIZE PUSH2 0x2A6F JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x2850 JUMP JUMPDEST SWAP1 DUP1 DUP3 LT ISZERO PUSH2 0x2B38 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL ISZERO PUSH2 0x2B47 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xF7 0xC3 CREATE2 0xE8 DUP15 0xEF PUSH12 0x6A202C331CBFE0872536155B 0xFB 0xB2 DUP6 OR 0xD2 GASLIMIT 0xC5 0xE1 LOG2 PUSH31 0x130364736F6C63430008140033A26469706673582212209E06BE738688F0C3 0xCC 0xCF DELEGATECALL LT STATICCALL SELFDESTRUCT 0xEF 0xEB PUSH8 0xD9EA706109091516 PUSH14 0x7876E2C5314D64736F6C63430008 EQ STOP CALLER ","sourceMap":"376:2899:22:-:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;:::o;912:63:0:-;955:12;719:10:8;955:12:0;:::i;376:2899:22:-;;;;-1:-1:-1;;;;;376:2899:22;;;;;:::o;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;376:2899:22;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;;376:2899:22;-1:-1:-1;;;;;376:2899:22;;;;;;;;;;:::o;2426:187:0:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;376:2899:22;;;;2566:40:0;;;;2426:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":119,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":381,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool":{"entryPoint":530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":435,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_stringt_uint256t_addresst_struct_TokenConfigPropertiest_uint256t_uint256t_uint256t_addresst_addresst_uint256t_uint256t_address":{"entryPoint":631,"id":null,"parameterSlots":2,"returnSlots":13},"abi_decode_struct_TokenConfigProperties":{"entryPoint":545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":1027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address_fromMemory":{"entryPoint":1972,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_contract_CoinGenieERC20":{"entryPoint":947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_contract_CoinGenieERC20_to_address":{"entryPoint":936,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":1711,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_string_uint256_address_struct_TokenConfigProperties_uint256_uint256_uint256_address_address_uint256_uint256":{"entryPoint":1768,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_245f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_TokenConfigProperties":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_245f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":312,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":335,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_string":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":169,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_CoinGenieERC20_to_address":{"entryPoint":925,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1179,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1163,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":914,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":369,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1674,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_launchToken":{"entryPoint":965,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":190,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":131,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setGenie":{"entryPoint":1050,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":1079,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_offsett_address":{"entryPoint":1108,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":271,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":1576,"id":111,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":1308,"id":54,"parameterSlots":0,"returnSlots":0},"fun_launchToken":{"entryPoint":1995,"id":6086,"parameterSlots":13,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_owner":{"entryPoint":1131,"id":40,"parameterSlots":0,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":1212,"id":68,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":1190,"id":null,"parameterSlots":0,"returnSlots":0},"fun_setGenie":{"entryPoint":2712,"id":6110,"parameterSlots":1,"returnSlots":0},"fun_setGenie_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":1513,"id":91,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":1470,"id":null,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":1143,"id":31,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_6092":{"entryPoint":2628,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_74":{"entryPoint":1357,"id":31,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":249,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":1119,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":1222,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_245f":{"entryPoint":1378,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":1945,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_shift":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":1524,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_address":{"entryPoint":490,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":521,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":465,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060405260043610156200001357600080fd5b60003560e01c8063715018a6146200006c5780638da5cb5b1462000066578063d5e713531462000060578063dcc79cc8146200005a5763f2fde38b03620000725762000437565b6200041a565b620003c5565b620000be565b62000083565b600080fd5b60009103126200007257565b3462000072576200009636600462000077565b620000a0620004bc565b604051005b0390f35b6001600160a01b031690565b90565b9052565b565b346200007257620000d136600462000077565b620000a5620000df6200046b565b604051918291826001600160a01b03909116815260200190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176200013257604052565b620000f9565b90620000bc6200014760405190565b92836200010f565b67ffffffffffffffff81116200013257602090601f01601f19160190565b0190565b90826000939282370152565b909291926200019662000190826200014f565b62000138565b938185526020850190828401116200007257620000bc9262000171565b9080601f830112156200007257816020620000b5933591016200017d565b805b036200007257565b90503590620000bc82620001d1565b6001600160a01b038116620001d3565b90503590620000bc82620001ea565b801515620001d3565b90503590620000bc8262000209565b9190916060818403126200007257620002716200023f606062000138565b9360006200024e828562000212565b908601526020620002628282860162000212565b90860152604080930162000212565b90830152565b6101e0818303126200007257803567ffffffffffffffff8111620000725782620002a3918301620001b3565b92602082013567ffffffffffffffff8111620000725783620002c7918401620001b3565b92620002d78160408501620001db565b92620002e78260608301620001fa565b92620002f7836080840162000221565b92620003078160e08501620001db565b9262000318826101008301620001db565b9262000329836101208401620001db565b926200033a816101408501620001fa565b926200034b826101608301620001fa565b92620000b562000360846101808501620001db565b9362000371816101a08601620001db565b936101c001620001fa565b620000b590620000a9906001600160a01b031682565b620000b5906200037c565b620000b59062000392565b620000b8906200039d565b602081019291620000bc9190620003a8565b346200007257620000a5620003f6620003e036600462000277565b9b9a909a999199989298979397969496620007cb565b60405191829182620003b3565b906020828203126200007257620000b591620001fa565b346200007257620000a06200043136600462000403565b62000a98565b346200007257620000a06200044e36600462000403565b620005e9565b620000b590620000a9565b620000b5905462000454565b620000b560006200045f565b620004816200051c565b620000bc620004a6565b620000a9620000b5620000b59290565b620000b5906200048b565b620000bc620004b660006200049b565b62000628565b620000bc62000477565b15620004ce57565b60405162461bcd60e51b81528062000518600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b620000bc6200052a6200046b565b620005466200053933620000a9565b916001600160a01b031690565b14620004c6565b620000bc906200055c6200051c565b620005be565b156200056a57565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b620000bc90620004b6620005d7620000a960006200049b565b6001600160a01b038316141562000562565b620000bc906200054d565b9062000608620000b562000624926200039d565b82546001600160a01b0319166001600160a01b03919091161790565b9055565b6200063460006200045f565b9062000642816000620005f4565b62000679620006727f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936200039d565b916200039d565b916200068460405190565b600090a3565b60005b8381106200069e5750506000910152565b81810151838201526020016200068d565b620006d4620006de6020936200016d93620006c8815190565b80835293849260200190565b958691016200068a565b601f01601f191690565b9997959391909c9b9a989694929c6101c08b018b810360008d01526200070e91620006af565b8a810360208c01526200072191620006af565b9b60408a016200072f919052565b6001600160a01b031660608901528051151560808901526020810151151560a089015260400151151560c088015260e08701526101008601526101208501526001600160a01b03166101408401526001600160a01b03166101608301526101808201526101a00152565b6040513d6000823e3d90fd5b90505190620000bc82620001ea565b906020828203126200007257620000b591620007a5565b97939a96919995929a98949098620007e1600090565b506040519a6137e68c01908c821067ffffffffffffffff83111762000132578c9b6200081a9b8f938e6137e69062000aa49039620006e8565b03906000f09182156200097c5762000832836200039d565b90633381e7e2823b15620000725762000860600091620008776200085560405190565b948593849360e01b90565b83526001600160a01b031660048301526024820190565b038183865af180156200097c5762000a2a575b5063dcc79cc86200089c60016200045f565b90823b15620000725762000860600091620008ba6200085560405190565b038183865af180156200097c5762000a10575b50600091620008e0620000a9846200049b565b6001600160a01b03821614158062000982575b620008ff575b50505090565b63f2fde38b90823b1562000072576200093092620008608580946200092360405190565b9687958694859360e01b90565b03925af180156200097c5762000948575b80620008f9565b816200096c92903d1062000974575b6200096381836200010f565b81019062000077565b388062000941565b503d62000957565b62000799565b50638da5cb5b6200099d6200099660405190565b9160e01b90565b8152602081600481865afa80156200097c57620009c9918591620009db575b506001600160a01b031690565b6001600160a01b0382161415620008f3565b62000a01915060203d811162000a08575b620009f881836200010f565b810190620007b4565b38620009bc565b503d620009ec565b62000a239060006200096381836200010f565b38620008cd565b62000a3d9060006200096381836200010f565b386200088a565b620000bc9062000a536200051c565b62000a5f60016200045f565b62000a7362000539620000a960006200049b565b0362000a8657620000bc906001620005f4565b60405163131d002d60e01b8152600490fd5b620000bc9062000a4456fe60e06040523462000062576200002e62000018620002fe565b9a999099989198979297969396959495620004e9565b604051612b8b62000c5b823960805181610595015260a0518161063f015260c051818181610a9b015261270d0152612b8b90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200009f57604052565b62000067565b90620000bc620000b460405190565b92836200007d565b565b6001600160401b0381116200009f57602090601f01601f19160190565b60005b838110620000ef5750506000910152565b8181015183820152602001620000de565b90929192620001196200011382620000be565b620000a5565b938185526020850190828401116200006257620000bc92620000db565b9080601f8301121562000062578151620001539260200162000100565b90565b805b036200006257565b90505190620000bc8262000156565b6001600160a01b031690565b6001600160a01b03811662000158565b90505190620000bc826200017b565b80151562000158565b90505190620000bc826200019a565b919091606081840312620000625762000202620001d06060620000a5565b936000620001df8285620001a3565b908601526020620001f382828601620001a3565b908601526040809301620001a3565b90830152565b90916101c082840312620000625781516001600160401b0381116200006257836200023591840162000136565b60208301519093906001600160401b0381116200006257816200025a91850162000136565b926200026a826040830162000160565b926200027a83606084016200018b565b926200028a8160808501620001b2565b926200029a8260e0830162000160565b92620002ab83610100840162000160565b92620002bc81610120850162000160565b92620002cd8261014083016200018b565b9262000153620002e28461016085016200018b565b93620002f381610180860162000160565b936101a00162000160565b62000321620037e6803803806200031581620000a5565b92833981019062000208565b909192939495969798999a9b565b90600019905b9181191691161790565b6200015362000153620001539290565b9062000363620001536200036b926200033f565b82546200032f565b9055565b6200037f62000153620001539290565b60ff1690565b620001536107d06200033f565b9060ff9062000335565b90620003af620001536200036b92151590565b825462000392565b9061ff009060081b62000335565b90620003d8620001536200036b92151590565b8254620003b7565b9062ff00009060101b62000335565b9062000402620001536200036b92151590565b8254620003e0565b620000bc916200044d906040906200042d620004268251151590565b856200039c565b620004466200043f6020830151151590565b85620003c5565b0151151590565b90620003ef565b90620000bc916200040a565b906001600160a01b039062000335565b62000153906200016f906001600160a01b031682565b620001539062000470565b620001539062000486565b90620004b0620001536200036b9262000491565b825462000460565b90620004c49062000491565b600052602052604060002090565b62000153906200016f565b620001539054620004d2565b90620004fd919c9b939a9892999c620006fe565b6200051469d3c21bcecceda100000060076200034f565b62000522601960106200034f565b6200053d6032620005358160126200034f565b60136200034f565b620005488962000c41565b8760a0526200055860126200036f565b60805260c0526200056862000385565b808711620006c957604083015162000651575b5050620005db9493620005b8620005d394620005b0620000bc9b9c95620005a8620005c096600c62000454565b60096200034f565b600a6200034f565b600b6200034f565b620005cb8162000c41565b600d6200049c565b600f6200034f565b620005e760006200033f565b81036200063e575b506200061e6001916200062b836200061e60159362000624836200061e620006173062000491565b88620004b8565b6200039c565b84620004b8565b62000637600d620004dd565b90620004b8565b6200064a908262000ab7565b38620005ef565b81116200069c5793620005b8620005d394620005b0620000bc9b9c95620005a8620005c09662000688620005db9c9b60116200034f565b965050959c9b50509450819596506200057b565b620006c590620006ab60405190565b6305dba32960e51b81529182916004830190815260200190565b0390fd5b620006c587620006d860405190565b6365a0074b60e11b81529182916004830190815260200190565b6200015360016200033f565b906200070a9162000720565b620000bc62000718620006f2565b60066200034f565b906200072c9162000737565b620000bc33620009ad565b620000bc91620007479162000755565b620000bc600060056200039c565b90620000bc9162000949565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156200079a575b60208310146200079457565b62000761565b91607f169162000788565b9160001960089290920291821b911b62000335565b9190620007cf620001536200036b936200033f565b908354620007a5565b620000bc91600091620007ba565b818110620007f2575050565b80620008026000600193620007d8565b01620007e6565b9190601f81116200081957505050565b6200082d620000bc93600052602060002090565b906020601f84018190048301931062000851575b6020601f909101040190620007e6565b909150819062000841565b9062000866815190565b906001600160401b0382116200009f576200088e8262000887855462000777565b8562000809565b602090601f8311600114620008cd576200036b929160009183620008c1575b5050600019600883021c1916906002021790565b015190503880620008ad565b601f19831691620008e385600052602060002090565b9260005b81811062000924575091600293918560019694106200090a575b50505002019055565b01516000196008601f8516021c1916905538808062000901565b91936020600181928787015181550195019201620008e7565b90620000bc916200085c565b906200095b620000bc9260036200093d565b60046200093d565b620001539060081c6200016f565b62000153905462000963565b90610100600160a81b039060081b62000335565b90620009a5620001536200036b9262000491565b82546200097d565b620009b9600562000971565b90620009c781600562000991565b620009fe620009f77f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000491565b9162000491565b9162000a0960405190565b80805b0390a3565b6200016f62000153620001539290565b620001539062000a11565b1562000a3457565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b620001539081565b62000153905462000a79565b634e487b7160e01b600052601160045260246000fd5b9190820180921162000ab157565b62000a8d565b600062000b3f62000b248362000acd8462000a21565b9362000aee6001600160a01b0386166001600160a01b038416141562000a2c565b62000afb87838762000b92565b62000b1e62000b168862000b10600262000a81565b62000aa3565b60026200034f565b620004b8565b62000b388562000b348362000a81565b0190565b906200034f565b62000a0c62000b7a62000b737fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9362000491565b9362000491565b9362000b8560405190565b9182918290815260200190565b90620000bc929162000bff565b1562000ba757565b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b505050620000bc62000c1862000c1462000c35565b1590565b62000b9f565b62000153906200037f565b62000153905462000c1e565b62000153600562000c29565b60601b1562000c4c57565b63d92e233d6000526004601cfdfe6080604052600436101561001257600080fd5b60003560e01c806302252c4d1461033257806306fdde031461032d578063095ea7b31461032857806312d75f131461032357806318160ddd1461031e57806323b872dd14610319578063313ce567146103145780633381e7e21461030f578063351a964d1461030a578063378dc3dc1461030557806339509351146103005780633af32abf146102fb5780633f4ba83a146102f657806342966c68146102f157806346904840146102ec57806349bd5a5e146102e75780634c09f37c146102e257806351bc3c85146102dd5780635c975abb146102d857806362997f8c146102d357806370a08231146102ce578063715018a6146102c957806379cc6790146102c45780638456cb59146102bf57806384c5dd01146102ba578063883356d9146102b55780638da5cb5b146102b05780638e8c10a2146102ab57806395d89b41146102a657806399735fd8146102a1578063a001ecdd1461029c578063a09a160114610297578063a457c2d714610292578063a82ed9ec1461028d578063a9059cbb14610288578063b9d0f1af14610283578063ba9341c01461027e578063c68ff0fe14610279578063d163364914610274578063d1ed0a0f1461026f578063d48e41271461026a578063d8f6785114610265578063dcc79cc814610260578063dd62ed3e1461025b578063e08973ce14610256578063ec57459c14610251578063f01f20df1461024c578063f19c4e3b14610247578063f2fde38b146102425763f69cf7830361033757610c38565b610c20565b610c07565b610bec565b610bc5565b610b9e565b610b76565b610b3b565b610b23565b610b08565b610ae1565b610abf565b610a86565b610a4a565b6109d2565b6109b6565b61098f565b61090f565b6108f4565b6108d9565b6108b2565b61088b565b610870565b610855565b61083a565b61081f565b6107fb565b6107e2565b6107ca565b6107af565b610794565b61076d565b610755565b61073a565b6106fd565b6106d6565b6106b2565b61069a565b61067f565b610663565b61062a565b61060f565b6105d2565b610580565b610564565b610508565b6104d2565b610479565b610403565b61036b565b600080fd5b805b0361033757565b905035906103528261033c565b565b906020828203126103375761036891610345565b90565b346103375761038361037e366004610354565b6113d4565b604051005b0390f35b600091031261033757565b60005b8381106103aa5750506000910152565b818101518382015260200161039a565b6103db6103e46020936103ee936103cf815190565b80835293849260200190565b95869101610397565b601f01601f191690565b0190565b6020808252610368929101906103ba565b346103375761041336600461038c565b61038861041e610f96565b604051918291826103f2565b6001600160a01b031690565b6001600160a01b03811661033e565b9050359061035282610436565b9190604083820312610337576103689061046c8185610445565b93602001610345565b9052565b346103375761038861049561048f366004610452565b90611019565b60405191829182901515815260200190565b610368916008021c6001600160a01b031690565b9061036891546104a7565b610368600060086104bb565b34610337576104e236600461038c565b6103886104ed6104c6565b6040515b918291826001600160a01b03909116815260200190565b346103375761051836600461038c565b610388610523610fbb565b6040515b9182918290815260200190565b90916060828403126103375761036861054d8484610445565b9361055b8160208601610445565b93604001610345565b346103375761038861049561057a366004610534565b91611913565b346103375761059036600461038c565b6040517f000000000000000000000000000000000000000000000000000000000000000060ff168152602090f35b906020828203126103375761036891610445565b34610337576103836105e53660046105be565b6112d5565b610368916008021c5b60ff1690565b9061036891546105ea565b6103686014806105f9565b346103375761061f36600461038c565b610388610495610604565b346103375761063a36600461038c565b6103887f0000000000000000000000000000000000000000000000000000000000000000610523565b3461033757610388610495610679366004610452565b90611051565b34610337576103886104956106953660046105be565b611276565b34610337576106aa36600461038c565b610383611c57565b34610337576103836106c5366004610354565b6119f8565b6103686000600d6104bb565b34610337576106e636600461038c565b6103886104ed6106ca565b610368600060146104bb565b346103375761070d36600461038c565b6103886104ed6106f1565b610368916008021c81565b906103689154610718565b61036860006012610723565b346103375761074a36600461038c565b61038861052361072e565b346103375761076536600461038c565b61038361254e565b346103375761077d36600461038c565b610388610495610e57565b6103686000600a610723565b34610337576107a436600461038c565b610388610523610788565b34610337576103886105236107c53660046105be565b610fdd565b34610337576107da36600461038c565b610383610ca8565b34610337576103836107f5366004610452565b90611b68565b346103375761080b36600461038c565b610383611bb5565b6103686000600b610723565b346103375761082f36600461038c565b610388610523610813565b346103375761084a36600461038c565b61038861049561126c565b346103375761086536600461038c565b6103886104ed610c66565b346103375761088036600461038c565b610388610495611292565b346103375761089b36600461038c565b61038861041e610fa0565b6103686000600e6104bb565b34610337576108c236600461038c565b6103886104ed6108a6565b6103686000600f610723565b34610337576108e936600461038c565b6103886105236108cd565b346103375761090436600461038c565b610388610495611262565b3461033757610388610495610925366004610452565b906110ca565b6103689061042a906001600160a01b031682565b6103689061092b565b6103689061093f565b610368737a250d5630b4cf539739df2c5dacb4c659f2488d610948565b610368610951565b61047590610948565b6020810192916103529190610976565b346103375761099f36600461038c565b6103886109aa61096e565b6040519182918261097f565b34610337576103886104956109cc366004610452565b90611633565b34610337576103836109e5366004610354565b611328565b610368906105f3565b61036890546109ea565b6103689060081c6105f3565b61036890546109fd565b6103689060101c6105f3565b6103689054610a13565b600c610a34816109f3565b916103686000610a4384610a09565b9301610a1f565b3461033757610a5a36600461038c565b610388610a65610a29565b60408051931515845291151560208401521515908201529081906060820190565b3461033757610a9636600461038c565b6103887f00000000000000000000000000000000000000000000000000000000000000006104ed565b6103886109aa610ad0366004610354565b61236a565b61036860006010610723565b3461033757610af136600461038c565b610388610523610ad5565b61036860006009610723565b3461033757610b1836600461038c565b610388610523610afc565b3461033757610383610b36366004610354565b611598565b3461033757610383610b4e3660046105be565b6124a1565b91906040838203126103375761036890610b6d8185610445565b93602001610445565b3461033757610388610523610b8c366004610b53565b90610ff9565b61036860006013610723565b3461033757610bae36600461038c565b610388610523610b92565b61036860006007610723565b3461033757610bd536600461038c565b610388610523610bb9565b61036860006011610723565b3461033757610bfc36600461038c565b610388610523610be0565b3461033757610383610c1a366004610452565b906114e8565b3461033757610383610c333660046105be565b610dbf565b3461033757610383610c4b366004610354565b611348565b6103689060081c61042a565b6103689054610c50565b6103686005610c5c565b610c78610d04565b610352610c96565b61042a6103686103689290565b61036890610c80565b610352610ca36000610c8d565b610dfc565b610352610c70565b15610cb757565b60405162461bcd60e51b815280610d00600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b610352610d0f610c66565b610d28610d1b3361042a565b916001600160a01b031690565b14610cb0565b61035290610d3a610d04565b610d9a565b15610d4657565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61035290610ca3610dae61042a6000610c8d565b6001600160a01b0383161415610d3f565b61035290610d2e565b90610100600160a81b039060081b5b9181191691161790565b90610df1610368610df892610948565b8254610dc8565b9055565b610e066005610c5c565b90610e12816005610de1565b610e45610e3f7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610948565b91610948565b91610e4f60405190565b80805b0390a3565b61036860056109f3565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610e97575b6020831014610e9257565b610e61565b91607f1691610e87565b80546000939291610ebe610eb483610e77565b8085529360200190565b9160018116908115610f105750600114610ed757505050565b610eea9192939450600052602060002090565b916000925b818410610efc5750500190565b805484840152602090930192600101610eef565b92949550505060ff1916825215156020020190565b9061036891610ea1565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff821117610f6757604052565b610f2f565b90610352610f8692610f7d60405190565b93848092610f25565b0383610f45565b61036890610f6c565b6103686003610f8d565b6103686004610f8d565b6103689081565b6103689054610faa565b6103686002610fb1565b90610fcf90610948565b600052602052604060002090565b610ff461036891610fec600090565b506000610fc5565b610fb1565b61036891611014610ff49261100c600090565b506001610fc5565b610fc5565b6110249190336111cb565b600190565b634e487b7160e01b600052601160045260246000fd5b9190820180921161104c57565b611029565b611024919061106a33926110658385610ff9565b61103f565b916111cb565b1561107757565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b611024919061106a33926110de8385610ff9565b6110ea82821015611070565b0390565b156110f557565b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b1561114d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b9060001990610dd7565b6103686103686103689290565b906111c4610368610df8926111a7565b825461119d565b61120a6111f96111db6000610c8d565b61042a6001600160a01b0382166001600160a01b03861614156110ee565b6001600160a01b0384161415611146565b6112228361121d84611014856001610fc5565b6111b4565b610e526112586112527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610948565b93610948565b9361052760405190565b610368600c610a09565b610368600c6109f3565b61128d61036891611285600090565b506015610fc5565b6109f3565b610368600c610a1f565b6103689061042a565b610368905461129c565b906001600160a01b0390610dd7565b906112ce610368610df892610948565b82546112af565b6112df600e6112a5565b6112ef610d1b61042a6000610c8d565b036112ff5761035290600e6112be565b60405163131d002d60e01b8152600490fd5b6103529061131d610d04565b61035290600a6111b4565b61035290611311565b6103529061133d610d04565b61035290600b6111b4565b61035290611331565b6103529061135d610d04565b6103529061136961141c565b6113766103686009610fb1565b8111156113c2576113888160096111b4565b6113b27faab136b9dbe20468ab36dcd11abd26b3dcea2b259f018136905bf827f37f5514916111a7565b906113bc60405190565b600090a2565b60405163521e96bb60e11b8152600490fd5b61035290611351565b156113e457565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b61035261142e61142a610e57565b1590565b6113dd565b9061035291611440610d04565b906103529161144d61141c565b61145d565b6103686107d06111a7565b90611469610368611452565b81116114c15761147882612b3d565b61148382600d6112be565b61148e81600f6111b4565b610e456114bb7fe42708d93b95810922305119a3271ca42233da9ebe1e1e503f0e887817a32c7a93610948565b916111a7565b610d00906114ce60405190565b6365a0074b60e11b81529182916004830190815260200190565b9061035291611433565b610352906114fe610d04565b6103529061150a61141c565b61151561142a611292565b61158657611524610368611452565b811161155f576115358160116111b4565b6113b27f8c3208fa4fab043d09d9517339346757a58804a46f954585ba21465677820817916111a7565b610d009061156c60405190565b6305dba32960e51b81529182916004830190815260200190565b6040516319b3ca5360e31b8152600490fd5b610352906114f2565b9061036892916115af61141c565b6115ca565b6103689060a01c6105f3565b61036890546115b4565b50336115d660146115c0565b8061161c575b80611605575b6115f15750906103689161163f565b61036892826115ff9261256c565b9061163f565b5061161761142a61128d846015610fc5565b6115e2565b5061162e61142a61128d836015610fc5565b6115dc565b610368919060006115a1565b61102491903361175c565b61175c565b1561165657565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b156116b057565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561170857565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b6117eb6117d88360006117a361179261177483610c8d565b61042a6001600160a01b0382166001600160a01b038a16141561164f565b6001600160a01b03841614156116a9565b6117ae87838761181b565b6110146117ce886117c2610ff48986610fc5565b6110ea82821015611701565b61121d8784610fc5565b6117e5856103ee83610fb1565b906111b4565b610e526112586112527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610948565b906103529291611885565b1561182d57565b60405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608490fd5b50505061035261189661142a610e57565b611826565b906103689392916118aa61141c565b5091906118b760146115c0565b806118fc575b806118e5575b6118d05761036892611920565b6118df8392826103689561256c565b91611920565b506118f761142a61128d836015610fc5565b6118c3565b5061190e61142a61128d856015610fc5565b6118bd565b610368929190600061189b565b61102492919061164a83335b8361197e565b1561193957565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b906119898183610ff9565b6000198103611999575b50505050565b6119ad9361106a916110ea82821015611932565b38808080611993565b610352906119c2610d04565b610352906119ce61141c565b6119d961142a61126c565b6119e65761035290611a01565b604051636cb5913960e01b8152600490fd5b610352906119b6565b6103529033611abd565b611abd565b15611a1757565b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b15611a6d57565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b600090611b1d611acc83610c8d565b92611aeb6001600160a01b0385166001600160a01b0385161415611a10565b611af685858561181b565b61121d83611b1787611b0b610ff48487610fc5565b6110ea82821015611a66565b92610fc5565b6117eb611b2e846110ea6002610fb1565b60026111b4565b9061035291611b42610d04565b9061035291611b4f61141c565b90611b5b61142a61126c565b6119e65761035291611b72565b9061035291611b35565b6103529190611a0b823361192c565b611b89610d04565b610352611b9761142a611262565b611ba357610352611c2d565b60405163f00085b960e01b8152600490fd5b610352611b81565b611bc561141c565b610352611bed565b9060ff90610dd7565b90611be6610368610df892151590565b8254611bcd565b611bf960016005611bd6565b33611c287f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916104f160405190565b0390a1565b610352611bbd565b611c3d610d04565b610352611c4b61142a611262565b611ba357610352611ca5565b610352611c35565b611c67611cf0565b610352611c7660006005611bd6565b33611c287f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916104f160405190565b610352611c5f565b15611cb457565b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b610352611cfb610e57565b611cad565b9061036891611d0d610d04565b90611d1f91611d1a6123cb565b611ebd565b906103526123fd565b610368670de0b6b3a76400006111a7565b9081526040810192916103529160200152565b0152565b6103686706f05b59d3b200006111a7565b905051906103528261033c565b906020828203126103375761036891611d61565b6040513d6000823e3d90fd5b6103686127106111a7565b9050519061035282610436565b906020828203126103375761036891611d99565b80151561033e565b9050519061035282611dba565b906020828203126103375761036891611dc2565b6001600160a01b0390911681526040810192916103529160200152565b909160608284031261033757610368611e198484611d61565b93611e278160208601611d61565b93604001611d61565b610475906111a7565b9194611e87611d4c92989795611e7d60a096611e736103529a611e6c60c08a019e60008b01906001600160a01b03169052565b6020890152565b6040870190611e30565b6060850190611e30565b6001600160a01b03166080830152565b9060ff60a01b9060a01b610dd7565b90611eb6610368610df892151590565b8254611e97565b5034611ec960146115c0565b61235857611ed5611d28565b8083108015612345575b6123225750611eec611d50565b8082106123005750611f3b90611f0b611f0430610948565b9384611633565b506020611f23611f1e611f1e60086112a5565b610948565b6370a0823190611f3260405190565b94859260e01b90565b82526001600160a01b038616600483015260249082905afa9182156121df576000926122d0575b50611f87611f79611f736013610fb1565b83612432565b611f81611d8e565b90612461565b91611f9c611f986103686007610fb1565b9190565b116122b9575b81611fac91612415565b611fb7611f1e610951565b92611fca611fc3610fbb565b85836111cb565b63c45a0155611fe2611fdb60405190565b9160e01b90565b8152602081600481885afa9081156121df5761200a91611f1e9160009161229b575b50610948565b9063c9c653969163ad5c46489061202a61202360405190565b9260e01b90565b82526020826004818a5afa9081156121df5761208794602093600093612275575b5060006120689161205b60405190565b9788958694859360e01b90565b83526001600160a01b03808a1660048501521660248301526044820190565b03925af19182156121df576120df926120aa91600091612247575b5060146112be565b60206120bc611f1e611f1e60146112a5565b63095ea7b3906120d3600080199361205b60405190565b83528c60048401611de3565b03925af19182156121df5760609261221b575b5063f305d7199461212e61210583610fdd565b94600097612139612114610c66565b42908b8061212160405190565b9b8c9a8b998a9860e01b90565b885260048801611e39565b03925af180156121df576121ed575b5061215560016014611ea6565b61215e826111a7565b81116121b6575b505061217160146112a5565b61219b7f57a9f98b233034883786b9c47f1f6fabcf1655e39d3213b7287b926ca387136e91610948565b906121a560405190565b600090a2610368611f1e60146112a5565b818080926121ca611f1e611f1e600e6112a5565b8282156121e4575bf1156121df573880612165565b611d82565b506108fc6121d2565b61220d9060603d8111612214575b6122058183610f45565b810190611e00565b5050612148565b503d6121fb565b61223b9060203d8111612240575b6122338183610f45565b810190611dcf565b6120f2565b503d612229565b612268915060203d811161226e575b6122608183610f45565b810190611da6565b386120a2565b503d612256565b612068919350612293600091863d811161226e576122608183610f45565b93915061204b565b6122b3915060203d811161226e576122608183610f45565b38612004565b9050611fac6122c860006111a7565b919050611fa2565b6122f291925060203d81116122f9575b6122ea8183610f45565b810190611d6e565b9038611f62565b503d6122e0565b90610d0061230d60405190565b62fdf57560e51b815292839260048401611d39565b82610d0061232f60405190565b63c7bcc1b960e01b815292839260048401611d39565b506123516107c5610c66565b8311611edf565b60405163250856ab60e21b8152600490fd5b610368906000611d00565b61036860026111a7565b1561238657565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6103526123d86006610fb1565b6123ec6123e3612375565b9182141561237f565b60066111b4565b61036860016111a7565b6103526123ec6123f3565b9190820391821161104c57565b6103689190612408565b8181029291811591840414171561104c57565b610368919061241f565b634e487b7160e01b600052601260045260246000fd5b811561245c570490565b61243c565b6103689190612452565b61035290612477610d04565b61248160086112a5565b612491610d1b61042a6000610c8d565b036112ff576103529060086112be565b6103529061246b565b6124b26123cb565b6124ba6124c2565b6103526123fd565b6124cb30610948565b6124d481610fdd565b906000916124e1836111a7565b811161252c575b50316124f7610368600b610fb1565b8111612501575050565b81808092612513611f1e611f1e610c66565b828215612523575bf1156121df57565b506108fc61251b565b6125436125489161253d600a610fb1565b90612b2b565b612b22565b386124e8565b6103526124aa565b6103689060a81c6105f3565b6103689054612556565b6125929392918491612592612597612583866127c7565b9482829c8588969b959c612408565b612408565b9485976125a761042a60146112a5565b6001600160a01b03851614806127a7575b80612783575b612752576000956125ce876111a7565b8103612738575b506125df866111a7565b8103612707575b506125f0856111a7565b81036126ed575b50612601846111a7565b81036126dd575b505061261330610948565b9061261d82610fdd565b9061262b61142a6014612562565b90816126c4575b50806126af575b6126435750505050565b6126689192939495506126626125439161265d600a610fb1565b612b2b565b85612b2b565b31612676610368600b610fb1565b811161268157505090565b81808092612695611f1e611f1e600d6112a5565b8282156126a6575bf1156121df5790565b506108fc61269d565b506126bd610368600a610fb1565b8111612639565b90506126d6610d1b61042a60146112a5565b1438612632565b6126e691611abd565b3880612608565b612701906126fb600d6112a5565b8461175c565b386125f7565b612732907f00000000000000000000000000000000000000000000000000000000000000008561175c565b386125e6565b61274c90612746600e6112a5565b8661175c565b386125d5565b610d008561275f60405190565b63f6202a8f60e01b8152918291600483016001600160a01b03909116815260200190565b506127918761106587610fdd565b6127a1611f986103686009610fb1565b116125be565b506127b661042a611f1e610951565b6001600160a01b03861614156125b8565b6000906127dd6127d76012610fb1565b8261241f565b916127f06127e9611d8e565b8094612452565b9361280d84612808612802600f610fb1565b8661241f565b612452565b936128258161280861281f6010610fb1565b8761241f565b9361282e611292565b612836575050565b6103689293506128089061284a6011610fb1565b9061241f565b6124ba9061285c6123cb565b612887565b9060ff60a81b9060a81b610dd7565b90612880610368610df892151590565b8254612861565b61289c9061289760016014612870565b6129f4565b61035260006014612870565b906103526128b560405190565b9283610f45565b67ffffffffffffffff8111610f675760208091020190565b906128e66128e1836128bc565b6128a8565b918252565b369037565b90610352612906612900846128d4565b936128bc565b601f1901602084016128eb565b634e487b7160e01b600052603260045260246000fd5b90612932825190565b811015612943576020809102010190565b612913565b90612968612961612957845190565b8084529260200190565b9260200190565b9060005b8181106129795750505090565b90919261299f61299860019286516001600160a01b0316815260200190565b9460200190565b92910161296c565b906129e2611d4c91610352969897956129d56080966129cb60a08801946000890152565b6020870190611e30565b8482036040860152612948565b6001600160a01b039097166060830152565b612a06612a0160026111a7565b6128f0565b612a0f30610948565b90600092612a3783612a29612a23876111a7565b85612929565b906001600160a01b03169052565b612a42611f1e610951565b63ad5c4648612a53611fdb60405190565b8152602081600481855afa80156121df57612a83918791612b04575b50612a29612a7d60016111a7565b86612929565b612a8e8282866111cb565b63791ac947934290823b15610337578695612acc612ac1938897938894612ab460405190565b9a8b998a98899760e01b90565b8752600487016129a7565b03925af180156121df57612ade575050565b8161035292903d10612afd575b612af58183610f45565b81019061038c565b503d612aeb565b612b1c915060203d811161226e576122608183610f45565b38612a6f565b61035290612850565b9080821015612b38575090565b905090565b60601b15612b4757565b63d92e233d6000526004601cfdfea264697066735822122000f7c3f5e88eef6b6a202c331cbfe0872536155bfbb28517d245c5e1a27e130364736f6c63430008140033a26469706673582212209e06be738688f0c3cccff410faffefeb67d9ea7061090915166d7876e2c5314d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH3 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x66 JUMPI DUP1 PUSH4 0xD5E71353 EQ PUSH3 0x60 JUMPI DUP1 PUSH4 0xDCC79CC8 EQ PUSH3 0x5A JUMPI PUSH4 0xF2FDE38B SUB PUSH3 0x72 JUMPI PUSH3 0x437 JUMP JUMPDEST PUSH3 0x41A JUMP JUMPDEST PUSH3 0x3C5 JUMP JUMPDEST PUSH3 0xBE JUMP JUMPDEST PUSH3 0x83 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH3 0x72 JUMPI JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0x96 CALLDATASIZE PUSH1 0x4 PUSH3 0x77 JUMP JUMPDEST PUSH3 0xA0 PUSH3 0x4BC JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0xD1 CALLDATASIZE PUSH1 0x4 PUSH3 0x77 JUMP JUMPDEST PUSH3 0xA5 PUSH3 0xDF PUSH3 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x132 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0xF9 JUMP JUMPDEST SWAP1 PUSH3 0xBC PUSH3 0x147 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x10F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x132 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 SWAP4 SWAP3 DUP3 CALLDATACOPY ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH3 0x196 PUSH3 0x190 DUP3 PUSH3 0x14F JUMP JUMPDEST PUSH3 0x138 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH3 0x72 JUMPI PUSH3 0xBC SWAP3 PUSH3 0x171 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0x72 JUMPI DUP2 PUSH1 0x20 PUSH3 0xB5 SWAP4 CALLDATALOAD SWAP2 ADD PUSH3 0x17D JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH3 0x72 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x1D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1D3 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x1EA JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH3 0x1D3 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x209 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH3 0x72 JUMPI PUSH3 0x271 PUSH3 0x23F PUSH1 0x60 PUSH3 0x138 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH3 0x24E DUP3 DUP6 PUSH3 0x212 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH3 0x262 DUP3 DUP3 DUP7 ADD PUSH3 0x212 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 DUP1 SWAP4 ADD PUSH3 0x212 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x1E0 DUP2 DUP4 SUB SLT PUSH3 0x72 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x72 JUMPI DUP3 PUSH3 0x2A3 SWAP2 DUP4 ADD PUSH3 0x1B3 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x72 JUMPI DUP4 PUSH3 0x2C7 SWAP2 DUP5 ADD PUSH3 0x1B3 JUMP JUMPDEST SWAP3 PUSH3 0x2D7 DUP2 PUSH1 0x40 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH3 0x2E7 DUP3 PUSH1 0x60 DUP4 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP3 PUSH3 0x2F7 DUP4 PUSH1 0x80 DUP5 ADD PUSH3 0x221 JUMP JUMPDEST SWAP3 PUSH3 0x307 DUP2 PUSH1 0xE0 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH3 0x318 DUP3 PUSH2 0x100 DUP4 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH3 0x329 DUP4 PUSH2 0x120 DUP5 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 PUSH3 0x33A DUP2 PUSH2 0x140 DUP6 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP3 PUSH3 0x34B DUP3 PUSH2 0x160 DUP4 ADD PUSH3 0x1FA JUMP JUMPDEST SWAP3 PUSH3 0xB5 PUSH3 0x360 DUP5 PUSH2 0x180 DUP6 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP4 PUSH3 0x371 DUP2 PUSH2 0x1A0 DUP7 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP4 PUSH2 0x1C0 ADD PUSH3 0x1FA JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x37C JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x392 JUMP JUMPDEST PUSH3 0xB8 SWAP1 PUSH3 0x39D JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH3 0xBC SWAP2 SWAP1 PUSH3 0x3A8 JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0xA5 PUSH3 0x3F6 PUSH3 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH3 0x277 JUMP JUMPDEST SWAP12 SWAP11 SWAP1 SWAP11 SWAP10 SWAP2 SWAP10 SWAP9 SWAP3 SWAP9 SWAP8 SWAP4 SWAP8 SWAP7 SWAP5 SWAP7 PUSH3 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0x3B3 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH3 0x72 JUMPI PUSH3 0xB5 SWAP2 PUSH3 0x1FA JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0xA0 PUSH3 0x431 CALLDATASIZE PUSH1 0x4 PUSH3 0x403 JUMP JUMPDEST PUSH3 0xA98 JUMP JUMPDEST CALLVALUE PUSH3 0x72 JUMPI PUSH3 0xA0 PUSH3 0x44E CALLDATASIZE PUSH1 0x4 PUSH3 0x403 JUMP JUMPDEST PUSH3 0x5E9 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0xA9 JUMP JUMPDEST PUSH3 0xB5 SWAP1 SLOAD PUSH3 0x454 JUMP JUMPDEST PUSH3 0xB5 PUSH1 0x0 PUSH3 0x45F JUMP JUMPDEST PUSH3 0x481 PUSH3 0x51C JUMP JUMPDEST PUSH3 0xBC PUSH3 0x4A6 JUMP JUMPDEST PUSH3 0xA9 PUSH3 0xB5 PUSH3 0xB5 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0xB5 SWAP1 PUSH3 0x48B JUMP JUMPDEST PUSH3 0xBC PUSH3 0x4B6 PUSH1 0x0 PUSH3 0x49B JUMP JUMPDEST PUSH3 0x628 JUMP JUMPDEST PUSH3 0xBC PUSH3 0x477 JUMP JUMPDEST ISZERO PUSH3 0x4CE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH3 0x518 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH3 0xBC PUSH3 0x52A PUSH3 0x46B JUMP JUMPDEST PUSH3 0x546 PUSH3 0x539 CALLER PUSH3 0xA9 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH3 0x4C6 JUMP JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0x55C PUSH3 0x51C JUMP JUMPDEST PUSH3 0x5BE JUMP JUMPDEST ISZERO PUSH3 0x56A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0x4B6 PUSH3 0x5D7 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x49B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH3 0x562 JUMP JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0x54D JUMP JUMPDEST SWAP1 PUSH3 0x608 PUSH3 0xB5 PUSH3 0x624 SWAP3 PUSH3 0x39D JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x634 PUSH1 0x0 PUSH3 0x45F JUMP JUMPDEST SWAP1 PUSH3 0x642 DUP2 PUSH1 0x0 PUSH3 0x5F4 JUMP JUMPDEST PUSH3 0x679 PUSH3 0x672 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x39D JUMP JUMPDEST SWAP2 PUSH3 0x39D JUMP JUMPDEST SWAP2 PUSH3 0x684 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x69E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x68D JUMP JUMPDEST PUSH3 0x6D4 PUSH3 0x6DE PUSH1 0x20 SWAP4 PUSH3 0x16D SWAP4 PUSH3 0x6C8 DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH3 0x68A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST SWAP10 SWAP8 SWAP6 SWAP4 SWAP2 SWAP1 SWAP13 SWAP12 SWAP11 SWAP9 SWAP7 SWAP5 SWAP3 SWAP13 PUSH2 0x1C0 DUP12 ADD DUP12 DUP2 SUB PUSH1 0x0 DUP14 ADD MSTORE PUSH3 0x70E SWAP2 PUSH3 0x6AF JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH3 0x721 SWAP2 PUSH3 0x6AF JUMP JUMPDEST SWAP12 PUSH1 0x40 DUP11 ADD PUSH3 0x72F SWAP2 SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP10 ADD MSTORE DUP1 MLOAD ISZERO ISZERO PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x40 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x1EA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH3 0x72 JUMPI PUSH3 0xB5 SWAP2 PUSH3 0x7A5 JUMP JUMPDEST SWAP8 SWAP4 SWAP11 SWAP7 SWAP2 SWAP10 SWAP6 SWAP3 SWAP11 SWAP9 SWAP5 SWAP1 SWAP9 PUSH3 0x7E1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP11 PUSH2 0x37E6 DUP13 ADD SWAP1 DUP13 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH3 0x132 JUMPI DUP13 SWAP12 PUSH3 0x81A SWAP12 DUP16 SWAP4 DUP15 PUSH2 0x37E6 SWAP1 PUSH3 0xAA4 SWAP1 CODECOPY PUSH3 0x6E8 JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE SWAP2 DUP3 ISZERO PUSH3 0x97C JUMPI PUSH3 0x832 DUP4 PUSH3 0x39D JUMP JUMPDEST SWAP1 PUSH4 0x3381E7E2 DUP3 EXTCODESIZE ISZERO PUSH3 0x72 JUMPI PUSH3 0x860 PUSH1 0x0 SWAP2 PUSH3 0x877 PUSH3 0x855 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL DUP1 ISZERO PUSH3 0x97C JUMPI PUSH3 0xA2A JUMPI JUMPDEST POP PUSH4 0xDCC79CC8 PUSH3 0x89C PUSH1 0x1 PUSH3 0x45F JUMP JUMPDEST SWAP1 DUP3 EXTCODESIZE ISZERO PUSH3 0x72 JUMPI PUSH3 0x860 PUSH1 0x0 SWAP2 PUSH3 0x8BA PUSH3 0x855 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL DUP1 ISZERO PUSH3 0x97C JUMPI PUSH3 0xA10 JUMPI JUMPDEST POP PUSH1 0x0 SWAP2 PUSH3 0x8E0 PUSH3 0xA9 DUP5 PUSH3 0x49B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO DUP1 PUSH3 0x982 JUMPI JUMPDEST PUSH3 0x8FF JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH4 0xF2FDE38B SWAP1 DUP3 EXTCODESIZE ISZERO PUSH3 0x72 JUMPI PUSH3 0x930 SWAP3 PUSH3 0x860 DUP6 DUP1 SWAP5 PUSH3 0x923 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0x97C JUMPI PUSH3 0x948 JUMPI JUMPDEST DUP1 PUSH3 0x8F9 JUMP JUMPDEST DUP2 PUSH3 0x96C SWAP3 SWAP1 RETURNDATASIZE LT PUSH3 0x974 JUMPI JUMPDEST PUSH3 0x963 DUP2 DUP4 PUSH3 0x10F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x77 JUMP JUMPDEST CODESIZE DUP1 PUSH3 0x941 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x957 JUMP JUMPDEST PUSH3 0x799 JUMP JUMPDEST POP PUSH4 0x8DA5CB5B PUSH3 0x99D PUSH3 0x996 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH3 0x97C JUMPI PUSH3 0x9C9 SWAP2 DUP6 SWAP2 PUSH3 0x9DB JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH3 0x8F3 JUMP JUMPDEST PUSH3 0xA01 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH3 0xA08 JUMPI JUMPDEST PUSH3 0x9F8 DUP2 DUP4 PUSH3 0x10F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x7B4 JUMP JUMPDEST CODESIZE PUSH3 0x9BC JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x9EC JUMP JUMPDEST PUSH3 0xA23 SWAP1 PUSH1 0x0 PUSH3 0x963 DUP2 DUP4 PUSH3 0x10F JUMP JUMPDEST CODESIZE PUSH3 0x8CD JUMP JUMPDEST PUSH3 0xA3D SWAP1 PUSH1 0x0 PUSH3 0x963 DUP2 DUP4 PUSH3 0x10F JUMP JUMPDEST CODESIZE PUSH3 0x88A JUMP JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0xA53 PUSH3 0x51C JUMP JUMPDEST PUSH3 0xA5F PUSH1 0x1 PUSH3 0x45F JUMP JUMPDEST PUSH3 0xA73 PUSH3 0x539 PUSH3 0xA9 PUSH1 0x0 PUSH3 0x49B JUMP JUMPDEST SUB PUSH3 0xA86 JUMPI PUSH3 0xBC SWAP1 PUSH1 0x1 PUSH3 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131D002D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH3 0xBC SWAP1 PUSH3 0xA44 JUMP INVALID PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x62 JUMPI PUSH3 0x2E PUSH3 0x18 PUSH3 0x2FE JUMP JUMPDEST SWAP11 SWAP10 SWAP1 SWAP10 SWAP9 SWAP2 SWAP9 SWAP8 SWAP3 SWAP8 SWAP7 SWAP4 SWAP7 SWAP6 SWAP5 SWAP6 PUSH3 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8B PUSH3 0xC5B DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x595 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x63F ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0xA9B ADD MSTORE PUSH2 0x270D ADD MSTORE PUSH2 0x2B8B SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH3 0x67 JUMP JUMPDEST SWAP1 PUSH3 0xBC PUSH3 0xB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH3 0x7D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x9F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xEF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xDE JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH3 0x119 PUSH3 0x113 DUP3 PUSH3 0xBE JUMP JUMPDEST PUSH3 0xA5 JUMP JUMPDEST SWAP4 DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 DUP3 DUP5 ADD GT PUSH3 0x62 JUMPI PUSH3 0xBC SWAP3 PUSH3 0xDB JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH3 0x62 JUMPI DUP2 MLOAD PUSH3 0x153 SWAP3 PUSH1 0x20 ADD PUSH3 0x100 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 JUMPDEST SUB PUSH3 0x62 JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x156 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x158 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x17B JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH3 0x158 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH3 0xBC DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x60 DUP2 DUP5 SUB SLT PUSH3 0x62 JUMPI PUSH3 0x202 PUSH3 0x1D0 PUSH1 0x60 PUSH3 0xA5 JUMP JUMPDEST SWAP4 PUSH1 0x0 PUSH3 0x1DF DUP3 DUP6 PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x20 PUSH3 0x1F3 DUP3 DUP3 DUP7 ADD PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP7 ADD MSTORE PUSH1 0x40 DUP1 SWAP4 ADD PUSH3 0x1A3 JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1C0 DUP3 DUP5 SUB SLT PUSH3 0x62 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x62 JUMPI DUP4 PUSH3 0x235 SWAP2 DUP5 ADD PUSH3 0x136 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x62 JUMPI DUP2 PUSH3 0x25A SWAP2 DUP6 ADD PUSH3 0x136 JUMP JUMPDEST SWAP3 PUSH3 0x26A DUP3 PUSH1 0x40 DUP4 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x27A DUP4 PUSH1 0x60 DUP5 ADD PUSH3 0x18B JUMP JUMPDEST SWAP3 PUSH3 0x28A DUP2 PUSH1 0x80 DUP6 ADD PUSH3 0x1B2 JUMP JUMPDEST SWAP3 PUSH3 0x29A DUP3 PUSH1 0xE0 DUP4 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2AB DUP4 PUSH2 0x100 DUP5 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2BC DUP2 PUSH2 0x120 DUP6 ADD PUSH3 0x160 JUMP JUMPDEST SWAP3 PUSH3 0x2CD DUP3 PUSH2 0x140 DUP4 ADD PUSH3 0x18B JUMP JUMPDEST SWAP3 PUSH3 0x153 PUSH3 0x2E2 DUP5 PUSH2 0x160 DUP6 ADD PUSH3 0x18B JUMP JUMPDEST SWAP4 PUSH3 0x2F3 DUP2 PUSH2 0x180 DUP7 ADD PUSH3 0x160 JUMP JUMPDEST SWAP4 PUSH2 0x1A0 ADD PUSH3 0x160 JUMP JUMPDEST PUSH3 0x321 PUSH3 0x37E6 DUP1 CODESIZE SUB DUP1 PUSH3 0x315 DUP2 PUSH3 0xA5 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH3 0x208 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 SWAP12 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x363 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x33F JUMP JUMPDEST DUP3 SLOAD PUSH3 0x32F JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x37F PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH2 0x7D0 PUSH3 0x33F JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x3AF PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x392 JUMP JUMPDEST SWAP1 PUSH2 0xFF00 SWAP1 PUSH1 0x8 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x3D8 PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x3B7 JUMP JUMPDEST SWAP1 PUSH3 0xFF0000 SWAP1 PUSH1 0x10 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x402 PUSH3 0x153 PUSH3 0x36B SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH3 0x44D SWAP1 PUSH1 0x40 SWAP1 PUSH3 0x42D PUSH3 0x426 DUP3 MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH3 0x39C JUMP JUMPDEST PUSH3 0x446 PUSH3 0x43F PUSH1 0x20 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP6 PUSH3 0x3C5 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x3EF JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x40A JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x335 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x16F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x470 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x486 JUMP JUMPDEST SWAP1 PUSH3 0x4B0 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x491 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x460 JUMP JUMPDEST SWAP1 PUSH3 0x4C4 SWAP1 PUSH3 0x491 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x16F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0x4D2 JUMP JUMPDEST SWAP1 PUSH3 0x4FD SWAP2 SWAP13 SWAP12 SWAP4 SWAP11 SWAP9 SWAP3 SWAP10 SWAP13 PUSH3 0x6FE JUMP JUMPDEST PUSH3 0x514 PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x7 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x522 PUSH1 0x19 PUSH1 0x10 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x53D PUSH1 0x32 PUSH3 0x535 DUP2 PUSH1 0x12 PUSH3 0x34F JUMP JUMPDEST PUSH1 0x13 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x548 DUP10 PUSH3 0xC41 JUMP JUMPDEST DUP8 PUSH1 0xA0 MSTORE PUSH3 0x558 PUSH1 0x12 PUSH3 0x36F JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH1 0xC0 MSTORE PUSH3 0x568 PUSH3 0x385 JUMP JUMPDEST DUP1 DUP8 GT PUSH3 0x6C9 JUMPI PUSH1 0x40 DUP4 ADD MLOAD PUSH3 0x651 JUMPI JUMPDEST POP POP PUSH3 0x5DB SWAP5 SWAP4 PUSH3 0x5B8 PUSH3 0x5D3 SWAP5 PUSH3 0x5B0 PUSH3 0xBC SWAP12 SWAP13 SWAP6 PUSH3 0x5A8 PUSH3 0x5C0 SWAP7 PUSH1 0xC PUSH3 0x454 JUMP JUMPDEST PUSH1 0x9 PUSH3 0x34F JUMP JUMPDEST PUSH1 0xA PUSH3 0x34F JUMP JUMPDEST PUSH1 0xB PUSH3 0x34F JUMP JUMPDEST PUSH3 0x5CB DUP2 PUSH3 0xC41 JUMP JUMPDEST PUSH1 0xD PUSH3 0x49C JUMP JUMPDEST PUSH1 0xF PUSH3 0x34F JUMP JUMPDEST PUSH3 0x5E7 PUSH1 0x0 PUSH3 0x33F JUMP JUMPDEST DUP2 SUB PUSH3 0x63E JUMPI JUMPDEST POP PUSH3 0x61E PUSH1 0x1 SWAP2 PUSH3 0x62B DUP4 PUSH3 0x61E PUSH1 0x15 SWAP4 PUSH3 0x624 DUP4 PUSH3 0x61E PUSH3 0x617 ADDRESS PUSH3 0x491 JUMP JUMPDEST DUP9 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x39C JUMP JUMPDEST DUP5 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x637 PUSH1 0xD PUSH3 0x4DD JUMP JUMPDEST SWAP1 PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0x64A SWAP1 DUP3 PUSH3 0xAB7 JUMP JUMPDEST CODESIZE PUSH3 0x5EF JUMP JUMPDEST DUP2 GT PUSH3 0x69C JUMPI SWAP4 PUSH3 0x5B8 PUSH3 0x5D3 SWAP5 PUSH3 0x5B0 PUSH3 0xBC SWAP12 SWAP13 SWAP6 PUSH3 0x5A8 PUSH3 0x5C0 SWAP7 PUSH3 0x688 PUSH3 0x5DB SWAP13 SWAP12 PUSH1 0x11 PUSH3 0x34F JUMP JUMPDEST SWAP7 POP POP SWAP6 SWAP13 SWAP12 POP POP SWAP5 POP DUP2 SWAP6 SWAP7 POP PUSH3 0x57B JUMP JUMPDEST PUSH3 0x6C5 SWAP1 PUSH3 0x6AB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5DBA329 PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH3 0x6C5 DUP8 PUSH3 0x6D8 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x65A0074B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH3 0x153 PUSH1 0x1 PUSH3 0x33F JUMP JUMPDEST SWAP1 PUSH3 0x70A SWAP2 PUSH3 0x720 JUMP JUMPDEST PUSH3 0xBC PUSH3 0x718 PUSH3 0x6F2 JUMP JUMPDEST PUSH1 0x6 PUSH3 0x34F JUMP JUMPDEST SWAP1 PUSH3 0x72C SWAP2 PUSH3 0x737 JUMP JUMPDEST PUSH3 0xBC CALLER PUSH3 0x9AD JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH3 0x747 SWAP2 PUSH3 0x755 JUMP JUMPDEST PUSH3 0xBC PUSH1 0x0 PUSH1 0x5 PUSH3 0x39C JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x949 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH3 0x79A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x794 JUMPI JUMP JUMPDEST PUSH3 0x761 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x788 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH3 0x335 JUMP JUMPDEST SWAP2 SWAP1 PUSH3 0x7CF PUSH3 0x153 PUSH3 0x36B SWAP4 PUSH3 0x33F JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH3 0x7A5 JUMP JUMPDEST PUSH3 0xBC SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x7BA JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0x7F2 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH3 0x802 PUSH1 0x0 PUSH1 0x1 SWAP4 PUSH3 0x7D8 JUMP JUMPDEST ADD PUSH3 0x7E6 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH3 0x819 JUMPI POP POP POP JUMP JUMPDEST PUSH3 0x82D PUSH3 0xBC SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD DUP2 SWAP1 DIV DUP4 ADD SWAP4 LT PUSH3 0x851 JUMPI JUMPDEST PUSH1 0x20 PUSH1 0x1F SWAP1 SWAP2 ADD DIV ADD SWAP1 PUSH3 0x7E6 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x841 JUMP JUMPDEST SWAP1 PUSH3 0x866 DUP2 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x9F JUMPI PUSH3 0x88E DUP3 PUSH3 0x887 DUP6 SLOAD PUSH3 0x777 JUMP JUMPDEST DUP6 PUSH3 0x809 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x8CD JUMPI PUSH3 0x36B SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x8C1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x8 DUP4 MUL SHR NOT AND SWAP1 PUSH1 0x2 MUL OR SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x8AD JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH3 0x8E3 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x924 JUMPI POP SWAP2 PUSH1 0x2 SWAP4 SWAP2 DUP6 PUSH1 0x1 SWAP7 SWAP5 LT PUSH3 0x90A JUMPI JUMPDEST POP POP POP MUL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0x8 PUSH1 0x1F DUP6 AND MUL SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x901 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH3 0x8E7 JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP2 PUSH3 0x85C JUMP JUMPDEST SWAP1 PUSH3 0x95B PUSH3 0xBC SWAP3 PUSH1 0x3 PUSH3 0x93D JUMP JUMPDEST PUSH1 0x4 PUSH3 0x93D JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH1 0x8 SHR PUSH3 0x16F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0x963 JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL PUSH3 0x335 JUMP JUMPDEST SWAP1 PUSH3 0x9A5 PUSH3 0x153 PUSH3 0x36B SWAP3 PUSH3 0x491 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x97D JUMP JUMPDEST PUSH3 0x9B9 PUSH1 0x5 PUSH3 0x971 JUMP JUMPDEST SWAP1 PUSH3 0x9C7 DUP2 PUSH1 0x5 PUSH3 0x991 JUMP JUMPDEST PUSH3 0x9FE PUSH3 0x9F7 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP2 PUSH3 0x491 JUMP JUMPDEST SWAP2 PUSH3 0xA09 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH3 0x16F PUSH3 0x153 PUSH3 0x153 SWAP3 SWAP1 JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0xA11 JUMP JUMPDEST ISZERO PUSH3 0xA34 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x153 SWAP1 DUP2 JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0xA79 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xAB1 JUMPI JUMP JUMPDEST PUSH3 0xA8D JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB3F PUSH3 0xB24 DUP4 PUSH3 0xACD DUP5 PUSH3 0xA21 JUMP JUMPDEST SWAP4 PUSH3 0xAEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH3 0xA2C JUMP JUMPDEST PUSH3 0xAFB DUP8 DUP4 DUP8 PUSH3 0xB92 JUMP JUMPDEST PUSH3 0xB1E PUSH3 0xB16 DUP9 PUSH3 0xB10 PUSH1 0x2 PUSH3 0xA81 JUMP JUMPDEST PUSH3 0xAA3 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x34F JUMP JUMPDEST PUSH3 0x4B8 JUMP JUMPDEST PUSH3 0xB38 DUP6 PUSH3 0xB34 DUP4 PUSH3 0xA81 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x34F JUMP JUMPDEST PUSH3 0xA0C PUSH3 0xB7A PUSH3 0xB73 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP4 PUSH3 0x491 JUMP JUMPDEST SWAP4 PUSH3 0xB85 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0xBC SWAP3 SWAP2 PUSH3 0xBFF JUMP JUMPDEST ISZERO PUSH3 0xBA7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP PUSH3 0xBC PUSH3 0xC18 PUSH3 0xC14 PUSH3 0xC35 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH3 0xB9F JUMP JUMPDEST PUSH3 0x153 SWAP1 PUSH3 0x37F JUMP JUMPDEST PUSH3 0x153 SWAP1 SLOAD PUSH3 0xC1E JUMP JUMPDEST PUSH3 0x153 PUSH1 0x5 PUSH3 0xC29 JUMP JUMPDEST PUSH1 0x60 SHL ISZERO PUSH3 0xC4C JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2252C4D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x12D75F13 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x3381E7E2 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x351A964D EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x378DC3DC EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x4C09F37C EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x51BC3C85 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x62997F8C EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x84C5DD01 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x883356D9 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8E8C10A2 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x99735FD8 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA09A1601 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xA82ED9EC EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xB9D0F1AF EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xBA9341C0 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xC68FF0FE EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xD1ED0A0F EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xD48E4127 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xD8F67851 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xDCC79CC8 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE08973CE EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xEC57459C EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xF01F20DF EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xF19C4E3B EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH4 0xF69CF783 SUB PUSH2 0x337 JUMPI PUSH2 0xC38 JUMP JUMPDEST PUSH2 0xC20 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH2 0xB76 JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH2 0x60F JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x337 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x33C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x345 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x337 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3AA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39A JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x3E4 PUSH1 0x20 SWAP4 PUSH2 0x3EE SWAP4 PUSH2 0x3CF DUP2 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP2 ADD PUSH2 0x397 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH2 0x368 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x3BA JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x41E PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x33E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x436 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP1 PUSH2 0x46C DUP2 DUP6 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x345 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x8 PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD JUMPDEST SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 PUSH2 0x54D DUP5 DUP5 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH2 0x55B DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x345 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x534 JUMP JUMPDEST SWAP2 PUSH2 0x1913 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x590 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x445 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x14 DUP1 PUSH2 0x5F9 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x61F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x604 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x63A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH32 0x0 PUSH2 0x523 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x679 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1051 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x1276 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x6AA CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x1C57 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x6C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xD PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x6E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x14 PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 SLOAD PUSH2 0x718 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x12 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x74A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x72E JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x765 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x254E JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x77D CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xA PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x7A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x788 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x523 PUSH2 0x7C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x7DA CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0xCA8 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x7F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1B68 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x80B CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xB PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x82F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x813 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x126C JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x865 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0xC66 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x880 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x1292 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x89B CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x41E PUSH2 0xFA0 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xE PUSH2 0x4BB JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x8C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4ED PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0xF PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x8E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0x8CD JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x904 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x495 PUSH2 0x1262 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x925 CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x42A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH2 0x368 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH2 0x948 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x475 SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x976 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x99F CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x9AA PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x97F JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x495 PUSH2 0x9CC CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x1633 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0x9E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x8 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x10 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xA13 JUMP JUMPDEST PUSH1 0xC PUSH2 0xA34 DUP2 PUSH2 0x9F3 JUMP JUMPDEST SWAP2 PUSH2 0x368 PUSH1 0x0 PUSH2 0xA43 DUP5 PUSH2 0xA09 JUMP JUMPDEST SWAP4 ADD PUSH2 0xA1F JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xA5A CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0xA65 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xA96 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH32 0x0 PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x388 PUSH2 0x9AA PUSH2 0xAD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x236A JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x10 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xAF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xAD5 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x9 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xB18 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xAFC JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xB36 CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1598 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xB4E CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x24A1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP1 PUSH2 0xB6D DUP2 DUP6 PUSH2 0x445 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x445 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x388 PUSH2 0x523 PUSH2 0xB8C CALLDATASIZE PUSH1 0x4 PUSH2 0xB53 JUMP JUMPDEST SWAP1 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x13 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBAE CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x7 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBD5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x0 PUSH1 0x11 PUSH2 0x723 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0xBFC CALLDATASIZE PUSH1 0x4 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x388 PUSH2 0x523 PUSH2 0xBE0 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC1A CALLDATASIZE PUSH1 0x4 PUSH2 0x452 JUMP JUMPDEST SWAP1 PUSH2 0x14E8 JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC33 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST CALLVALUE PUSH2 0x337 JUMPI PUSH2 0x383 PUSH2 0xC4B CALLDATASIZE PUSH1 0x4 PUSH2 0x354 JUMP JUMPDEST PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x8 SHR PUSH2 0x42A JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xC50 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x5 PUSH2 0xC5C JUMP JUMPDEST PUSH2 0xC78 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x42A PUSH2 0x368 PUSH2 0x368 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x352 PUSH2 0xCA3 PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x352 PUSH2 0xC70 JUMP JUMPDEST ISZERO PUSH2 0xCB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0xD00 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0xD0F PUSH2 0xC66 JUMP JUMPDEST PUSH2 0xD28 PUSH2 0xD1B CALLER PUSH2 0x42A JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xD3A PUSH2 0xD04 JUMP JUMPDEST PUSH2 0xD9A JUMP JUMPDEST ISZERO PUSH2 0xD46 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xCA3 PUSH2 0xDAE PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0xD2E JUMP JUMPDEST SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDF1 PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x948 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xDC8 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xE06 PUSH1 0x5 PUSH2 0xC5C JUMP JUMPDEST SWAP1 PUSH2 0xE12 DUP2 PUSH1 0x5 PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0xE3F PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0xE4F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP1 JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x5 PUSH2 0x9F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x2 DUP4 DIV SWAP3 AND DUP1 ISZERO PUSH2 0xE97 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xE92 JUMPI JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xE87 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH2 0xEBE PUSH2 0xEB4 DUP4 PUSH2 0xE77 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP4 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xF10 JUMPI POP PUSH1 0x1 EQ PUSH2 0xED7 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0xEEA SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP2 DUP5 LT PUSH2 0xEFC JUMPI POP POP ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xEEF JUMP JUMPDEST SWAP3 SWAP5 SWAP6 POP POP POP PUSH1 0xFF NOT AND DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 PUSH2 0xEA1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xF67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xF2F JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0xF86 SWAP3 PUSH2 0xF7D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 DUP5 DUP1 SWAP3 PUSH2 0xF25 JUMP JUMPDEST SUB DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x368 PUSH1 0x3 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x368 PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x368 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x368 PUSH1 0x2 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0xFCF SWAP1 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0xFF4 PUSH2 0x368 SWAP2 PUSH2 0xFEC PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x368 SWAP2 PUSH2 0x1014 PUSH2 0xFF4 SWAP3 PUSH2 0x100C PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 CALLER PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x106A CALLER SWAP3 PUSH2 0x1065 DUP4 DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST SWAP2 PUSH2 0x11CB JUMP JUMPDEST ISZERO PUSH2 0x1077 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 PUSH2 0x106A CALLER SWAP3 PUSH2 0x10DE DUP4 DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1070 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x10F5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x114D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x368 PUSH2 0x368 PUSH2 0x368 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x11C4 PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x11A7 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x119D JUMP JUMPDEST PUSH2 0x120A PUSH2 0x11F9 PUSH2 0x11DB PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x1222 DUP4 PUSH2 0x121D DUP5 PUSH2 0x1014 DUP6 PUSH1 0x1 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x1258 PUSH2 0x1252 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP4 PUSH2 0x527 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0xA09 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x128D PUSH2 0x368 SWAP2 PUSH2 0x1285 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x9F3 JUMP JUMPDEST PUSH2 0x368 PUSH1 0xC PUSH2 0xA1F JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x129C JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x12CE PUSH2 0x368 PUSH2 0xDF8 SWAP3 PUSH2 0x948 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x12DF PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x12EF PUSH2 0xD1B PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH2 0x352 SWAP1 PUSH1 0xE PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x131D002D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x131D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH1 0xA PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1311 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x133D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH1 0xB PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x135D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1369 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1376 PUSH2 0x368 PUSH1 0x9 PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x13C2 JUMPI PUSH2 0x1388 DUP2 PUSH1 0x9 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0xAAB136B9DBE20468AB36DCD11ABD26B3DCEA2B259F018136905BF827F37F5514 SWAP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 PUSH2 0x13BC PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x521E96BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x1351 JUMP JUMPDEST ISZERO PUSH2 0x13E4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x142E PUSH2 0x142A PUSH2 0xE57 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x13DD JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1440 PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x144D PUSH2 0x141C JUMP JUMPDEST PUSH2 0x145D JUMP JUMPDEST PUSH2 0x368 PUSH2 0x7D0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 PUSH2 0x1469 PUSH2 0x368 PUSH2 0x1452 JUMP JUMPDEST DUP2 GT PUSH2 0x14C1 JUMPI PUSH2 0x1478 DUP3 PUSH2 0x2B3D JUMP JUMPDEST PUSH2 0x1483 DUP3 PUSH1 0xD PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x148E DUP2 PUSH1 0xF PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x14BB PUSH32 0xE42708D93B95810922305119A3271CA42233DA9EBE1E1E503F0E887817A32C7A SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xD00 SWAP1 PUSH2 0x14CE PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x65A0074B PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x14FE PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x150A PUSH2 0x141C JUMP JUMPDEST PUSH2 0x1515 PUSH2 0x142A PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x1586 JUMPI PUSH2 0x1524 PUSH2 0x368 PUSH2 0x1452 JUMP JUMPDEST DUP2 GT PUSH2 0x155F JUMPI PUSH2 0x1535 DUP2 PUSH1 0x11 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x13B2 PUSH32 0x8C3208FA4FAB043D09D9517339346757A58804A46F954585BA21465677820817 SWAP2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xD00 SWAP1 PUSH2 0x156C PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0x5DBA329 PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19B3CA53 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP3 SWAP2 PUSH2 0x15AF PUSH2 0x141C JUMP JUMPDEST PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0xA0 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x15B4 JUMP JUMPDEST POP CALLER PUSH2 0x15D6 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH2 0x161C JUMPI JUMPDEST DUP1 PUSH2 0x1605 JUMPI JUMPDEST PUSH2 0x15F1 JUMPI POP SWAP1 PUSH2 0x368 SWAP2 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x368 SWAP3 DUP3 PUSH2 0x15FF SWAP3 PUSH2 0x256C JUMP JUMPDEST SWAP1 PUSH2 0x163F JUMP JUMPDEST POP PUSH2 0x1617 PUSH2 0x142A PUSH2 0x128D DUP5 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST POP PUSH2 0x162E PUSH2 0x142A PUSH2 0x128D DUP4 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1024 SWAP2 SWAP1 CALLER PUSH2 0x175C JUMP JUMPDEST PUSH2 0x175C JUMP JUMPDEST ISZERO PUSH2 0x1656 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x16B0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1708 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x17EB PUSH2 0x17D8 DUP4 PUSH1 0x0 PUSH2 0x17A3 PUSH2 0x1792 PUSH2 0x1774 DUP4 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x42A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ ISZERO PUSH2 0x164F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ ISZERO PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x17AE DUP8 DUP4 DUP8 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x1014 PUSH2 0x17CE DUP9 PUSH2 0x17C2 PUSH2 0xFF4 DUP10 DUP7 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x121D DUP8 DUP5 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x17E5 DUP6 PUSH2 0x3EE DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0xE52 PUSH2 0x1258 PUSH2 0x1252 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP4 PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP3 SWAP2 PUSH2 0x1885 JUMP JUMPDEST ISZERO PUSH2 0x182D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305061757361626C653A20746F6B656E207472616E73666572207768 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1A5B19481C185D5CD959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x352 PUSH2 0x1896 PUSH2 0x142A PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x1826 JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP4 SWAP3 SWAP2 PUSH2 0x18AA PUSH2 0x141C JUMP JUMPDEST POP SWAP2 SWAP1 PUSH2 0x18B7 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST DUP1 PUSH2 0x18FC JUMPI JUMPDEST DUP1 PUSH2 0x18E5 JUMPI JUMPDEST PUSH2 0x18D0 JUMPI PUSH2 0x368 SWAP3 PUSH2 0x1920 JUMP JUMPDEST PUSH2 0x18DF DUP4 SWAP3 DUP3 PUSH2 0x368 SWAP6 PUSH2 0x256C JUMP JUMPDEST SWAP2 PUSH2 0x1920 JUMP JUMPDEST POP PUSH2 0x18F7 PUSH2 0x142A PUSH2 0x128D DUP4 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x18C3 JUMP JUMPDEST POP PUSH2 0x190E PUSH2 0x142A PUSH2 0x128D DUP6 PUSH1 0x15 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x368 SWAP3 SWAP2 SWAP1 PUSH1 0x0 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1024 SWAP3 SWAP2 SWAP1 PUSH2 0x164A DUP4 CALLER JUMPDEST DUP4 PUSH2 0x197E JUMP JUMPDEST ISZERO PUSH2 0x1939 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1989 DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 SUB PUSH2 0x1999 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x19AD SWAP4 PUSH2 0x106A SWAP2 PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1932 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1993 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19C2 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19CE PUSH2 0x141C JUMP JUMPDEST PUSH2 0x19D9 PUSH2 0x142A PUSH2 0x126C JUMP JUMPDEST PUSH2 0x19E6 JUMPI PUSH2 0x352 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CB59139 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0x352 SWAP1 CALLER PUSH2 0x1ABD JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST ISZERO PUSH2 0x1A17 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A6D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x1B1D PUSH2 0x1ACC DUP4 PUSH2 0xC8D JUMP JUMPDEST SWAP3 PUSH2 0x1AEB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ ISZERO PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1AF6 DUP6 DUP6 DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x121D DUP4 PUSH2 0x1B17 DUP8 PUSH2 0x1B0B PUSH2 0xFF4 DUP5 DUP8 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x10EA DUP3 DUP3 LT ISZERO PUSH2 0x1A66 JUMP JUMPDEST SWAP3 PUSH2 0xFC5 JUMP JUMPDEST PUSH2 0x17EB PUSH2 0x1B2E DUP5 PUSH2 0x10EA PUSH1 0x2 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B42 PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B4F PUSH2 0x141C JUMP JUMPDEST SWAP1 PUSH2 0x1B5B PUSH2 0x142A PUSH2 0x126C JUMP JUMPDEST PUSH2 0x19E6 JUMPI PUSH2 0x352 SWAP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 PUSH2 0x352 SWAP2 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1A0B DUP3 CALLER PUSH2 0x192C JUMP JUMPDEST PUSH2 0x1B89 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1B97 PUSH2 0x142A PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH2 0x352 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF00085B9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x1BC5 PUSH2 0x141C JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1BED JUMP JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x1BE6 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1BCD JUMP JUMPDEST PUSH2 0x1BF9 PUSH1 0x1 PUSH1 0x5 PUSH2 0x1BD6 JUMP JUMPDEST CALLER PUSH2 0x1C28 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x4F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x1C3D PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C4B PUSH2 0x142A PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x1BA3 JUMPI PUSH2 0x352 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1C67 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C76 PUSH1 0x0 PUSH1 0x5 PUSH2 0x1BD6 JUMP JUMPDEST CALLER PUSH2 0x1C28 PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP2 PUSH2 0x4F1 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x1C5F JUMP JUMPDEST ISZERO PUSH2 0x1CB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x1CFB PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST SWAP1 PUSH2 0x368 SWAP2 PUSH2 0x1D0D PUSH2 0xD04 JUMP JUMPDEST SWAP1 PUSH2 0x1D1F SWAP2 PUSH2 0x1D1A PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x1EBD JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x368 PUSH8 0xDE0B6B3A7640000 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST PUSH2 0x368 PUSH8 0x6F05B59D3B20000 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x33C JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x368 PUSH2 0x2710 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x436 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1D99 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x33E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x352 DUP3 PUSH2 0x1DBA JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 SWAP2 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x352 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x337 JUMPI PUSH2 0x368 PUSH2 0x1E19 DUP5 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP4 PUSH2 0x1E27 DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x475 SWAP1 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 SWAP5 PUSH2 0x1E87 PUSH2 0x1D4C SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x1E7D PUSH1 0xA0 SWAP7 PUSH2 0x1E73 PUSH2 0x352 SWAP11 PUSH2 0x1E6C PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x1EB6 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x1E97 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1EC9 PUSH1 0x14 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x2358 JUMPI PUSH2 0x1ED5 PUSH2 0x1D28 JUMP JUMPDEST DUP1 DUP4 LT DUP1 ISZERO PUSH2 0x2345 JUMPI JUMPDEST PUSH2 0x2322 JUMPI POP PUSH2 0x1EEC PUSH2 0x1D50 JUMP JUMPDEST DUP1 DUP3 LT PUSH2 0x2300 JUMPI POP PUSH2 0x1F3B SWAP1 PUSH2 0x1F0B PUSH2 0x1F04 ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP4 DUP5 PUSH2 0x1633 JUMP JUMPDEST POP PUSH1 0x20 PUSH2 0x1F23 PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0x8 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST PUSH4 0x70A08231 SWAP1 PUSH2 0x1F32 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH1 0x0 SWAP3 PUSH2 0x22D0 JUMPI JUMPDEST POP PUSH2 0x1F87 PUSH2 0x1F79 PUSH2 0x1F73 PUSH1 0x13 PUSH2 0xFB1 JUMP JUMPDEST DUP4 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x1F81 PUSH2 0x1D8E JUMP JUMPDEST SWAP1 PUSH2 0x2461 JUMP JUMPDEST SWAP2 PUSH2 0x1F9C PUSH2 0x1F98 PUSH2 0x368 PUSH1 0x7 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST GT PUSH2 0x22B9 JUMPI JUMPDEST DUP2 PUSH2 0x1FAC SWAP2 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x1FB7 PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST SWAP3 PUSH2 0x1FCA PUSH2 0x1FC3 PUSH2 0xFBB JUMP JUMPDEST DUP6 DUP4 PUSH2 0x11CB JUMP JUMPDEST PUSH4 0xC45A0155 PUSH2 0x1FE2 PUSH2 0x1FDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x200A SWAP2 PUSH2 0x1F1E SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x229B JUMPI JUMPDEST POP PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH4 0xC9C65396 SWAP2 PUSH4 0xAD5C4648 SWAP1 PUSH2 0x202A PUSH2 0x2023 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2087 SWAP5 PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP4 PUSH2 0x2275 JUMPI JUMPDEST POP PUSH1 0x0 PUSH2 0x2068 SWAP2 PUSH2 0x205B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x4 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x20DF SWAP3 PUSH2 0x20AA SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2247 JUMPI JUMPDEST POP PUSH1 0x14 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x20 PUSH2 0x20BC PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH4 0x95EA7B3 SWAP1 PUSH2 0x20D3 PUSH1 0x0 DUP1 NOT SWAP4 PUSH2 0x205B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP4 MSTORE DUP13 PUSH1 0x4 DUP5 ADD PUSH2 0x1DE3 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x21DF JUMPI PUSH1 0x60 SWAP3 PUSH2 0x221B JUMPI JUMPDEST POP PUSH4 0xF305D719 SWAP5 PUSH2 0x212E PUSH2 0x2105 DUP4 PUSH2 0xFDD JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP8 PUSH2 0x2139 PUSH2 0x2114 PUSH2 0xC66 JUMP JUMPDEST TIMESTAMP SWAP1 DUP12 DUP1 PUSH2 0x2121 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP12 DUP13 SWAP11 DUP12 SWAP10 DUP11 SWAP9 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP9 MSTORE PUSH1 0x4 DUP9 ADD PUSH2 0x1E39 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x21ED JUMPI JUMPDEST POP PUSH2 0x2155 PUSH1 0x1 PUSH1 0x14 PUSH2 0x1EA6 JUMP JUMPDEST PUSH2 0x215E DUP3 PUSH2 0x11A7 JUMP JUMPDEST DUP2 GT PUSH2 0x21B6 JUMPI JUMPDEST POP POP PUSH2 0x2171 PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x219B PUSH32 0x57A9F98B233034883786B9C47F1F6FABCF1655E39D3213B7287B926CA387136E SWAP2 PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x21A5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG2 PUSH2 0x368 PUSH2 0x1F1E PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x21CA PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x21E4 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI CODESIZE DUP1 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0x1D82 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x220D SWAP1 PUSH1 0x60 RETURNDATASIZE DUP2 GT PUSH2 0x2214 JUMPI JUMPDEST PUSH2 0x2205 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1E00 JUMP JUMPDEST POP POP PUSH2 0x2148 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x223B SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2240 JUMPI JUMPDEST PUSH2 0x2233 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DCF JUMP JUMPDEST PUSH2 0x20F2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x2268 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI JUMPDEST PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST CODESIZE PUSH2 0x20A2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2256 JUMP JUMPDEST PUSH2 0x2068 SWAP2 SWAP4 POP PUSH2 0x2293 PUSH1 0x0 SWAP2 DUP7 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP4 SWAP2 POP PUSH2 0x204B JUMP JUMPDEST PUSH2 0x22B3 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST CODESIZE PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FAC PUSH2 0x22C8 PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x22F2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x22F9 JUMPI JUMPDEST PUSH2 0x22EA DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1D6E JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1F62 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x22E0 JUMP JUMPDEST SWAP1 PUSH2 0xD00 PUSH2 0x230D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH3 0xFDF575 PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1D39 JUMP JUMPDEST DUP3 PUSH2 0xD00 PUSH2 0x232F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xC7BCC1B9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 SWAP3 PUSH1 0x4 DUP5 ADD PUSH2 0x1D39 JUMP JUMPDEST POP PUSH2 0x2351 PUSH2 0x7C5 PUSH2 0xC66 JUMP JUMPDEST DUP4 GT PUSH2 0x1EDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x250856AB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0x0 PUSH2 0x1D00 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x2 PUSH2 0x11A7 JUMP JUMPDEST ISZERO PUSH2 0x2386 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x352 PUSH2 0x23D8 PUSH1 0x6 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x23EC PUSH2 0x23E3 PUSH2 0x2375 JUMP JUMPDEST SWAP2 DUP3 EQ ISZERO PUSH2 0x237F JUMP JUMPDEST PUSH1 0x6 PUSH2 0x11B4 JUMP JUMPDEST PUSH2 0x368 PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x23EC PUSH2 0x23F3 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2408 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x104C JUMPI JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x245C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH2 0x243C JUMP JUMPDEST PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x2477 PUSH2 0xD04 JUMP JUMPDEST PUSH2 0x2481 PUSH1 0x8 PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x2491 PUSH2 0xD1B PUSH2 0x42A PUSH1 0x0 PUSH2 0xC8D JUMP JUMPDEST SUB PUSH2 0x12FF JUMPI PUSH2 0x352 SWAP1 PUSH1 0x8 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x246B JUMP JUMPDEST PUSH2 0x24B2 PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x24BA PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x24CB ADDRESS PUSH2 0x948 JUMP JUMPDEST PUSH2 0x24D4 DUP2 PUSH2 0xFDD JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH2 0x24E1 DUP4 PUSH2 0x11A7 JUMP JUMPDEST DUP2 GT PUSH2 0x252C JUMPI JUMPDEST POP BALANCE PUSH2 0x24F7 PUSH2 0x368 PUSH1 0xB PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2501 JUMPI POP POP JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x2513 PUSH2 0x1F1E PUSH2 0x1F1E PUSH2 0xC66 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x2523 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x251B JUMP JUMPDEST PUSH2 0x2543 PUSH2 0x2548 SWAP2 PUSH2 0x253D PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x2B2B JUMP JUMPDEST PUSH2 0x2B22 JUMP JUMPDEST CODESIZE PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x352 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x368 SWAP1 PUSH1 0xA8 SHR PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x368 SWAP1 SLOAD PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x2592 SWAP4 SWAP3 SWAP2 DUP5 SWAP2 PUSH2 0x2592 PUSH2 0x2597 PUSH2 0x2583 DUP7 PUSH2 0x27C7 JUMP JUMPDEST SWAP5 DUP3 DUP3 SWAP13 DUP6 DUP9 SWAP7 SWAP12 SWAP6 SWAP13 PUSH2 0x2408 JUMP JUMPDEST PUSH2 0x2408 JUMP JUMPDEST SWAP5 DUP6 SWAP8 PUSH2 0x25A7 PUSH2 0x42A PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 PUSH2 0x27A7 JUMPI JUMPDEST DUP1 PUSH2 0x2783 JUMPI JUMPDEST PUSH2 0x2752 JUMPI PUSH1 0x0 SWAP6 PUSH2 0x25CE DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x2738 JUMPI JUMPDEST POP PUSH2 0x25DF DUP7 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x2707 JUMPI JUMPDEST POP PUSH2 0x25F0 DUP6 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x26ED JUMPI JUMPDEST POP PUSH2 0x2601 DUP5 PUSH2 0x11A7 JUMP JUMPDEST DUP2 SUB PUSH2 0x26DD JUMPI JUMPDEST POP POP PUSH2 0x2613 ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH2 0x261D DUP3 PUSH2 0xFDD JUMP JUMPDEST SWAP1 PUSH2 0x262B PUSH2 0x142A PUSH1 0x14 PUSH2 0x2562 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x26C4 JUMPI JUMPDEST POP DUP1 PUSH2 0x26AF JUMPI JUMPDEST PUSH2 0x2643 JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x2668 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 POP PUSH2 0x2662 PUSH2 0x2543 SWAP2 PUSH2 0x265D PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x2B2B JUMP JUMPDEST DUP6 PUSH2 0x2B2B JUMP JUMPDEST BALANCE PUSH2 0x2676 PUSH2 0x368 PUSH1 0xB PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2681 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 DUP1 DUP1 SWAP3 PUSH2 0x2695 PUSH2 0x1F1E PUSH2 0x1F1E PUSH1 0xD PUSH2 0x12A5 JUMP JUMPDEST DUP3 DUP3 ISZERO PUSH2 0x26A6 JUMPI JUMPDEST CALL ISZERO PUSH2 0x21DF JUMPI SWAP1 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x269D JUMP JUMPDEST POP PUSH2 0x26BD PUSH2 0x368 PUSH1 0xA PUSH2 0xFB1 JUMP JUMPDEST DUP2 GT PUSH2 0x2639 JUMP JUMPDEST SWAP1 POP PUSH2 0x26D6 PUSH2 0xD1B PUSH2 0x42A PUSH1 0x14 PUSH2 0x12A5 JUMP JUMPDEST EQ CODESIZE PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x26E6 SWAP2 PUSH2 0x1ABD JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x2608 JUMP JUMPDEST PUSH2 0x2701 SWAP1 PUSH2 0x26FB PUSH1 0xD PUSH2 0x12A5 JUMP JUMPDEST DUP5 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0x2732 SWAP1 PUSH32 0x0 DUP6 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25E6 JUMP JUMPDEST PUSH2 0x274C SWAP1 PUSH2 0x2746 PUSH1 0xE PUSH2 0x12A5 JUMP JUMPDEST DUP7 PUSH2 0x175C JUMP JUMPDEST CODESIZE PUSH2 0x25D5 JUMP JUMPDEST PUSH2 0xD00 DUP6 PUSH2 0x275F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xF6202A8F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x2791 DUP8 PUSH2 0x1065 DUP8 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x27A1 PUSH2 0x1F98 PUSH2 0x368 PUSH1 0x9 PUSH2 0xFB1 JUMP JUMPDEST GT PUSH2 0x25BE JUMP JUMPDEST POP PUSH2 0x27B6 PUSH2 0x42A PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ ISZERO PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x27DD PUSH2 0x27D7 PUSH1 0x12 PUSH2 0xFB1 JUMP JUMPDEST DUP3 PUSH2 0x241F JUMP JUMPDEST SWAP2 PUSH2 0x27F0 PUSH2 0x27E9 PUSH2 0x1D8E JUMP JUMPDEST DUP1 SWAP5 PUSH2 0x2452 JUMP JUMPDEST SWAP4 PUSH2 0x280D DUP5 PUSH2 0x2808 PUSH2 0x2802 PUSH1 0xF PUSH2 0xFB1 JUMP JUMPDEST DUP7 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x2452 JUMP JUMPDEST SWAP4 PUSH2 0x2825 DUP2 PUSH2 0x2808 PUSH2 0x281F PUSH1 0x10 PUSH2 0xFB1 JUMP JUMPDEST DUP8 PUSH2 0x241F JUMP JUMPDEST SWAP4 PUSH2 0x282E PUSH2 0x1292 JUMP JUMPDEST PUSH2 0x2836 JUMPI POP POP JUMP JUMPDEST PUSH2 0x368 SWAP3 SWAP4 POP PUSH2 0x2808 SWAP1 PUSH2 0x284A PUSH1 0x11 PUSH2 0xFB1 JUMP JUMPDEST SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x24BA SWAP1 PUSH2 0x285C PUSH2 0x23CB JUMP JUMPDEST PUSH2 0x2887 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL PUSH2 0xDD7 JUMP JUMPDEST SWAP1 PUSH2 0x2880 PUSH2 0x368 PUSH2 0xDF8 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x289C SWAP1 PUSH2 0x2897 PUSH1 0x1 PUSH1 0x14 PUSH2 0x2870 JUMP JUMPDEST PUSH2 0x29F4 JUMP JUMPDEST PUSH2 0x352 PUSH1 0x0 PUSH1 0x14 PUSH2 0x2870 JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x28B5 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF67 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x28E6 PUSH2 0x28E1 DUP4 PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x28A8 JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST CALLDATASIZE SWAP1 CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x352 PUSH2 0x2906 PUSH2 0x2900 DUP5 PUSH2 0x28D4 JUMP JUMPDEST SWAP4 PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x1F NOT ADD PUSH1 0x20 DUP5 ADD PUSH2 0x28EB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x2932 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x20 DUP1 SWAP2 MUL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x2913 JUMP JUMPDEST SWAP1 PUSH2 0x2968 PUSH2 0x2961 PUSH2 0x2957 DUP5 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2979 JUMPI POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x299F PUSH2 0x2998 PUSH1 0x1 SWAP3 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 ADD PUSH2 0x296C JUMP JUMPDEST SWAP1 PUSH2 0x29E2 PUSH2 0x1D4C SWAP2 PUSH2 0x352 SWAP7 SWAP9 SWAP8 SWAP6 PUSH2 0x29D5 PUSH1 0x80 SWAP7 PUSH2 0x29CB PUSH1 0xA0 DUP9 ADD SWAP5 PUSH1 0x0 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2948 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x2A06 PUSH2 0x2A01 PUSH1 0x2 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x2A0F ADDRESS PUSH2 0x948 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 PUSH2 0x2A37 DUP4 PUSH2 0x2A29 PUSH2 0x2A23 DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP6 PUSH2 0x2929 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2A42 PUSH2 0x1F1E PUSH2 0x951 JUMP JUMPDEST PUSH4 0xAD5C4648 PUSH2 0x2A53 PUSH2 0x1FDB PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2A83 SWAP2 DUP8 SWAP2 PUSH2 0x2B04 JUMPI JUMPDEST POP PUSH2 0x2A29 PUSH2 0x2A7D PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST DUP7 PUSH2 0x2929 JUMP JUMPDEST PUSH2 0x2A8E DUP3 DUP3 DUP7 PUSH2 0x11CB JUMP JUMPDEST PUSH4 0x791AC947 SWAP4 TIMESTAMP SWAP1 DUP3 EXTCODESIZE ISZERO PUSH2 0x337 JUMPI DUP7 SWAP6 PUSH2 0x2ACC PUSH2 0x2AC1 SWAP4 DUP9 SWAP8 SWAP4 DUP9 SWAP5 PUSH2 0x2AB4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x29A7 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x21DF JUMPI PUSH2 0x2ADE JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x352 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2AFD JUMPI JUMPDEST PUSH2 0x2AF5 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x38C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x2B1C SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x226E JUMPI PUSH2 0x2260 DUP2 DUP4 PUSH2 0xF45 JUMP JUMPDEST CODESIZE PUSH2 0x2A6F JUMP JUMPDEST PUSH2 0x352 SWAP1 PUSH2 0x2850 JUMP JUMPDEST SWAP1 DUP1 DUP3 LT ISZERO PUSH2 0x2B38 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 SHL ISZERO PUSH2 0x2B47 JUMPI JUMP JUMPDEST PUSH4 0xD92E233D PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xF7 0xC3 CREATE2 0xE8 DUP15 0xEF PUSH12 0x6A202C331CBFE0872536155B 0xFB 0xB2 DUP6 OR 0xD2 GASLIMIT 0xC5 0xE1 LOG2 PUSH31 0x130364736F6C63430008140033A26469706673582212209E06BE738688F0C3 0xCC 0xCF DELEGATECALL LT STATICCALL SELFDESTRUCT 0xEF 0xEB PUSH8 0xD9EA706109091516 PUSH14 0x7876E2C5314D64736F6C63430008 EQ STOP CALLER ","sourceMap":"376:2899:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;376:2899:22;;;;;-1:-1:-1;;;;;376:2899:22;;:::o;:::-;;:::o;:::-;;;:::o;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;376:2899:22;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;376:2899:22;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;376:2899:22;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;:::i;:::-;-1:-1:-1;;;;;376:2899:22;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;376:2899:22;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1201:85:0:-;1273:6;;;:::i;1063:62::-;;;:::i;:::-;1117:1;;:::i;376:2899:22:-;;;;;;;;;;;:::i;1824:101:0:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;376:2899:22:-;;;;:::o;:::-;;;-1:-1:-1;;;376:2899:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:0;1414:68;1422:7;;:::i;:::-;:23;;719:10:8;1433:12:0;640:96:8;1422:23:0;;-1:-1:-1;;;;;376:2899:22;;;1422:23:0;;1414:68;:::i;1063:62::-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;376:2899:22:-;;;;:::o;:::-;;;-1:-1:-1;;;376:2899:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;376:2899:22;;;;;;;2074:198:0;2256:8;2074:198;2154:73;2162:22;2174:10;2182:1;2174:10;:::i;2162:22::-;-1:-1:-1;;;;;376:2899:22;;2162:22:0;;2154:73;:::i;2074:198::-;;;;:::i;376:2899:22:-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;;376:2899:22;-1:-1:-1;;;;;376:2899:22;;;;;;;;;;:::o;2426:187:0:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;376:2899:22;;;;2566:40:0;;;;2426:187::o;376:2899:22:-;;;;;;;;-1:-1:-1;;376:2899:22;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;376:2899:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;376:2899:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:2899:22;;;;;-1:-1:-1;;;;;376:2899:22;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;1765:1217::-;;;;;;;;;;;;;;2269:23;376:2899;;;2269:23;-1:-1:-1;376:2899:22;;2340:348;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2699:35;;;:::i;:::-;;;:54;;;;;;;;;;376:2899;;;;2699:54;;;;;;376:2899;;;;2699:54;;;-1:-1:-1;;;;;376:2899:22;2699:54;;;376:2899;;;;;;2699:54;;;;;;;;;;;;;1765:1217;2763:23;;2787:6;;;:::i;:::-;2763:31;;;;;;;;;;;376:2899;;;;2763:31;;;;;;;;;;;;;1765:1217;2831:1;;2823:10;2809:24;2823:10;;;:::i;2809:24::-;-1:-1:-1;;;;;376:2899:22;;2809:24;;:64;;;1765:1217;2805:139;;1765:1217;2954:21;;;1765:1217;:::o;2805:139::-;2889:32;:44;;;;;;;;;;;;;376:2899;;;;2889:44;;;;;;;;376:2899;;;;2889:44;;;;;;;;;;;2805:139;;;;2889:44;;;;;;-1:-1:-1;2889:44:22;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;2809:64::-;2851:20;;:22;;376:2899;;;;2851:22;;376:2899;;;;2851:22;;;;;;;;;;;;;;2837:36;2851:22;;;;;2809:64;2837:36;-1:-1:-1;;;;;376:2899:22;;;2837:36;-1:-1:-1;;;;;376:2899:22;;2837:36;;2809:64;;2851:22;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;2763:31;;;;;;;;:::i;:::-;;;;2699:54;;;;;;;;:::i;:::-;;;;1063:62:0;1117:1;1063:62;;;:::i;:::-;3171:6:22;;;:::i;:::-;:20;;3181:10;3189:1;3181:10;:::i;3171:20::-;;3167:75;;3252:14;;;;:::i;3167:75::-;376:2899;;-1:-1:-1;;;3214:17:22;;;;376:2899;3105:168;;;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"3417400","executionCost":"infinite","totalCost":"infinite"},"external":{"launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256,address)":"infinite","owner()":"infinite","renounceOwnership()":"infinite","setGenie(address)":"infinite","transferOwnership(address)":"infinite"}},"methodIdentifiers":{"launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256,address)":"d5e71353","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setGenie(address)":"dcc79cc8","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"GenieAlreadySet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isBurnable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPausable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeflationary\",\"type\":\"bool\"}],\"internalType\":\"struct Common.TokenConfigProperties\",\"name\":\"customConfigProps\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"maxPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"autoWithdrawThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTaxSwap\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"affilateFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burnPercentage\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"coinGenieTreasury\",\"type\":\"address\"}],\"name\":\"launchToken\",\"outputs\":[{\"internalType\":\"contract CoinGenieERC20\",\"name\":\"newToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"genie\",\"type\":\"address\"}],\"name\":\"setGenie\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@neuro_0x\",\"details\":\"A factory library to deploy instances of the CoinGenieERC20 contract.\",\"kind\":\"dev\",\"methods\":{\"launchToken(string,string,uint256,address,(bool,bool,bool),uint256,uint256,uint256,address,address,uint256,uint256,address)\":{\"details\":\"Creates a new instance of the CoinGenieERC20 contract\",\"params\":{\"affilateFeeRecipient\":\"- the address to receive the affiliate fee\",\"autoWithdrawThreshold\":\"- the threshold at which the contract will automatically withdraw the tax fees\",\"burnPercentage\":\"- the percent in basis points to burn on every tx if this token is deflationary\",\"coinGenieTreasury\":\"- the address to receive the royalty fee\",\"customConfigProps\":\"- a struct of configuration booleans for the token\",\"feePercentage\":\"- the percent in basis points to use as a tax\",\"feeRecipient\":\"- the address to receive the tax fees\",\"initialSupply\":\"- the initial supply of the token\",\"maxPerWallet\":\"- the maximum amount of tokens allowed to be held by one wallet\",\"maxTaxSwap\":\"- the maximum amount of tokens allowed to be swapped at once by manual or autoswap\",\"name\":\"- the name of the token\",\"symbol\":\"- the ticker symbol of the token\",\"tokenOwner\":\"- the address that will be the owner of the token\"},\"returns\":{\"newToken\":\"- the CoinGenieERC20 token that was created\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setGenie(address)\":{\"details\":\"Sets the address of the genie token\",\"params\":{\"genie\":\"- the address of the genie token\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_genie\":{\"details\":\"The address of the genie token\"}},\"title\":\"ERC20Factory\",\"version\":1},\"userdoc\":{\"errors\":{\"GenieAlreadySet()\":[{\"notice\":\"Error thrown when the genie is already set.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Factory.sol\":\"ERC20Factory\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../security/Pausable.sol\\\";\\n\\n/**\\n * @dev ERC20 token with pausable token transfers, minting and burning.\\n *\\n * Useful for scenarios such as preventing trades until the end of an evaluation\\n * period, or having an emergency switch for freezing all token transfers in the\\n * event of a large bug.\\n *\\n * IMPORTANT: This contract does not include public pause and unpause functions. In\\n * addition to inheriting this contract, you must define both functions, invoking the\\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\\n * make the contract unpausable.\\n */\\nabstract contract ERC20Pausable is ERC20, Pausable {\\n    /**\\n     * @dev See {ERC20-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - the contract must not be paused.\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(!paused(), \\\"ERC20Pausable: token transfer while paused\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x180079d8b66f41427ac8ba376d9b60da8161eb327827d3085623798305d4658b\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\"},\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\"},\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"src/CoinGenieERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.20;\\n\\nimport { ERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\\\";\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport { Ownable } from \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\nimport { ERC20Burnable } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport { ERC20Pausable } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\\\";\\nimport { ReentrancyGuard } from \\\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\\\";\\nimport { SafeMath } from \\\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\\\";\\n\\nimport { IUniswapV2Pair } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\\\";\\nimport { IUniswapV2Router02 } from \\\"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\nimport { IUniswapV2Factory } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\\\";\\n\\nimport { Common } from \\\"./lib/Common.sol\\\";\\nimport { SafeTransfer } from \\\"./lib/SafeTransfer.sol\\\";\\n\\n/**\\n * @title CoinGenieERC20\\n * @author @neuro_0x\\n * @notice A robust and secure ERC20 token for the Coin Genie ecosystem\\n *\\n * @notice THIS ERC20 SHOULD ONLY BE DEPLOYED FROM THE COINGENIE ERC20 FACTORY\\n */\\ncontract CoinGenieERC20 is ERC20, ERC20Burnable, ERC20Pausable, Ownable, ReentrancyGuard {\\n    using SafeMath for uint256;\\n\\n    /// @dev The max basis points representing 100%\\n    uint256 private constant _MAX_BPS = 10_000;\\n\\n    /// @dev The max tax that can be applied to a transaction. The value is in ether but is handled as 5%.\\n    uint256 private constant _MAX_TAX = 2000; // 20%\\n\\n    /// @dev The minimum amount of eth that must be added to Uniswap when trading is opened.\\n    uint256 private constant _MIN_LIQUIDITY_ETH = 0.5 ether;\\n\\n    /// @dev The minimum amount of erc20 token that must be added to Uniswap when trading is opened.\\n    uint256 private constant _MIN_LIQUIDITY_TOKEN = 1 ether;\\n\\n    /// @dev The amount of $GENIE a person has to hold to get the discount\\n    uint256 public discountFeeRequiredAmount = 1_000_000 ether;\\n\\n    /// @dev The address of the genie token\\n    address public genieToken;\\n\\n    /// @dev number of decimals of the token\\n    uint8 private immutable _tokenDecimals;\\n\\n    /// @dev initial number of tokens which will be minted during initialization\\n    uint256 public immutable initialSupply;\\n\\n    /// @dev max amount of tokens allowed per wallet\\n    uint256 public maxTokenAmountPerAddress;\\n\\n    /// @dev max amount of tokens the contract can accrue before swapping them for ETH\\n    uint256 public maxTaxSwap;\\n\\n    /// @dev max amount of ETH the contract can accrue before withdrawing them to the fee recipient\\n    uint256 public autoWithdrawThreshold;\\n\\n    /// @dev features of the token\\n    Common.TokenConfigProperties public tokenConfig;\\n\\n    /// @dev the address of the fee recipient\\n    address public feeRecipient;\\n\\n    /// @dev address of the affiliate fee recipient\\n    address public immutable affiliateFeeRecipient;\\n\\n    /// @dev address of the royalty fee recipient (Coin Genie)\\n    address public coinGenieTreasury;\\n\\n    /// @dev the fee percentage in basis points\\n    uint256 public feePercentage;\\n\\n    /// @dev the affiliate fee percentage taken on transfers\\n    uint256 public affiliateFeePercentage = 25; // 0.5%;\\n\\n    /// @dev the affiliate fee percentage in basis points\\n    uint256 public burnPercentage;\\n\\n    /// @dev the royalty fee percentage taken on transfers\\n    uint256 public treasuryFeePercentage = 50; // 0.5%;\\n\\n    /// @dev the percent of eth taken when liquidity is open\\n    uint256 public lpEthFeePercentage = 50; // 0.5%;\\n\\n    /// @dev The address of the Uniswap V2 Router. The contract uses the router for liquidity provision and token swaps\\n    IUniswapV2Router02 public constant UNISWAP_V2_ROUTER =\\n        IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\n\\n    /// @dev The address of the LP token. The contract uses the LP token to determine if a transfer is a buy or sell\\n    address public uniswapV2Pair;\\n\\n    /// @dev The flag for whether swapping is enabled and trading open\\n    bool public isSwapEnabled;\\n\\n    /// @dev Are we currently swapping tokens for ETH?\\n    bool private _inSwap;\\n\\n    mapping(address feePayer => bool isWhitelisted) private _feeWhitelist;\\n\\n    /// @dev Modifier to prevent swapping tokens for ETH recursively\\n    modifier lockTheSwap() {\\n        _inSwap = true;\\n        _;\\n        _inSwap = false;\\n    }\\n\\n    /// @notice Error thrown when the genie is already set.\\n    error GenieAlreadySet();\\n\\n    /// @notice Error thrown when the provided maximum token amount is invalid.\\n    error InvalidMaxTokenAmount(uint256 maxPerWallet);\\n\\n    /// @notice Error thrown when the new maximum token amount per address is less than or equal to the previous value.\\n    error MaxTokenAmountPerAddrLtPrevious();\\n\\n    /// @notice Error thrown when the destination balance exceeds the maximum allowed amount.\\n    /// @param addr The address whose balance would exceed the limit.\\n    error DestBalanceExceedsMaxAllowed(address addr);\\n\\n    /// @notice Error thrown when burning is not enabled.\\n    error BurningNotEnabled();\\n\\n    /// @notice Error thrown when pausing is not enabled.\\n    error PausingNotEnabled();\\n\\n    /// @notice Error thrown when the token is not deflationary.\\n    error TokenIsNotDeflationary();\\n\\n    /// @notice Error thrown when an invalid tax basis point is provided.\\n    /// @param bps The invalid basis points for tax.\\n    error InvalidTaxBPS(uint256 bps);\\n\\n    /// @notice Error thrown when an invalid deflation basis point is provided.\\n    /// @param bps The invalid basis points for deflation.\\n    error InvalidDeflationBPS(uint256 bps);\\n\\n    /// @notice Error thrown when trading is already open.\\n    error TradingAlreadyOpen();\\n\\n    /// @notice Error thrown when the provided ETH amount is insufficient.\\n    /// @param amount The provided ETH amount.\\n    /// @param minAmount The minimum required ETH amount.\\n    error InsufficientETH(uint256 amount, uint256 minAmount);\\n\\n    /// @notice Error thrown when the provided token amount is insufficient.\\n    /// @param amount The provided token amount.\\n    /// @param minAmount The minimum required token amount.\\n    error InsufficientTokens(uint256 amount, uint256 minAmount);\\n\\n    /// @notice This event is emitted when the trading is opened.\\n    /// @param pair The address of the LP token.\\n    event TradingOpened(address indexed pair);\\n\\n    /// @notice This event is emitted when the maximum number of tokens allowed per wallet has been updated.\\n    /// @param newMaxTokenAmount The new maximum token amount per wallet.\\n    event MaxTokensPerWalletSet(uint256 indexed newMaxTokenAmount);\\n\\n    /// @notice This event is emitted when the fee configuration of the token has been updated.\\n    /// @param _feeRecipient The updated fee recipient address.\\n    /// @param _feePercentage The updated fee percentage.\\n    event FeeConfigUpdated(address indexed _feeRecipient, uint256 indexed _feePercentage);\\n\\n    /// @notice This event is emitted when the burn configuration of the token has been updated.\\n    /// @param _burnPercentage The updated burn percentage.\\n    event BurnConfigUpdated(uint256 indexed _burnPercentage);\\n\\n    /**\\n     * @dev Initializes the contract with the provided parameters\\n     * @param name_ The name of the token\\n     * @param symbol_ The symbol of the token\\n     * @param initialSupplyToSet The initial supply of the token\\n     * @param tokenOwner The owner of the token\\n     * @param customConfigProps Represents the features of the token\\n     * @param maxPerWallet The max amount of tokens per wallet\\n     * @param maxToSwapForTax The max amount of tokens to swap for tax\\n     * @param _affilateFeeRecipient The address of the affiliate fee recipient\\n     * @param _feeRecipient The address of the fee recipient\\n     * @param _feePercentage The fee percentage in basis points\\n     * @param _burnPercentage The burn percentage in basis points\\n     */\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupplyToSet,\\n        address tokenOwner,\\n        Common.TokenConfigProperties memory customConfigProps,\\n        uint256 maxPerWallet,\\n        uint256 maxToSwapForTax,\\n        uint256 _autoWithdrawThreshold,\\n        address _affilateFeeRecipient,\\n        address _feeRecipient,\\n        uint256 _feePercentage,\\n        uint256 _burnPercentage\\n    )\\n        ERC20(name_, symbol_)\\n    {\\n        SafeTransfer.validateAddress(tokenOwner);\\n        initialSupply = initialSupplyToSet;\\n        _tokenDecimals = 18;\\n        affiliateFeeRecipient = _affilateFeeRecipient;\\n\\n        if (_feePercentage > _MAX_TAX) {\\n            revert InvalidTaxBPS(_feePercentage);\\n        }\\n\\n        if (customConfigProps.isDeflationary) {\\n            if (_burnPercentage > _MAX_TAX) {\\n                revert InvalidDeflationBPS(_burnPercentage);\\n            }\\n\\n            burnPercentage = _burnPercentage;\\n        }\\n\\n        tokenConfig = customConfigProps;\\n        maxTokenAmountPerAddress = maxPerWallet;\\n        maxTaxSwap = maxToSwapForTax;\\n        autoWithdrawThreshold = _autoWithdrawThreshold;\\n\\n        SafeTransfer.validateAddress(_feeRecipient);\\n        feeRecipient = _feeRecipient;\\n        feePercentage = _feePercentage;\\n\\n        if (initialSupplyToSet != 0) {\\n            _mint(tokenOwner, initialSupplyToSet);\\n        }\\n\\n        _feeWhitelist[address(this)] = true;\\n        _feeWhitelist[tokenOwner] = true;\\n        _feeWhitelist[feeRecipient] = true;\\n    }\\n\\n    /**\\n     * @dev hook called before any transfer of tokens. This includes minting and burning\\n     * imposed by the ERC20 standard\\n     * @param from - address of the sender\\n     * @param to - address of the recipient\\n     * @param amount - amount of tokens to transfer\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    )\\n        internal\\n        virtual\\n        override(ERC20, ERC20Pausable)\\n    {\\n        super._beforeTokenTransfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @return true if the token is pausable\\n     */\\n    function isPausable() public view returns (bool) {\\n        return tokenConfig.isPausable;\\n    }\\n\\n    /**\\n     * @return true if the token is burnable\\n     */\\n    function isBurnable() public view returns (bool) {\\n        return tokenConfig.isBurnable;\\n    }\\n\\n    /**\\n     * @return true if the feePayer is whitelisted\\n     */\\n    function isWhitelisted(address feePayer) public view returns (bool) {\\n        return _feeWhitelist[feePayer];\\n    }\\n\\n    /**\\n     * @return number of decimals for the token\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return _tokenDecimals;\\n    }\\n\\n    /**\\n     * @return true if the token supports deflation\\n     */\\n    function isDeflationary() public view returns (bool) {\\n        return tokenConfig.isDeflationary;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the address of the coingenie\\n     * @param coinGenieAddress - the address of the coinGenie\\n     */\\n    function setCoinGenieTreasury(address coinGenieAddress) external {\\n        if (coinGenieTreasury != address(0)) {\\n            revert GenieAlreadySet();\\n        }\\n\\n        coinGenieTreasury = coinGenieAddress;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\\n     * @param maxTax - the new max amount of tokens to swap for tax\\n     */\\n    function setMaxTaxSwap(uint256 maxTax) external onlyOwner {\\n        maxTaxSwap = maxTax;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the max amount of tokens the contract can accrue before swapping them for ETH\\n     * @param threshold - the new max amount of tokens to swap for tax\\n     */\\n    function setAutoWithdrawThreshold(uint256 threshold) external onlyOwner {\\n        autoWithdrawThreshold = threshold;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set a max amount of tokens per wallet\\n     * @param newMaxTokenAmount - the new max amount of tokens per wallet\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports max amount of tokens per wallet\\n     */\\n    function setMaxTokenAmountPerAddress(uint256 newMaxTokenAmount) external onlyOwner whenNotPaused {\\n        if (newMaxTokenAmount <= maxTokenAmountPerAddress) {\\n            revert MaxTokenAmountPerAddrLtPrevious();\\n        }\\n\\n        maxTokenAmountPerAddress = newMaxTokenAmount;\\n        emit MaxTokensPerWalletSet(newMaxTokenAmount);\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the tax config\\n     * @param _feeRecipient - the new feeRecipient\\n     * @param _feePercentage - the new feePercentage\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the feePercentage is not greater than the max tax\\n     */\\n    function setTaxConfig(address _feeRecipient, uint256 _feePercentage) external onlyOwner whenNotPaused {\\n        if (_feePercentage > _MAX_TAX) {\\n            revert InvalidTaxBPS(_feePercentage);\\n        }\\n\\n        SafeTransfer.validateAddress(_feeRecipient);\\n        feeRecipient = _feeRecipient;\\n        feePercentage = _feePercentage;\\n        emit FeeConfigUpdated(_feeRecipient, _feePercentage);\\n    }\\n\\n    /**\\n     * @dev Allows the owner to set the deflation config\\n     * @param _burnPercentage - the new burnPercentage\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports deflation\\n     * @notice only callable if the burnPercentage is not greater than the max allowed bps\\n     */\\n    function setDeflationConfig(uint256 _burnPercentage) external onlyOwner whenNotPaused {\\n        if (!isDeflationary()) {\\n            revert TokenIsNotDeflationary();\\n        }\\n\\n        if (_burnPercentage > _MAX_TAX) {\\n            revert InvalidDeflationBPS(_burnPercentage);\\n        }\\n\\n        burnPercentage = _burnPercentage;\\n        emit BurnConfigUpdated(_burnPercentage);\\n    }\\n\\n    /**\\n     * @dev Allows to transfer a predefined amount of tokens to a predefined address\\n     * @param to - the address to transfer the tokens to\\n     * @param amount - the amount of tokens to transfer\\n     * @return true if the transfer was successful\\n     *\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\\n     * @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\\n     * @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\\n     * @notice captures the tax during the transfer if tax is enabvled\\n     * @notice burns the deflationary amount during the transfer if deflation is enabled\\n     */\\n    function transfer(address to, uint256 amount) public virtual override whenNotPaused returns (bool) {\\n        address from = msg.sender;\\n\\n        if (isSwapEnabled && !_feeWhitelist[from] && !_feeWhitelist[to]) {\\n            uint256 amountToTransfer = _takeFees(from, to, amount);\\n\\n            return super.transfer(to, amountToTransfer);\\n        }\\n\\n        return super.transfer(to, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to transfer a predefined amount of tokens from a predefined address to a predefined address\\n     * @param from - the address to transfer the tokens from\\n     * @param to - the address to transfer the tokens to\\n     * @param amount - the amount of tokens to transfer\\n     * @return true if the transfer was successful\\n     *\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the balance of the receiver is lower than the max amount of tokens per wallet\\n     * @notice checks if blacklisting is enabled and if the sender and receiver are not blacklisted\\n     * @notice checks if whitelisting is enabled and if the sender and receiver are whitelisted\\n     * @notice captures the tax during the transfer if tax is enabvled\\n     * @notice burns the deflationary amount during the transfer if deflation is enabled\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    )\\n        public\\n        virtual\\n        override\\n        whenNotPaused\\n        returns (bool)\\n    {\\n        if (isSwapEnabled && !_feeWhitelist[from] && !_feeWhitelist[to]) {\\n            uint256 amountToTransfer = _takeFees(from, to, amount);\\n\\n            return super.transferFrom(from, to, amountToTransfer);\\n        }\\n\\n        return super.transferFrom(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to burn a predefined amount of tokens\\n     * @param amount - the amount of tokens to burn\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports burning\\n     */\\n    function burn(uint256 amount) public override onlyOwner whenNotPaused {\\n        if (!isBurnable()) {\\n            revert BurningNotEnabled();\\n        }\\n\\n        super.burn(amount);\\n    }\\n\\n    /**\\n     * @dev Allows to burn a predefined amount of tokens from a predefined address\\n     * @param from - the address to burn the tokens from\\n     * @param amount - the amount of tokens to burn\\n     *\\n     * @notice only callable by the owner\\n     * @notice only callable if the token is not paused\\n     * @notice only callable if the token supports burning\\n     * @notice needs Approval\\n     */\\n    function burnFrom(address from, uint256 amount) public override onlyOwner whenNotPaused {\\n        if (!isBurnable()) {\\n            revert BurningNotEnabled();\\n        }\\n\\n        super.burnFrom(from, amount);\\n    }\\n\\n    /**\\n     * @dev Allows to pause the token\\n     *\\n     * @notice only callable by the owner\\n     */\\n    function pause() external onlyOwner {\\n        if (!isPausable()) {\\n            revert PausingNotEnabled();\\n        }\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Allows to unpause the token\\n     *\\n     * @notice only callable by the owner\\n     */\\n    function unpause() external onlyOwner {\\n        if (!isPausable()) {\\n            revert PausingNotEnabled();\\n        }\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Opens trading for the token by adding liquidity to Uniswap.\\n     * @param amountToLP The amount of tokens to add to Uniswap\\n     *\\n     * Emits a {TradingOpened} event.\\n     *\\n     * Preconditions:\\n     *\\n     * Requirements:\\n     *\\n     * `isSwapEnabled` must be false.\\n     * `amountToLP >= _MIN_LIQUIDITY_TOKEN`\\n     * `msg.value >= _MIN_LIQUIDITY_ETH`\\n     */\\n    function openTrading(uint256 amountToLP) external payable onlyOwner nonReentrant returns (IUniswapV2Pair) {\\n        uint256 value = msg.value;\\n        if (isSwapEnabled) {\\n            revert TradingAlreadyOpen();\\n        }\\n\\n        if (amountToLP < _MIN_LIQUIDITY_TOKEN || balanceOf(owner()) < amountToLP) {\\n            revert InsufficientTokens(amountToLP, _MIN_LIQUIDITY_TOKEN);\\n        }\\n\\n        if (value < _MIN_LIQUIDITY_ETH) {\\n            revert InsufficientETH(value, _MIN_LIQUIDITY_ETH);\\n        }\\n\\n        // Transfer the tokens to the contract\\n        transfer(address(this), amountToLP);\\n\\n        // Get the ETH amount to LP and the ETH amount to treasury\\n        uint256 genieBalance = IERC20(genieToken).balanceOf(address(this));\\n        uint256 ethAmountToTreasury = value.mul(lpEthFeePercentage).div(_MAX_BPS);\\n\\n        // If the genie balance is greater than the required amount, the fee is free\\n        if (genieBalance > discountFeeRequiredAmount) {\\n            ethAmountToTreasury = 0;\\n        }\\n\\n        uint256 ethAmountToLP = value.sub(ethAmountToTreasury);\\n\\n        // Approve the router to spend the tokens\\n        _approve(address(this), address(UNISWAP_V2_ROUTER), totalSupply());\\n\\n        // Create the LP token\\n        uniswapV2Pair =\\n            IUniswapV2Factory(UNISWAP_V2_ROUTER.factory()).createPair(address(this), UNISWAP_V2_ROUTER.WETH());\\n\\n        // Approve the router to spend the LP token\\n        IERC20(uniswapV2Pair).approve(address(UNISWAP_V2_ROUTER), type(uint256).max);\\n\\n        // Add liquidity to Uniswap\\n        UNISWAP_V2_ROUTER.addLiquidityETH{ value: ethAmountToLP }(\\n            address(this), balanceOf(address(this)), 0, 0, owner(), block.timestamp\\n        );\\n\\n        // Enable swapping\\n        isSwapEnabled = true;\\n\\n        // Send fee to the treasury\\n        if (ethAmountToTreasury > 0) {\\n            payable(coinGenieTreasury).transfer(ethAmountToTreasury);\\n        }\\n\\n        emit TradingOpened(uniswapV2Pair);\\n\\n        return IUniswapV2Pair(uniswapV2Pair);\\n    }\\n\\n    /**\\n     * @dev Sets the address of the genie token\\n     * @param genie - the address of the genie token\\n     */\\n    function setGenie(address genie) external onlyOwner {\\n        if (genieToken != address(0)) {\\n            revert GenieAlreadySet();\\n        }\\n\\n        genieToken = genie;\\n    }\\n\\n    /**\\n     * @dev Swaps tokens for ETH if the contract balance is greater than the max amount to swap for tax. Then sends\\n     * the ETH to the tax wallet.\\n     */\\n    function manualSwap() external nonReentrant {\\n        uint256 tokenBalance = balanceOf(address(this));\\n        if (tokenBalance > 0) {\\n            _swapTokensForEth(_min(tokenBalance, maxTaxSwap));\\n        }\\n\\n        // Send ETH to the tax wallet\\n        uint256 ethBalance = address(this).balance;\\n        if (ethBalance > autoWithdrawThreshold) {\\n            payable(owner()).transfer(ethBalance);\\n        }\\n    }\\n\\n    function _takeFees(address from, address to, uint256 amount) private returns (uint256 amountToTransfer) {\\n        (uint256 treasuryAmount, uint256 taxAmount, uint256 affiliateAmount, uint256 deflationAmount) =\\n            _getTransferAmounts(amount);\\n\\n        amountToTransfer = amount - treasuryAmount - taxAmount - affiliateAmount - deflationAmount;\\n\\n        if (\\n            from == uniswapV2Pair && to != address(UNISWAP_V2_ROUTER)\\n                && balanceOf(to) + amountToTransfer > maxTokenAmountPerAddress\\n        ) {\\n            revert DestBalanceExceedsMaxAllowed(to);\\n        }\\n\\n        if (treasuryAmount != 0) {\\n            _transfer(from, coinGenieTreasury, treasuryAmount);\\n        }\\n\\n        if (affiliateAmount != 0) {\\n            _transfer(from, affiliateFeeRecipient, affiliateAmount);\\n        }\\n\\n        if (taxAmount != 0) {\\n            _transfer(from, feeRecipient, taxAmount);\\n        }\\n\\n        if (deflationAmount != 0) {\\n            _burn(from, deflationAmount);\\n        }\\n\\n        uint256 contractTokenBalance = balanceOf(address(this));\\n        // if not in a swap, the receiver is the LP token and the contract token balance is greater than the max tax\\n        // swap, swap tokens for ETH\\n        if (!_inSwap && to == uniswapV2Pair && contractTokenBalance > maxTaxSwap) {\\n            _swapTokensForEth(_min(amountToTransfer, _min(maxTaxSwap, contractTokenBalance)));\\n\\n            // if the contract ETH balance is greater than the auto withdraw threshold, withdraw the ETH to the\\n            // feeRecipient\\n            uint256 contractEthBalance = address(this).balance;\\n            if (contractEthBalance > autoWithdrawThreshold) {\\n                payable(feeRecipient).transfer(contractEthBalance);\\n            }\\n\\n            return amountToTransfer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Gets the amount of tokens to transfer and the amount of tax to capture\\n     * @param amount The amount of tokens to transfer\\n     */\\n    function _getTransferAmounts(uint256 amount)\\n        private\\n        view\\n        returns (uint256 treasuryAmount, uint256 taxAmount, uint256 affiliateAmount, uint256 deflationAmount)\\n    {\\n        treasuryAmount = (amount * treasuryFeePercentage) / _MAX_BPS;\\n        taxAmount = (amount * feePercentage) / _MAX_BPS;\\n        affiliateAmount = (amount * affiliateFeePercentage) / _MAX_BPS;\\n\\n        if (isDeflationary()) {\\n            deflationAmount = (amount * burnPercentage) / _MAX_BPS;\\n        }\\n    }\\n\\n    /**\\n     * @dev Swaps tokens for ETH\\n     * @param tokenAmount The amount of tokens to swap for ETH\\n     */\\n    function _swapTokensForEth(uint256 tokenAmount) private nonReentrant lockTheSwap {\\n        address[] memory path = new address[](2);\\n        path[0] = address(this);\\n        path[1] = UNISWAP_V2_ROUTER.WETH();\\n        _approve(address(this), address(UNISWAP_V2_ROUTER), tokenAmount);\\n        UNISWAP_V2_ROUTER.swapExactTokensForETHSupportingFeeOnTransferTokens(\\n            tokenAmount, 0, path, address(this), block.timestamp\\n        );\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     * @param a The first number.\\n     * @param b The second number.\\n     */\\n    function _min(uint256 a, uint256 b) private pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n}\\n\",\"keccak256\":\"0x41a852e416d2b8b2ac0addbeeb0e132526b8695daea1e8038acf4c0fd71509a0\",\"license\":\"GPL-3.0\"},\"src/ERC20Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\n\\nimport { CoinGenieERC20 } from \\\"./CoinGenieERC20.sol\\\";\\nimport { Common } from \\\"./lib/Common.sol\\\";\\n\\n/**\\n * @title ERC20Factory\\n * @author @neuro_0x\\n * @dev A factory library to deploy instances of the CoinGenieERC20 contract.\\n */\\ncontract ERC20Factory is Ownable {\\n    /// @dev The address of the genie token\\n    address private _genie;\\n\\n    /// @notice Error thrown when the genie is already set.\\n    error GenieAlreadySet();\\n\\n    /**\\n     * @dev Creates a new instance of the CoinGenieERC20 contract\\n     * @param name - the name of the token\\n     * @param symbol - the ticker symbol of the token\\n     * @param initialSupply - the initial supply of the token\\n     * @param tokenOwner - the address that will be the owner of the token\\n     * @param customConfigProps - a struct of configuration booleans for the token\\n     * @param maxPerWallet - the maximum amount of tokens allowed to be held by one wallet\\n     * @param maxTaxSwap - the maximum amount of tokens allowed to be swapped at once by manual or autoswap\\n     * @param autoWithdrawThreshold - the threshold at which the contract will automatically withdraw the tax fees\\n     * @param affilateFeeRecipient - the address to receive the affiliate fee\\n     * @param feeRecipient - the address to receive the tax fees\\n     * @param feePercentage - the percent in basis points to use as a tax\\n     * @param burnPercentage - the percent in basis points to burn on every tx if this token is deflationary\\n     * @param coinGenieTreasury - the address to receive the royalty fee\\n     *\\n     * @return newToken - the CoinGenieERC20 token that was created\\n     */\\n    function launchToken(\\n        string memory name,\\n        string memory symbol,\\n        uint256 initialSupply,\\n        address tokenOwner,\\n        Common.TokenConfigProperties memory customConfigProps,\\n        uint256 maxPerWallet,\\n        uint256 autoWithdrawThreshold,\\n        uint256 maxTaxSwap,\\n        address affilateFeeRecipient,\\n        address feeRecipient,\\n        uint256 feePercentage,\\n        uint256 burnPercentage,\\n        address coinGenieTreasury\\n    )\\n        external\\n        returns (CoinGenieERC20 newToken)\\n    {\\n        CoinGenieERC20 coinGenieERC20 = new CoinGenieERC20(\\n            name,\\n            symbol,\\n            initialSupply,\\n            tokenOwner,\\n            customConfigProps,\\n            maxPerWallet,\\n            maxTaxSwap,\\n            autoWithdrawThreshold,\\n            affilateFeeRecipient,\\n            feeRecipient,\\n            feePercentage,\\n            burnPercentage\\n        );\\n\\n        coinGenieERC20.setCoinGenieTreasury(coinGenieTreasury);\\n        coinGenieERC20.setGenie(_genie);\\n\\n        if (tokenOwner != address(0) && tokenOwner != coinGenieERC20.owner()) {\\n            coinGenieERC20.transferOwnership(tokenOwner);\\n        }\\n\\n        return coinGenieERC20;\\n    }\\n\\n    /**\\n     * @dev Sets the address of the genie token\\n     * @param genie - the address of the genie token\\n     */\\n    function setGenie(address genie) external onlyOwner {\\n        if (_genie != address(0)) {\\n            revert GenieAlreadySet();\\n        }\\n\\n        _genie = genie;\\n    }\\n}\\n\",\"keccak256\":\"0xa4c19907c903a34df75362d370b2fd9c9838a92368b9a5a79503b2c24bc169f6\",\"license\":\"GPL-3.0\"},\"src/lib/Common.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title Common\\n * @dev Common items used across the CoinGenie contracts.\\n */\\nlibrary Common {\\n    /// @dev set of features supported by the token\\n    struct TokenConfigProperties {\\n        bool isBurnable;\\n        bool isPausable;\\n        bool isDeflationary;\\n    }\\n}\\n\",\"keccak256\":\"0x077884f042fbef72e79889fa4eef48f2884522241491c321f7bcaafcefb68af6\",\"license\":\"GPL-3.0\"},\"src/lib/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nlibrary SafeTransfer {\\n    error TransferFailed();\\n\\n    /**\\n     * @dev Sends `amount` (in wei) ETH to `to`.\\n     * @param to The address to send the ETH to.\\n     * @param amount The amount of ETH to send.\\n     */\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Transfer the ETH and check if it succeeded or not.\\n            if iszero(call(gas(), to, amount, 0, 0, 0, 0)) {\\n                // Store the function selector of `ETHTransferFailed()`.\\n                // bytes4(keccak256(bytes(\\\"ETHTransferFailed()\\\"))) = 0xb12d13eb\\n                mstore(0x00, 0xb12d13eb)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Validates that the address is not the zero address using assembly.\\n     * @dev Reverts if the address is the zero address.\\n     * @param addr The address to validate.\\n     */\\n    function validateAddress(address addr) internal pure {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            if iszero(shl(96, addr)) {\\n                // Store the function selector of `ZeroAddress()`.\\n                // bytes4(keccak256(bytes(\\\"ZeroAddress()\\\"))) = 0xd92e233d\\n                mstore(0x00, 0xd92e233d)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n     * @dev Reverts if the ERC20 transfer fails.\\n     * @param tokenAddress The address of the ERC20 token.\\n     * @param from The address to transfer the tokens from.\\n     * @param to The address to transfer the tokens to.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(address tokenAddress, address from, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transferFrom(address,address,uint256)\\\", from, to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n    /// @dev Reverts if the ERC20 transfer fails.\\n    /// @param tokenAddress The address of the ERC20 token.\\n    /// @param to The address to transfer the tokens to.\\n    /// @param amount The amount of tokens to transfer.\\n    function safeTransfer(address tokenAddress, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xcd0139a88ea2bcaa2dc562192f25f6fe7e18dc526081b42f9c1f8ef47a6aefa9\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"src/ERC20Factory.sol:ERC20Factory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":5994,"contract":"src/ERC20Factory.sol:ERC20Factory","label":"_genie","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"errors":{"GenieAlreadySet()":[{"notice":"Error thrown when the genie is already set."}]},"kind":"user","methods":{},"version":1}}},"src/LiquidityLocker.sol":{"LiquidityLocker":{"abi":[{"inputs":[],"name":"BeforeUnlockDate","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidLockDate","type":"error"},{"inputs":[],"name":"LockMismatch","type":"error"},{"inputs":[],"name":"MigratorNotSet","type":"error"},{"inputs":[{"internalType":"address","name":"lpToken","type":"address"}],"name":"NotUniPair","type":"error"},{"inputs":[],"name":"OwnerAlreadySet","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"lpToken","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lockDate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unlockDate","type":"uint256"}],"name":"OnDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"lpToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"OnWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getLockedTokenAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumLockedTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lpToken","type":"address"}],"name":"getNumLocksForToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_lpToken","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getUserLockForTokenAtIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getUserLockedTokenAtIndex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserNumLockedTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_lpToken","type":"address"}],"name":"getUserNumLocksForToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"uint256","name":"_lockID","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"incrementLock","outputs":[{"components":[{"internalType":"uint256","name":"lockDate","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"initialAmount","type":"uint256"},{"internalType":"uint256","name":"unlockDate","type":"uint256"},{"internalType":"uint256","name":"lockID","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"internalType":"struct LiquidityLocker.TokenLock","name":"_userLock","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"amountOfLPToLock","type":"uint256"},{"internalType":"uint256","name":"unlockDate","type":"uint256"},{"internalType":"address payable","name":"withdrawer","type":"address"}],"name":"lockLPToken","outputs":[{"components":[{"internalType":"uint256","name":"lockDate","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"initialAmount","type":"uint256"},{"internalType":"uint256","name":"unlockDate","type":"uint256"},{"internalType":"uint256","name":"lockID","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"internalType":"struct LiquidityLocker.TokenLock","name":"tokenLock","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"uint256","name":"_lockID","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"migrate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"migrator","outputs":[{"internalType":"contract IUniswapV2Migrator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"uint256","name":"_lockID","type":"uint256"},{"internalType":"uint256","name":"_unlockDate","type":"uint256"}],"name":"relock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IUniswapV2Migrator","name":"_migrator","type":"address"}],"name":"setMigrator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pair","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenLocks","outputs":[{"internalType":"uint256","name":"lockDate","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"initialAmount","type":"uint256"},{"internalType":"uint256","name":"unlockDate","type":"uint256"},{"internalType":"uint256","name":"lockID","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lpToken","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"uint256","name":"_lockID","type":"uint256"},{"internalType":"address payable","name":"_newOwner","type":"address"}],"name":"transferLockOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"uint256","name":"_lockID","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"@neuro_0x","details":"A contract for locking Uniswap V2 liquidity pool tokens for specified periods.","kind":"dev","methods":{"getLockedTokenAtIndex(uint256)":{"details":"Get the address of a locked token at an index.","params":{"_index":"The index of the token."}},"getNumLockedTokens()":{"details":"Get the total number of locked tokens"},"getNumLocksForToken(address)":{"details":"Get the number of locks for a specific token.","params":{"_lpToken":"The address of the LP token."}},"getUserLockForTokenAtIndex(address,address,uint256)":{"details":"Get the lock for a specific user and token at an index.","params":{"_index":"The index of the lock.","_lpToken":"The address of the LP token.","_user":"The address of the user."},"returns":{"_0":"The lock date.","_1":"Amount of tokens locked.","_2":"Initial amount of tokens locked.","_3":"Unlock date of the lock.","_4":"Lock ID of the lock.","_5":"Owner of the lock."}},"getUserLockedTokenAtIndex(address,uint256)":{"details":"Get the token address a user has locked at an index.","params":{"_index":"The index of the token.","_user":"The address of the user."}},"getUserNumLockedTokens(address)":{"details":"Get the number of tokens a user has locked.","params":{"_user":"The address of the user."}},"getUserNumLocksForToken(address,address)":{"details":"Get the number of locks for a specific user and token.","params":{"_lpToken":"The address of the LP token.","_user":"The address of the user."}},"incrementLock(address,uint256,uint256,uint256)":{"details":"increase the amount of tokens per a specific lock, this is preferable to creating a new lock, less fees, and faster loading on our live block explorer"},"lockLPToken(address,uint256,uint256,address)":{"details":"Creates a new lock","params":{"amountOfLPToLock":"amount of LP tokens to lock","lpToken":"the univ2 token address","unlockDate":"the unix timestamp (in seconds) until unlock","withdrawer":"the user who can withdraw liquidity once the lock expires"}},"migrate(address,uint256,uint256,uint256)":{"details":"migrates liquidity to uniswap v3"},"owner()":{"details":"Returns the address of the current owner."},"relock(address,uint256,uint256,uint256)":{"details":"extend a lock with a new unlock date, _index and _lockID ensure the correct lock is changed this prevents errors when a user performs multiple tx per block possibly with varying gas prices","params":{"_index":"the index of the lock for the token","_lockID":"the lockID of the lock for the token","_lpToken":"the univ2 token address","_unlockDate":"the new unix timestamp (in seconds) until unlock"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setMigrator(address)":{"details":"Set the migrator contract which allows locked lp tokens to be migrated to uniswap v3","params":{"_migrator":"The address of the migrator contract"}},"transferLockOwnership(address,uint256,uint256,address)":{"details":"transfer a lock to a new owner, e.g. presale project -> project owner"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdraw(address,uint256,uint256,uint256)":{"details":"withdraw a specified amount from a lock. _index and _lockID ensure the correct lock is changed this prevents errors when a user performs multiple tx per block possibly with varying gas prices"}},"title":"LiquidityLocker","version":1},"evm":{"bytecode":{"functionDebugData":{"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_from_storage_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_rational_by":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":74,"id":null,"parameterSlots":0,"returnSlots":1},"constructor_LiquidityLocker":{"entryPoint":43,"id":null,"parameterSlots":0,"returnSlots":0},"constructor_Ownable":{"entryPoint":166,"id":23,"parameterSlots":0,"returnSlots":0},"constructor_ReentrancyGuard":{"entryPoint":134,"id":239,"parameterSlots":0,"returnSlots":0},"convert_address_to_address":{"entryPoint":256,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":55,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":245,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":223,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":177,"id":null,"parameterSlots":1,"returnSlots":1},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_transferOwnership":{"entryPoint":295,"id":111,"parameterSlots":1,"returnSlots":0},"read_from_storage_split_offset_address":{"entryPoint":195,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":86,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":207,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":267,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":102,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346200002657620000146200002b565b604051611e7c6200018a8239611e7c90f35b600080fd5b6200003562000086565b565b6200004762000047620000479290565b90565b62000047600162000037565b90600019905b9181191691161790565b906200007a62000047620000829262000037565b825462000056565b9055565b62000090620000a6565b620000356200009e6200004a565b600162000066565b620000353362000127565b62000047905b6001600160a01b031690565b620000479054620000b1565b906001600160a01b03906200005c565b6200004790620000b7906001600160a01b031682565b6200004790620000df565b6200004790620000f5565b906200011f62000047620000829262000100565b8254620000cf565b620001336000620000c3565b90620001418160006200010b565b62000178620001717f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000100565b9162000100565b916200018360405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c806314dd79a3146101425780631f2a1d2f1461013d57806323cf3118146101385780634532d7761461013357806360491d241461012e578063715018a614610129578063783451e8146101245780637cd07e471461011f5780638da5cb5b1461011a578063903df80614610115578063a396981514610110578063a69d9c4f1461010b578063a9b07cea14610106578063bef497fd14610101578063ccebfa3f146100fc578063d4ff493f146100f7578063df41bc5f146100f2578063ee424278146100ed5763f2fde38b0361014757610716565b6106fa565b6106e0565b6106c4565b61065f565b61050e565b6104a7565b610421565b6103e3565b6103c7565b61037f565b610358565b6102d3565b6102bb565b610294565b610278565b61021f565b6101f4565b61018b565b600080fd5b805b0361014757565b905035906101628261014c565b565b906020828203126101475761017891610155565b90565b6001600160a01b031690565b9052565b34610147576101c06101a66101a1366004610164565b611bcb565b604051918291826001600160a01b03909116815260200190565b0390f35b6001600160a01b03811661014e565b90503590610162826101c4565b9060208282031261014757610178916101d3565b34610147576101c061020f61020a3660046101e0565b611b84565b6040519182918290815260200190565b34610147576102376102323660046101e0565b610936565b604051005b6080818303126101475761025082826101d3565b926101786102618460208501610155565b9361026f8160408601610155565b93606001610155565b346101475761023761028b36600461023c565b9291909161143d565b34610147576102376102a736600461023c565b929190916111d5565b600091031261014757565b34610147576102cb3660046102b0565b610237610766565b34610147576102e33660046102b0565b6101c061020f611b9b565b610178916008021c6001600160a01b031690565b9061017891546102ee565b61017860006006610302565b6101789061017b906001600160a01b031682565b61017890610319565b6101789061032d565b61018790610336565b602081019291610162919061033f565b34610147576103683660046102b0565b6101c061037361030d565b60405191829182610348565b346101475761038f3660046102b0565b6101c06101a66000546001600160a01b031690565b919060408382031261014757610178906103be81856101d3565b93602001610155565b34610147576101c06101a66103dd3660046103a4565b90611c4b565b34610147576101c061020f6103f93660046101e0565b611c2c565b9190604083820312610147576101789061041881856101d3565b936020016101d3565b34610147576101c061020f6104373660046103fe565b90611c63565b80518252610162919060a090819061045a60208201516020860152565b61046960408201516040860152565b61047860608201516060860152565b61048760808201516080860152565b01516001600160a01b0316910152565b60c081019291610162919061043d565b34610147576101c06104c66104bd36600461023c565b9291909161172f565b60405191829182610497565b608081830312610147576104e682826101d3565b926101786104f78460208501610155565b936105058160408601610155565b936060016101d3565b34610147576102376105213660046104d2565b92919091611743565b9061053490610336565b600052602052604060002090565b634e487b7160e01b600052603260045260246000fd5b805482101561057b57610572600691600052602060002090565b91020190600090565b610542565b6101789081565b6101789054610580565b91906105a160059360009461052a565b8054821015610608576105b5929350610558565b50906105c082610587565b916105cd60018201610587565b916105da60028301610587565b916105e760038201610587565b9161017860056105f960048501610587565b9301546001600160a01b031690565b8380fd5b91946106496106509298979561064260a09661063b6101629a61063460c08a019e60008b0152565b6020890152565b6040870152565b6060850152565b6080830152565b01906001600160a01b03169052565b34610147576101c061067b6106753660046103a4565b90610591565b9261068b96949692919260405190565b9687968761060c565b9091606082840312610147576101786106ad84846101d3565b936106bb81602086016101d3565b93604001610155565b34610147576101c061067b6106da366004610694565b91611c7a565b6101c06104c66106f13660046104d2565b92919091610eff565b346101475761023761070d36600461023c565b92919091611b78565b34610147576102376107293660046101e0565b61088b565b6107366107c6565b610162610754565b61017b6101786101789290565b6101789061073e565b610162610761600061074b565b6108c4565b61016261072e565b0190565b1561077957565b60405162461bcd60e51b8152806107c2600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6101626107db6000546001600160a01b031690565b6107f46107e73361017b565b916001600160a01b031690565b14610772565b610162906108066107c6565b610866565b1561081257565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6101629061076161087a61017b600061074b565b6001600160a01b038316141561080b565b610162906107fa565b906001600160a01b03905b9181191691161790565b906108b96101786108c092610336565b8254610894565b9055565b6000546001600160a01b0316906108dc8160006108a9565b61090f6109097f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610336565b91610336565b9161091960405190565b600090a3565b6101629061092b6107c6565b6101629060066108a9565b6101629061091f565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761097757604052565b61093f565b9061016261098960405190565b9283610955565b61017860c061097c565b6109a2610990565b906000825260208080808080870160008152016000815201600081520160008152016000905250565b61017861099a565b906109e8949392916109e3610f69565b610c1b565b90610162610fa5565b6101786101786101789290565b610178735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f610336565b90505190610162826101c4565b906020828203126101475761017891610a1b565b6040513d6000823e3d90fd5b6001600160a01b03909116815260408101929161016291602090610650565b634e487b7160e01b600052600060045260246000fd5b906000199061089f565b90610a976101786108c0926109f1565b8254610a7d565b6101629190610b179060a090600590610abf81610ab9875190565b90610a87565b610ad160018201610ab9602088015190565b610ae360028201610ab9604088015190565b610af560038201610ab9606088015190565b610b0760048201610ab9608088015190565b019201516001600160a01b031690565b906108a9565b9190610b2c5761016291610a9e565b610a67565b90815491600160401b8310156109775782610b5491600161016295018155610558565b90610b1d565b805482101561057b57610572600191600052602060002090565b9160001960089290920291821b911b61089f565b9190610b996101786108c0936109f1565b908354610b74565b90815491600160401b8310156109775782610bc491600161016295018155610b5a565b90610b88565b9095949261016294610c10610c1792610c09608096610bf960a088019c60008901906001600160a01b03169052565b6001600160a01b03166020870152565b6040850152565b6060830152565b0152565b94939091948095600093610c2e856109f1565b8214610eed57610c426402540be4006109f1565b8611610edb57610c5190610336565b91610c5b83610336565b610c6b610c666109fe565b610336565b610c7963e6a4390592610336565b630dfe168191610c92610c8b60405190565b9360e01b90565b8352602083600481855afa918215610e9057610cc4938a93610eb9575b5060405193602091859163d21220a760e01b90565b825260049082905afa928315610e90578993610e95575b50610cfc60209394610d07610cef60405190565b9687958694859460e01b90565b845260048401610a48565b03915afa908115610e90578691610e62575b50610d2c6001600160a01b0385166107e7565b03610e315782339483610d3e30610336565b90610d4a918885611d7c565b5082870196610d57428952565b6020840194610d64818752565b604085015260608401988952600593610d7d848661052a565b54608082019081529484610d9085610336565b6001600160a01b031660a0840152610da79161052a565b90610db191610b31565b610dbc836003610fc2565b5082600292610dcb908461052a565b91820190610dd891610fc2565b500190610de49161052a565b9051610def91610ba1565b51925193517fb173d70d03f0b8aa29e0087d55b3549db8a6343c5208ce69af3c0de4c0836fe794610e1f60405190565b948594610e2c9486610bca565b0390a1565b6107c283610e3e60405190565b630a3f6ee160e21b8152918291600483016001600160a01b03909116815260200190565b610e83915060203d8111610e89575b610e7b8183610955565b810190610a28565b38610d19565b503d610e71565b610a3c565b60209350610eb2610cfc91853d8111610e8957610e7b8183610955565b9350610cdb565b6020919350610ed490823d8111610e8957610e7b8183610955565b9290610caf565b604051637b663c4960e01b8152600490fd5b60405163162908e360e11b8152600490fd5b90610178939291610f0e6109cb565b6109d3565b61017860026109f1565b15610f2457565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b610162610f766001610587565b610f94610f81610f13565b918290610f8d565b9190565b1415610f1d565b6001610a87565b61017860016109f1565b610162610f94610f9b565b6101789081906001600160a01b031681565b90610fef610f89610fea610fe5600061017896610fdd600090565b50019461032d565b610fb0565b6109f1565b611032565b9190610b996101786108c09390565b90815491600160401b831015610977578261102691600161016295018155610b5a565b90610ff4565b90610534565b61104361103f838361107c565b1590565b15611075576110709161106b906001611064846110608482611003565b5490565b930161102c565b610a87565b600190565b5050600090565b61109a9160016110959261108e600090565b500161102c565b610587565b6110a7610f8960006109f1565b141590565b906110c09392916110bb610f69565b6110de565b610162610fa5565b610178916008021c81565b9061017891546110c8565b906110ed6402540be4006109f1565b8411610edb5761112d61112760029261112261111b6111093390565b95611114878261052a565b0196610336565b809661052a565b610b5a565b906110d3565b611153610f8961114f61114b846111466005988961052a565b610558565b5090565b9590565b14159182156111a3575b5050611191576003019061117082610587565b811061117f5761016291610a87565b60405163b9f317a560e01b8152600490fd5b60405163459808cf60e01b8152600490fd5b6111cc9192506111bf6107e7918501546001600160a01b031690565b926001600160a01b031690565b1415388061115d565b906101629392916110ac565b906110c09392916111f0610f69565b611284565b634e487b7160e01b600052601160045260246000fd5b9190820391821161121857565b6111f5565b634e487b7160e01b600052603160045260246000fd5b61016291600091610b88565b8054801561126257600019019061125f6112598383610b5a565b90611233565b55565b61121d565b6001600160a01b0390911681526040810192916101629160200152565b92919092600090611294826109f1565b8414610eed576111229460029033926112c8611127836112bf866112b8898261052a565b0194610336565b9a8b809561052a565b6112e5610f896112e161114b846111466005978861052a565b9890565b1415908115611415575b506111915761130060038601610587565b421061117f578286948892611330600161134c990161109561132a8a61132584610587565b61120b565b82610a87565b61133c610f89846109f1565b14611384575b5050509050611e10565b507fbace9fd79d5ea02ed8b43fa96af07e4e8f859a2f71ff878c748f5c22c578028491610e2c61137b60405190565b92839283611267565b6113de906113d56113a3610178878961139d898261052a565b0161052a565b91610bc46113ce6111276113c86113b8875490565b6113c260016109f1565b9061120b565b86610b5a565b9184610b5a565b6110608161123f565b6113ea610f89836109f1565b146113f6575b80611342565b61076e6114069261140b9561052a565b611449565b50388582826113f0565b8601546001600160a01b031690506114356001600160a01b0385166107e7565b1415386112ef565b906101629392916111e1565b90611464610f89610fea610fe5600061017896610fdd600090565b611495565b61016291600091610ff4565b8054801561126257600019019061125f61148f8383610b5a565b90611469565b906114a6611095826001850161102c565b6000926114b2846109f1565b82146114ff576101789261150594926115109261150a60019788936114df6114d9866109f1565b8261120b565b888501916114f76114ee845490565b6113c2896109f1565b828103611515575b50505090565b611475565b0161102c565b611233565b6110266115386115409461152f61112761106b9589610b5a565b92839188610b5a565b88880161102c565b3880806114ff565b906109e894939291611558610f69565b61160b565b9190820180921161121857565b906101626115f2600561157b610990565b9461158c61158882610587565b8752565b6115a261159b60018301610587565b6020880152565b6115b86115b160028301610587565b6040880152565b6115ce6115c760038301610587565b6060880152565b6115e46115dd60048301610587565b6080880152565b01546001600160a01b031690565b6001600160a01b031660a0840152565b6101789061156a565b5060009190611619836109f1565b8514610eed5761164e6111276002936111226116476116353390565b96611640888261052a565b0195610336565b809561052a565b60059061166c610f8961166861114b84611146888861052a565b9790565b1415908115611707575b50611191576116ff6116be6116b68761169c6101789961169530610336565b8888611d7c565b5061109561132a60018a01926116b184610587565b61155d565b948601610587565b6116ca60038701610587565b907fb173d70d03f0b8aa29e0087d55b3549db8a6343c5208ce69af3c0de4c0836fe7956116f660405190565b95869586610bca565b0390a1611602565b8501546001600160a01b031690506117276001600160a01b0384166107e7565b141538611676565b9061017893929161173e6109cb565b611548565b9061175961017b6000546001600160a01b031690565b61176285610336565b1461186a573393600261178161112784611122878561139d8c8261052a565b9360059461179c610f896112e161114b84611146878c61052a565b14158015611843575b6111915761016296611804611822956117ef6117dd61017886886117cc6101788c8361052a565b6117d68382610fc2565b500161052a565b6117e960048c01610587565b90610ba1565b6113d56113a3610178868861139d888261052a565b600090611813610f89836109f1565b14611829575b50505050610336565b91016108a9565b61076e611406926118399561052a565b5038808080611819565b50858501546001600160a01b03166118636001600160a01b0389166107e7565b14156117a5565b60405163cf04b1bb60e01b8152600490fd5b906110c093929161188b610f69565b6118ff565b80151561014e565b9050519061016282611890565b906020828203126101475761017891611898565b90959492610162946118ef610c1792610c096080966118e860a088019c60008901906001600160a01b03169052565b6020870152565b6001600160a01b03166060830152565b929192611917610c666006546001600160a01b031690565b9360009461192a6107e761017b8861074b565b14611b6657611938856109f1565b8414610eed5760023393611968611127826111226119618661195a8b8261052a565b0198610336565b809861052a565b600590611986610f8961198261114b846111468b8861052a565b9690565b1415908115611b3e575b5061119157848785926119b06001870161109561132a8c61132584610587565b6119bc610f89846109f1565b14611af3575b505050505063095ea7b360206119ff6119e6610c666006546001600160a01b031690565b92611a0a886119f460405190565b958694859460e01b90565b845260048401611267565b038189875af18015610e9057611ac7575b50611a31610c666006546001600160a01b031690565b90611a43600363b7df1d259201610587565b93611a5a42611a54620151806109f1565b9061155d565b91833b1561014757611a8f611a84938997938894611a7760405190565b9a8b998a98899760e01b90565b8752600487016118b9565b03925af18015610e9057611aa1575050565b8161016292903d10611ac0575b611ab88183610955565b8101906102b0565b503d611aae565b611ae79060203d8111611aec575b611adf8183610955565b8101906118a5565b611a1b565b503d611ad5565b611b0c906113d56113a3610178878961139d898261052a565b611b18610f89836109f1565b14611b24575b836119c2565b61076e61140692611b349561052a565b5038828487611b1e565b8401546001600160a01b03169050611b5e6001600160a01b0387166107e7565b141538611990565b604051632ed9bf5360e21b8152600490fd5b9061016293929161187c565b61106061017891611b93600090565b50600561052a565b61017860035b611bb7600061017892611bb2600090565b500190565b600061017891611bc5600090565b50015490565b610178906003611be4565b611be4565b610178906109f1565b611c09611c0461017893611bff6000611c0e95611bb2600090565b611c13565b611bdb565b61073e565b61032d565b61017891600061112792611c25600090565b5001610b5a565b611ba1600061076e61017861017894611c43600090565b50600261052a565b90611bd6600061076e61017861017895611c43600090565b610178916110609161139d6101786002928361052a565b61114b611ca461112761139d969561112286611cb096611c98600090565b5060029a8b918261052a565b6111466005948561052a565b611cb981610587565b611cd0611cc860018401610587565b958301610587565b93611cfc611ce060038501610587565b94611ced60048601610587565b9401546001600160a01b031690565b91959493929190565b6001600160a01b039182168152911660208201526060810192916101629160400152565b67ffffffffffffffff811161097757602090601f01601f19160190565b90611d58611d5383611d29565b61097c565b918252565b3d15611d7757611d6c3d611d46565b903d6000602084013e565b606090565b9091611dbe60009493611daf8695611d92600090565b506040516323b872dd60e01b602082015294859360248501611d05565b60208201810382520382610955565b82602082019151925af1611dd8611dd3611d5d565b911590565b611de25750600190565b8051611df1610f8960006109f1565b14611dfe57805190602001fd5b6040516312171d8360e31b8152600490fd5b600092611dbe8493611e20600090565b50611daf611e2d60405190565b63a9059cbb60e01b60208201529384926024840161126756fea2646970667358221220afc408f428697c7760dfa46b8b5fc18669fb86d4285bea5195f24ad4d8b1d3b364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x26 JUMPI PUSH3 0x14 PUSH3 0x2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7C PUSH3 0x18A DUP3 CODECOPY PUSH2 0x1E7C SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35 PUSH3 0x86 JUMP JUMPDEST JUMP JUMPDEST PUSH3 0x47 PUSH3 0x47 PUSH3 0x47 SWAP3 SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH3 0x47 PUSH1 0x1 PUSH3 0x37 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH3 0x7A PUSH3 0x47 PUSH3 0x82 SWAP3 PUSH3 0x37 JUMP JUMPDEST DUP3 SLOAD PUSH3 0x56 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x90 PUSH3 0xA6 JUMP JUMPDEST PUSH3 0x35 PUSH3 0x9E PUSH3 0x4A JUMP JUMPDEST PUSH1 0x1 PUSH3 0x66 JUMP JUMPDEST PUSH3 0x35 CALLER PUSH3 0x127 JUMP JUMPDEST PUSH3 0x47 SWAP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH3 0x47 SWAP1 SLOAD PUSH3 0xB1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0x5C JUMP JUMPDEST PUSH3 0x47 SWAP1 PUSH3 0xB7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH3 0x47 SWAP1 PUSH3 0xDF JUMP JUMPDEST PUSH3 0x47 SWAP1 PUSH3 0xF5 JUMP JUMPDEST SWAP1 PUSH3 0x11F PUSH3 0x47 PUSH3 0x82 SWAP3 PUSH3 0x100 JUMP JUMPDEST DUP3 SLOAD PUSH3 0xCF JUMP JUMPDEST PUSH3 0x133 PUSH1 0x0 PUSH3 0xC3 JUMP JUMPDEST SWAP1 PUSH3 0x141 DUP2 PUSH1 0x0 PUSH3 0x10B JUMP JUMPDEST PUSH3 0x178 PUSH3 0x171 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH3 0x100 JUMP JUMPDEST SWAP2 PUSH3 0x100 JUMP JUMPDEST SWAP2 PUSH3 0x183 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14DD79A3 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x1F2A1D2F EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4532D776 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x60491D24 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x783451E8 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x903DF806 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xA3969815 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xA69D9C4F EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xA9B07CEA EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xBEF497FD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xCCEBFA3F EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xD4FF493F EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDF41BC5F EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xEE424278 EQ PUSH2 0xED JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x147 JUMPI PUSH2 0x716 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x147 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x14C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x155 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x1C4 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x1D3 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x250 DUP3 DUP3 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 PUSH2 0x178 PUSH2 0x261 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x155 JUMP JUMPDEST SWAP4 PUSH2 0x26F DUP2 PUSH1 0x40 DUP7 ADD PUSH2 0x155 JUMP JUMPDEST SWAP4 PUSH1 0x60 ADD PUSH2 0x155 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x143D JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x147 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x766 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x20F PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x2EE JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x6 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x17B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x187 SWAP1 PUSH2 0x336 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x33F JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x373 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x348 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x1A6 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP1 PUSH2 0x3BE DUP2 DUP6 PUSH2 0x1D3 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x1A6 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 PUSH2 0x1C4B JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x20F PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1C2C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP1 PUSH2 0x418 DUP2 DUP6 PUSH2 0x1D3 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x20F PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FE JUMP JUMPDEST SWAP1 PUSH2 0x1C63 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x162 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x45A PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x469 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x478 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x487 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x4C6 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x4E6 DUP3 DUP3 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 PUSH2 0x178 PUSH2 0x4F7 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x155 JUMP JUMPDEST SWAP4 PUSH2 0x505 DUP2 PUSH1 0x40 DUP7 ADD PUSH2 0x155 JUMP JUMPDEST SWAP4 PUSH1 0x60 ADD PUSH2 0x1D3 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1743 JUMP JUMPDEST SWAP1 PUSH2 0x534 SWAP1 PUSH2 0x336 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x57B JUMPI PUSH2 0x572 PUSH1 0x6 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST PUSH2 0x178 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x178 SWAP1 SLOAD PUSH2 0x580 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x5A1 PUSH1 0x5 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x52A JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x608 JUMPI PUSH2 0x5B5 SWAP3 SWAP4 POP PUSH2 0x558 JUMP JUMPDEST POP SWAP1 PUSH2 0x5C0 DUP3 PUSH2 0x587 JUMP JUMPDEST SWAP2 PUSH2 0x5CD PUSH1 0x1 DUP3 ADD PUSH2 0x587 JUMP JUMPDEST SWAP2 PUSH2 0x5DA PUSH1 0x2 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST SWAP2 PUSH2 0x5E7 PUSH1 0x3 DUP3 ADD PUSH2 0x587 JUMP JUMPDEST SWAP2 PUSH2 0x178 PUSH1 0x5 PUSH2 0x5F9 PUSH1 0x4 DUP6 ADD PUSH2 0x587 JUMP JUMPDEST SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 SWAP5 PUSH2 0x649 PUSH2 0x650 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x642 PUSH1 0xA0 SWAP7 PUSH2 0x63B PUSH2 0x162 SWAP11 PUSH2 0x634 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x67B PUSH2 0x675 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 PUSH2 0x591 JUMP JUMPDEST SWAP3 PUSH2 0x68B SWAP7 SWAP5 SWAP7 SWAP3 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x60C JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 PUSH2 0x6AD DUP5 DUP5 PUSH2 0x1D3 JUMP JUMPDEST SWAP4 PUSH2 0x6BB DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x155 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x67B PUSH2 0x6DA CALLDATASIZE PUSH1 0x4 PUSH2 0x694 JUMP JUMPDEST SWAP2 PUSH2 0x1C7A JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x4C6 PUSH2 0x6F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xEFF JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1B78 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x729 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH2 0x736 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x178 PUSH2 0x178 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x162 PUSH2 0x761 PUSH1 0x0 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x72E JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x779 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x7C2 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x7DB PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x7E7 CALLER PUSH2 0x17B JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x772 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x806 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST ISZERO PUSH2 0x812 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x761 PUSH2 0x87A PUSH2 0x17B PUSH1 0x0 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x80B JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x7FA JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x8B9 PUSH2 0x178 PUSH2 0x8C0 SWAP3 PUSH2 0x336 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x894 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8DC DUP2 PUSH1 0x0 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x90F PUSH2 0x909 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x336 JUMP JUMPDEST SWAP2 PUSH2 0x336 JUMP JUMPDEST SWAP2 PUSH2 0x919 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x92B PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH1 0x6 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x91F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x977 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x989 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x178 PUSH1 0xC0 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x9A2 PUSH2 0x990 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x178 PUSH2 0x99A JUMP JUMPDEST SWAP1 PUSH2 0x9E8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x9E3 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0xC1B JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x178 PUSH2 0x178 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH20 0x5C69BEE701EF814A2B6A3EDD4B1652CB9CC5AA6F PUSH2 0x336 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x1C4 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 PUSH1 0x20 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x89F JUMP JUMPDEST SWAP1 PUSH2 0xA97 PUSH2 0x178 PUSH2 0x8C0 SWAP3 PUSH2 0x9F1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xA7D JUMP JUMPDEST PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xB17 SWAP1 PUSH1 0xA0 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0xABF DUP2 PUSH2 0xAB9 DUP8 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xAD1 PUSH1 0x1 DUP3 ADD PUSH2 0xAB9 PUSH1 0x20 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAE3 PUSH1 0x2 DUP3 ADD PUSH2 0xAB9 PUSH1 0x40 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x3 DUP3 ADD PUSH2 0xAB9 PUSH1 0x60 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB07 PUSH1 0x4 DUP3 ADD PUSH2 0xAB9 PUSH1 0x80 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST ADD SWAP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB2C JUMPI PUSH2 0x162 SWAP2 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x977 JUMPI DUP3 PUSH2 0xB54 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0x558 JUMP JUMPDEST SWAP1 PUSH2 0xB1D JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x57B JUMPI PUSH2 0x572 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x89F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB99 PUSH2 0x178 PUSH2 0x8C0 SWAP4 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xB74 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x977 JUMPI DUP3 PUSH2 0xBC4 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0xB88 JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x162 SWAP5 PUSH2 0xC10 PUSH2 0xC17 SWAP3 PUSH2 0xC09 PUSH1 0x80 SWAP7 PUSH2 0xBF9 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP2 SWAP5 DUP1 SWAP6 PUSH1 0x0 SWAP4 PUSH2 0xC2E DUP6 PUSH2 0x9F1 JUMP JUMPDEST DUP3 EQ PUSH2 0xEED JUMPI PUSH2 0xC42 PUSH5 0x2540BE400 PUSH2 0x9F1 JUMP JUMPDEST DUP7 GT PUSH2 0xEDB JUMPI PUSH2 0xC51 SWAP1 PUSH2 0x336 JUMP JUMPDEST SWAP2 PUSH2 0xC5B DUP4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0xC6B PUSH2 0xC66 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH2 0xC79 PUSH4 0xE6A43905 SWAP3 PUSH2 0x336 JUMP JUMPDEST PUSH4 0xDFE1681 SWAP2 PUSH2 0xC92 PUSH2 0xC8B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xE90 JUMPI PUSH2 0xCC4 SWAP4 DUP11 SWAP4 PUSH2 0xEB9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP2 DUP6 SWAP2 PUSH4 0xD21220A7 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xE90 JUMPI DUP10 SWAP4 PUSH2 0xE95 JUMPI JUMPDEST POP PUSH2 0xCFC PUSH1 0x20 SWAP4 SWAP5 PUSH2 0xD07 PUSH2 0xCEF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xA48 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE90 JUMPI DUP7 SWAP2 PUSH2 0xE62 JUMPI JUMPDEST POP PUSH2 0xD2C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7E7 JUMP JUMPDEST SUB PUSH2 0xE31 JUMPI DUP3 CALLER SWAP5 DUP4 PUSH2 0xD3E ADDRESS PUSH2 0x336 JUMP JUMPDEST SWAP1 PUSH2 0xD4A SWAP2 DUP9 DUP6 PUSH2 0x1D7C JUMP JUMPDEST POP DUP3 DUP8 ADD SWAP7 PUSH2 0xD57 TIMESTAMP DUP10 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP5 PUSH2 0xD64 DUP2 DUP8 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP9 DUP10 MSTORE PUSH1 0x5 SWAP4 PUSH2 0xD7D DUP5 DUP7 PUSH2 0x52A JUMP JUMPDEST SLOAD PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE SWAP5 DUP5 PUSH2 0xD90 DUP6 PUSH2 0x336 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0xDA7 SWAP2 PUSH2 0x52A JUMP JUMPDEST SWAP1 PUSH2 0xDB1 SWAP2 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0xDBC DUP4 PUSH1 0x3 PUSH2 0xFC2 JUMP JUMPDEST POP DUP3 PUSH1 0x2 SWAP3 PUSH2 0xDCB SWAP1 DUP5 PUSH2 0x52A JUMP JUMPDEST SWAP2 DUP3 ADD SWAP1 PUSH2 0xDD8 SWAP2 PUSH2 0xFC2 JUMP JUMPDEST POP ADD SWAP1 PUSH2 0xDE4 SWAP2 PUSH2 0x52A JUMP JUMPDEST SWAP1 MLOAD PUSH2 0xDEF SWAP2 PUSH2 0xBA1 JUMP JUMPDEST MLOAD SWAP3 MLOAD SWAP4 MLOAD PUSH32 0xB173D70D03F0B8AA29E0087D55B3549DB8A6343C5208CE69AF3C0DE4C0836FE7 SWAP5 PUSH2 0xE1F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 PUSH2 0xE2C SWAP5 DUP7 PUSH2 0xBCA JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x7C2 DUP4 PUSH2 0xE3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xA3F6EE1 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xE83 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xE89 JUMPI JUMPDEST PUSH2 0xE7B DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA28 JUMP JUMPDEST CODESIZE PUSH2 0xD19 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE71 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x20 SWAP4 POP PUSH2 0xEB2 PUSH2 0xCFC SWAP2 DUP6 RETURNDATASIZE DUP2 GT PUSH2 0xE89 JUMPI PUSH2 0xE7B DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST SWAP4 POP PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0xED4 SWAP1 DUP3 RETURNDATASIZE DUP2 GT PUSH2 0xE89 JUMPI PUSH2 0xE7B DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B663C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x178 SWAP4 SWAP3 SWAP2 PUSH2 0xF0E PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x2 PUSH2 0x9F1 JUMP JUMPDEST ISZERO PUSH2 0xF24 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0xF76 PUSH1 0x1 PUSH2 0x587 JUMP JUMPDEST PUSH2 0xF94 PUSH2 0xF81 PUSH2 0xF13 JUMP JUMPDEST SWAP2 DUP3 SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ ISZERO PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x1 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x1 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0xF94 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x178 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST SWAP1 PUSH2 0xFEF PUSH2 0xF89 PUSH2 0xFEA PUSH2 0xFE5 PUSH1 0x0 PUSH2 0x178 SWAP7 PUSH2 0xFDD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SWAP5 PUSH2 0x32D JUMP JUMPDEST PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x1032 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB99 PUSH2 0x178 PUSH2 0x8C0 SWAP4 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x977 JUMPI DUP3 PUSH2 0x1026 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x1043 PUSH2 0x103F DUP4 DUP4 PUSH2 0x107C JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1070 SWAP2 PUSH2 0x106B SWAP1 PUSH1 0x1 PUSH2 0x1064 DUP5 PUSH2 0x1060 DUP5 DUP3 PUSH2 0x1003 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST SWAP4 ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x109A SWAP2 PUSH1 0x1 PUSH2 0x1095 SWAP3 PUSH2 0x108E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x10A7 PUSH2 0xF89 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST EQ ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x10C0 SWAP4 SWAP3 SWAP2 PUSH2 0x10BB PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x162 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x10C8 JUMP JUMPDEST SWAP1 PUSH2 0x10ED PUSH5 0x2540BE400 PUSH2 0x9F1 JUMP JUMPDEST DUP5 GT PUSH2 0xEDB JUMPI PUSH2 0x112D PUSH2 0x1127 PUSH1 0x2 SWAP3 PUSH2 0x1122 PUSH2 0x111B PUSH2 0x1109 CALLER SWAP1 JUMP JUMPDEST SWAP6 PUSH2 0x1114 DUP8 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD SWAP7 PUSH2 0x336 JUMP JUMPDEST DUP1 SWAP7 PUSH2 0x52A JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x1153 PUSH2 0xF89 PUSH2 0x114F PUSH2 0x114B DUP5 PUSH2 0x1146 PUSH1 0x5 SWAP9 DUP10 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP6 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP2 DUP3 ISZERO PUSH2 0x11A3 JUMPI JUMPDEST POP POP PUSH2 0x1191 JUMPI PUSH1 0x3 ADD SWAP1 PUSH2 0x1170 DUP3 PUSH2 0x587 JUMP JUMPDEST DUP2 LT PUSH2 0x117F JUMPI PUSH2 0x162 SWAP2 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9F317A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x459808CF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x11CC SWAP2 SWAP3 POP PUSH2 0x11BF PUSH2 0x7E7 SWAP2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ ISZERO CODESIZE DUP1 PUSH2 0x115D JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0x10AC JUMP JUMPDEST SWAP1 PUSH2 0x10C0 SWAP4 SWAP3 SWAP2 PUSH2 0x11F0 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1218 JUMPI JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB88 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x125F PUSH2 0x1259 DUP4 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0x1233 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH1 0x0 SWAP1 PUSH2 0x1294 DUP3 PUSH2 0x9F1 JUMP JUMPDEST DUP5 EQ PUSH2 0xEED JUMPI PUSH2 0x1122 SWAP5 PUSH1 0x2 SWAP1 CALLER SWAP3 PUSH2 0x12C8 PUSH2 0x1127 DUP4 PUSH2 0x12BF DUP7 PUSH2 0x12B8 DUP10 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD SWAP5 PUSH2 0x336 JUMP JUMPDEST SWAP11 DUP12 DUP1 SWAP6 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x12E5 PUSH2 0xF89 PUSH2 0x12E1 PUSH2 0x114B DUP5 PUSH2 0x1146 PUSH1 0x5 SWAP8 DUP9 PUSH2 0x52A JUMP JUMPDEST SWAP9 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1415 JUMPI JUMPDEST POP PUSH2 0x1191 JUMPI PUSH2 0x1300 PUSH1 0x3 DUP7 ADD PUSH2 0x587 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x117F JUMPI DUP3 DUP7 SWAP5 DUP9 SWAP3 PUSH2 0x1330 PUSH1 0x1 PUSH2 0x134C SWAP10 ADD PUSH2 0x1095 PUSH2 0x132A DUP11 PUSH2 0x1325 DUP5 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST DUP3 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x133C PUSH2 0xF89 DUP5 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1384 JUMPI JUMPDEST POP POP POP SWAP1 POP PUSH2 0x1E10 JUMP JUMPDEST POP PUSH32 0xBACE9FD79D5EA02ED8B43FA96AF07E4E8F859A2F71FF878C748F5C22C5780284 SWAP2 PUSH2 0xE2C PUSH2 0x137B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x13DE SWAP1 PUSH2 0x13D5 PUSH2 0x13A3 PUSH2 0x178 DUP8 DUP10 PUSH2 0x139D DUP10 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD PUSH2 0x52A JUMP JUMPDEST SWAP2 PUSH2 0xBC4 PUSH2 0x13CE PUSH2 0x1127 PUSH2 0x13C8 PUSH2 0x13B8 DUP8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13C2 PUSH1 0x1 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP7 PUSH2 0xB5A JUMP JUMPDEST SWAP2 DUP5 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x1060 DUP2 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x13EA PUSH2 0xF89 DUP4 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x13F6 JUMPI JUMPDEST DUP1 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x1406 SWAP3 PUSH2 0x140B SWAP6 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1449 JUMP JUMPDEST POP CODESIZE DUP6 DUP3 DUP3 PUSH2 0x13F0 JUMP JUMPDEST DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1435 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7E7 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x12EF JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0x11E1 JUMP JUMPDEST SWAP1 PUSH2 0x1464 PUSH2 0xF89 PUSH2 0xFEA PUSH2 0xFE5 PUSH1 0x0 PUSH2 0x178 SWAP7 PUSH2 0xFDD PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xFF4 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x125F PUSH2 0x148F DUP4 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP1 PUSH2 0x14A6 PUSH2 0x1095 DUP3 PUSH1 0x1 DUP6 ADD PUSH2 0x102C JUMP JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0x14B2 DUP5 PUSH2 0x9F1 JUMP JUMPDEST DUP3 EQ PUSH2 0x14FF JUMPI PUSH2 0x178 SWAP3 PUSH2 0x1505 SWAP5 SWAP3 PUSH2 0x1510 SWAP3 PUSH2 0x150A PUSH1 0x1 SWAP8 DUP9 SWAP4 PUSH2 0x14DF PUSH2 0x14D9 DUP7 PUSH2 0x9F1 JUMP JUMPDEST DUP3 PUSH2 0x120B JUMP JUMPDEST DUP9 DUP6 ADD SWAP2 PUSH2 0x14F7 PUSH2 0x14EE DUP5 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13C2 DUP10 PUSH2 0x9F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x1515 JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1475 JUMP JUMPDEST ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x1026 PUSH2 0x1538 PUSH2 0x1540 SWAP5 PUSH2 0x152F PUSH2 0x1127 PUSH2 0x106B SWAP6 DUP10 PUSH2 0xB5A JUMP JUMPDEST SWAP3 DUP4 SWAP2 DUP9 PUSH2 0xB5A JUMP JUMPDEST DUP9 DUP9 ADD PUSH2 0x102C JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x14FF JUMP JUMPDEST SWAP1 PUSH2 0x9E8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1558 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x160B JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1218 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x15F2 PUSH1 0x5 PUSH2 0x157B PUSH2 0x990 JUMP JUMPDEST SWAP5 PUSH2 0x158C PUSH2 0x1588 DUP3 PUSH2 0x587 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x15A2 PUSH2 0x159B PUSH1 0x1 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x15B8 PUSH2 0x15B1 PUSH1 0x2 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x15CE PUSH2 0x15C7 PUSH1 0x3 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x15E4 PUSH2 0x15DD PUSH1 0x4 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x156A JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x1619 DUP4 PUSH2 0x9F1 JUMP JUMPDEST DUP6 EQ PUSH2 0xEED JUMPI PUSH2 0x164E PUSH2 0x1127 PUSH1 0x2 SWAP4 PUSH2 0x1122 PUSH2 0x1647 PUSH2 0x1635 CALLER SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x1640 DUP9 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD SWAP6 PUSH2 0x336 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH2 0x166C PUSH2 0xF89 PUSH2 0x1668 PUSH2 0x114B DUP5 PUSH2 0x1146 DUP9 DUP9 PUSH2 0x52A JUMP JUMPDEST SWAP8 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1707 JUMPI JUMPDEST POP PUSH2 0x1191 JUMPI PUSH2 0x16FF PUSH2 0x16BE PUSH2 0x16B6 DUP8 PUSH2 0x169C PUSH2 0x178 SWAP10 PUSH2 0x1695 ADDRESS PUSH2 0x336 JUMP JUMPDEST DUP9 DUP9 PUSH2 0x1D7C JUMP JUMPDEST POP PUSH2 0x1095 PUSH2 0x132A PUSH1 0x1 DUP11 ADD SWAP3 PUSH2 0x16B1 DUP5 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x155D JUMP JUMPDEST SWAP5 DUP7 ADD PUSH2 0x587 JUMP JUMPDEST PUSH2 0x16CA PUSH1 0x3 DUP8 ADD PUSH2 0x587 JUMP JUMPDEST SWAP1 PUSH32 0xB173D70D03F0B8AA29E0087D55B3549DB8A6343C5208CE69AF3C0DE4C0836FE7 SWAP6 PUSH2 0x16F6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP6 DUP7 PUSH2 0xBCA JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x1602 JUMP JUMPDEST DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1727 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7E7 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x1676 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP4 SWAP3 SWAP2 PUSH2 0x173E PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x1548 JUMP JUMPDEST SWAP1 PUSH2 0x1759 PUSH2 0x17B PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1762 DUP6 PUSH2 0x336 JUMP JUMPDEST EQ PUSH2 0x186A JUMPI CALLER SWAP4 PUSH1 0x2 PUSH2 0x1781 PUSH2 0x1127 DUP5 PUSH2 0x1122 DUP8 DUP6 PUSH2 0x139D DUP13 DUP3 PUSH2 0x52A JUMP JUMPDEST SWAP4 PUSH1 0x5 SWAP5 PUSH2 0x179C PUSH2 0xF89 PUSH2 0x12E1 PUSH2 0x114B DUP5 PUSH2 0x1146 DUP8 DUP13 PUSH2 0x52A JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x1843 JUMPI JUMPDEST PUSH2 0x1191 JUMPI PUSH2 0x162 SWAP7 PUSH2 0x1804 PUSH2 0x1822 SWAP6 PUSH2 0x17EF PUSH2 0x17DD PUSH2 0x178 DUP7 DUP9 PUSH2 0x17CC PUSH2 0x178 DUP13 DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x17D6 DUP4 DUP3 PUSH2 0xFC2 JUMP JUMPDEST POP ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0x17E9 PUSH1 0x4 DUP13 ADD PUSH2 0x587 JUMP JUMPDEST SWAP1 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x13D5 PUSH2 0x13A3 PUSH2 0x178 DUP7 DUP9 PUSH2 0x139D DUP9 DUP3 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x1813 PUSH2 0xF89 DUP4 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1829 JUMPI JUMPDEST POP POP POP POP PUSH2 0x336 JUMP JUMPDEST SWAP2 ADD PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x1406 SWAP3 PUSH2 0x1839 SWAP6 PUSH2 0x52A JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1819 JUMP JUMPDEST POP DUP6 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1863 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x7E7 JUMP JUMPDEST EQ ISZERO PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCF04B1BB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x10C0 SWAP4 SWAP3 SWAP2 PUSH2 0x188B PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x14E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x1890 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x1898 JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x162 SWAP5 PUSH2 0x18EF PUSH2 0xC17 SWAP3 PUSH2 0xC09 PUSH1 0x80 SWAP7 PUSH2 0x18E8 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1917 PUSH2 0xC66 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x192A PUSH2 0x7E7 PUSH2 0x17B DUP9 PUSH2 0x74B JUMP JUMPDEST EQ PUSH2 0x1B66 JUMPI PUSH2 0x1938 DUP6 PUSH2 0x9F1 JUMP JUMPDEST DUP5 EQ PUSH2 0xEED JUMPI PUSH1 0x2 CALLER SWAP4 PUSH2 0x1968 PUSH2 0x1127 DUP3 PUSH2 0x1122 PUSH2 0x1961 DUP7 PUSH2 0x195A DUP12 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD SWAP9 PUSH2 0x336 JUMP JUMPDEST DUP1 SWAP9 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH2 0x1986 PUSH2 0xF89 PUSH2 0x1982 PUSH2 0x114B DUP5 PUSH2 0x1146 DUP12 DUP9 PUSH2 0x52A JUMP JUMPDEST SWAP7 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1B3E JUMPI JUMPDEST POP PUSH2 0x1191 JUMPI DUP5 DUP8 DUP6 SWAP3 PUSH2 0x19B0 PUSH1 0x1 DUP8 ADD PUSH2 0x1095 PUSH2 0x132A DUP13 PUSH2 0x1325 DUP5 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x19BC PUSH2 0xF89 DUP5 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1AF3 JUMPI JUMPDEST POP POP POP POP POP PUSH4 0x95EA7B3 PUSH1 0x20 PUSH2 0x19FF PUSH2 0x19E6 PUSH2 0xC66 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1A0A DUP9 PUSH2 0x19F4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x1267 JUMP JUMPDEST SUB DUP2 DUP10 DUP8 GAS CALL DUP1 ISZERO PUSH2 0xE90 JUMPI PUSH2 0x1AC7 JUMPI JUMPDEST POP PUSH2 0x1A31 PUSH2 0xC66 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A43 PUSH1 0x3 PUSH4 0xB7DF1D25 SWAP3 ADD PUSH2 0x587 JUMP JUMPDEST SWAP4 PUSH2 0x1A5A TIMESTAMP PUSH2 0x1A54 PUSH3 0x15180 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH2 0x155D JUMP JUMPDEST SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x147 JUMPI PUSH2 0x1A8F PUSH2 0x1A84 SWAP4 DUP10 SWAP8 SWAP4 DUP9 SWAP5 PUSH2 0x1A77 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x18B9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xE90 JUMPI PUSH2 0x1AA1 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x162 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x1AC0 JUMPI JUMPDEST PUSH2 0x1AB8 DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0x1AE7 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1AEC JUMPI JUMPDEST PUSH2 0x1ADF DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x1B0C SWAP1 PUSH2 0x13D5 PUSH2 0x13A3 PUSH2 0x178 DUP8 DUP10 PUSH2 0x139D DUP10 DUP3 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1B18 PUSH2 0xF89 DUP4 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1B24 JUMPI JUMPDEST DUP4 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x1406 SWAP3 PUSH2 0x1B34 SWAP6 PUSH2 0x52A JUMP JUMPDEST POP CODESIZE DUP3 DUP5 DUP8 PUSH2 0x1B1E JUMP JUMPDEST DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1B5E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x7E7 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2ED9BF53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x1060 PUSH2 0x178 SWAP2 PUSH2 0x1B93 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x178 PUSH1 0x3 JUMPDEST PUSH2 0x1BB7 PUSH1 0x0 PUSH2 0x178 SWAP3 PUSH2 0x1BB2 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178 SWAP2 PUSH2 0x1BC5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH1 0x3 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x1C09 PUSH2 0x1C04 PUSH2 0x178 SWAP4 PUSH2 0x1BFF PUSH1 0x0 PUSH2 0x1C0E SWAP6 PUSH2 0x1BB2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x0 PUSH2 0x1127 SWAP3 PUSH2 0x1C25 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x1BA1 PUSH1 0x0 PUSH2 0x76E PUSH2 0x178 PUSH2 0x178 SWAP5 PUSH2 0x1C43 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x52A JUMP JUMPDEST SWAP1 PUSH2 0x1BD6 PUSH1 0x0 PUSH2 0x76E PUSH2 0x178 PUSH2 0x178 SWAP6 PUSH2 0x1C43 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH2 0x1060 SWAP2 PUSH2 0x139D PUSH2 0x178 PUSH1 0x2 SWAP3 DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x114B PUSH2 0x1CA4 PUSH2 0x1127 PUSH2 0x139D SWAP7 SWAP6 PUSH2 0x1122 DUP7 PUSH2 0x1CB0 SWAP7 PUSH2 0x1C98 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 SWAP11 DUP12 SWAP2 DUP3 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1146 PUSH1 0x5 SWAP5 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1CB9 DUP2 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1CD0 PUSH2 0x1CC8 PUSH1 0x1 DUP5 ADD PUSH2 0x587 JUMP JUMPDEST SWAP6 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST SWAP4 PUSH2 0x1CFC PUSH2 0x1CE0 PUSH1 0x3 DUP6 ADD PUSH2 0x587 JUMP JUMPDEST SWAP5 PUSH2 0x1CED PUSH1 0x4 DUP7 ADD PUSH2 0x587 JUMP JUMPDEST SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x977 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D58 PUSH2 0x1D53 DUP4 PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1D77 JUMPI PUSH2 0x1D6C RETURNDATASIZE PUSH2 0x1D46 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1DBE PUSH1 0x0 SWAP5 SWAP4 PUSH2 0x1DAF DUP7 SWAP6 PUSH2 0x1D92 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP5 DUP6 SWAP4 PUSH1 0x24 DUP6 ADD PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x955 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP3 ADD SWAP2 MLOAD SWAP3 GAS CALL PUSH2 0x1DD8 PUSH2 0x1DD3 PUSH2 0x1D5D JUMP JUMPDEST SWAP2 ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1DE2 JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1DF1 PUSH2 0xF89 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1DFE JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0x1DBE DUP5 SWAP4 PUSH2 0x1E20 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DAF PUSH2 0x1E2D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x24 DUP5 ADD PUSH2 0x1267 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xC4 ADDMOD DELEGATECALL 0x28 PUSH10 0x7C7760DFA46B8B5FC186 PUSH10 0xFB86D4285BEA5195F24A 0xD4 0xD8 0xB1 0xD3 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1000:12696:23:-:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;1676:41:2;1716:1;;;:::i;:::-;;-1:-1:-1;;1716:1:2;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;1797:53::-;;;:::i;:::-;1821:22;1831:12;;:::i;:::-;1821:22;;:::i;912:63:0:-;955:12;719:10:8;955:12:0;:::i;1000:12696:23:-;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1000:12696:23;;1716:1:2;1000:12696:23;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;2426:187:0:-;2518:6;;;:::i;:::-;2534:17;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;1000:12696:23;;;;2566:40:0;;;;2426:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":688,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":2587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_addresst_address":{"entryPoint":1022,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_addresst_uint256":{"entryPoint":1684,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_addresst_uint256":{"entryPoint":932,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_addresst_uint256t_uint256t_address_payable":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_bool_fromMemory":{"entryPoint":6309,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_contract_IERC20":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_contract_IERC20t_uint256t_uint256t_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_contract_IERC20t_uint256t_uint256t_uint256":{"entryPoint":572,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_contract_IUniswapV2Migrator":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address":{"entryPoint":480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_address_fromMemory":{"entryPoint":2600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_contract_IUniswapV2Migrator":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_uint256":{"entryPoint":356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_address_address":{"entryPoint":2632,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":7429,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint256_uint256_uint256":{"entryPoint":3018,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":4711,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256_address_uint256":{"entryPoint":6329,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_contract_IUniswapV2Migrator":{"entryPoint":831,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_245f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_9924":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_TokenLock":{"entryPoint":1085,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_struct_TokenLock_memory_ptr":{"entryPoint":1175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_contract_IUniswapV2Migrator":{"entryPoint":840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_stringliteral_245f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral_ebf7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_uint256_uint256_uint256_uint256_uint256_address":{"entryPoint":1548,"id":null,"parameterSlots":7,"returnSlots":1},"allocate_and_zero_memory_struct_struct_TokenLock":{"entryPoint":2458,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":2428,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":7494,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_struct_struct_TokenLock":{"entryPoint":2448,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":7465,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_struct_TokenLock_storage_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_array_struct_TokenLock_storage_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_bytes":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_pop_array_bytes32_dyn_storage_ptr":{"entryPoint":5237,"id":null,"parameterSlots":1,"returnSlots":0},"array_pop_array_uint256_dyn_storage_ptr":{"entryPoint":4671,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_bytes32_to_array_bytes32_dyn_storage_ptr":{"entryPoint":4099,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_struct_TokenLock_to_array_struct_TokenLock_storage_dyn_ptr":{"entryPoint":2865,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_uint256_to_array_uint256_dyn_storage_ptr":{"entryPoint":2977,"id":null,"parameterSlots":2,"returnSlots":0},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":5469,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":4619,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":379,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_contract_IUniswapV2Migrator":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"constant_ENTERED":{"entryPoint":3859,"id":null,"parameterSlots":0,"returnSlots":1},"constant_NOT_ENTERED":{"entryPoint":3995,"id":null,"parameterSlots":0,"returnSlots":1},"constant_UNISWAP_V2_FACTORY":{"entryPoint":2558,"id":null,"parameterSlots":0,"returnSlots":1},"convert_bytes32_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_bytes32_to_uint256":{"entryPoint":7131,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_IUniswapV2Migrator_to_address":{"entryPoint":822,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_address":{"entryPoint":1867,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint160":{"entryPoint":1854,"id":null,"parameterSlots":1,"returnSlots":1},"convert_rational_by_to_uint256":{"entryPoint":2545,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_TokenLock_storage_ptr_to_struct_TokenLock":{"entryPoint":5634,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_address":{"entryPoint":813,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint160":{"entryPoint":793,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint160_to_uint256":{"entryPoint":4016,"id":null,"parameterSlots":1,"returnSlots":1},"convert_uint256_to_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_struct_to_storage_from_struct_TokenLock_to_struct_TokenLock":{"entryPoint":2718,"id":null,"parameterSlots":2,"returnSlots":0},"external_fun_getLockedTokenAtIndex":{"entryPoint":395,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getNumLockedTokens":{"entryPoint":723,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getNumLocksForToken":{"entryPoint":500,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getUserLockForTokenAtIndex":{"entryPoint":1732,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getUserLockedTokenAtIndex":{"entryPoint":967,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getUserNumLockedTokens":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getUserNumLocksForToken":{"entryPoint":1057,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_incrementLock":{"entryPoint":1191,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_lockLPToken":{"entryPoint":1760,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_migrate":{"entryPoint":1786,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_migrator":{"entryPoint":856,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":895,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_relock":{"entryPoint":660,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":699,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setMigrator":{"entryPoint":543,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenLocks":{"entryPoint":1631,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferLockOwnership":{"entryPoint":1294,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":1814,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_withdraw":{"entryPoint":632,"id":null,"parameterSlots":0,"returnSlots":0},"extract_from_storage_value_dynamict_contract_IUniswapV2Migrator":{"entryPoint":750,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_dynamict_uint256":{"entryPoint":4296,"id":null,"parameterSlots":2,"returnSlots":1},"extract_from_storage_value_offsett_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_uint256":{"entryPoint":1408,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":7517,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":2389,"id":null,"parameterSlots":2,"returnSlots":0},"fun__transferOwnership":{"entryPoint":2244,"id":111,"parameterSlots":1,"returnSlots":0},"fun_add":{"entryPoint":4146,"id":1971,"parameterSlots":2,"returnSlots":1},"fun_add_2271":{"entryPoint":4034,"id":2271,"parameterSlots":2,"returnSlots":1},"fun_at":{"entryPoint":7187,"id":2105,"parameterSlots":2,"returnSlots":1},"fun_at_2367":{"entryPoint":7140,"id":2367,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":1990,"id":54,"parameterSlots":0,"returnSlots":0},"fun_contains":{"entryPoint":4220,"id":2074,"parameterSlots":2,"returnSlots":1},"fun_getLockedTokenAtIndex":{"entryPoint":7115,"id":7143,"parameterSlots":1,"returnSlots":1},"fun_getNumLockedTokens":{"entryPoint":7067,"id":7129,"parameterSlots":0,"returnSlots":1},"fun_getNumLocksForToken":{"entryPoint":7044,"id":7118,"parameterSlots":1,"returnSlots":1},"fun_getUserLockForTokenAtIndex":{"entryPoint":7290,"id":7269,"parameterSlots":3,"returnSlots":6},"fun_getUserLockedTokenAtIndex":{"entryPoint":7243,"id":7188,"parameterSlots":2,"returnSlots":1},"fun_getUserNumLockedTokens":{"entryPoint":7212,"id":7164,"parameterSlots":1,"returnSlots":1},"fun_getUserNumLocksForToken":{"entryPoint":7267,"id":7212,"parameterSlots":2,"returnSlots":1},"fun_incrementLock":{"entryPoint":5935,"id":6792,"parameterSlots":4,"returnSlots":1},"fun_incrementLock_inner":{"entryPoint":5643,"id":null,"parameterSlots":5,"returnSlots":1},"fun_length":{"entryPoint":null,"id":2088,"parameterSlots":1,"returnSlots":1},"fun_length_2340":{"entryPoint":null,"id":2340,"parameterSlots":1,"returnSlots":1},"fun_lockLPToken":{"entryPoint":3839,"id":6439,"parameterSlots":4,"returnSlots":1},"fun_lockLPToken_inner":{"entryPoint":3099,"id":null,"parameterSlots":5,"returnSlots":1},"fun_migrate":{"entryPoint":7032,"id":7104,"parameterSlots":4,"returnSlots":0},"fun_migrate_inner":{"entryPoint":6399,"id":null,"parameterSlots":4,"returnSlots":0},"fun_msgSender":{"entryPoint":null,"id":1068,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":4005,"id":273,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":3945,"id":265,"parameterSlots":0,"returnSlots":0},"fun_owner":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"fun_relock":{"entryPoint":4565,"id":6519,"parameterSlots":4,"returnSlots":0},"fun_relock_inner":{"entryPoint":4318,"id":null,"parameterSlots":4,"returnSlots":0},"fun_remove":{"entryPoint":5269,"id":2055,"parameterSlots":2,"returnSlots":1},"fun_remove_2298":{"entryPoint":5193,"id":2298,"parameterSlots":2,"returnSlots":1},"fun_renounceOwnership":{"entryPoint":1894,"id":68,"parameterSlots":0,"returnSlots":0},"fun_renounceOwnership_inner":{"entryPoint":1876,"id":null,"parameterSlots":0,"returnSlots":0},"fun_safeTransfer":{"entryPoint":7696,"id":7395,"parameterSlots":3,"returnSlots":1},"fun_safeTransferFrom":{"entryPoint":7548,"id":7351,"parameterSlots":4,"returnSlots":1},"fun_setMigrator":{"entryPoint":2358,"id":6236,"parameterSlots":1,"returnSlots":0},"fun_setMigrator_inner":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"fun_transferLockOwnership":{"entryPoint":5955,"id":6931,"parameterSlots":4,"returnSlots":0},"fun_transferOwnership":{"entryPoint":2187,"id":91,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership_inner":{"entryPoint":2150,"id":null,"parameterSlots":1,"returnSlots":0},"fun_withdraw":{"entryPoint":5181,"id":6679,"parameterSlots":4,"returnSlots":0},"fun_withdraw_inner":{"entryPoint":4740,"id":null,"parameterSlots":4,"returnSlots":0},"getter_fun_migrator":{"entryPoint":781,"id":6204,"parameterSlots":0,"returnSlots":1},"getter_fun_tokenLocks":{"entryPoint":1425,"id":6201,"parameterSlots":2,"returnSlots":6},"mapping_index_access_mapping_address_array_struct_TokenLock_storage_dyn_of_address":{"entryPoint":1322,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_uint256_of_bytes32":{"entryPoint":4140,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":5448,"id":250,"parameterSlots":5,"returnSlots":1},"modifier_nonReentrant_6249":{"entryPoint":2515,"id":250,"parameterSlots":5,"returnSlots":1},"modifier_nonReentrant_6452":{"entryPoint":4268,"id":250,"parameterSlots":4,"returnSlots":0},"modifier_nonReentrant_6532":{"entryPoint":4577,"id":250,"parameterSlots":4,"returnSlots":0},"modifier_nonReentrant_6944":{"entryPoint":6268,"id":250,"parameterSlots":4,"returnSlots":0},"modifier_onlyOwner":{"entryPoint":1838,"id":31,"parameterSlots":0,"returnSlots":0},"modifier_onlyOwner_6229":{"entryPoint":2335,"id":31,"parameterSlots":1,"returnSlots":0},"modifier_onlyOwner_74":{"entryPoint":2042,"id":31,"parameterSlots":1,"returnSlots":0},"panic_error_0x00":{"entryPoint":2663,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":4597,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":4637,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1346,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2367,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_TokenLock":{"entryPoint":5482,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_dynamic_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_contract_IUniswapV2Migrator":{"entryPoint":770,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_dynamic_uint256":{"entryPoint":4307,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_split_offset_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_contract_IUniswapV2Migrator":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_split_offset_uint256":{"entryPoint":1415,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":1906,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_245f":{"entryPoint":2059,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ebf7":{"entryPoint":3869,"id":null,"parameterSlots":1,"returnSlots":0},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":327,"id":null,"parameterSlots":0,"returnSlots":0},"revert_forward":{"entryPoint":2620,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_224":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_struct_TokenLock_dyn":{"entryPoint":1368,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn_ptr":{"entryPoint":2906,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_bytes32":{"entryPoint":5225,"id":null,"parameterSlots":2,"returnSlots":0},"storage_set_to_zero_uint256":{"entryPoint":4659,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2932,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_shift":{"entryPoint":2685,"id":null,"parameterSlots":2,"returnSlots":1},"update_byte_slice_shift_0":{"entryPoint":2196,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_bytes32_to_bytes32":{"entryPoint":4084,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":2217,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_contract_IUniswapV2Migrator_to_contract_IUniswapV2Migrator":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_struct_TokenLock_to_struct_TokenLock":{"entryPoint":2845,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_uint256_to_uint256":{"entryPoint":2952,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_address":{"entryPoint":452,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":6288,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_contract_IUniswapV2Migrator":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_uint256":{"entryPoint":332,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"zero_value_for_split_address":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_bytes":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"zero_value_for_split_struct_TokenLock":{"entryPoint":2507,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806314dd79a3146101425780631f2a1d2f1461013d57806323cf3118146101385780634532d7761461013357806360491d241461012e578063715018a614610129578063783451e8146101245780637cd07e471461011f5780638da5cb5b1461011a578063903df80614610115578063a396981514610110578063a69d9c4f1461010b578063a9b07cea14610106578063bef497fd14610101578063ccebfa3f146100fc578063d4ff493f146100f7578063df41bc5f146100f2578063ee424278146100ed5763f2fde38b0361014757610716565b6106fa565b6106e0565b6106c4565b61065f565b61050e565b6104a7565b610421565b6103e3565b6103c7565b61037f565b610358565b6102d3565b6102bb565b610294565b610278565b61021f565b6101f4565b61018b565b600080fd5b805b0361014757565b905035906101628261014c565b565b906020828203126101475761017891610155565b90565b6001600160a01b031690565b9052565b34610147576101c06101a66101a1366004610164565b611bcb565b604051918291826001600160a01b03909116815260200190565b0390f35b6001600160a01b03811661014e565b90503590610162826101c4565b9060208282031261014757610178916101d3565b34610147576101c061020f61020a3660046101e0565b611b84565b6040519182918290815260200190565b34610147576102376102323660046101e0565b610936565b604051005b6080818303126101475761025082826101d3565b926101786102618460208501610155565b9361026f8160408601610155565b93606001610155565b346101475761023761028b36600461023c565b9291909161143d565b34610147576102376102a736600461023c565b929190916111d5565b600091031261014757565b34610147576102cb3660046102b0565b610237610766565b34610147576102e33660046102b0565b6101c061020f611b9b565b610178916008021c6001600160a01b031690565b9061017891546102ee565b61017860006006610302565b6101789061017b906001600160a01b031682565b61017890610319565b6101789061032d565b61018790610336565b602081019291610162919061033f565b34610147576103683660046102b0565b6101c061037361030d565b60405191829182610348565b346101475761038f3660046102b0565b6101c06101a66000546001600160a01b031690565b919060408382031261014757610178906103be81856101d3565b93602001610155565b34610147576101c06101a66103dd3660046103a4565b90611c4b565b34610147576101c061020f6103f93660046101e0565b611c2c565b9190604083820312610147576101789061041881856101d3565b936020016101d3565b34610147576101c061020f6104373660046103fe565b90611c63565b80518252610162919060a090819061045a60208201516020860152565b61046960408201516040860152565b61047860608201516060860152565b61048760808201516080860152565b01516001600160a01b0316910152565b60c081019291610162919061043d565b34610147576101c06104c66104bd36600461023c565b9291909161172f565b60405191829182610497565b608081830312610147576104e682826101d3565b926101786104f78460208501610155565b936105058160408601610155565b936060016101d3565b34610147576102376105213660046104d2565b92919091611743565b9061053490610336565b600052602052604060002090565b634e487b7160e01b600052603260045260246000fd5b805482101561057b57610572600691600052602060002090565b91020190600090565b610542565b6101789081565b6101789054610580565b91906105a160059360009461052a565b8054821015610608576105b5929350610558565b50906105c082610587565b916105cd60018201610587565b916105da60028301610587565b916105e760038201610587565b9161017860056105f960048501610587565b9301546001600160a01b031690565b8380fd5b91946106496106509298979561064260a09661063b6101629a61063460c08a019e60008b0152565b6020890152565b6040870152565b6060850152565b6080830152565b01906001600160a01b03169052565b34610147576101c061067b6106753660046103a4565b90610591565b9261068b96949692919260405190565b9687968761060c565b9091606082840312610147576101786106ad84846101d3565b936106bb81602086016101d3565b93604001610155565b34610147576101c061067b6106da366004610694565b91611c7a565b6101c06104c66106f13660046104d2565b92919091610eff565b346101475761023761070d36600461023c565b92919091611b78565b34610147576102376107293660046101e0565b61088b565b6107366107c6565b610162610754565b61017b6101786101789290565b6101789061073e565b610162610761600061074b565b6108c4565b61016261072e565b0190565b1561077957565b60405162461bcd60e51b8152806107c2600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b6101626107db6000546001600160a01b031690565b6107f46107e73361017b565b916001600160a01b031690565b14610772565b610162906108066107c6565b610866565b1561081257565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6101629061076161087a61017b600061074b565b6001600160a01b038316141561080b565b610162906107fa565b906001600160a01b03905b9181191691161790565b906108b96101786108c092610336565b8254610894565b9055565b6000546001600160a01b0316906108dc8160006108a9565b61090f6109097f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610336565b91610336565b9161091960405190565b600090a3565b6101629061092b6107c6565b6101629060066108a9565b6101629061091f565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761097757604052565b61093f565b9061016261098960405190565b9283610955565b61017860c061097c565b6109a2610990565b906000825260208080808080870160008152016000815201600081520160008152016000905250565b61017861099a565b906109e8949392916109e3610f69565b610c1b565b90610162610fa5565b6101786101786101789290565b610178735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f610336565b90505190610162826101c4565b906020828203126101475761017891610a1b565b6040513d6000823e3d90fd5b6001600160a01b03909116815260408101929161016291602090610650565b634e487b7160e01b600052600060045260246000fd5b906000199061089f565b90610a976101786108c0926109f1565b8254610a7d565b6101629190610b179060a090600590610abf81610ab9875190565b90610a87565b610ad160018201610ab9602088015190565b610ae360028201610ab9604088015190565b610af560038201610ab9606088015190565b610b0760048201610ab9608088015190565b019201516001600160a01b031690565b906108a9565b9190610b2c5761016291610a9e565b610a67565b90815491600160401b8310156109775782610b5491600161016295018155610558565b90610b1d565b805482101561057b57610572600191600052602060002090565b9160001960089290920291821b911b61089f565b9190610b996101786108c0936109f1565b908354610b74565b90815491600160401b8310156109775782610bc491600161016295018155610b5a565b90610b88565b9095949261016294610c10610c1792610c09608096610bf960a088019c60008901906001600160a01b03169052565b6001600160a01b03166020870152565b6040850152565b6060830152565b0152565b94939091948095600093610c2e856109f1565b8214610eed57610c426402540be4006109f1565b8611610edb57610c5190610336565b91610c5b83610336565b610c6b610c666109fe565b610336565b610c7963e6a4390592610336565b630dfe168191610c92610c8b60405190565b9360e01b90565b8352602083600481855afa918215610e9057610cc4938a93610eb9575b5060405193602091859163d21220a760e01b90565b825260049082905afa928315610e90578993610e95575b50610cfc60209394610d07610cef60405190565b9687958694859460e01b90565b845260048401610a48565b03915afa908115610e90578691610e62575b50610d2c6001600160a01b0385166107e7565b03610e315782339483610d3e30610336565b90610d4a918885611d7c565b5082870196610d57428952565b6020840194610d64818752565b604085015260608401988952600593610d7d848661052a565b54608082019081529484610d9085610336565b6001600160a01b031660a0840152610da79161052a565b90610db191610b31565b610dbc836003610fc2565b5082600292610dcb908461052a565b91820190610dd891610fc2565b500190610de49161052a565b9051610def91610ba1565b51925193517fb173d70d03f0b8aa29e0087d55b3549db8a6343c5208ce69af3c0de4c0836fe794610e1f60405190565b948594610e2c9486610bca565b0390a1565b6107c283610e3e60405190565b630a3f6ee160e21b8152918291600483016001600160a01b03909116815260200190565b610e83915060203d8111610e89575b610e7b8183610955565b810190610a28565b38610d19565b503d610e71565b610a3c565b60209350610eb2610cfc91853d8111610e8957610e7b8183610955565b9350610cdb565b6020919350610ed490823d8111610e8957610e7b8183610955565b9290610caf565b604051637b663c4960e01b8152600490fd5b60405163162908e360e11b8152600490fd5b90610178939291610f0e6109cb565b6109d3565b61017860026109f1565b15610f2457565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b610162610f766001610587565b610f94610f81610f13565b918290610f8d565b9190565b1415610f1d565b6001610a87565b61017860016109f1565b610162610f94610f9b565b6101789081906001600160a01b031681565b90610fef610f89610fea610fe5600061017896610fdd600090565b50019461032d565b610fb0565b6109f1565b611032565b9190610b996101786108c09390565b90815491600160401b831015610977578261102691600161016295018155610b5a565b90610ff4565b90610534565b61104361103f838361107c565b1590565b15611075576110709161106b906001611064846110608482611003565b5490565b930161102c565b610a87565b600190565b5050600090565b61109a9160016110959261108e600090565b500161102c565b610587565b6110a7610f8960006109f1565b141590565b906110c09392916110bb610f69565b6110de565b610162610fa5565b610178916008021c81565b9061017891546110c8565b906110ed6402540be4006109f1565b8411610edb5761112d61112760029261112261111b6111093390565b95611114878261052a565b0196610336565b809661052a565b610b5a565b906110d3565b611153610f8961114f61114b846111466005988961052a565b610558565b5090565b9590565b14159182156111a3575b5050611191576003019061117082610587565b811061117f5761016291610a87565b60405163b9f317a560e01b8152600490fd5b60405163459808cf60e01b8152600490fd5b6111cc9192506111bf6107e7918501546001600160a01b031690565b926001600160a01b031690565b1415388061115d565b906101629392916110ac565b906110c09392916111f0610f69565b611284565b634e487b7160e01b600052601160045260246000fd5b9190820391821161121857565b6111f5565b634e487b7160e01b600052603160045260246000fd5b61016291600091610b88565b8054801561126257600019019061125f6112598383610b5a565b90611233565b55565b61121d565b6001600160a01b0390911681526040810192916101629160200152565b92919092600090611294826109f1565b8414610eed576111229460029033926112c8611127836112bf866112b8898261052a565b0194610336565b9a8b809561052a565b6112e5610f896112e161114b846111466005978861052a565b9890565b1415908115611415575b506111915761130060038601610587565b421061117f578286948892611330600161134c990161109561132a8a61132584610587565b61120b565b82610a87565b61133c610f89846109f1565b14611384575b5050509050611e10565b507fbace9fd79d5ea02ed8b43fa96af07e4e8f859a2f71ff878c748f5c22c578028491610e2c61137b60405190565b92839283611267565b6113de906113d56113a3610178878961139d898261052a565b0161052a565b91610bc46113ce6111276113c86113b8875490565b6113c260016109f1565b9061120b565b86610b5a565b9184610b5a565b6110608161123f565b6113ea610f89836109f1565b146113f6575b80611342565b61076e6114069261140b9561052a565b611449565b50388582826113f0565b8601546001600160a01b031690506114356001600160a01b0385166107e7565b1415386112ef565b906101629392916111e1565b90611464610f89610fea610fe5600061017896610fdd600090565b611495565b61016291600091610ff4565b8054801561126257600019019061125f61148f8383610b5a565b90611469565b906114a6611095826001850161102c565b6000926114b2846109f1565b82146114ff576101789261150594926115109261150a60019788936114df6114d9866109f1565b8261120b565b888501916114f76114ee845490565b6113c2896109f1565b828103611515575b50505090565b611475565b0161102c565b611233565b6110266115386115409461152f61112761106b9589610b5a565b92839188610b5a565b88880161102c565b3880806114ff565b906109e894939291611558610f69565b61160b565b9190820180921161121857565b906101626115f2600561157b610990565b9461158c61158882610587565b8752565b6115a261159b60018301610587565b6020880152565b6115b86115b160028301610587565b6040880152565b6115ce6115c760038301610587565b6060880152565b6115e46115dd60048301610587565b6080880152565b01546001600160a01b031690565b6001600160a01b031660a0840152565b6101789061156a565b5060009190611619836109f1565b8514610eed5761164e6111276002936111226116476116353390565b96611640888261052a565b0195610336565b809561052a565b60059061166c610f8961166861114b84611146888861052a565b9790565b1415908115611707575b50611191576116ff6116be6116b68761169c6101789961169530610336565b8888611d7c565b5061109561132a60018a01926116b184610587565b61155d565b948601610587565b6116ca60038701610587565b907fb173d70d03f0b8aa29e0087d55b3549db8a6343c5208ce69af3c0de4c0836fe7956116f660405190565b95869586610bca565b0390a1611602565b8501546001600160a01b031690506117276001600160a01b0384166107e7565b141538611676565b9061017893929161173e6109cb565b611548565b9061175961017b6000546001600160a01b031690565b61176285610336565b1461186a573393600261178161112784611122878561139d8c8261052a565b9360059461179c610f896112e161114b84611146878c61052a565b14158015611843575b6111915761016296611804611822956117ef6117dd61017886886117cc6101788c8361052a565b6117d68382610fc2565b500161052a565b6117e960048c01610587565b90610ba1565b6113d56113a3610178868861139d888261052a565b600090611813610f89836109f1565b14611829575b50505050610336565b91016108a9565b61076e611406926118399561052a565b5038808080611819565b50858501546001600160a01b03166118636001600160a01b0389166107e7565b14156117a5565b60405163cf04b1bb60e01b8152600490fd5b906110c093929161188b610f69565b6118ff565b80151561014e565b9050519061016282611890565b906020828203126101475761017891611898565b90959492610162946118ef610c1792610c096080966118e860a088019c60008901906001600160a01b03169052565b6020870152565b6001600160a01b03166060830152565b929192611917610c666006546001600160a01b031690565b9360009461192a6107e761017b8861074b565b14611b6657611938856109f1565b8414610eed5760023393611968611127826111226119618661195a8b8261052a565b0198610336565b809861052a565b600590611986610f8961198261114b846111468b8861052a565b9690565b1415908115611b3e575b5061119157848785926119b06001870161109561132a8c61132584610587565b6119bc610f89846109f1565b14611af3575b505050505063095ea7b360206119ff6119e6610c666006546001600160a01b031690565b92611a0a886119f460405190565b958694859460e01b90565b845260048401611267565b038189875af18015610e9057611ac7575b50611a31610c666006546001600160a01b031690565b90611a43600363b7df1d259201610587565b93611a5a42611a54620151806109f1565b9061155d565b91833b1561014757611a8f611a84938997938894611a7760405190565b9a8b998a98899760e01b90565b8752600487016118b9565b03925af18015610e9057611aa1575050565b8161016292903d10611ac0575b611ab88183610955565b8101906102b0565b503d611aae565b611ae79060203d8111611aec575b611adf8183610955565b8101906118a5565b611a1b565b503d611ad5565b611b0c906113d56113a3610178878961139d898261052a565b611b18610f89836109f1565b14611b24575b836119c2565b61076e61140692611b349561052a565b5038828487611b1e565b8401546001600160a01b03169050611b5e6001600160a01b0387166107e7565b141538611990565b604051632ed9bf5360e21b8152600490fd5b9061016293929161187c565b61106061017891611b93600090565b50600561052a565b61017860035b611bb7600061017892611bb2600090565b500190565b600061017891611bc5600090565b50015490565b610178906003611be4565b611be4565b610178906109f1565b611c09611c0461017893611bff6000611c0e95611bb2600090565b611c13565b611bdb565b61073e565b61032d565b61017891600061112792611c25600090565b5001610b5a565b611ba1600061076e61017861017894611c43600090565b50600261052a565b90611bd6600061076e61017861017895611c43600090565b610178916110609161139d6101786002928361052a565b61114b611ca461112761139d969561112286611cb096611c98600090565b5060029a8b918261052a565b6111466005948561052a565b611cb981610587565b611cd0611cc860018401610587565b958301610587565b93611cfc611ce060038501610587565b94611ced60048601610587565b9401546001600160a01b031690565b91959493929190565b6001600160a01b039182168152911660208201526060810192916101629160400152565b67ffffffffffffffff811161097757602090601f01601f19160190565b90611d58611d5383611d29565b61097c565b918252565b3d15611d7757611d6c3d611d46565b903d6000602084013e565b606090565b9091611dbe60009493611daf8695611d92600090565b506040516323b872dd60e01b602082015294859360248501611d05565b60208201810382520382610955565b82602082019151925af1611dd8611dd3611d5d565b911590565b611de25750600190565b8051611df1610f8960006109f1565b14611dfe57805190602001fd5b6040516312171d8360e31b8152600490fd5b600092611dbe8493611e20600090565b50611daf611e2d60405190565b63a9059cbb60e01b60208201529384926024840161126756fea2646970667358221220afc408f428697c7760dfa46b8b5fc18669fb86d4285bea5195f24ad4d8b1d3b364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14DD79A3 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x1F2A1D2F EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4532D776 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x60491D24 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x783451E8 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x903DF806 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xA3969815 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xA69D9C4F EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xA9B07CEA EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xBEF497FD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xCCEBFA3F EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xD4FF493F EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDF41BC5F EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xEE424278 EQ PUSH2 0xED JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x147 JUMPI PUSH2 0x716 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH2 0x3E3 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x294 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x147 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x14C JUMP JUMPDEST JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x155 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14E JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x1C4 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x1D3 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x250 DUP3 DUP3 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 PUSH2 0x178 PUSH2 0x261 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x155 JUMP JUMPDEST SWAP4 PUSH2 0x26F DUP2 PUSH1 0x40 DUP7 ADD PUSH2 0x155 JUMP JUMPDEST SWAP4 PUSH1 0x60 ADD PUSH2 0x155 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x143D JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x147 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x766 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x20F PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x2EE JUMP JUMPDEST PUSH2 0x178 PUSH1 0x0 PUSH1 0x6 PUSH2 0x302 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x17B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x187 SWAP1 PUSH2 0x336 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x33F JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x373 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x348 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x1A6 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP1 PUSH2 0x3BE DUP2 DUP6 PUSH2 0x1D3 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x155 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x1A6 PUSH2 0x3DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 PUSH2 0x1C4B JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x20F PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1C2C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP1 PUSH2 0x418 DUP2 DUP6 PUSH2 0x1D3 JUMP JUMPDEST SWAP4 PUSH1 0x20 ADD PUSH2 0x1D3 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x20F PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FE JUMP JUMPDEST SWAP1 PUSH2 0x1C63 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH2 0x162 SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP2 SWAP1 PUSH2 0x45A PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x469 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x478 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE JUMP JUMPDEST PUSH2 0x487 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x4C6 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x497 JUMP JUMPDEST PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x4E6 DUP3 DUP3 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 PUSH2 0x178 PUSH2 0x4F7 DUP5 PUSH1 0x20 DUP6 ADD PUSH2 0x155 JUMP JUMPDEST SWAP4 PUSH2 0x505 DUP2 PUSH1 0x40 DUP7 ADD PUSH2 0x155 JUMP JUMPDEST SWAP4 PUSH1 0x60 ADD PUSH2 0x1D3 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1743 JUMP JUMPDEST SWAP1 PUSH2 0x534 SWAP1 PUSH2 0x336 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x57B JUMPI PUSH2 0x572 PUSH1 0x6 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x542 JUMP JUMPDEST PUSH2 0x178 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x178 SWAP1 SLOAD PUSH2 0x580 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x5A1 PUSH1 0x5 SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x52A JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x608 JUMPI PUSH2 0x5B5 SWAP3 SWAP4 POP PUSH2 0x558 JUMP JUMPDEST POP SWAP1 PUSH2 0x5C0 DUP3 PUSH2 0x587 JUMP JUMPDEST SWAP2 PUSH2 0x5CD PUSH1 0x1 DUP3 ADD PUSH2 0x587 JUMP JUMPDEST SWAP2 PUSH2 0x5DA PUSH1 0x2 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST SWAP2 PUSH2 0x5E7 PUSH1 0x3 DUP3 ADD PUSH2 0x587 JUMP JUMPDEST SWAP2 PUSH2 0x178 PUSH1 0x5 PUSH2 0x5F9 PUSH1 0x4 DUP6 ADD PUSH2 0x587 JUMP JUMPDEST SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 SWAP5 PUSH2 0x649 PUSH2 0x650 SWAP3 SWAP9 SWAP8 SWAP6 PUSH2 0x642 PUSH1 0xA0 SWAP7 PUSH2 0x63B PUSH2 0x162 SWAP11 PUSH2 0x634 PUSH1 0xC0 DUP11 ADD SWAP15 PUSH1 0x0 DUP12 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x67B PUSH2 0x675 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 PUSH2 0x591 JUMP JUMPDEST SWAP3 PUSH2 0x68B SWAP7 SWAP5 SWAP7 SWAP3 SWAP2 SWAP3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x60C JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 PUSH2 0x6AD DUP5 DUP5 PUSH2 0x1D3 JUMP JUMPDEST SWAP4 PUSH2 0x6BB DUP2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3 JUMP JUMPDEST SWAP4 PUSH1 0x40 ADD PUSH2 0x155 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x1C0 PUSH2 0x67B PUSH2 0x6DA CALLDATASIZE PUSH1 0x4 PUSH2 0x694 JUMP JUMPDEST SWAP2 PUSH2 0x1C7A JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x4C6 PUSH2 0x6F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D2 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xEFF JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x70D CALLDATASIZE PUSH1 0x4 PUSH2 0x23C JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x1B78 JUMP JUMPDEST CALLVALUE PUSH2 0x147 JUMPI PUSH2 0x237 PUSH2 0x729 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH2 0x736 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x754 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x178 PUSH2 0x178 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x73E JUMP JUMPDEST PUSH2 0x162 PUSH2 0x761 PUSH1 0x0 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x72E JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x779 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 PUSH2 0x7C2 PUSH1 0x4 DUP3 ADD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x7DB PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x7F4 PUSH2 0x7E7 CALLER PUSH2 0x17B JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x772 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x806 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST ISZERO PUSH2 0x812 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x761 PUSH2 0x87A PUSH2 0x17B PUSH1 0x0 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x80B JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x7FA JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x8B9 PUSH2 0x178 PUSH2 0x8C0 SWAP3 PUSH2 0x336 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x894 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x8DC DUP2 PUSH1 0x0 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x90F PUSH2 0x909 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP4 PUSH2 0x336 JUMP JUMPDEST SWAP2 PUSH2 0x336 JUMP JUMPDEST SWAP2 PUSH2 0x919 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x92B PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH1 0x6 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x162 SWAP1 PUSH2 0x91F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x977 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x989 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x955 JUMP JUMPDEST PUSH2 0x178 PUSH1 0xC0 PUSH2 0x97C JUMP JUMPDEST PUSH2 0x9A2 PUSH2 0x990 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 DUP1 DUP1 DUP1 DUP8 ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 DUP2 MSTORE ADD PUSH1 0x0 SWAP1 MSTORE POP JUMP JUMPDEST PUSH2 0x178 PUSH2 0x99A JUMP JUMPDEST SWAP1 PUSH2 0x9E8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x9E3 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0xC1B JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x178 PUSH2 0x178 SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x178 PUSH20 0x5C69BEE701EF814A2B6A3EDD4B1652CB9CC5AA6F PUSH2 0x336 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x1C4 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0xA1B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 PUSH1 0x20 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 PUSH2 0x89F JUMP JUMPDEST SWAP1 PUSH2 0xA97 PUSH2 0x178 PUSH2 0x8C0 SWAP3 PUSH2 0x9F1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xA7D JUMP JUMPDEST PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xB17 SWAP1 PUSH1 0xA0 SWAP1 PUSH1 0x5 SWAP1 PUSH2 0xABF DUP2 PUSH2 0xAB9 DUP8 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0xAD1 PUSH1 0x1 DUP3 ADD PUSH2 0xAB9 PUSH1 0x20 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAE3 PUSH1 0x2 DUP3 ADD PUSH2 0xAB9 PUSH1 0x40 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x3 DUP3 ADD PUSH2 0xAB9 PUSH1 0x60 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB07 PUSH1 0x4 DUP3 ADD PUSH2 0xAB9 PUSH1 0x80 DUP9 ADD MLOAD SWAP1 JUMP JUMPDEST ADD SWAP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB2C JUMPI PUSH2 0x162 SWAP2 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x977 JUMPI DUP3 PUSH2 0xB54 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0x558 JUMP JUMPDEST SWAP1 PUSH2 0xB1D JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x57B JUMPI PUSH2 0x572 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x0 NOT PUSH1 0x8 SWAP3 SWAP1 SWAP3 MUL SWAP2 DUP3 SHL SWAP2 SHL PUSH2 0x89F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB99 PUSH2 0x178 PUSH2 0x8C0 SWAP4 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH2 0xB74 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x977 JUMPI DUP3 PUSH2 0xBC4 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0xB88 JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x162 SWAP5 PUSH2 0xC10 PUSH2 0xC17 SWAP3 PUSH2 0xC09 PUSH1 0x80 SWAP7 PUSH2 0xBF9 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP5 SWAP4 SWAP1 SWAP2 SWAP5 DUP1 SWAP6 PUSH1 0x0 SWAP4 PUSH2 0xC2E DUP6 PUSH2 0x9F1 JUMP JUMPDEST DUP3 EQ PUSH2 0xEED JUMPI PUSH2 0xC42 PUSH5 0x2540BE400 PUSH2 0x9F1 JUMP JUMPDEST DUP7 GT PUSH2 0xEDB JUMPI PUSH2 0xC51 SWAP1 PUSH2 0x336 JUMP JUMPDEST SWAP2 PUSH2 0xC5B DUP4 PUSH2 0x336 JUMP JUMPDEST PUSH2 0xC6B PUSH2 0xC66 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH2 0xC79 PUSH4 0xE6A43905 SWAP3 PUSH2 0x336 JUMP JUMPDEST PUSH4 0xDFE1681 SWAP2 PUSH2 0xC92 PUSH2 0xC8B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xE90 JUMPI PUSH2 0xCC4 SWAP4 DUP11 SWAP4 PUSH2 0xEB9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP4 PUSH1 0x20 SWAP2 DUP6 SWAP2 PUSH4 0xD21220A7 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xE90 JUMPI DUP10 SWAP4 PUSH2 0xE95 JUMPI JUMPDEST POP PUSH2 0xCFC PUSH1 0x20 SWAP4 SWAP5 PUSH2 0xD07 PUSH2 0xCEF PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0xA48 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE90 JUMPI DUP7 SWAP2 PUSH2 0xE62 JUMPI JUMPDEST POP PUSH2 0xD2C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7E7 JUMP JUMPDEST SUB PUSH2 0xE31 JUMPI DUP3 CALLER SWAP5 DUP4 PUSH2 0xD3E ADDRESS PUSH2 0x336 JUMP JUMPDEST SWAP1 PUSH2 0xD4A SWAP2 DUP9 DUP6 PUSH2 0x1D7C JUMP JUMPDEST POP DUP3 DUP8 ADD SWAP7 PUSH2 0xD57 TIMESTAMP DUP10 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP5 PUSH2 0xD64 DUP2 DUP8 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP9 DUP10 MSTORE PUSH1 0x5 SWAP4 PUSH2 0xD7D DUP5 DUP7 PUSH2 0x52A JUMP JUMPDEST SLOAD PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE SWAP5 DUP5 PUSH2 0xD90 DUP6 PUSH2 0x336 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0xDA7 SWAP2 PUSH2 0x52A JUMP JUMPDEST SWAP1 PUSH2 0xDB1 SWAP2 PUSH2 0xB31 JUMP JUMPDEST PUSH2 0xDBC DUP4 PUSH1 0x3 PUSH2 0xFC2 JUMP JUMPDEST POP DUP3 PUSH1 0x2 SWAP3 PUSH2 0xDCB SWAP1 DUP5 PUSH2 0x52A JUMP JUMPDEST SWAP2 DUP3 ADD SWAP1 PUSH2 0xDD8 SWAP2 PUSH2 0xFC2 JUMP JUMPDEST POP ADD SWAP1 PUSH2 0xDE4 SWAP2 PUSH2 0x52A JUMP JUMPDEST SWAP1 MLOAD PUSH2 0xDEF SWAP2 PUSH2 0xBA1 JUMP JUMPDEST MLOAD SWAP3 MLOAD SWAP4 MLOAD PUSH32 0xB173D70D03F0B8AA29E0087D55B3549DB8A6343C5208CE69AF3C0DE4C0836FE7 SWAP5 PUSH2 0xE1F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP5 DUP6 SWAP5 PUSH2 0xE2C SWAP5 DUP7 PUSH2 0xBCA JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x7C2 DUP4 PUSH2 0xE3E PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xA3F6EE1 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 SWAP2 PUSH1 0x4 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xE83 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xE89 JUMPI JUMPDEST PUSH2 0xE7B DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA28 JUMP JUMPDEST CODESIZE PUSH2 0xD19 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE71 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x20 SWAP4 POP PUSH2 0xEB2 PUSH2 0xCFC SWAP2 DUP6 RETURNDATASIZE DUP2 GT PUSH2 0xE89 JUMPI PUSH2 0xE7B DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST SWAP4 POP PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0xED4 SWAP1 DUP3 RETURNDATASIZE DUP2 GT PUSH2 0xE89 JUMPI PUSH2 0xE7B DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B663C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x178 SWAP4 SWAP3 SWAP2 PUSH2 0xF0E PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x2 PUSH2 0x9F1 JUMP JUMPDEST ISZERO PUSH2 0xF24 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0xF76 PUSH1 0x1 PUSH2 0x587 JUMP JUMPDEST PUSH2 0xF94 PUSH2 0xF81 PUSH2 0xF13 JUMP JUMPDEST SWAP2 DUP3 SWAP1 PUSH2 0xF8D JUMP JUMPDEST SWAP2 SWAP1 JUMP JUMPDEST EQ ISZERO PUSH2 0xF1D JUMP JUMPDEST PUSH1 0x1 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x178 PUSH1 0x1 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x162 PUSH2 0xF94 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x178 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST SWAP1 PUSH2 0xFEF PUSH2 0xF89 PUSH2 0xFEA PUSH2 0xFE5 PUSH1 0x0 PUSH2 0x178 SWAP7 PUSH2 0xFDD PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SWAP5 PUSH2 0x32D JUMP JUMPDEST PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x1032 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xB99 PUSH2 0x178 PUSH2 0x8C0 SWAP4 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x977 JUMPI DUP3 PUSH2 0x1026 SWAP2 PUSH1 0x1 PUSH2 0x162 SWAP6 ADD DUP2 SSTORE PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x1043 PUSH2 0x103F DUP4 DUP4 PUSH2 0x107C JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1070 SWAP2 PUSH2 0x106B SWAP1 PUSH1 0x1 PUSH2 0x1064 DUP5 PUSH2 0x1060 DUP5 DUP3 PUSH2 0x1003 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST SWAP4 ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x109A SWAP2 PUSH1 0x1 PUSH2 0x1095 SWAP3 PUSH2 0x108E PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x10A7 PUSH2 0xF89 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST EQ ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x10C0 SWAP4 SWAP3 SWAP2 PUSH2 0x10BB PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x162 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP2 SLOAD PUSH2 0x10C8 JUMP JUMPDEST SWAP1 PUSH2 0x10ED PUSH5 0x2540BE400 PUSH2 0x9F1 JUMP JUMPDEST DUP5 GT PUSH2 0xEDB JUMPI PUSH2 0x112D PUSH2 0x1127 PUSH1 0x2 SWAP3 PUSH2 0x1122 PUSH2 0x111B PUSH2 0x1109 CALLER SWAP1 JUMP JUMPDEST SWAP6 PUSH2 0x1114 DUP8 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD SWAP7 PUSH2 0x336 JUMP JUMPDEST DUP1 SWAP7 PUSH2 0x52A JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x1153 PUSH2 0xF89 PUSH2 0x114F PUSH2 0x114B DUP5 PUSH2 0x1146 PUSH1 0x5 SWAP9 DUP10 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP6 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP2 DUP3 ISZERO PUSH2 0x11A3 JUMPI JUMPDEST POP POP PUSH2 0x1191 JUMPI PUSH1 0x3 ADD SWAP1 PUSH2 0x1170 DUP3 PUSH2 0x587 JUMP JUMPDEST DUP2 LT PUSH2 0x117F JUMPI PUSH2 0x162 SWAP2 PUSH2 0xA87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB9F317A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x459808CF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x11CC SWAP2 SWAP3 POP PUSH2 0x11BF PUSH2 0x7E7 SWAP2 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ ISZERO CODESIZE DUP1 PUSH2 0x115D JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0x10AC JUMP JUMPDEST SWAP1 PUSH2 0x10C0 SWAP4 SWAP3 SWAP2 PUSH2 0x11F0 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x1284 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1218 JUMPI JUMP JUMPDEST PUSH2 0x11F5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xB88 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x125F PUSH2 0x1259 DUP4 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0x1233 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH1 0x0 SWAP1 PUSH2 0x1294 DUP3 PUSH2 0x9F1 JUMP JUMPDEST DUP5 EQ PUSH2 0xEED JUMPI PUSH2 0x1122 SWAP5 PUSH1 0x2 SWAP1 CALLER SWAP3 PUSH2 0x12C8 PUSH2 0x1127 DUP4 PUSH2 0x12BF DUP7 PUSH2 0x12B8 DUP10 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD SWAP5 PUSH2 0x336 JUMP JUMPDEST SWAP11 DUP12 DUP1 SWAP6 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x12E5 PUSH2 0xF89 PUSH2 0x12E1 PUSH2 0x114B DUP5 PUSH2 0x1146 PUSH1 0x5 SWAP8 DUP9 PUSH2 0x52A JUMP JUMPDEST SWAP9 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1415 JUMPI JUMPDEST POP PUSH2 0x1191 JUMPI PUSH2 0x1300 PUSH1 0x3 DUP7 ADD PUSH2 0x587 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x117F JUMPI DUP3 DUP7 SWAP5 DUP9 SWAP3 PUSH2 0x1330 PUSH1 0x1 PUSH2 0x134C SWAP10 ADD PUSH2 0x1095 PUSH2 0x132A DUP11 PUSH2 0x1325 DUP5 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST DUP3 PUSH2 0xA87 JUMP JUMPDEST PUSH2 0x133C PUSH2 0xF89 DUP5 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1384 JUMPI JUMPDEST POP POP POP SWAP1 POP PUSH2 0x1E10 JUMP JUMPDEST POP PUSH32 0xBACE9FD79D5EA02ED8B43FA96AF07E4E8F859A2F71FF878C748F5C22C5780284 SWAP2 PUSH2 0xE2C PUSH2 0x137B PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x13DE SWAP1 PUSH2 0x13D5 PUSH2 0x13A3 PUSH2 0x178 DUP8 DUP10 PUSH2 0x139D DUP10 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD PUSH2 0x52A JUMP JUMPDEST SWAP2 PUSH2 0xBC4 PUSH2 0x13CE PUSH2 0x1127 PUSH2 0x13C8 PUSH2 0x13B8 DUP8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13C2 PUSH1 0x1 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH2 0x120B JUMP JUMPDEST DUP7 PUSH2 0xB5A JUMP JUMPDEST SWAP2 DUP5 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x1060 DUP2 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x13EA PUSH2 0xF89 DUP4 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x13F6 JUMPI JUMPDEST DUP1 PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x1406 SWAP3 PUSH2 0x140B SWAP6 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1449 JUMP JUMPDEST POP CODESIZE DUP6 DUP3 DUP3 PUSH2 0x13F0 JUMP JUMPDEST DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1435 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x7E7 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x12EF JUMP JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0x11E1 JUMP JUMPDEST SWAP1 PUSH2 0x1464 PUSH2 0xF89 PUSH2 0xFEA PUSH2 0xFE5 PUSH1 0x0 PUSH2 0x178 SWAP7 PUSH2 0xFDD PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x162 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xFF4 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x125F PUSH2 0x148F DUP4 DUP4 PUSH2 0xB5A JUMP JUMPDEST SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP1 PUSH2 0x14A6 PUSH2 0x1095 DUP3 PUSH1 0x1 DUP6 ADD PUSH2 0x102C JUMP JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0x14B2 DUP5 PUSH2 0x9F1 JUMP JUMPDEST DUP3 EQ PUSH2 0x14FF JUMPI PUSH2 0x178 SWAP3 PUSH2 0x1505 SWAP5 SWAP3 PUSH2 0x1510 SWAP3 PUSH2 0x150A PUSH1 0x1 SWAP8 DUP9 SWAP4 PUSH2 0x14DF PUSH2 0x14D9 DUP7 PUSH2 0x9F1 JUMP JUMPDEST DUP3 PUSH2 0x120B JUMP JUMPDEST DUP9 DUP6 ADD SWAP2 PUSH2 0x14F7 PUSH2 0x14EE DUP5 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13C2 DUP10 PUSH2 0x9F1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH2 0x1515 JUMPI JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1475 JUMP JUMPDEST ADD PUSH2 0x102C JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x1026 PUSH2 0x1538 PUSH2 0x1540 SWAP5 PUSH2 0x152F PUSH2 0x1127 PUSH2 0x106B SWAP6 DUP10 PUSH2 0xB5A JUMP JUMPDEST SWAP3 DUP4 SWAP2 DUP9 PUSH2 0xB5A JUMP JUMPDEST DUP9 DUP9 ADD PUSH2 0x102C JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x14FF JUMP JUMPDEST SWAP1 PUSH2 0x9E8 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1558 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x160B JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1218 JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x162 PUSH2 0x15F2 PUSH1 0x5 PUSH2 0x157B PUSH2 0x990 JUMP JUMPDEST SWAP5 PUSH2 0x158C PUSH2 0x1588 DUP3 PUSH2 0x587 JUMP JUMPDEST DUP8 MSTORE JUMP JUMPDEST PUSH2 0x15A2 PUSH2 0x159B PUSH1 0x1 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x15B8 PUSH2 0x15B1 PUSH1 0x2 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x15CE PUSH2 0x15C7 PUSH1 0x3 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MSTORE JUMP JUMPDEST PUSH2 0x15E4 PUSH2 0x15DD PUSH1 0x4 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST PUSH1 0x80 DUP9 ADD MSTORE JUMP JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP5 ADD MSTORE JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x156A JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x1619 DUP4 PUSH2 0x9F1 JUMP JUMPDEST DUP6 EQ PUSH2 0xEED JUMPI PUSH2 0x164E PUSH2 0x1127 PUSH1 0x2 SWAP4 PUSH2 0x1122 PUSH2 0x1647 PUSH2 0x1635 CALLER SWAP1 JUMP JUMPDEST SWAP7 PUSH2 0x1640 DUP9 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD SWAP6 PUSH2 0x336 JUMP JUMPDEST DUP1 SWAP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH2 0x166C PUSH2 0xF89 PUSH2 0x1668 PUSH2 0x114B DUP5 PUSH2 0x1146 DUP9 DUP9 PUSH2 0x52A JUMP JUMPDEST SWAP8 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1707 JUMPI JUMPDEST POP PUSH2 0x1191 JUMPI PUSH2 0x16FF PUSH2 0x16BE PUSH2 0x16B6 DUP8 PUSH2 0x169C PUSH2 0x178 SWAP10 PUSH2 0x1695 ADDRESS PUSH2 0x336 JUMP JUMPDEST DUP9 DUP9 PUSH2 0x1D7C JUMP JUMPDEST POP PUSH2 0x1095 PUSH2 0x132A PUSH1 0x1 DUP11 ADD SWAP3 PUSH2 0x16B1 DUP5 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x155D JUMP JUMPDEST SWAP5 DUP7 ADD PUSH2 0x587 JUMP JUMPDEST PUSH2 0x16CA PUSH1 0x3 DUP8 ADD PUSH2 0x587 JUMP JUMPDEST SWAP1 PUSH32 0xB173D70D03F0B8AA29E0087D55B3549DB8A6343C5208CE69AF3C0DE4C0836FE7 SWAP6 PUSH2 0x16F6 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP6 DUP7 PUSH2 0xBCA JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x1602 JUMP JUMPDEST DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1727 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7E7 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x1676 JUMP JUMPDEST SWAP1 PUSH2 0x178 SWAP4 SWAP3 SWAP2 PUSH2 0x173E PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x1548 JUMP JUMPDEST SWAP1 PUSH2 0x1759 PUSH2 0x17B PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x1762 DUP6 PUSH2 0x336 JUMP JUMPDEST EQ PUSH2 0x186A JUMPI CALLER SWAP4 PUSH1 0x2 PUSH2 0x1781 PUSH2 0x1127 DUP5 PUSH2 0x1122 DUP8 DUP6 PUSH2 0x139D DUP13 DUP3 PUSH2 0x52A JUMP JUMPDEST SWAP4 PUSH1 0x5 SWAP5 PUSH2 0x179C PUSH2 0xF89 PUSH2 0x12E1 PUSH2 0x114B DUP5 PUSH2 0x1146 DUP8 DUP13 PUSH2 0x52A JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x1843 JUMPI JUMPDEST PUSH2 0x1191 JUMPI PUSH2 0x162 SWAP7 PUSH2 0x1804 PUSH2 0x1822 SWAP6 PUSH2 0x17EF PUSH2 0x17DD PUSH2 0x178 DUP7 DUP9 PUSH2 0x17CC PUSH2 0x178 DUP13 DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x17D6 DUP4 DUP3 PUSH2 0xFC2 JUMP JUMPDEST POP ADD PUSH2 0x52A JUMP JUMPDEST PUSH2 0x17E9 PUSH1 0x4 DUP13 ADD PUSH2 0x587 JUMP JUMPDEST SWAP1 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x13D5 PUSH2 0x13A3 PUSH2 0x178 DUP7 DUP9 PUSH2 0x139D DUP9 DUP3 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x1813 PUSH2 0xF89 DUP4 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1829 JUMPI JUMPDEST POP POP POP POP PUSH2 0x336 JUMP JUMPDEST SWAP2 ADD PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x1406 SWAP3 PUSH2 0x1839 SWAP6 PUSH2 0x52A JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1819 JUMP JUMPDEST POP DUP6 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1863 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH2 0x7E7 JUMP JUMPDEST EQ ISZERO PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCF04B1BB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x10C0 SWAP4 SWAP3 SWAP2 PUSH2 0x188B PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x18FF JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x14E JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x162 DUP3 PUSH2 0x1890 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x147 JUMPI PUSH2 0x178 SWAP2 PUSH2 0x1898 JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP3 PUSH2 0x162 SWAP5 PUSH2 0x18EF PUSH2 0xC17 SWAP3 PUSH2 0xC09 PUSH1 0x80 SWAP7 PUSH2 0x18E8 PUSH1 0xA0 DUP9 ADD SWAP13 PUSH1 0x0 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1917 PUSH2 0xC66 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x192A PUSH2 0x7E7 PUSH2 0x17B DUP9 PUSH2 0x74B JUMP JUMPDEST EQ PUSH2 0x1B66 JUMPI PUSH2 0x1938 DUP6 PUSH2 0x9F1 JUMP JUMPDEST DUP5 EQ PUSH2 0xEED JUMPI PUSH1 0x2 CALLER SWAP4 PUSH2 0x1968 PUSH2 0x1127 DUP3 PUSH2 0x1122 PUSH2 0x1961 DUP7 PUSH2 0x195A DUP12 DUP3 PUSH2 0x52A JUMP JUMPDEST ADD SWAP9 PUSH2 0x336 JUMP JUMPDEST DUP1 SWAP9 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x5 SWAP1 PUSH2 0x1986 PUSH2 0xF89 PUSH2 0x1982 PUSH2 0x114B DUP5 PUSH2 0x1146 DUP12 DUP9 PUSH2 0x52A JUMP JUMPDEST SWAP7 SWAP1 JUMP JUMPDEST EQ ISZERO SWAP1 DUP2 ISZERO PUSH2 0x1B3E JUMPI JUMPDEST POP PUSH2 0x1191 JUMPI DUP5 DUP8 DUP6 SWAP3 PUSH2 0x19B0 PUSH1 0x1 DUP8 ADD PUSH2 0x1095 PUSH2 0x132A DUP13 PUSH2 0x1325 DUP5 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x19BC PUSH2 0xF89 DUP5 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1AF3 JUMPI JUMPDEST POP POP POP POP POP PUSH4 0x95EA7B3 PUSH1 0x20 PUSH2 0x19FF PUSH2 0x19E6 PUSH2 0xC66 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x1A0A DUP9 PUSH2 0x19F4 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x1267 JUMP JUMPDEST SUB DUP2 DUP10 DUP8 GAS CALL DUP1 ISZERO PUSH2 0xE90 JUMPI PUSH2 0x1AC7 JUMPI JUMPDEST POP PUSH2 0x1A31 PUSH2 0xC66 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1A43 PUSH1 0x3 PUSH4 0xB7DF1D25 SWAP3 ADD PUSH2 0x587 JUMP JUMPDEST SWAP4 PUSH2 0x1A5A TIMESTAMP PUSH2 0x1A54 PUSH3 0x15180 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 PUSH2 0x155D JUMP JUMPDEST SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x147 JUMPI PUSH2 0x1A8F PUSH2 0x1A84 SWAP4 DUP10 SWAP8 SWAP4 DUP9 SWAP5 PUSH2 0x1A77 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP11 DUP12 SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x18B9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xE90 JUMPI PUSH2 0x1AA1 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x162 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x1AC0 JUMPI JUMPDEST PUSH2 0x1AB8 DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1AAE JUMP JUMPDEST PUSH2 0x1AE7 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1AEC JUMPI JUMPDEST PUSH2 0x1ADF DUP2 DUP4 PUSH2 0x955 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x1B0C SWAP1 PUSH2 0x13D5 PUSH2 0x13A3 PUSH2 0x178 DUP8 DUP10 PUSH2 0x139D DUP10 DUP3 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1B18 PUSH2 0xF89 DUP4 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1B24 JUMPI JUMPDEST DUP4 PUSH2 0x19C2 JUMP JUMPDEST PUSH2 0x76E PUSH2 0x1406 SWAP3 PUSH2 0x1B34 SWAP6 PUSH2 0x52A JUMP JUMPDEST POP CODESIZE DUP3 DUP5 DUP8 PUSH2 0x1B1E JUMP JUMPDEST DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH2 0x1B5E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x7E7 JUMP JUMPDEST EQ ISZERO CODESIZE PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2ED9BF53 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x162 SWAP4 SWAP3 SWAP2 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x1060 PUSH2 0x178 SWAP2 PUSH2 0x1B93 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x5 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x178 PUSH1 0x3 JUMPDEST PUSH2 0x1BB7 PUSH1 0x0 PUSH2 0x178 SWAP3 PUSH2 0x1BB2 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178 SWAP2 PUSH2 0x1BC5 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH1 0x3 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x178 SWAP1 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x1C09 PUSH2 0x1C04 PUSH2 0x178 SWAP4 PUSH2 0x1BFF PUSH1 0x0 PUSH2 0x1C0E SWAP6 PUSH2 0x1BB2 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x1BDB JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH1 0x0 PUSH2 0x1127 SWAP3 PUSH2 0x1C25 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP ADD PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x1BA1 PUSH1 0x0 PUSH2 0x76E PUSH2 0x178 PUSH2 0x178 SWAP5 PUSH2 0x1C43 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0x52A JUMP JUMPDEST SWAP1 PUSH2 0x1BD6 PUSH1 0x0 PUSH2 0x76E PUSH2 0x178 PUSH2 0x178 SWAP6 PUSH2 0x1C43 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP2 PUSH2 0x1060 SWAP2 PUSH2 0x139D PUSH2 0x178 PUSH1 0x2 SWAP3 DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x114B PUSH2 0x1CA4 PUSH2 0x1127 PUSH2 0x139D SWAP7 SWAP6 PUSH2 0x1122 DUP7 PUSH2 0x1CB0 SWAP7 PUSH2 0x1C98 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x2 SWAP11 DUP12 SWAP2 DUP3 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1146 PUSH1 0x5 SWAP5 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x1CB9 DUP2 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1CD0 PUSH2 0x1CC8 PUSH1 0x1 DUP5 ADD PUSH2 0x587 JUMP JUMPDEST SWAP6 DUP4 ADD PUSH2 0x587 JUMP JUMPDEST SWAP4 PUSH2 0x1CFC PUSH2 0x1CE0 PUSH1 0x3 DUP6 ADD PUSH2 0x587 JUMP JUMPDEST SWAP5 PUSH2 0x1CED PUSH1 0x4 DUP7 ADD PUSH2 0x587 JUMP JUMPDEST SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP3 SWAP2 PUSH2 0x162 SWAP2 PUSH1 0x40 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x977 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1D58 PUSH2 0x1D53 DUP4 PUSH2 0x1D29 JUMP JUMPDEST PUSH2 0x97C JUMP JUMPDEST SWAP2 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1D77 JUMPI PUSH2 0x1D6C RETURNDATASIZE PUSH2 0x1D46 JUMP JUMPDEST SWAP1 RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1DBE PUSH1 0x0 SWAP5 SWAP4 PUSH2 0x1DAF DUP7 SWAP6 PUSH2 0x1D92 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP5 DUP6 SWAP4 PUSH1 0x24 DUP6 ADD PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE SUB DUP3 PUSH2 0x955 JUMP JUMPDEST DUP3 PUSH1 0x20 DUP3 ADD SWAP2 MLOAD SWAP3 GAS CALL PUSH2 0x1DD8 PUSH2 0x1DD3 PUSH2 0x1D5D JUMP JUMPDEST SWAP2 ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1DE2 JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1DF1 PUSH2 0xF89 PUSH1 0x0 PUSH2 0x9F1 JUMP JUMPDEST EQ PUSH2 0x1DFE JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0x1DBE DUP5 SWAP4 PUSH2 0x1E20 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DAF PUSH2 0x1E2D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 PUSH1 0x24 DUP5 ADD PUSH2 0x1267 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xC4 ADDMOD DELEGATECALL 0x28 PUSH10 0x7C7760DFA46B8B5FC186 PUSH10 0xFB86D4285BEA5195F24A 0xD4 0xD8 0xB1 0xD3 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1000:12696:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;;;;1000:12696:23;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;1000:12696:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;:::i;2302:34::-;;;;;:::i;1000:12696::-;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;1273:6:0;1000:12696:23;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;2200:60::-;;;;;;;;;:::i;:::-;1000:12696;;2200:60;;;;;;;;;;:::i;:::-;-1:-1:-1;2200:60:23;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;;2200:60;;;;1000:12696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;1063:62:0:-;;;:::i;:::-;1117:1;;:::i;1000:12696:23:-;;;;;;;;;;;:::i;1824:101:0:-;1907:10;;1915:1;1907:10;:::i;:::-;;:::i;1824:101::-;;;:::i;1000:12696:23:-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1000:12696:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:0;1414:68;1422:7;1273:6;1000:12696:23;-1:-1:-1;;;;;1000:12696:23;;;1422:7:0;:23;;719:10:8;1433:12:0;640:96:8;1422:23:0;;-1:-1:-1;;;;;1000:12696:23;;;1422:23:0;;1414:68;:::i;1063:62::-;1117:1;1063:62;;;:::i;:::-;1117:1;:::i;1000:12696:23:-;;;;:::o;:::-;;;-1:-1:-1;;;1000:12696:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;1000:12696:23;;;;;;;2074:198:0;2256:8;2074:198;2154:73;2162:22;2174:10;2182:1;2174:10;:::i;2162:22::-;-1:-1:-1;;;;;1000:12696:23;;2162:22:0;;2154:73;:::i;2074:198::-;;;;:::i;1000:12696:23:-;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;2426:187:0:-;2518:6;1000:12696:23;-1:-1:-1;;;;;1000:12696:23;2534:17:0;;;;;:::i;:::-;2566:40;;;;;:::i;:::-;;;:::i;:::-;;;1000:12696:23;;;;2566:40:0;;;;2426:187::o;1063:62::-;1117:1;1063:62;;;:::i;:::-;2757:20:23;2679:105;2757:20;;:::i;2679:105::-;;;;:::i;1000:12696::-;;;;;;;;;;;;;;;;-1:-1:-1;;1000:12696:23;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1000:12696:23:o;:::-;;;:::i;2227:103:2:-;;2292:1;2227:103;;;;;;:::i;:::-;2292:1;:::i;:::-;;;;:::i;1000:12696:23:-;;;;;;;1355:125;1419:61;1437:42;1419:61;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1000:12696;;1419:61;;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;1419:61;;;;;;;;;;1000:12696;1419:61;1000:12696;;;1419:61;;;;;;;;;;-1:-1:-1;;1419:61:23;;1000:12696;1419:61;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;1000:12696;;1419:61;;;:::i;:::-;;;;;;;;;;1000:12696;;1419:61;;;;;;;;;;1000:12696;;1419:61;;;;;;;;;;1000:12696;;1419:61;;;;;;;;;;1000:12696;;1419:61;;;;;-1:-1:-1;;;;;1000:12696:23;;;1419:61;;;:::i;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;;1419:61:23;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;1000:12696;;1419:61;;;;;;;;1000:12696;;;;;;;1419:61;;-1:-1:-1;;1419:61:23;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;;1419:61:23;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;1419:61;-1:-1:-1;;;;;1000:12696:23;1419:61;;;1000:12696;;1419:61;;;;1000:12696;;1419:61;;;;1000:12696;;1419:61;;1000:12696;;3095:1691;;;;;;;3381:1;;3361:21;;;;:::i;:::-;;;3357:74;;3445:27;3458:14;3445:27;:::i;:::-;;;3441:82;;3639:16;;;:::i;:::-;3624:32;;;;:::i;:::-;3695:26;:18;;:::i;:::-;:26;:::i;:::-;3722:12;3695:26;3722:12;;:::i;:::-;;:14;;;1000:12696;;;;3722:14;;1419:61;;;;3722:14;;;;;;;;;;;;;;;3738;3722;;;;;3095:1691;-1:-1:-1;1000:12696:23;;;3738:14;;1000:12696;;-1:-1:-1;;;1419:61:23;;3738:14;;;;;;;;;;;;;;;;;;3095:1691;3695:58;;;;;;;1000:12696;;;;3695:58;;;;;;;;1419:61;;;;3695:58;;;;;;;:::i;:::-;;;;;;;;;;;;;;3095:1691;-1:-1:-1;3768:38:23;-1:-1:-1;;;;;1000:12696:23;;3768:38;1000:12696;3768:38;;3764:104;;3926:12;719:10:8;3948:4:23;;3940:13;3948:4;3940:13;:::i;:::-;3878:94;;;;;;:::i;:::-;-1:-1:-1;3983:18:23;;;;:36;4004:15;3983:18;1419:61;;3983:36;4029:16;;;:35;;;;1419:61;;4029:35;4074:23;;;1419:61;4126:20;;;1419:61;;;4188:10;:28;;;;;:::i;:::-;1000:12696;4169:16;;;1419:61;;;4169:16;4233:28;;;;:::i;:::-;-1:-1:-1;;;;;1000:12696:23;4233:15;;;1000:12696;4317:28;;;:::i;:::-;:44;;;;:::i;:::-;4371:35;:13;;:35;:::i;:::-;;4477:6;;:18;;;;;:::i;:::-;4505:17;;;:39;;;;:::i;:::-;;4584:18;:36;;;;:::i;:::-;1419:61;;4630:32;;;:::i;:::-;1419:61;;;;;4678:101;;;1000:12696;;;;4678:101;;;;;;;;:::i;:::-;;;;3095:1691::o;3764:104::-;3829:28;;;1000:12696;;;;3829:28;-1:-1:-1;;;3829:28:23;;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;3695:58;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;3738:14::-;3695:58;3738:14;;;3695:58;3738:14;;;;;;;;;;;:::i;:::-;;;;;3722;3738;3722;;;;;;;;;;;;;;;:::i;:::-;;;;;3441:82;1000:12696;;-1:-1:-1;;;3495:17:23;;;;1000:12696;3357:74;1000:12696;;-1:-1:-1;;;3405:15:23;;;;1000:12696;3095:1691;;3315:26;3095:1691;;;3315:26;;:::i;:::-;;:::i;1723:37:2:-;1759:1;;;:::i;:::-;;;;:::o;:::-;1000:12696:23;;-1:-1:-1;;;1759:1:2;;;;;;;;;;;1000:12696:23;1759:1:2;1000:12696:23;;;1759:1:2;1000:12696:23;;;2336:287:2;2598:18;2468:7;;;:::i;:::-;2460:63;2479:8;;:::i;:::-;2468:19;;;;1000:12696:23;2468:19:2;;1000:12696:23;;2468:19:2;;;2460:63;:::i;:::-;2598:18;;:::i;1676:41::-;1716:1;;;:::i;2629:209::-;2809:22;2819:12;;:::i;1000:12696:23:-;;;;;-1:-1:-1;;;;;1000:12696:23;;;8305:150:11;;8398:50;8415:32;8423:23;8431:14;8403:10;8398:50;8305:150;8375:4;1000:12696:23;;;8375:4:11;8403:10;;8431:14;;:::i;:::-;8423:23;:::i;:::-;8415:32;:::i;8398:50::-;;:::i;1000:12696:23:-;;;;;;;;;;;;;;-1:-1:-1;;;1000:12696:23;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;2214:404:11;2297:22;2298:21;;;;:::i;:::-;2297:22;;1000:12696:23;2297:22:11;2293:319;;;2493:40;;:19;;:12;2515:18;2335:11;:23;:11;;:23;:::i;:::-;1000:12696:23;;;2515:18:11;2493:12;;:19;:::i;:::-;:40;:::i;:::-;2554:4;2547:11;:::o;2293:319::-;2596:5;;;2589:12;:::o;4255:127::-;4351:19;4255:127;4351:12;:19;4255:127;4328:4;1000:12696:23;;;4328:4:11;4351:12;;:19;:::i;:::-;;:::i;:::-;:24;;4374:1;4351:24;:::i;:::-;;;4255:127;:::o;2227:103:2:-;;2292:1;2227:103;;;;;:::i;:::-;2292:1;:::i;:::-;;;:::i;1000:12696:23:-;;;;;;;;;;;;;;:::i;5254:669::-;;5377:28;5391:14;5377:28;:::i;:::-;;;5373:83;;5523:61;;:6;5530:12;5523:53;5558:17;5530:12;719:10:8;640:96;;5530:12:23;5523:20;;;;;:::i;:::-;:34;5558:17;;:::i;:::-;5523:53;;;:::i;:::-;:61;:::i;:::-;;;:::i;:::-;5675:17;;5594:66;5623:37;:10;:29;:10;:29;;;:::i;:::-;:37;:::i;:::-;5594:66;1000:12696;;5594:66;5675:17;1000:12696;;5675:17;;;:51;;;;;5254:669;5671:103;;;;5788:19;;;;;;:::i;:::-;:33;-1:-1:-1;5784:89:23;;5883:33;;;:::i;5784:89::-;1000:12696;;-1:-1:-1;;;5844:18:23;;;;1000:12696;5671:103;1000:12696;;-1:-1:-1;;;5749:14:23;;;;1000:12696;5675:51;5696:30;:14;;;;:30;:14;;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;;5696:14;:30;-1:-1:-1;;;;;1000:12696:23;;;5696:30;;;5675:51;;;;5254:669;;;;;;;:::i;2227:103:2:-;;2292:1;2227:103;;;;;:::i;:::-;2292:1;:::i;1000:12696:23:-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1000:12696:23;;;;;;;:::i;:::-;;;:::i;:::-;;:::o;:::-;;:::i;:::-;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;;;;1419:61;1000:12696;;6156:1154;;;;;6288:1;6277:12;;;;:::i;:::-;;;6273:65;;6365:53;;:6;;719:10:8;6365:20:23;:61;;:20;6400:17;6365:20;;;;;:::i;:::-;:34;6400:17;;:::i;:::-;6365:53;;;;;:::i;:61::-;6517:17;;6436:66;6465:37;:10;:29;:10;:29;;;:::i;6436:66::-;6517:17;1000:12696;;6517:17;;;:51;;;;;6156:1154;6513:103;;;6630:19;;;;;:::i;:::-;6652:15;-1:-1:-1;6626:93:23;;6747:15;;;;;6817;6747;7183:67;6747:15;;6729:43;6747:25;:15;;;;:::i;:::-;:25;:::i;:::-;6729:43;;:::i;6817:15::-;:20;;;;:::i;:::-;;6813:360;;6156:1154;7183:67;;;;;;:::i;:::-;;7265:38;;;;1000:12696;;;;7265:38;;;;;;:::i;6813:360::-;7048:16;6883:20;6950:51;6853:83;6883:53;:20;;;;;;:::i;:::-;:34;:53;:::i;6853:83::-;6980:16;6950:17;6970:31;;6980:20;:16;;1000:12696;;;6980:16;:20;6999:1;6980:20;:::i;:::-;;;:::i;:::-;6970:31;;:::i;:::-;6950:17;;;:::i;:51::-;7015:13;;;:::i;7048:16::-;:21;;;;:::i;:::-;;7044:119;;6813:360;;;;7044:119;7089:20;:40;:20;:59;:20;;:::i;:40::-;:59;:::i;:::-;;7044:119;;;;;;6517:51;6538:14;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;-1:-1:-1;6538:30:23;-1:-1:-1;;;;;1000:12696:23;;6538:30;1000:12696;6538:30;;;6517:51;;;6156:1154;;;;;;;:::i;8623:156:11:-;;8719:53;8739:32;8747:23;8755:14;8727:10;8719:53;8623:156;8696:4;1000:12696:23;;;8719:53:11;;:::i;1000:12696:23:-;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1000:12696:23;;;;;;;:::i;:::-;;;:::i;2786:1388:11:-;;2989:19;;:12;;;;:19;:::i;:::-;3037:1;3023:15;;;;:::i;:::-;;;3019:1149;;4062:26;3429:1;3977:15;3429:1;;4069:19;3429:1;3977:15;3429:1;3416:14;;;;;;;:::i;:::-;;;:::i;:::-;3464:11;;;:18;:22;:18;;1000:12696:23;;;3464:18:11;:22;;;:::i;:::-;3505:26;;;3501:398;;3019:1149;3977:15;;;1000:12696:23;;3977:15:11;;:::i;:::-;4069:12;:19;:::i;:::-;4062:26;:::i;3501:398::-;3693:26;:38;3805:36;3571:22;;;3805:23;3571:22;;;:::i;:::-;3693:26;;;;;:::i;:38::-;3805:12;;;:23;:::i;:36::-;3501:398;;;;;2227:103:2;;2292:1;2227:103;;;;;;:::i;:::-;2292:1;:::i;1000:12696:23:-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;1419:61;;1000:12696;;;;;;;:::i;:::-;;;;1419:61;;1000:12696;;;;;;;:::i;:::-;;;;1419:61;;1000:12696;;;;;;;:::i;:::-;;;;1419:61;;1000:12696;;;;;;;:::i;:::-;;;;1419:61;;1000:12696;;;-1:-1:-1;;;;;1000:12696:23;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;:::i;7502:875::-;-1:-1:-1;7742:1:23;;7502:875;7731:12;7742:1;7731:12;:::i;:::-;;;7727:65;;7819:61;;:6;7826:12;7819:53;7854:17;7826:12;719:10:8;640:96;;7826:12:23;7819:20;;;;;:::i;:::-;:34;7854:17;;:::i;:::-;7819:53;;;:::i;:61::-;7919:10;:29;7971:17;;7890:66;7919:37;:29;;;;;:::i;7890:66::-;7971:17;1000:12696;;7971:17;;;:51;;;;;7502:875;7967:103;;;8245:99;8305:17;8288:15;8160:4;8080:95;8355:15;8160:4;8152:13;8160:4;8152:13;:::i;:::-;8080:95;;;:::i;:::-;;8186:43;8204:25;:15;;;;;;;:::i;:::-;:25;:::i;8288:15::-;8305:17;;;;:::i;:::-;8324:19;;;;;:::i;:::-;8245:99;;;;1000:12696;;;;8245:99;;;;;;:::i;:::-;;;;8355:15;:::i;7971:51::-;7992:14;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;-1:-1:-1;7992:30:23;-1:-1:-1;;;;;1000:12696:23;;7992:30;1000:12696;7992:30;;;7971:51;;;7502:875;;7685:26;7502:875;;;7685:26;;:::i;:::-;;:::i;8481:1163::-;;8663:20;8676:7;1273:6:0;1000:12696:23;-1:-1:-1;;;;;1000:12696:23;;;8663:20;;;;:::i;:::-;;8659:75;;719:10:8;;8761:6:23;:52;;:20;:44;:20;:6;:20;719:10:8;8761:6:23;:20;:::i;:52::-;8859:10;;:20;8902:17;;8823:64;8859:28;:20;;;;;:::i;8902:17::-;;;:58;;;;8481:1163;8898:110;;9604:33;9083:17;9495;9604:33;9083:17;9220:38;9152:58;9182:28;9083:17;;9063:37;9083:17;;;;:::i;9063:37::-;9110:31;:17;;:31;:::i;:::-;;9182:18;:28;:::i;9152:58::-;9235:22;;;;;:::i;:::-;9220:38;;:::i;:::-;9400:54;9315:75;9346:44;:20;;;;;;:::i;9495:17::-;9516:1;9495:22;;;;;:::i;:::-;;9491:103;;8481:1163;9604:33;;;;;:::i;:::-;:21;;:33;:::i;9491:103::-;9533:20;:40;:20;:50;:20;;:::i;:50::-;;9491:103;;;;;;8902:58;-1:-1:-1;8923:21:23;;;1000:12696;-1:-1:-1;;;;;1000:12696:23;8923:37;-1:-1:-1;;;;;1000:12696:23;;8923:37;1000:12696;8923:37;;;8902:58;;8659:75;1000:12696;;-1:-1:-1;;;8706:17:23;;;;1000:12696;2227:103:2;;2292:1;2227:103;;;;;:::i;:::-;2292:1;:::i;1000:12696:23:-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;;-1:-1:-1;;;;;1000:12696:23;;;;;;9711:1192;;;;9831:17;9839:8;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;;9831:17;9860:1;;9852:10;9831:31;;9852:10;;;:::i;9831:31::-;;9827:85;;9926:12;;;:::i;:::-;;;9922:65;;10014:6;719:10:8;10014:20:23;:61;;:20;:53;10049:17;10014:20;;;;;:::i;:::-;:34;10049:17;;:::i;:::-;10014:53;;;:::i;:61::-;10114:10;:29;10166:17;;10085:66;10114:37;:29;;;;;:::i;10085:66::-;10166:17;1000:12696;;10166:17;;;:51;;;;;9711:1192;10162:103;;;10293:15;;;;10363;10293;;;10275:43;10293:25;:15;;;;:::i;10363:::-;:20;;;;:::i;:::-;;10359:360;;9711:1192;10729:24;;;;;;:52;;10754:17;10762:8;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;;10754:17;10729:52;;;;1000:12696;;;;10729:52;;;;;;1419:61;;;;10729:52;;;;;;;:::i;:::-;;;;;;;;;;;;;9711:1192;10791:8;:16;:8;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;;10791:16;;10836:19;;10791:16;10836:19;;;:::i;:::-;10871:15;:24;:15;:24;10889:6;10871:24;:::i;:::-;;;:::i;:::-;10791:105;;;;;;;;;;;;;;;1000:12696;;;;10791:105;;;;;;;;1419:61;;;;10791:105;;;;;;;:::i;:::-;;;;;;;;;;;9711:1192;;:::o;10791:105::-;;;;;;-1:-1:-1;10791:105:23;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;10729:52;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;10359:360;10594:16;10429:20;10496:51;10399:83;10429:53;:20;;;;;;:::i;10594:16::-;:21;;;;:::i;:::-;;10590:119;;10359:360;;;;10590:119;10635:20;:40;:20;:59;:20;;:::i;:59::-;;10590:119;;;;;;10166:51;10187:14;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;-1:-1:-1;10187:30:23;-1:-1:-1;;;;;1000:12696:23;;10187:30;1000:12696;10187:30;;;10166:51;;;9827:85;1000:12696;;-1:-1:-1;;;9885:16:23;;;;1000:12696;9711:1192;;;;;;;:::i;11035:130::-;11131:20;:27;11035:130;11105:7;1000:12696;;;11105:7;11131:10;;:20;:::i;11237:108::-;11316:22;:13;:20;9195:19:11;9203:10;9195:19;9106:115;9169:7;1000:12696:23;;;9169:7:11;9203:10;;1000:12696:23;;9195:19:11;4545:11;:18;4463:107;4519:7;1000:12696:23;;;4519:7:11;4545:11;;1000:12696:23;;;11471:127;11567:24;;:13;:24;:::i;:16::-;:24;:::i;1000:12696::-;;;;:::i;9563:156:11:-;9679:31;9687:22;9663:49;9563:156;9687:22;9691:10;9671:40;9563:156;9637:7;1000:12696:23;;;9687:22:11;;:::i;:::-;9679:31;:::i;:::-;9671:40;:::i;:::-;9663:49;:::i;4912:118::-;5005:18;4912:118;5005:11;:18;4912:118;4979:7;1000:12696:23;;;4979:7:11;5005:11;;:18;:::i;11721:172:23:-;11860:24;:17;11810:33;11830:13;11860:26;11721:172;11791:7;1000:12696;;;11791:7;11830:6;;:13;:::i;12070:193::-;;12228:20;:17;12178:33;12198:13;12228:28;12070:193;12159:7;1000:12696;;;12449:200;12607:35;;:28;;12557:33;12577:13;:6;:13;;;:::i;13108:586::-;13440:28;13355:45;;:13;13108:586;;13355:37;13108:586;13410:58;13108:586;13270:7;1000:12696;;;13270:7;13355:6;;:13;;;;;:::i;:45::-;13440:20;:10;:20;;;:::i;13410:58::-;13499:18;;;:::i;:::-;13561:23;13531:16;;;;;:::i;:::-;13561:23;;;;:::i;:::-;13598:20;13662:15;13598:20;;;;;:::i;:::-;13632:16;;;;;;:::i;:::-;13662:15;;1000:12696;-1:-1:-1;;;;;1000:12696:23;;;13662:15;13478:209;;;;;;13108:586;:::o;1000:12696::-;-1:-1:-1;;;;;1000:12696:23;;;;;;;;;;;;;;;;;;;1419:61;1000:12696;;;;;;;;;;;;-1:-1:-1;;1000:12696:23;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;:::o;1906:762:25:-;;;2152:82;2134:101;1906:762;;2152:82;1906:762;;2014:4;1000:12696:23;;;2014:4:25;-1:-1:-1;1000:12696:23;;-1:-1:-1;;;2152:82:25;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;2134:101;;;;;;;;;2249:8;2134:101;;:::i;:::-;2249:8;;;1000:12696:23;2249:8:25;2245:395;;2657:4;;1906:762;:::o;2245:395::-;1000:12696:23;;2277:16:25;;2292:1;2277:16;:::i;:::-;;2273:357;;2412:142;;;;;;2273:357;1000:12696:23;;-1:-1:-1;;;2599:16:25;;;;1000:12696:23;2986:726:25;3196:83;2986:726;3214:64;2986:726;;3076:4;1000:12696:23;;;3076:4:25;3214:64;;;1000:12696:23;;;;3214:64:25;-1:-1:-1;;;3214:64:25;;;;;;;;;;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1560800","executionCost":"infinite","totalCost":"infinite"},"external":{"getLockedTokenAtIndex(uint256)":"infinite","getNumLockedTokens()":"infinite","getNumLocksForToken(address)":"infinite","getUserLockForTokenAtIndex(address,address,uint256)":"infinite","getUserLockedTokenAtIndex(address,uint256)":"infinite","getUserNumLockedTokens(address)":"infinite","getUserNumLocksForToken(address,address)":"infinite","incrementLock(address,uint256,uint256,uint256)":"infinite","lockLPToken(address,uint256,uint256,address)":"infinite","migrate(address,uint256,uint256,uint256)":"infinite","migrator()":"infinite","owner()":"2552","relock(address,uint256,uint256,uint256)":"infinite","renounceOwnership()":"infinite","setMigrator(address)":"infinite","tokenLocks(address,uint256)":"infinite","transferLockOwnership(address,uint256,uint256,address)":"infinite","transferOwnership(address)":"infinite","withdraw(address,uint256,uint256,uint256)":"infinite"}},"methodIdentifiers":{"getLockedTokenAtIndex(uint256)":"14dd79a3","getNumLockedTokens()":"783451e8","getNumLocksForToken(address)":"1f2a1d2f","getUserLockForTokenAtIndex(address,address,uint256)":"d4ff493f","getUserLockedTokenAtIndex(address,uint256)":"903df806","getUserNumLockedTokens(address)":"a3969815","getUserNumLocksForToken(address,address)":"a69d9c4f","incrementLock(address,uint256,uint256,uint256)":"a9b07cea","lockLPToken(address,uint256,uint256,address)":"df41bc5f","migrate(address,uint256,uint256,uint256)":"ee424278","migrator()":"7cd07e47","owner()":"8da5cb5b","relock(address,uint256,uint256,uint256)":"60491d24","renounceOwnership()":"715018a6","setMigrator(address)":"23cf3118","tokenLocks(address,uint256)":"ccebfa3f","transferLockOwnership(address,uint256,uint256,address)":"bef497fd","transferOwnership(address)":"f2fde38b","withdraw(address,uint256,uint256,uint256)":"4532d776"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BeforeUnlockDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLockDate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MigratorNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"name\":\"NotUniPair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockDate\",\"type\":\"uint256\"}],\"name\":\"OnDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OnWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getLockedTokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumLockedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"}],\"name\":\"getNumLocksForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserLockForTokenAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserLockedTokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserNumLockedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"}],\"name\":\"getUserNumLocksForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"incrementLock\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityLocker.TokenLock\",\"name\":\"_userLock\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOfLPToLock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockDate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"withdrawer\",\"type\":\"address\"}],\"name\":\"lockLPToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct LiquidityLocker.TokenLock\",\"name\":\"tokenLock\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Migrator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unlockDate\",\"type\":\"uint256\"}],\"name\":\"relock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Migrator\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenLocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferLockOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@neuro_0x\",\"details\":\"A contract for locking Uniswap V2 liquidity pool tokens for specified periods.\",\"kind\":\"dev\",\"methods\":{\"getLockedTokenAtIndex(uint256)\":{\"details\":\"Get the address of a locked token at an index.\",\"params\":{\"_index\":\"The index of the token.\"}},\"getNumLockedTokens()\":{\"details\":\"Get the total number of locked tokens\"},\"getNumLocksForToken(address)\":{\"details\":\"Get the number of locks for a specific token.\",\"params\":{\"_lpToken\":\"The address of the LP token.\"}},\"getUserLockForTokenAtIndex(address,address,uint256)\":{\"details\":\"Get the lock for a specific user and token at an index.\",\"params\":{\"_index\":\"The index of the lock.\",\"_lpToken\":\"The address of the LP token.\",\"_user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The lock date.\",\"_1\":\"Amount of tokens locked.\",\"_2\":\"Initial amount of tokens locked.\",\"_3\":\"Unlock date of the lock.\",\"_4\":\"Lock ID of the lock.\",\"_5\":\"Owner of the lock.\"}},\"getUserLockedTokenAtIndex(address,uint256)\":{\"details\":\"Get the token address a user has locked at an index.\",\"params\":{\"_index\":\"The index of the token.\",\"_user\":\"The address of the user.\"}},\"getUserNumLockedTokens(address)\":{\"details\":\"Get the number of tokens a user has locked.\",\"params\":{\"_user\":\"The address of the user.\"}},\"getUserNumLocksForToken(address,address)\":{\"details\":\"Get the number of locks for a specific user and token.\",\"params\":{\"_lpToken\":\"The address of the LP token.\",\"_user\":\"The address of the user.\"}},\"incrementLock(address,uint256,uint256,uint256)\":{\"details\":\"increase the amount of tokens per a specific lock, this is preferable to creating a new lock, less fees, and faster loading on our live block explorer\"},\"lockLPToken(address,uint256,uint256,address)\":{\"details\":\"Creates a new lock\",\"params\":{\"amountOfLPToLock\":\"amount of LP tokens to lock\",\"lpToken\":\"the univ2 token address\",\"unlockDate\":\"the unix timestamp (in seconds) until unlock\",\"withdrawer\":\"the user who can withdraw liquidity once the lock expires\"}},\"migrate(address,uint256,uint256,uint256)\":{\"details\":\"migrates liquidity to uniswap v3\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"relock(address,uint256,uint256,uint256)\":{\"details\":\"extend a lock with a new unlock date, _index and _lockID ensure the correct lock is changed this prevents errors when a user performs multiple tx per block possibly with varying gas prices\",\"params\":{\"_index\":\"the index of the lock for the token\",\"_lockID\":\"the lockID of the lock for the token\",\"_lpToken\":\"the univ2 token address\",\"_unlockDate\":\"the new unix timestamp (in seconds) until unlock\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMigrator(address)\":{\"details\":\"Set the migrator contract which allows locked lp tokens to be migrated to uniswap v3\",\"params\":{\"_migrator\":\"The address of the migrator contract\"}},\"transferLockOwnership(address,uint256,uint256,address)\":{\"details\":\"transfer a lock to a new owner, e.g. presale project -> project owner\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256,uint256,uint256)\":{\"details\":\"withdraw a specified amount from a lock. _index and _lockID ensure the correct lock is changed this prevents errors when a user performs multiple tx per block possibly with varying gas prices\"}},\"title\":\"LiquidityLocker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/LiquidityLocker.sol\":\"LiquidityLocker\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\n\\n    function feeTo() external view returns (address);\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\n    function allPairs(uint) external view returns (address pair);\\n    function allPairsLength() external view returns (uint);\\n\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\"},\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\"},\"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Migrator {\\n    function migrate(address token, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external;\\n}\\n\",\"keccak256\":\"0xa83ac0f597c04134b3ea423fd55d3077e952197c1991e23c4e304bfb35a90124\"},\"src/LiquidityLocker.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nimport { EnumerableSet } from \\\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport { IERC20 } from \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\nimport { SafeMath } from \\\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\\\";\\nimport { Ownable } from \\\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\\\";\\nimport { ReentrancyGuard } from \\\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\\\";\\n\\nimport { IUniswapV2Factory } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol\\\";\\nimport { IUniswapV2Pair } from \\\"lib/v2-core/contracts/interfaces/IUniswapV2Pair.sol\\\";\\nimport { IUniswapV2Migrator } from \\\"lib/v2-periphery/contracts/interfaces/IUniswapV2Migrator.sol\\\";\\n\\nimport { SafeTransfer } from \\\"./lib/SafeTransfer.sol\\\";\\n\\n/**\\n * @title LiquidityLocker\\n * @author @neuro_0x\\n * @dev A contract for locking Uniswap V2 liquidity pool tokens for specified periods.\\n */\\ncontract LiquidityLocker is Ownable, ReentrancyGuard {\\n    using SafeMath for uint256;\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    error InvalidAmount();\\n    error InvalidLockDate();\\n    error LockMismatch();\\n    error BeforeUnlockDate();\\n    error OwnerAlreadySet();\\n    error MigratorNotSet();\\n    error NotUniPair(address lpToken);\\n\\n    IUniswapV2Factory private constant UNISWAP_V2_FACTORY =\\n        IUniswapV2Factory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f);\\n\\n    struct User {\\n        EnumerableSet.AddressSet lockedTokens; // records all tokens the user has locked\\n        mapping(address => uint256[]) locksForToken; // map erc20 address to lock id for that token\\n    }\\n\\n    struct TokenLock {\\n        uint256 lockDate; // the date the token was locked\\n        uint256 amount; // the amount of tokens still locked (initialAmount minus withdrawls)\\n        uint256 initialAmount; // the initial lock amount\\n        uint256 unlockDate; // the date the token can be withdrawn\\n        uint256 lockID; // lockID nonce per uni pair\\n        address owner;\\n    }\\n\\n    mapping(address userAddress => User user) private _users;\\n\\n    EnumerableSet.AddressSet private _lockedTokens;\\n    mapping(address pair => TokenLock[] locks) public tokenLocks; // map univ2 pair to all its locks\\n\\n    IUniswapV2Migrator public migrator;\\n\\n    event OnWithdraw(address lpToken, uint256 amount);\\n    event OnDeposit(address lpToken, address user, uint256 amount, uint256 lockDate, uint256 unlockDate);\\n\\n    /**\\n     * @dev Set the migrator contract which allows locked lp tokens to be migrated to uniswap v3\\n     * @param _migrator The address of the migrator contract\\n     */\\n    function setMigrator(IUniswapV2Migrator _migrator) public onlyOwner {\\n        migrator = _migrator;\\n    }\\n\\n    /**\\n     * @dev Creates a new lock\\n     * @param lpToken the univ2 token address\\n     * @param amountOfLPToLock amount of LP tokens to lock\\n     * @param unlockDate the unix timestamp (in seconds) until unlock\\n     * @param withdrawer the user who can withdraw liquidity once the lock expires\\n     */\\n    function lockLPToken(\\n        IERC20 lpToken,\\n        uint256 amountOfLPToLock,\\n        uint256 unlockDate,\\n        address payable withdrawer\\n    )\\n        external\\n        payable\\n        nonReentrant\\n        returns (TokenLock memory tokenLock)\\n    {\\n        if (amountOfLPToLock == 0) {\\n            revert InvalidAmount();\\n        }\\n\\n        if (unlockDate > 10_000_000_000) {\\n            revert InvalidLockDate();\\n        }\\n\\n        // ensure this pair is a univ2 pair by querying the factory\\n        IUniswapV2Pair lpair = IUniswapV2Pair(address(lpToken));\\n        address factoryPairAddress = UNISWAP_V2_FACTORY.getPair(lpair.token0(), lpair.token1());\\n\\n        if (factoryPairAddress != address(lpToken)) {\\n            revert NotUniPair(address(lpToken));\\n        }\\n\\n        SafeTransfer.safeTransferFrom(address(lpToken), _msgSender(), address(this), amountOfLPToLock);\\n\\n        tokenLock.lockDate = block.timestamp;\\n        tokenLock.amount = amountOfLPToLock;\\n        tokenLock.initialAmount = amountOfLPToLock;\\n        tokenLock.unlockDate = unlockDate;\\n        tokenLock.lockID = tokenLocks[address(lpToken)].length;\\n        tokenLock.owner = withdrawer;\\n\\n        // record the lock for the univ2pair\\n        tokenLocks[address(lpToken)].push(tokenLock);\\n        _lockedTokens.add(address(lpToken));\\n\\n        // record the lock for the user\\n        User storage user = _users[withdrawer];\\n        user.lockedTokens.add(address(lpToken));\\n        uint256[] storage userLocks = user.locksForToken[address(lpToken)];\\n        userLocks.push(tokenLock.lockID);\\n\\n        emit OnDeposit(address(lpToken), _msgSender(), tokenLock.amount, tokenLock.lockDate, tokenLock.unlockDate);\\n    }\\n\\n    /**\\n     * @dev extend a lock with a new unlock date, _index and _lockID ensure the correct lock is changed\\n     * this prevents errors when a user performs multiple tx per block possibly with varying gas prices\\n     * @param _lpToken the univ2 token address\\n     * @param _index the index of the lock for the token\\n     * @param _lockID the lockID of the lock for the token\\n     * @param _unlockDate the new unix timestamp (in seconds) until unlock\\n     */\\n    function relock(IERC20 _lpToken, uint256 _index, uint256 _lockID, uint256 _unlockDate) external nonReentrant {\\n        if (_unlockDate > 10_000_000_000) {\\n            revert InvalidLockDate();\\n        }\\n\\n        // timestamp entered in seconds\\n        uint256 lockID = _users[_msgSender()].locksForToken[address(_lpToken)][_index];\\n        TokenLock storage userLock = tokenLocks[address(_lpToken)][lockID];\\n\\n        if (lockID != _lockID || userLock.owner != _msgSender()) {\\n            revert LockMismatch();\\n        }\\n\\n        if (userLock.unlockDate > _unlockDate) {\\n            revert BeforeUnlockDate();\\n        }\\n\\n        userLock.unlockDate = _unlockDate;\\n    }\\n\\n    /**\\n     * @dev withdraw a specified amount from a lock. _index and _lockID ensure the correct lock is changed\\n     * this prevents errors when a user performs multiple tx per block possibly with varying gas prices\\n     */\\n    function withdraw(IERC20 _lpToken, uint256 _index, uint256 _lockID, uint256 _amount) external nonReentrant {\\n        if (_amount == 0) {\\n            revert InvalidAmount();\\n        }\\n\\n        uint256 lockID = _users[_msgSender()].locksForToken[address(_lpToken)][_index];\\n        TokenLock storage userLock = tokenLocks[address(_lpToken)][lockID];\\n\\n        if (lockID != _lockID || userLock.owner != _msgSender()) {\\n            revert LockMismatch();\\n        }\\n\\n        if (userLock.unlockDate > block.timestamp) {\\n            revert BeforeUnlockDate();\\n        }\\n\\n        userLock.amount = userLock.amount - _amount;\\n\\n        // clean user storage\\n        if (userLock.amount == 0) {\\n            uint256[] storage userLocks = _users[_msgSender()].locksForToken[address(_lpToken)];\\n            userLocks[_index] = userLocks[userLocks.length - 1];\\n            userLocks.pop();\\n            if (userLocks.length == 0) {\\n                _users[_msgSender()].lockedTokens.remove(address(_lpToken));\\n            }\\n        }\\n\\n        SafeTransfer.safeTransfer(address(_lpToken), _msgSender(), _amount);\\n        emit OnWithdraw(address(_lpToken), _amount);\\n    }\\n\\n    /**\\n     * @dev increase the amount of tokens per a specific lock, this is preferable to creating a new lock, less fees,\\n     * and faster loading on our live block explorer\\n     */\\n    function incrementLock(\\n        IERC20 _lpToken,\\n        uint256 _index,\\n        uint256 _lockID,\\n        uint256 _amount\\n    )\\n        external\\n        nonReentrant\\n        returns (TokenLock memory _userLock)\\n    {\\n        if (_amount == 0) {\\n            revert InvalidAmount();\\n        }\\n\\n        uint256 lockID = _users[_msgSender()].locksForToken[address(_lpToken)][_index];\\n        TokenLock storage userLock = tokenLocks[address(_lpToken)][lockID];\\n\\n        if (lockID != _lockID || userLock.owner != _msgSender()) {\\n            revert LockMismatch();\\n        }\\n\\n        SafeTransfer.safeTransferFrom(address(_lpToken), address(_msgSender()), address(this), _amount);\\n\\n        userLock.amount = userLock.amount + _amount;\\n\\n        emit OnDeposit(address(_lpToken), _msgSender(), userLock.amount, userLock.lockDate, userLock.unlockDate);\\n\\n        return userLock;\\n    }\\n\\n    /**\\n     * @dev transfer a lock to a new owner, e.g. presale project -> project owner\\n     */\\n    function transferLockOwnership(\\n        address _lpToken,\\n        uint256 _index,\\n        uint256 _lockID,\\n        address payable _newOwner\\n    )\\n        external\\n    {\\n        if (_newOwner == owner()) {\\n            revert OwnerAlreadySet();\\n        }\\n\\n        uint256 lockID = _users[_msgSender()].locksForToken[_lpToken][_index];\\n        TokenLock storage transferredLock = tokenLocks[_lpToken][lockID];\\n\\n        if (lockID != _lockID || transferredLock.owner != _msgSender()) {\\n            revert LockMismatch();\\n        }\\n\\n        // record the lock for the new Owner\\n        User storage user = _users[_newOwner];\\n        user.lockedTokens.add(_lpToken);\\n\\n        uint256[] storage userLocks = user.locksForToken[_lpToken];\\n        userLocks.push(transferredLock.lockID);\\n\\n        // remove the lock from the old owner\\n        uint256[] storage userLocks2 = _users[_msgSender()].locksForToken[_lpToken];\\n        userLocks2[_index] = userLocks2[userLocks2.length - 1];\\n        userLocks2.pop();\\n\\n        if (userLocks2.length == 0) {\\n            _users[_msgSender()].lockedTokens.remove(_lpToken);\\n        }\\n\\n        transferredLock.owner = _newOwner;\\n    }\\n\\n    /**\\n     * @dev migrates liquidity to uniswap v3\\n     */\\n    function migrate(IERC20 _lpToken, uint256 _index, uint256 _lockID, uint256 _amount) external nonReentrant {\\n        if (address(migrator) == address(0)) {\\n            revert MigratorNotSet();\\n        }\\n\\n        if (_amount == 0) {\\n            revert InvalidAmount();\\n        }\\n\\n        uint256 lockID = _users[_msgSender()].locksForToken[address(_lpToken)][_index];\\n        TokenLock storage userLock = tokenLocks[address(_lpToken)][lockID];\\n\\n        if (lockID != _lockID || userLock.owner != _msgSender()) {\\n            revert LockMismatch();\\n        }\\n\\n        userLock.amount = userLock.amount - _amount;\\n\\n        // clean user storage\\n        if (userLock.amount == 0) {\\n            uint256[] storage userLocks = _users[_msgSender()].locksForToken[address(_lpToken)];\\n            userLocks[_index] = userLocks[userLocks.length - 1];\\n            userLocks.pop();\\n            if (userLocks.length == 0) {\\n                _users[_msgSender()].lockedTokens.remove(address(_lpToken));\\n            }\\n        }\\n\\n        IERC20(_lpToken).approve(address(migrator), _amount);\\n        migrator.migrate(address(_lpToken), _amount, userLock.unlockDate, _msgSender(), block.timestamp + 1 days);\\n    }\\n\\n    /**\\n     * @dev Get the number of locks for a specific token.\\n     * @param _lpToken The address of the LP token.\\n     */\\n    function getNumLocksForToken(address _lpToken) external view returns (uint256) {\\n        return tokenLocks[_lpToken].length;\\n    }\\n\\n    /**\\n     * @dev Get the total number of locked tokens\\n     */\\n    function getNumLockedTokens() external view returns (uint256) {\\n        return _lockedTokens.length();\\n    }\\n\\n    /**\\n     * @dev Get the address of a locked token at an index.\\n     * @param _index The index of the token.\\n     */\\n    function getLockedTokenAtIndex(uint256 _index) external view returns (address) {\\n        return _lockedTokens.at(_index);\\n    }\\n\\n    /**\\n     * @dev Get the number of tokens a user has locked.\\n     * @param _user The address of the user.\\n     */\\n    function getUserNumLockedTokens(address _user) external view returns (uint256) {\\n        User storage user = _users[_user];\\n        return user.lockedTokens.length();\\n    }\\n\\n    /**\\n     * @dev Get the token address a user has locked at an index.\\n     * @param _user The address of the user.\\n     * @param _index The index of the token.\\n     */\\n    function getUserLockedTokenAtIndex(address _user, uint256 _index) external view returns (address) {\\n        User storage user = _users[_user];\\n        return user.lockedTokens.at(_index);\\n    }\\n\\n    /**\\n     * @dev Get the number of locks for a specific user and token.\\n     * @param _user The address of the user.\\n     * @param _lpToken The address of the LP token.\\n     */\\n    function getUserNumLocksForToken(address _user, address _lpToken) external view returns (uint256) {\\n        User storage user = _users[_user];\\n        return user.locksForToken[_lpToken].length;\\n    }\\n\\n    /**\\n     * @dev Get the lock for a specific user and token at an index.\\n     * @param _user The address of the user.\\n     * @param _lpToken The address of the LP token.\\n     * @param _index The index of the lock.\\n     * @return The lock date.\\n     * @return Amount of tokens locked.\\n     * @return Initial amount of tokens locked.\\n     * @return Unlock date of the lock.\\n     * @return Lock ID of the lock.\\n     * @return Owner of the lock.\\n     */\\n    function getUserLockForTokenAtIndex(\\n        address _user,\\n        address _lpToken,\\n        uint256 _index\\n    )\\n        external\\n        view\\n        returns (uint256, uint256, uint256, uint256, uint256, address)\\n    {\\n        uint256 lockID = _users[_user].locksForToken[_lpToken][_index];\\n        TokenLock storage tokenLock = tokenLocks[_lpToken][lockID];\\n        return (\\n            tokenLock.lockDate,\\n            tokenLock.amount,\\n            tokenLock.initialAmount,\\n            tokenLock.unlockDate,\\n            tokenLock.lockID,\\n            tokenLock.owner\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x4617110dd0675f80fb03bc39aae497e2c0cb834181f06309af767a4f50c7cd29\",\"license\":\"GPL-3.0\"},\"src/lib/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nlibrary SafeTransfer {\\n    error TransferFailed();\\n\\n    /**\\n     * @dev Sends `amount` (in wei) ETH to `to`.\\n     * @param to The address to send the ETH to.\\n     * @param amount The amount of ETH to send.\\n     */\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Transfer the ETH and check if it succeeded or not.\\n            if iszero(call(gas(), to, amount, 0, 0, 0, 0)) {\\n                // Store the function selector of `ETHTransferFailed()`.\\n                // bytes4(keccak256(bytes(\\\"ETHTransferFailed()\\\"))) = 0xb12d13eb\\n                mstore(0x00, 0xb12d13eb)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Validates that the address is not the zero address using assembly.\\n     * @dev Reverts if the address is the zero address.\\n     * @param addr The address to validate.\\n     */\\n    function validateAddress(address addr) internal pure {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            if iszero(shl(96, addr)) {\\n                // Store the function selector of `ZeroAddress()`.\\n                // bytes4(keccak256(bytes(\\\"ZeroAddress()\\\"))) = 0xd92e233d\\n                mstore(0x00, 0xd92e233d)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n     * @dev Reverts if the ERC20 transfer fails.\\n     * @param tokenAddress The address of the ERC20 token.\\n     * @param from The address to transfer the tokens from.\\n     * @param to The address to transfer the tokens to.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(address tokenAddress, address from, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transferFrom(address,address,uint256)\\\", from, to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n    /// @dev Reverts if the ERC20 transfer fails.\\n    /// @param tokenAddress The address of the ERC20 token.\\n    /// @param to The address to transfer the tokens to.\\n    /// @param amount The amount of tokens to transfer.\\n    function safeTransfer(address tokenAddress, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xcd0139a88ea2bcaa2dc562192f25f6fe7e18dc526081b42f9c1f8ef47a6aefa9\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":231,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":6192,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"_users","offset":0,"slot":"2","type":"t_mapping(t_address,t_struct(User)6174_storage)"},{"astId":6195,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"_lockedTokens","offset":0,"slot":"3","type":"t_struct(AddressSet)2244_storage"},{"astId":6201,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"tokenLocks","offset":0,"slot":"5","type":"t_mapping(t_address,t_array(t_struct(TokenLock)6187_storage)dyn_storage)"},{"astId":6204,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"migrator","offset":0,"slot":"6","type":"t_contract(IUniswapV2Migrator)2852"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_struct(TokenLock)6187_storage)dyn_storage":{"base":"t_struct(TokenLock)6187_storage","encoding":"dynamic_array","label":"struct LiquidityLocker.TokenLock[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IUniswapV2Migrator)2852":{"encoding":"inplace","label":"contract IUniswapV2Migrator","numberOfBytes":"20"},"t_mapping(t_address,t_array(t_struct(TokenLock)6187_storage)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct LiquidityLocker.TokenLock[])","numberOfBytes":"32","value":"t_array(t_struct(TokenLock)6187_storage)dyn_storage"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_struct(User)6174_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct LiquidityLocker.User)","numberOfBytes":"32","value":"t_struct(User)6174_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)2244_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","members":[{"astId":2243,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)1929_storage"}],"numberOfBytes":"64"},"t_struct(Set)1929_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","members":[{"astId":1924,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":1928,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_struct(TokenLock)6187_storage":{"encoding":"inplace","label":"struct LiquidityLocker.TokenLock","members":[{"astId":6176,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"lockDate","offset":0,"slot":"0","type":"t_uint256"},{"astId":6178,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":6180,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"initialAmount","offset":0,"slot":"2","type":"t_uint256"},{"astId":6182,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"unlockDate","offset":0,"slot":"3","type":"t_uint256"},{"astId":6184,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"lockID","offset":0,"slot":"4","type":"t_uint256"},{"astId":6186,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"owner","offset":0,"slot":"5","type":"t_address"}],"numberOfBytes":"192"},"t_struct(User)6174_storage":{"encoding":"inplace","label":"struct LiquidityLocker.User","members":[{"astId":6168,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"lockedTokens","offset":0,"slot":"0","type":"t_struct(AddressSet)2244_storage"},{"astId":6173,"contract":"src/LiquidityLocker.sol:LiquidityLocker","label":"locksForToken","offset":0,"slot":"2","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/lib/Common.sol":{"Common":{"abi":[],"devdoc":{"details":"Common items used across the CoinGenie contracts.","kind":"dev","methods":{},"title":"Common","version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea26469706673582212201eb3db7f15df8e05698a35bd0432a5a6b344bb7da80f5a06a8ca06139b1679c964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xB3 0xDB PUSH32 0x15DF8E05698A35BD0432A5A6B344BB7DA80F5A06A8CA06139B1679C964736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"145:190:24:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212201eb3db7f15df8e05698a35bd0432a5a6b344bb7da80f5a06a8ca06139b1679c964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xB3 0xDB PUSH32 0x15DF8E05698A35BD0432A5A6B344BB7DA80F5A06A8CA06139B1679C964736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"145:190:24:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"infinite","totalCost":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Common items used across the CoinGenie contracts.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Common\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Common.sol\":\"Common\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/lib/Common.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title Common\\n * @dev Common items used across the CoinGenie contracts.\\n */\\nlibrary Common {\\n    /// @dev set of features supported by the token\\n    struct TokenConfigProperties {\\n        bool isBurnable;\\n        bool isPausable;\\n        bool isDeflationary;\\n    }\\n}\\n\",\"keccak256\":\"0x077884f042fbef72e79889fa4eef48f2884522241491c321f7bcaafcefb68af6\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/lib/SafeTransfer.sol":{"SafeTransfer":{"abi":[{"inputs":[],"name":"TransferFailed","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234601a57604051603f6020823930815050603f90f35b600080fdfe6080604052600080fdfea264697066735822122007c0a51afa31782aa23bd584d1b121393aa3c2849ea7b3020ead9dd5c13e3e8c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1A JUMPI PUSH1 0x40 MLOAD PUSH1 0x3F PUSH1 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP PUSH1 0x3F SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xC0 0xA5 BYTE STATICCALL BALANCE PUSH25 0x2AA23BD584D1B121393AA3C2849EA7B3020EAD9DD5C13E3E8C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"62:3652:25:-:0;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122007c0a51afa31782aa23bd584d1b121393aa3c2849ea7b3020ead9dd5c13e3e8c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xC0 0xA5 BYTE STATICCALL BALANCE PUSH25 0x2AA23BD584D1B121393AA3C2849EA7B3020EAD9DD5C13E3E8C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"62:3652:25:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"infinite","totalCost":"infinite"},"internal":{"safeTransfer(address,address,uint256)":"infinite","safeTransferETH(address,uint256)":"infinite","safeTransferFrom(address,address,address,uint256)":"infinite","validateAddress(address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/SafeTransfer.sol\":\"SafeTransfer\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363935333237333636383937\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/lib/SafeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.20;\\n\\nlibrary SafeTransfer {\\n    error TransferFailed();\\n\\n    /**\\n     * @dev Sends `amount` (in wei) ETH to `to`.\\n     * @param to The address to send the ETH to.\\n     * @param amount The amount of ETH to send.\\n     */\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Transfer the ETH and check if it succeeded or not.\\n            if iszero(call(gas(), to, amount, 0, 0, 0, 0)) {\\n                // Store the function selector of `ETHTransferFailed()`.\\n                // bytes4(keccak256(bytes(\\\"ETHTransferFailed()\\\"))) = 0xb12d13eb\\n                mstore(0x00, 0xb12d13eb)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Validates that the address is not the zero address using assembly.\\n     * @dev Reverts if the address is the zero address.\\n     * @param addr The address to validate.\\n     */\\n    function validateAddress(address addr) internal pure {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            if iszero(shl(96, addr)) {\\n                // Store the function selector of `ZeroAddress()`.\\n                // bytes4(keccak256(bytes(\\\"ZeroAddress()\\\"))) = 0xd92e233d\\n                mstore(0x00, 0xd92e233d)\\n                // Revert with (offset, size).\\n                revert(0x1c, 0x04)\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n     * @dev Reverts if the ERC20 transfer fails.\\n     * @param tokenAddress The address of the ERC20 token.\\n     * @param from The address to transfer the tokens from.\\n     * @param to The address to transfer the tokens to.\\n     * @param amount The amount of tokens to transfer.\\n     */\\n    function safeTransferFrom(address tokenAddress, address from, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transferFrom(address,address,uint256)\\\", from, to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @notice Helper function to transfer ERC20 tokens without the need for SafeERC20.\\n    /// @dev Reverts if the ERC20 transfer fails.\\n    /// @param tokenAddress The address of the ERC20 token.\\n    /// @param to The address to transfer the tokens to.\\n    /// @param amount The amount of tokens to transfer.\\n    function safeTransfer(address tokenAddress, address to, uint256 amount) internal returns (bool) {\\n        (bool success, bytes memory data) =\\n        // solhint-disable-next-line avoid-low-level-calls\\n         tokenAddress.call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", to, amount));\\n        if (!success) {\\n            if (data.length != 0) {\\n                // bubble up error\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(data)\\n                    revert(add(32, data), returndata_size)\\n                }\\n            } else {\\n                revert TransferFailed();\\n            }\\n        }\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xcd0139a88ea2bcaa2dc562192f25f6fe7e18dc526081b42f9c1f8ef47a6aefa9\",\"license\":\"GPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}